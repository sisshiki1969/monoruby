   Compiling monoruby v0.2.0 (/home/monochrome/monoruby/monoruby)
    Finished release [optimized] target(s) in 10.43s
     Running `target/release/monoruby ../optcarrot/bin/optcarrot -- -b ../optcarrot/examples/Lan_Master.nes`
------------------------------------
</main> /home/monochrome/optcarrot/bin/optcarrot:1
meta:on_stack:true kind:Ruby mode:method FuncId(269) regs:3 ISeq(RubyFuncInfo { id:269 name:/main method:(FuncId(269), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["../lib/optcarrot"]
 :00002 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00004 %1 = const[Optcarrot::NES]           [<INVALID>]
 :00005 %1 = %1.new()                        [<INVALID>]
 :00007 %1 = %1.run()                        [<INVALID>]
 :00009 ret %1
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(270) regs:2 ISeq(RubyFuncInfo { id:270 name:/main method:(FuncId(270), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 _ = module_def Optcarrot: FuncId(271)
 :00002 %1 = literal["optcarrot/nes"]
 :00003 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00005 %1 = literal["optcarrot/rom"]
 :00006 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00008 %1 = literal["optcarrot/pad"]
 :00009 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00011 %1 = literal["optcarrot/cpu"]
 :00012 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00014 %1 = literal["optcarrot/apu"]
 :00015 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00017 %1 = literal["optcarrot/ppu"]
 :00018 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00020 %1 = literal["optcarrot/palette"]
 :00021 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00023 %1 = literal["optcarrot/driver"]
 :00024 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00026 %1 = literal["optcarrot/config"]
 :00027 %1 = %0.require_relative(%1;1)       [<INVALID>]
 :00029 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot.rb:2
meta:on_stack:true kind:Ruby mode:class_def FuncId(271) regs:2 ISeq(RubyFuncInfo { id:271 name:Optcarrot method:(FuncId(271), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal["0.9.0"]
 :00002 const[VERSION] = %1
 :00003 ret %1
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(272) regs:2 ISeq(RubyFuncInfo { id:272 name:/main method:(FuncId(272), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(273)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(273) regs:2 ISeq(RubyFuncInfo { id:273 name:Optcarrot method:(FuncId(273), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[4294967295]
 :00002 const[FOREVER_CLOCK] = %1
 :00003 %1 = 12: i32
 :00004 const[RP2A03_CC] = %1
 :00005 %1 = class_def NES < _: FuncId(274)
 :00006 ret %1
------------------------------------
------------------------------------
<NES> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:6
meta:on_stack:true kind:Ruby mode:class_def FuncId(274) regs:8 ISeq(RubyFuncInfo { id:274 name:NES method:(FuncId(274), 0) args: 0 non_temp: 0 temp: 7})
[]
+:00000 init_method reg:7 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %1 = 60: i32
 :00002 const[FPS] = %1
 :00003 method_def initialize: FuncId(275)
 :00004 method_def inspect: FuncId(276)
 :00005 %1 = :fps
 :00006 %2 = :video
 :00007 %3 = :audio
 :00008 %4 = :input
 :00009 %5 = :cpu
 :00010 %6 = :ppu
 :00011 %7 = :apu
 :00012 _ = %0.attr_reader(%1;7)             [<INVALID>]
 :00014 method_def reset: FuncId(277)
 :00015 method_def step: FuncId(278)
 :00016 method_def dispose: FuncId(279)
 :00017 method_def run: FuncId(280)
 :00018 _ = %0.private()                     [<INVALID>]
 :00020 method_def save_fps_history?: FuncId(281)
 :00021 %1 = :save_fps_history?
 :00022 ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:9
meta:on_stack:true kind:Ruby mode:method FuncId(275) regs:8 ISeq(RubyFuncInfo { id:275 name:initialize method:(FuncId(275), 0) args: 1 non_temp: 1 temp: 6})
[]
+:00000 init_method reg:7 arg:1 req:0 opt:1 rest:false block:None stack_offset:7
 :00001 check_local(%1) =>:00003
+:00002 %1 = const[ARGV]                     [<INVALID>]
+:00003 %2 = const[Config]                   [<INVALID>]
 :00004 %2 = %2.new(%1;1)                    [<INVALID>]
 :00006 @conf: <INVALID>[IvarId(0)] = %2
 :00007 %2 = const[Driver]                   [<INVALID>]
 :00008 %3 = @conf: <INVALID>[IvarId(0)]
 :00009 %2 = %2.load(%3;1)                   [<INVALID>]
 :00011 %3; 3 = expand(%2)
 :00012 @video: <INVALID>[IvarId(0)] = %3
 :00013 @audio: <INVALID>[IvarId(0)] = %4
 :00014 @input: <INVALID>[IvarId(0)] = %5
 :00015 %2 = const[CPU]                      [<INVALID>]
 :00016 %3 = @conf: <INVALID>[IvarId(0)]
 :00017 %2 = %2.new(%3;1)                    [<INVALID>]
 :00019 @cpu: <INVALID>[IvarId(0)] = %2
 :00020 %2 = @cpu: <INVALID>[IvarId(0)]
 :00021 %3 = const[APU]                      [<INVALID>]
 :00022 %4 = @conf: <INVALID>[IvarId(0)]
 :00023 %5 = @cpu: <INVALID>[IvarId(0)]
 :00024 %6 = @audio: <INVALID>[IvarId(0)]
 :00025 %6 = %6.spec()                       [<INVALID>]
 :00027 %3 = %3.new(%4;3)*                   [<INVALID>]
 :00029 _ = %2.apu=(%3;1)                    [<INVALID>]
 :00031 %2 = %3
 :00032 @apu: <INVALID>[IvarId(0)] = %2
 :00033 %2 = @cpu: <INVALID>[IvarId(0)]
 :00034 %3 = const[PPU]                      [<INVALID>]
 :00035 %4 = @conf: <INVALID>[IvarId(0)]
 :00036 %5 = @cpu: <INVALID>[IvarId(0)]
 :00037 %6 = @video: <INVALID>[IvarId(0)]
 :00038 %6 = %6.palette()                    [<INVALID>]
 :00040 %3 = %3.new(%4;3)                    [<INVALID>]
 :00042 _ = %2.ppu=(%3;1)                    [<INVALID>]
 :00044 %2 = %3
 :00045 @ppu: <INVALID>[IvarId(0)] = %2
 :00046 %2 = const[ROM]                      [<INVALID>]
 :00047 %3 = @conf: <INVALID>[IvarId(0)]
 :00048 %4 = @cpu: <INVALID>[IvarId(0)]
 :00049 %5 = @ppu: <INVALID>[IvarId(0)]
 :00050 %2 = %2.load(%3;3)                   [<INVALID>]
 :00052 @rom: <INVALID>[IvarId(0)] = %2
 :00053 %2 = const[Pads]                     [<INVALID>]
 :00054 %3 = @conf: <INVALID>[IvarId(0)]
 :00055 %4 = @cpu: <INVALID>[IvarId(0)]
 :00056 %5 = @apu: <INVALID>[IvarId(0)]
 :00057 %2 = %2.new(%3;3)                    [<INVALID>]
 :00059 @pads: <INVALID>[IvarId(0)] = %2
 :00060 %2 = 0: i32
 :00061 @frame: <INVALID>[IvarId(0)] = %2
 :00062 %2 = @conf: <INVALID>[IvarId(0)]
 :00063 %2 = %2.frames()                     [<INVALID>]
 :00065 _%2 = %2 == 0: i16                   [<INVALID>][<INVALID>]
 :00066 condnotbr _%2 =>:00069
+:00067 %2 = nil
 :00068 br =>:00072
+:00069 %2 = @conf: <INVALID>[IvarId(0)]
 :00070 %2 = %2.frames()                     [<INVALID>]
+:00072 @frame_target: <INVALID>[IvarId(0)] = %2
 :00073 %2 = %0.save_fps_history?()          [<INVALID>]
 :00075 condnotbr %2 =>:00079
+:00076 %2 = literal[[]]
 :00077 @fps_history: <INVALID>[IvarId(0)] = %2
 :00078 ret %2
+:00079 %2 = nil
 :00080 ret %2
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:25
meta:on_stack:true kind:Ruby mode:method FuncId(276) regs:4 ISeq(RubyFuncInfo { id:276 name:inspect method:(FuncId(276), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["#<"]
 :00002 %2 = %0.class()                      [<INVALID>]
 :00004 %3 = literal[">"]
 :00005 %1 = concat(%1; 3)
 :00006 ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:31
meta:on_stack:true kind:Ruby mode:method FuncId(277) regs:3 ISeq(RubyFuncInfo { id:277 name:reset method:(FuncId(277), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @cpu: <INVALID>[IvarId(0)]
 :00002 _ = %1.reset()                       [<INVALID>]
 :00004 %1 = @apu: <INVALID>[IvarId(0)]
 :00005 _ = %1.reset()                       [<INVALID>]
 :00007 %1 = @ppu: <INVALID>[IvarId(0)]
 :00008 _ = %1.reset()                       [<INVALID>]
 :00010 %1 = @rom: <INVALID>[IvarId(0)]
 :00011 _ = %1.reset()                       [<INVALID>]
 :00013 %1 = @pads: <INVALID>[IvarId(0)]
 :00014 _ = %1.reset()                       [<INVALID>]
 :00016 %1 = @cpu: <INVALID>[IvarId(0)]
 :00017 _ = %1.boot()                        [<INVALID>]
 :00019 %1 = @rom: <INVALID>[IvarId(0)]
 :00020 %1 = %1.load_battery()               [<INVALID>]
 :00022 ret %1
------------------------------------
------------------------------------
<step> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:41
meta:on_stack:true kind:Ruby mode:method FuncId(278) regs:4 ISeq(RubyFuncInfo { id:278 name:step method:(FuncId(278), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @ppu: <INVALID>[IvarId(0)]
 :00002 _ = %1.setup_frame()                 [<INVALID>]
 :00004 %1 = @cpu: <INVALID>[IvarId(0)]
 :00005 _ = %1.run()                         [<INVALID>]
 :00007 %1 = @ppu: <INVALID>[IvarId(0)]
 :00008 _ = %1.vsync()                       [<INVALID>]
 :00010 %1 = @apu: <INVALID>[IvarId(0)]
 :00011 _ = %1.vsync()                       [<INVALID>]
 :00013 %1 = @cpu: <INVALID>[IvarId(0)]
 :00014 _ = %1.vsync()                       [<INVALID>]
 :00016 %1 = @rom: <INVALID>[IvarId(0)]
 :00017 _ = %1.vsync()                       [<INVALID>]
 :00019 %1 = @input: <INVALID>[IvarId(0)]
 :00020 %2 = @frame: <INVALID>[IvarId(0)]
 :00021 %3 = @pads: <INVALID>[IvarId(0)]
 :00022 _ = %1.tick(%2;2)                    [<INVALID>]
 :00024 %1 = @video: <INVALID>[IvarId(0)]
 :00025 %2 = @ppu: <INVALID>[IvarId(0)]
 :00026 %2 = %2.output_pixels()              [<INVALID>]
 :00028 %1 = %1.tick(%2;1)                   [<INVALID>]
 :00030 @fps: <INVALID>[IvarId(0)] = %1
 :00031 %1 = %0.save_fps_history?()          [<INVALID>]
 :00033 condnotbr %1 =>:00037
+:00034 %1 = @fps_history: <INVALID>[IvarId(0)]
 :00035 %2 = @fps: <INVALID>[IvarId(0)]
 :00036 %1 = %1 << %2                        [<INVALID>][<INVALID>]
+:00037 %1 = @audio: <INVALID>[IvarId(0)]
 :00038 %2 = @apu: <INVALID>[IvarId(0)]
 :00039 %2 = %2.output()                     [<INVALID>]
 :00041 _ = %1.tick(%2;1)                    [<INVALID>]
 :00043 %1 = @frame: <INVALID>[IvarId(0)]
 :00044 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00045 @frame: <INVALID>[IvarId(0)] = %1
 :00046 %1 = @conf: <INVALID>[IvarId(0)]
 :00047 %1 = %1.loglevel()                   [<INVALID>]
 :00049 _%1 = %1 >= 2: i16                   [<INVALID>][<INVALID>]
 :00050 condnotbr _%1 =>:00058
+:00051 %1 = @conf: <INVALID>[IvarId(0)]
 :00052 %2 = literal["frame "]
 :00053 %3 = @frame: <INVALID>[IvarId(0)]
 :00054 %2 = concat(%2; 2)
 :00055 %1 = %1.info(%2;1)                   [<INVALID>]
 :00057 ret %1
+:00058 %1 = nil
 :00059 ret %1
------------------------------------
------------------------------------
<dispose> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:58
meta:on_stack:true kind:Ruby mode:method FuncId(279) regs:5 ISeq(RubyFuncInfo { id:279 name:dispose method:(FuncId(279), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @fps: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00048
+:00003 %1 = @conf: <INVALID>[IvarId(0)]
 :00004 %2 = literal["fps: %.2f (in the last 10 frames)"]
 :00005 %3 = @fps: <INVALID>[IvarId(0)]
 :00006 %2 = %2 % %3                         [<INVALID>][<INVALID>]
 :00007 _ = %1.info(%2;1)                    [<INVALID>]
 :00009 %1 = @conf: <INVALID>[IvarId(0)]
 :00010 %1 = %1.print_fps_history()          [<INVALID>]
 :00012 condnotbr %1 =>:00020
+:00013 %1 = literal["frame,fps-history"]
 :00014 _ = %0.puts(%1;1)                    [<INVALID>]
 :00016 %1 = @fps_history: <INVALID>[IvarId(0)]
 :00017 %2 = literal[18481153]
 :00018 _ = %1.each_with_index( &%2)         [<INVALID>]
+:00020 %1 = @conf: <INVALID>[IvarId(0)]
 :00021 %1 = %1.print_p95fps()               [<INVALID>]
 :00023 condnotbr %1 =>:00039
+:00024 %1 = literal["p95 fps: "]
 :00025 %2 = @fps_history: <INVALID>[IvarId(0)]
 :00026 %2 = %2.sort()                       [<INVALID>]
 :00028 %3 = @fps_history: <INVALID>[IvarId(0)]
 :00029 %3 = %3.length()                     [<INVALID>]
 :00031 %4 = literal[0.05]
 :00032 %3 = %3 * %4                         [<INVALID>][<INVALID>]
 :00033 %3 = %3.floor()                      [<INVALID>]
 :00035 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00036 %1 = concat(%1; 2)
 :00037 _ = %0.puts(%1;1)                    [<INVALID>]
+:00039 %1 = @conf: <INVALID>[IvarId(0)]
 :00040 %1 = %1.print_fps()                  [<INVALID>]
 :00042 condnotbr %1 =>:00048
+:00043 %1 = literal["fps: "]
 :00044 %2 = @fps: <INVALID>[IvarId(0)]
 :00045 %1 = concat(%1; 2)
 :00046 _ = %0.puts(%1;1)                    [<INVALID>]
+:00048 %1 = @conf: <INVALID>[IvarId(0)]
 :00049 %1 = %1.print_video_checksum()       [<INVALID>]
 :00051 condnotbr %1 =>:00069
+:00052 %1 = @video: <INVALID>[IvarId(0)]
 :00053 %2 = const[Video]                    [<INVALID>]
 :00054 %1 = %1.instance_of?(%2;1)           [<INVALID>]
 :00056 condnotbr %1 =>:00069
+:00057 %1 = literal["checksum: "]
 :00058 %2 = @ppu: <INVALID>[IvarId(0)]
 :00059 %2 = %2.output_pixels()              [<INVALID>]
 :00061 %3 = literal["C*"]
 :00062 %2 = %2.pack(%3;1)                   [<INVALID>]
 :00064 %2 = %2.sum()                        [<INVALID>]
 :00066 %1 = concat(%1; 2)
 :00067 _ = %0.puts(%1;1)                    [<INVALID>]
+:00069 %1 = @video: <INVALID>[IvarId(0)]
 :00070 _ = %1.dispose()                     [<INVALID>]
 :00072 %1 = @audio: <INVALID>[IvarId(0)]
 :00073 _ = %1.dispose()                     [<INVALID>]
 :00075 %1 = @input: <INVALID>[IvarId(0)]
 :00076 _ = %1.dispose()                     [<INVALID>]
 :00078 %1 = @rom: <INVALID>[IvarId(0)]
 :00079 _ = %1.save_battery()                [<INVALID>]
 :00081 %1 = @ppu: <INVALID>[IvarId(0)]
 :00082 %1 = %1.dispose()                    [<INVALID>]
 :00084 ret %1
------------------------------------
------------------------------------
<run> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:80
meta:on_stack:true kind:Ruby mode:method FuncId(280) regs:6 ISeq(RubyFuncInfo { id:280 name:run method:(FuncId(280), 0) args: 0 non_temp: 1 temp: 4})
[(:00001..:00050, Some(:00051), Some(:00054), Some(%3))]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 _ = %0.reset()                       [<INVALID>]
 :00003 %2 = @conf: <INVALID>[IvarId(0)]
 :00004 %2 = %2.stackprof_mode()             [<INVALID>]
 :00006 condnotbr %2 =>:00029
+:00007 %2 = literal["stackprof"]
 :00008 _ = %0.require(%2;1)                 [<INVALID>]
 :00010 %2 = @conf: <INVALID>[IvarId(0)]
 :00011 %2 = %2.stackprof_output()           [<INVALID>]
 :00013 %3 = literal["MODE"]
 :00014 %4 = @conf: <INVALID>[IvarId(0)]
 :00015 %4 = %4.stackprof_mode()             [<INVALID>]
 :00017 %1 = %2.sub(%3;2)                    [<INVALID>]
 :00019 %2 = const[StackProf]                [<INVALID>]
 :00020 %3 = @conf: <INVALID>[IvarId(0)]
 :00021 %3 = %3.stackprof_mode()             [<INVALID>]
 :00023 %3 = %3.to_sym()                     [<INVALID>]
 :00025 %4 = %1
 :00026 %5 = literal[true]
 :00027 _ = %2.start( kw:%3;3)               [<INVALID>]
+:00029 loop_start counter=0 jit-addr=0000000000000000
 :00030 %2 = @frame: <INVALID>[IvarId(0)]
 :00031 %3 = @frame_target: <INVALID>[IvarId(0)]
 :00032 _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00033 condbr _%2 =>:00037
+:00034 _ = %0.step()                        [<INVALID>]
 :00036 br =>:00029
+:00037 loop_end
+:00038 %2 = @conf: <INVALID>[IvarId(0)]
 :00039 %2 = %2.stackprof_mode()             [<INVALID>]
 :00041 condnotbr %2 =>:00049
+:00042 %2 = const[StackProf]                [<INVALID>]
 :00043 _ = %2.stop()                        [<INVALID>]
 :00045 %2 = const[StackProf]                [<INVALID>]
 :00046 %2 = %2.results()                    [<INVALID>]
 :00048 br =>:00050
+:00049 %2 = nil
+:00050 br =>:00054
+:00051 _ = %0.dispose()                     [<INVALID>]
 :00053 raise %3
+:00054 _ = %0.dispose()                     [<INVALID>]
 :00056 ensure_end
 :00057 ret %2
------------------------------------
------------------------------------
<save_fps_history?> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:101
meta:on_stack:true kind:Ruby mode:method FuncId(281) regs:4 ISeq(RubyFuncInfo { id:281 name:save_fps_history? method:(FuncId(281), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @conf: <INVALID>[IvarId(0)]
 :00002 %1 = %2.print_fps_history()          [<INVALID>]
 :00004 condbr %1 =>:00008
+:00005 %2 = @conf: <INVALID>[IvarId(0)]
 :00006 %1 = %2.print_p95fps()               [<INVALID>]
+:00008 ret %1
------------------------------------
------------------------------------
<block in dispose> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:63
meta:on_stack:true kind:Ruby mode:method FuncId(282) regs:6 ISeq(RubyFuncInfo { id:282 name:<unnamed> method:(FuncId(279), 1) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = %2
 :00002 %4 = literal[","]
 :00003 %5 = %1
 :00004 %3 = concat(%3; 3)
 :00005 %3 = %0.puts(%3;1)                   [<INVALID>]
 :00007 ret %3
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(290) regs:2 ISeq(RubyFuncInfo { id:290 name:/main method:(FuncId(290), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(291)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(291) regs:2 ISeq(RubyFuncInfo { id:291 name:Optcarrot method:(FuncId(291), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = class_def ROM < _: FuncId(292)
 :00002 ret %1
------------------------------------
------------------------------------
<ROM> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(292) regs:4 ISeq(RubyFuncInfo { id:292 name:ROM method:(FuncId(292), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = 0: i32
 :00002 %3 = %0
 :00003 %1 = hash[%2; 1]
 :00004 const[MAPPER_DB] = %1
 :00005 %1 = literal["mapper/mmc1"]
 :00006 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00008 %1 = literal["mapper/uxrom"]
 :00009 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00011 %1 = literal["mapper/cnrom"]
 :00012 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00014 %1 = literal["mapper/mmc3"]
 :00015 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00017 %1 = %0
 :00018 singleton_method_def %1.zip_extract: FuncId(293)
 :00019 %1 = %0
 :00020 singleton_method_def %1.load: FuncId(294)
 :00021 %1 = const[StandardError]            [<INVALID>]
 :00022 _ = class_def InvalidROM < %1: FuncId(295)
 :00023 method_def parse_header: FuncId(296)
 :00024 method_def initialize: FuncId(297)
 :00025 method_def init: FuncId(298)
 :00026 method_def reset: FuncId(299)
 :00027 method_def inspect: FuncId(300)
 :00028 method_def peek_6000: FuncId(301)
 :00029 method_def poke_6000: FuncId(302)
 :00030 method_def vsync: FuncId(303)
 :00031 method_def load_battery: FuncId(304)
 :00032 method_def save_battery: FuncId(305)
 :00033 %1 = :save_battery
 :00034 ret %1
------------------------------------
------------------------------------
<zip_extract> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:12
meta:on_stack:true kind:Ruby mode:method FuncId(293) regs:6 ISeq(RubyFuncInfo { id:293 name:zip_extract method:(FuncId(293), 0) args: 1 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = literal["zlib"]
 :00002 _ = %0.require(%3;1)                 [<INVALID>]
 :00004 %3 = const[File]                     [<INVALID>]
 :00005 %2 = %3.binread(%1;1)                [<INVALID>]
 :00007 %3 = literal[20054017]
 :00008 _ = %0.loop( &%3)                    [<INVALID>]
 :00010 %3 = literal["failed to extract ROM file from `"]
 :00011 %4 = %1
 :00012 %5 = literal["'"]
 :00013 %3 = concat(%3; 3)
 :00014 %3 = %0.raise(%3;1)                  [<INVALID>]
 :00016 ret %3
------------------------------------
------------------------------------
<load> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:35
meta:on_stack:true kind:Ruby mode:method FuncId(294) regs:14 ISeq(RubyFuncInfo { id:294 name:load method:(FuncId(294), 0) args: 3 non_temp: 8 temp: 5})
[]
+:00000 init_method reg:13 arg:3 req:3 opt:0 rest:false block:None stack_offset:10
 :00001 %4 = %1.romfile()                    [<INVALID>]
 :00003 %9 = const[File]                     [<INVALID>]
 :00004 %5 = %9.basename(%4;1)               [<INVALID>]
 :00006 %9 = const[File]                     [<INVALID>]
 :00007 %9 = %9.extname(%4;1)                [<INVALID>]
 :00009 %10 = literal[".zip"]
 :00010 _%9 = %9 == %10                      [<INVALID>][<INVALID>]
 :00011 condnotbr _%9 =>:00015
+:00012 %9 = %0.zip_extract(%4;1)            [<INVALID>]
 :00014 br =>:00018
+:00015 %9 = const[File]                     [<INVALID>]
 :00016 %9 = %9.binread(%4;1)                [<INVALID>]
+:00018 %6 = %9.bytes()                      [<INVALID>]
 :00020 %9 = 6: i32
 :00021 %9 = %6.[%9]                         [<INVALID>][<INVALID>]
 :00022 %9 = %9 >> 4: i16                    [<INVALID>][<INVALID>]
 :00023 %10 = 7: i32
 :00024 %10 = %6.[%10]                       [<INVALID>][<INVALID>]
 :00025 %10 = %10 & 240: i16                 [<INVALID>][<INVALID>]
 :00026 %7 = %9 | %10                        [<INVALID>][<INVALID>]
 :00027 %9 = const[MAPPER_DB]                [<INVALID>]
 :00028 %8 = %9.[%7]                         [<INVALID>][<INVALID>]
 :00029 condnotbr %8 =>:00031
+:00030 br =>:00036
+:00031 %9 = const[NotImplementedError]      [<INVALID>]
 :00032 %10 = literal["Unsupported mapper type 0x%02x"]
 :00033 %10 = %10 % %7                       [<INVALID>][<INVALID>]
 :00034 _ = %0.raise(%9;2)                   [<INVALID>]
+:00036 %9 = %1
 :00037 %10 = %2
 :00038 %11 = %3
 :00039 %12 = %5
 :00040 %13 = %6
 :00041 %9 = %8.new(%9;5)                    [<INVALID>]
 :00043 ret %9
------------------------------------
------------------------------------
<InvalidROM> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:49
meta:on_stack:true kind:Ruby mode:class_def FuncId(295) regs:2 ISeq(RubyFuncInfo { id:295 name:InvalidROM method:(FuncId(295), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<parse_header> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:52
meta:on_stack:true kind:Ruby mode:method FuncId(296) regs:9 ISeq(RubyFuncInfo { id:296 name:parse_header method:(FuncId(296), 0) args: 1 non_temp: 4 temp: 4})
[]
+:00000 init_method reg:8 arg:1 req:1 opt:0 rest:false block:None stack_offset:8
 :00001 %5 = %1.size()                       [<INVALID>]
 :00003 _%5 = %5 < 16: i16                   [<INVALID>][<INVALID>]
 :00004 condnotbr _%5 =>:00009
+:00005 %5 = const[InvalidROM]               [<INVALID>]
 :00006 %6 = literal["Missing 16-byte header"]
 :00007 _ = %0.raise(%5;2)                   [<INVALID>]
+:00009 %5 = 0: i32
 :00010 %6 = 4: i32
 :00011 %5 = %1.[](%5;2)                     [<INVALID>]
 :00013 %6 = literal["NES\u{1a}"]
 :00014 %6 = %6.bytes()                      [<INVALID>]
 :00016 _%5 = %5 != %6                       [<INVALID>][<INVALID>]
 :00017 condnotbr _%5 =>:00022
+:00018 %5 = const[InvalidROM]               [<INVALID>]
 :00019 %6 = literal["Missing 'NES' constant in header"]
 :00020 _ = %0.raise(%5;2)                   [<INVALID>]
+:00022 %5 = 6: i32
 :00023 %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00024 %6 = 2: i32
 :00025 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00026 _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00027 condnotbr _%5 =>:00032
+:00028 %5 = const[NotImplementedError]      [<INVALID>]
 :00029 %6 = literal["trainer not supported"]
 :00030 _ = %0.raise(%5;2)                   [<INVALID>]
+:00032 %5 = 7: i32
 :00033 %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00034 %6 = 0: i32
 :00035 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00036 _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00037 condnotbr _%5 =>:00042
+:00038 %5 = const[NotImplementedError]      [<INVALID>]
 :00039 %6 = literal["VS cart not supported"]
 :00040 _ = %0.raise(%5;2)                   [<INVALID>]
+:00042 %5 = 9: i32
 :00043 %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00044 %6 = 0: i32
 :00045 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00046 _%5 = %5 == 0: i16                   [<INVALID>][<INVALID>]
 :00047 condnotbr _%5 =>:00049
+:00048 br =>:00053
+:00049 %5 = const[NotImplementedError]      [<INVALID>]
 :00050 %6 = literal["PAL not supported"]
 :00051 _ = %0.raise(%5;2)                   [<INVALID>]
+:00053 %5 = 4: i32
 :00054 %2 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00055 %5 = 5: i32
 :00056 %3 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00057 %5 = 6: i32
 :00058 %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00059 %6 = 0: i32
 :00060 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00061 _%5 = %5 == 0: i16                   [<INVALID>][<INVALID>]
 :00062 condnotbr _%5 =>:00065
+:00063 %5 = :horizontal
 :00064 br =>:00066
+:00065 %5 = :vertical
+:00066 @mirroring: <INVALID>[IvarId(0)] = %5
 :00067 %5 = 6: i32
 :00068 %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00069 %6 = 3: i32
 :00070 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00071 _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00072 condnotbr _%5 =>:00075
+:00073 %5 = :four_screen
 :00074 @mirroring: <INVALID>[IvarId(0)] = %5
+:00075 %5 = 6: i32
 :00076 %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00077 %6 = 1: i32
 :00078 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00079 %5 = %5 == 1: i16                    [<INVALID>][<INVALID>]
 :00080 @battery: <INVALID>[IvarId(0)] = %5
 :00081 %5 = 6: i32
 :00082 %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00083 %5 = %5 >> 4: i16                    [<INVALID>][<INVALID>]
 :00084 %6 = 7: i32
 :00085 %6 = %1.[%6]                         [<INVALID>][<INVALID>]
 :00086 %6 = %6 & 240: i16                   [<INVALID>][<INVALID>]
 :00087 %5 = %5 | %6                         [<INVALID>][<INVALID>]
 :00088 @mapper: <INVALID>[IvarId(0)] = %5
 :00089 %6 = 1: i32
 :00090 %7 = 8: i32
 :00091 %7 = %1.[%7]                         [<INVALID>][<INVALID>]
 :00092 %5 = array[%6; 2]
 :00093 %4 = %5.max()                        [<INVALID>]
 :00095 %6 = %2
 :00096 %7 = %3
 :00097 %8 = %4
 :00098 %5 = array[%6; 3]
 :00099 ret %5
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:70
meta:on_stack:true kind:Ruby mode:method FuncId(297) regs:15 ISeq(RubyFuncInfo { id:297 name:initialize method:(FuncId(297), 0) args: 5 non_temp: 8 temp: 6})
[]
+:00000 init_method reg:14 arg:5 req:5 opt:0 rest:false block:None stack_offset:11
 :00001 @conf: <INVALID>[IvarId(0)] = %1
 :00002 @cpu: <INVALID>[IvarId(0)] = %2
 :00003 @ppu: <INVALID>[IvarId(0)] = %3
 :00004 @basename: <INVALID>[IvarId(0)] = %4
 :00005 %9 = 0: i32
 :00006 %10 = 16: i32
 :00007 %9 = %5.slice!(%9;2)                 [<INVALID>]
 :00009 %9 = %0.parse_header(%9;1)           [<INVALID>]
 :00011 %10; 3 = expand(%9)
 :00012 %6 = %10
 :00013 %7 = %11
 :00014 %8 = %12
 :00015 %9 = %5.size()                       [<INVALID>]
 :00017 %10 = 16384: i16 * %6                [<INVALID>][<INVALID>]
 :00018 _%9 = %9 < %10                       [<INVALID>][<INVALID>]
 :00019 condnotbr _%9 =>:00024
+:00020 %9 = const[InvalidROM]               [<INVALID>]
 :00021 %10 = literal["EOF in ROM bank data"]
 :00022 _ = %0.raise(%9;2)                   [<INVALID>]
+:00024 %10 = 0: i32
 :00025 %9 = %10 ... %6
 :00026 %10 = literal[20119553]
 :00027 %9 = %9.map( &%10)                   [<INVALID>]
 :00029 @prg_banks: <INVALID>[IvarId(0)] = %9
 :00030 %9 = %5.size()                       [<INVALID>]
 :00032 %10 = 8192: i16 * %7                 [<INVALID>][<INVALID>]
 :00033 _%9 = %9 < %10                       [<INVALID>][<INVALID>]
 :00034 condnotbr _%9 =>:00039
+:00035 %9 = const[InvalidROM]               [<INVALID>]
 :00036 %10 = literal["EOF in CHR bank data"]
 :00037 _ = %0.raise(%9;2)                   [<INVALID>]
+:00039 %10 = 0: i32
 :00040 %9 = %10 ... %7
 :00041 %10 = literal[20185089]
 :00042 %9 = %9.map( &%10)                   [<INVALID>]
 :00044 @chr_banks: <INVALID>[IvarId(0)] = %9
 :00045 %9 = literal[[nil]]
 :00046 %10 = 65536: i32
 :00047 %9 = %9 * %10                        [<INVALID>][<INVALID>]
 :00048 @prg_ref: <INVALID>[IvarId(0)] = %9
 :00049 %9 = @prg_ref: <INVALID>[IvarId(0)]
 :00050 %10 = 32768: i32
 :00051 %11 = 16384: i32
 :00052 %13 = @prg_banks: <INVALID>[IvarId(0)]
 :00053 %13 = %13.first()                    [<INVALID>]
 :00055 %12 = %13
 :00056 _ = %9.[]=(%10;3)                    [<INVALID>]
 :00058 %9 = @prg_ref: <INVALID>[IvarId(0)]
 :00059 %10 = 49152: i32
 :00060 %11 = 16384: i32
 :00061 %13 = @prg_banks: <INVALID>[IvarId(0)]
 :00062 %13 = %13.last()                     [<INVALID>]
 :00064 %12 = %13
 :00065 _ = %9.[]=(%10;3)                    [<INVALID>]
 :00067 %9 = %7 == 0: i16                    [<INVALID>][<INVALID>]
 :00068 @chr_ram: <INVALID>[IvarId(0)] = %9
 :00069 %9 = @chr_ram: <INVALID>[IvarId(0)]
 :00070 condnotbr %9 =>:00074
+:00071 %9 = literal[[0]]
 :00072 %9 = %9 * 8192: i16                  [<INVALID>][<INVALID>]
 :00073 br =>:00079
+:00074 %9 = @chr_banks: <INVALID>[IvarId(0)]
 :00075 %10 = 0: i32
 :00076 %9 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00077 %9 = %9.dup()                        [<INVALID>]
+:00079 @chr_ref: <INVALID>[IvarId(0)] = %9
 :00080 %9 = %8 > 0: i16                     [<INVALID>][<INVALID>]
 :00081 @wrk_readable: <INVALID>[IvarId(0)] = %9
 :00082 %9 = literal[false]
 :00083 @wrk_writable: <INVALID>[IvarId(0)] = %9
 :00084 _%9 = %8 > 0: i16                    [<INVALID>][<INVALID>]
 :00085 condnotbr _%9 =>:00091
+:00086 %9 = literal[24576..32767]
 :00087 %10 = literal[20250625]
 :00088 %9 = %9.map( &%10)                   [<INVALID>]
 :00090 br =>:00092
+:00091 %9 = nil
+:00092 @wrk: <INVALID>[IvarId(0)] = %9
 :00093 _ = %0.init()                        [<INVALID>]
 :00095 %9 = @ppu: <INVALID>[IvarId(0)]
 :00096 %10 = @mirroring: <INVALID>[IvarId(0)]
 :00097 _ = %9.nametables=(%10;1)            [<INVALID>]
 :00099 %9 = @ppu: <INVALID>[IvarId(0)]
 :00100 %10 = @chr_ref: <INVALID>[IvarId(0)]
 :00101 %11 = @chr_ram: <INVALID>[IvarId(0)]
 :00102 %9 = %9.set_chr_mem(%10;2)           [<INVALID>]
 :00104 ret %9
------------------------------------
------------------------------------
<init> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:101
meta:on_stack:true kind:Ruby mode:method FuncId(298) regs:2 ISeq(RubyFuncInfo { id:298 name:init method:(FuncId(298), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:104
meta:on_stack:true kind:Ruby mode:method FuncId(299) regs:5 ISeq(RubyFuncInfo { id:299 name:reset method:(FuncId(299), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @cpu: <INVALID>[IvarId(0)]
 :00002 %2 = literal[32768..65535]
 :00003 %3 = @prg_ref: <INVALID>[IvarId(0)]
 :00004 %4 = nil
 :00005 %1 = %1.add_mappings(%2;3)           [<INVALID>]
 :00007 ret %1
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:108
meta:on_stack:true kind:Ruby mode:method FuncId(300) regs:7 ISeq(RubyFuncInfo { id:300 name:inspect method:(FuncId(300), 0) args: 0 non_temp: 0 temp: 6})
[]
+:00000 init_method reg:6 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %2 = literal["Mapper: "]
 :00002 %3 = @mapper: <INVALID>[IvarId(0)]
 :00003 %4 = literal[" ("]
 :00004 %5 = %0.class()                      [<INVALID>]
 :00006 %5 = %5.to_s()                       [<INVALID>]
 :00008 %6 = literal["::"]
 :00009 %5 = %5.split(%6;1)                  [<INVALID>]
 :00011 %5 = %5.last()                       [<INVALID>]
 :00013 %6 = literal[")"]
 :00014 %2 = concat(%2; 5)
 :00015 %3 = literal["PRG Banks: "]
 :00016 %4 = @prg_banks: <INVALID>[IvarId(0)]
 :00017 %4 = %4.size()                       [<INVALID>]
 :00019 %3 = concat(%3; 2)
 :00020 %4 = literal["CHR Banks: "]
 :00021 %5 = @chr_banks: <INVALID>[IvarId(0)]
 :00022 %5 = %5.size()                       [<INVALID>]
 :00024 %4 = concat(%4; 2)
 :00025 %5 = literal["Mirroring: "]
 :00026 %6 = @mirroring: <INVALID>[IvarId(0)]
 :00027 %5 = concat(%5; 2)
 :00028 %1 = array[%2; 4]
 :00029 %2 = literal["\n"]
 :00030 %1 = %1.join(%2;1)                   [<INVALID>]
 :00032 ret %1
------------------------------------
------------------------------------
<peek_6000> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:117
meta:on_stack:true kind:Ruby mode:method FuncId(301) regs:4 ISeq(RubyFuncInfo { id:301 name:peek_6000 method:(FuncId(301), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @wrk_readable: <INVALID>[IvarId(0)]
 :00002 condnotbr %2 =>:00007
+:00003 %2 = @wrk: <INVALID>[IvarId(0)]
 :00004 %3 = %1 - 24576: i16                 [<INVALID>][<INVALID>]
 :00005 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00006 ret %2
+:00007 %2 = %1 >> 8: i16                    [<INVALID>][<INVALID>]
 :00008 ret %2
------------------------------------
------------------------------------
<poke_6000> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:121
meta:on_stack:true kind:Ruby mode:method FuncId(302) regs:5 ISeq(RubyFuncInfo { id:302 name:poke_6000 method:(FuncId(302), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @wrk_writable: <INVALID>[IvarId(0)]
 :00002 condnotbr %3 =>:00007
+:00003 %3 = @wrk: <INVALID>[IvarId(0)]
 :00004 %4 = %1 - 24576: i16                 [<INVALID>][<INVALID>]
 :00005 %3:.[%4:] = %2
 :00006 ret %2
+:00007 %3 = nil
 :00008 ret %3
------------------------------------
------------------------------------
<vsync> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:125
meta:on_stack:true kind:Ruby mode:method FuncId(303) regs:2 ISeq(RubyFuncInfo { id:303 name:vsync method:(FuncId(303), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<load_battery> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:128
meta:on_stack:true kind:Ruby mode:method FuncId(304) regs:4 ISeq(RubyFuncInfo { id:304 name:load_battery method:(FuncId(304), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @battery: <INVALID>[IvarId(0)]
 :00002 condnotbr %2 =>:00004
+:00003 br =>:00006
+:00004 %2 = nil
 :00005 ret %2
+:00006 %2 = @basename: <INVALID>[IvarId(0)]
 :00007 %3 = literal[".sav"]
 :00008 %1 = %2 + %3                         [<INVALID>][<INVALID>]
 :00009 %2 = const[File]                     [<INVALID>]
 :00010 %2 = %2.readable?(%1;1)              [<INVALID>]
 :00012 condnotbr %2 =>:00014
+:00013 br =>:00016
+:00014 %2 = nil
 :00015 ret %2
+:00016 %2 = const[File]                     [<INVALID>]
 :00017 %1 = %2.binread(%1;1)                [<INVALID>]
 :00019 %2 = @wrk: <INVALID>[IvarId(0)]
 :00020 %3 = %1.bytes()                      [<INVALID>]
 :00022 %2 = %2.replace(%3;1)                [<INVALID>]
 :00024 ret %2
------------------------------------
------------------------------------
<save_battery> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:136
meta:on_stack:true kind:Ruby mode:method FuncId(305) regs:6 ISeq(RubyFuncInfo { id:305 name:save_battery method:(FuncId(305), 0) args: 0 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @battery: <INVALID>[IvarId(0)]
 :00002 condnotbr %2 =>:00004
+:00003 br =>:00006
+:00004 %2 = nil
 :00005 ret %2
+:00006 %2 = @basename: <INVALID>[IvarId(0)]
 :00007 %3 = literal[".sav"]
 :00008 %1 = %2 + %3                         [<INVALID>][<INVALID>]
 :00009 %2 = literal["Saving: "]
 :00010 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00011 _ = %0.puts(%2;1)                    [<INVALID>]
 :00013 %2 = const[File]                     [<INVALID>]
 :00014 %3 = %1
 :00015 %4 = @wrk: <INVALID>[IvarId(0)]
 :00016 %5 = literal["C*"]
 :00017 %4 = %4.pack(%5;1)                   [<INVALID>]
 :00019 %2 = %2.binwrite(%3;2)               [<INVALID>]
 :00021 ret %2
------------------------------------
------------------------------------
<block in zip_extract> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:15
meta:on_stack:true kind:Ruby mode:method FuncId(306) regs:23 ISeq(RubyFuncInfo { id:306 name:<unnamed> method:(FuncId(293), 1) args: 0 non_temp: 10 temp: 12})
[]
+:00000 init_method reg:22 arg:0 req:0 opt:0 rest:false block:None stack_offset:15
 :00001 %11 = dynvar(1, %2)
 :00002 %12 = 0: i32
 :00003 %13 = 30: i32
 :00004 %11 = %11.slice!(%12;2)              [<INVALID>]
 :00006 %12 = literal["a4v5V3v2"]
 :00007 %11 = %11.unpack(%12;1)              [<INVALID>]
 :00009 %12; 11 = expand(%11)
 :00010 %1 = %12
 :00011 %2 = %13
 :00012 %3 = %14
 :00013 %4 = %15
 :00014 %2 = %16
 :00015 %2 = %17
 :00016 %2 = %18
 :00017 %5 = %19
 :00018 %2 = %20
 :00019 %6 = %21
 :00020 %7 = %22
 :00021 %11 = literal["PK\u{3}\u{4}"]
 :00022 %11 = %11.b()                        [<INVALID>]
 :00024 _%11 = %1 != %11                     [<INVALID>][<INVALID>]
 :00025 condnotbr _%11 =>:00028
+:00026 %11 = nil
 :00027 break %11
+:00028 %11 = dynvar(1, %2)
 :00029 %12 = 0: i32
 :00030 %13 = %6
 :00031 %8 = %11.slice!(%12;2)               [<INVALID>]
 :00033 %11 = dynvar(1, %2)
 :00034 %12 = 0: i32
 :00035 %13 = %7
 :00036 _ = %11.slice!(%12;2)                [<INVALID>]
 :00038 %11 = dynvar(1, %2)
 :00039 %12 = 0: i32
 :00040 %13 = %5
 :00041 %9 = %11.slice!(%12;2)               [<INVALID>]
 :00043 %11 = const[File]                    [<INVALID>]
 :00044 %11 = %11.extname(%8;1)              [<INVALID>]
 :00046 %11 = %11.downcase()                 [<INVALID>]
 :00048 %12 = literal[".nes"]
 :00049 _%11 = %11 != %12                    [<INVALID>][<INVALID>]
 :00050 condnotbr _%11 =>:00053
+:00051 %11 = nil
 :00052 ret %11
+:00053 %11 = %3 & 17: i16                   [<INVALID>][<INVALID>]
 :00054 _%11 = %11 != 0: i16                 [<INVALID>][<INVALID>]
 :00055 condnotbr _%11 =>:00058
+:00056 %11 = nil
 :00057 ret %11
+:00058 _%11 = %4 != 0: i16                  [<INVALID>][<INVALID>]
 :00059 condnotbr _%11 =>:00064
+:00060 _%11 = %4 != 8: i16                  [<INVALID>][<INVALID>]
 :00061 condnotbr _%11 =>:00064
+:00062 %11 = nil
 :00063 ret %11
+:00064 _%11 = %4 == 8: i16                  [<INVALID>][<INVALID>]
 :00065 condnotbr _%11 =>:00076
+:00066 %11 = const[Zlib::Inflate]           [<INVALID>]
 :00067 %12 = -15: i32
 :00068 %10 = %11.new(%12;1)                 [<INVALID>]
 :00070 %9 = %10.inflate(%9;1)               [<INVALID>]
 :00072 _ = %10.finish()                     [<INVALID>]
 :00074 _ = %10.close()                      [<INVALID>]
+:00076 method_ret %9
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:79
meta:on_stack:true kind:Ruby mode:method FuncId(307) regs:4 ISeq(RubyFuncInfo { id:307 name:<unnamed> method:(FuncId(297), 1) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = dynvar(1, %5)
 :00002 %2 = 0: i32
 :00003 %3 = 16384: i32
 :00004 %1 = %1.slice!(%2;2)                 [<INVALID>]
 :00006 ret %1
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:82
meta:on_stack:true kind:Ruby mode:method FuncId(308) regs:4 ISeq(RubyFuncInfo { id:308 name:<unnamed> method:(FuncId(297), 1) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = dynvar(1, %5)
 :00002 %2 = 0: i32
 :00003 %3 = 8192: i32
 :00004 %1 = %1.slice!(%2;2)                 [<INVALID>]
 :00006 ret %1
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:93
meta:on_stack:true kind:Ruby mode:method FuncId(309) regs:3 ISeq(RubyFuncInfo { id:309 name:<unnamed> method:(FuncId(297), 1) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1 >> 8: i16                    [<INVALID>][<INVALID>]
 :00002 ret %2
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(310) regs:2 ISeq(RubyFuncInfo { id:310 name:/main method:(FuncId(310), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(311)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(311) regs:3 ISeq(RubyFuncInfo { id:311 name:Optcarrot method:(FuncId(311), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[ROM]                      [<INVALID>]
 :00002 %1 = class_def MMC1 < %2: FuncId(312)
 :00003 ret %1
------------------------------------
------------------------------------
<MMC1> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(312) regs:4 ISeq(RubyFuncInfo { id:312 name:MMC1 method:(FuncId(312), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = const[MAPPER_DB]                [<INVALID>]
 :00002 %2 = 1: i32
 :00003 %3 = %0
 :00004 %1:.[%2:] = %3
 :00005 %1 = literal[[:first, :second, :vertical, :horizontal]]
 :00006 const[NMT_MODE] = %1
 :00007 %1 = literal[[:conseq, :conseq, :fix_first, :fix_last]]
 :00008 const[PRG_MODE] = %1
 :00009 %1 = literal[[:conseq, :noconseq]]
 :00010 const[CHR_MODE] = %1
 :00011 method_def init: FuncId(313)
 :00012 method_def reset: FuncId(314)
 :00013 method_def poke_prg: FuncId(315)
 :00014 method_def update_nmt: FuncId(316)
 :00015 method_def update_prg: FuncId(317)
 :00016 method_def update_chr: FuncId(318)
 :00017 %1 = :update_chr
 :00018 ret %1
------------------------------------
------------------------------------
<init> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:10
meta:on_stack:true kind:Ruby mode:method FuncId(313) regs:2 ISeq(RubyFuncInfo { id:313 name:init method:(FuncId(313), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 @chr_mode: <INVALID>[IvarId(0)] = %1
 :00003 @prg_mode: <INVALID>[IvarId(0)] = %1
 :00004 @nmt_mode: <INVALID>[IvarId(0)] = %1
 :00005 %1 = 0: i32
 :00006 @chr_bank_1: <INVALID>[IvarId(0)] = %1
 :00007 @chr_bank_0: <INVALID>[IvarId(0)] = %1
 :00008 @prg_bank: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:15
meta:on_stack:true kind:Ruby mode:method FuncId(314) regs:5 ISeq(RubyFuncInfo { id:314 name:reset method:(FuncId(314), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = 0: i32
 :00002 @shift_count: <INVALID>[IvarId(0)] = %1
 :00003 @shift: <INVALID>[IvarId(0)] = %1
 :00004 %1 = @chr_banks: <INVALID>[IvarId(0)]
 :00005 %1 = %1.flatten()                    [<INVALID>]
 :00007 %2 = 4096: i32
 :00008 %1 = %1.each_slice(%2;1)             [<INVALID>]
 :00010 %1 = %1.to_a()                       [<INVALID>]
 :00012 @chr_banks: <INVALID>[IvarId(0)] = %1
 :00013 %1 = literal[true]
 :00014 @wrk_writable: <INVALID>[IvarId(0)] = %1
 :00015 @wrk_readable: <INVALID>[IvarId(0)] = %1
 :00016 %1 = @cpu: <INVALID>[IvarId(0)]
 :00017 %2 = literal[24576..32767]
 :00018 %3 = :peek_6000
 :00019 %3 = %0.method(%3;1)                 [<INVALID>]
 :00021 %4 = :poke_6000
 :00022 %4 = %0.method(%4;1)                 [<INVALID>]
 :00024 _ = %1.add_mappings(%2;3)            [<INVALID>]
 :00026 %1 = @cpu: <INVALID>[IvarId(0)]
 :00027 %2 = literal[32768..65535]
 :00028 %3 = @prg_ref: <INVALID>[IvarId(0)]
 :00029 %4 = :poke_prg
 :00030 %4 = %0.method(%4;1)                 [<INVALID>]
 :00032 _ = %1.add_mappings(%2;3)            [<INVALID>]
 :00034 %1 = :horizontal
 :00035 _ = %0.update_nmt(%1;1)              [<INVALID>]
 :00037 %1 = :fix_last
 :00038 %2 = 0: i32
 :00039 %3 = 0: i32
 :00040 _ = %0.update_prg(%1;3)              [<INVALID>]
 :00042 %1 = :conseq
 :00043 %2 = 0: i32
 :00044 %3 = 0: i32
 :00045 %1 = %0.update_chr(%1;3)             [<INVALID>]
 :00047 ret %1
------------------------------------
------------------------------------
<poke_prg> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:29
meta:on_stack:true kind:Ruby mode:method FuncId(315) regs:12 ISeq(RubyFuncInfo { id:315 name:poke_prg method:(FuncId(315), 0) args: 2 non_temp: 6 temp: 5})
[]
+:00000 init_method reg:11 arg:2 req:2 opt:0 rest:false block:None stack_offset:9
 :00001 %7 = 7: i32
 :00002 %7 = %2.[%7]                         [<INVALID>][<INVALID>]
 :00003 _%7 = %7 == 1: i16                   [<INVALID>][<INVALID>]
 :00004 condnotbr _%7 =>:00009
+:00005 %7 = 0: i32
 :00006 @shift_count: <INVALID>[IvarId(0)] = %7
 :00007 @shift: <INVALID>[IvarId(0)] = %7
 :00008 ret %7
+:00009 %7 = @shift: <INVALID>[IvarId(0)]
 :00010 %8 = 0: i32
 :00011 %8 = %2.[%8]                         [<INVALID>][<INVALID>]
 :00012 %9 = @shift_count: <INVALID>[IvarId(0)]
 :00013 %8 = %8 << %9                        [<INVALID>][<INVALID>]
 :00014 %7 = %7 | %8                         [<INVALID>][<INVALID>]
 :00015 @shift: <INVALID>[IvarId(0)] = %7
 :00016 %7 = @shift_count: <INVALID>[IvarId(0)]
 :00017 %7 = %7 + 1: i16                     [<INVALID>][<INVALID>]
 :00018 @shift_count: <INVALID>[IvarId(0)] = %7
 :00019 %7 = @shift_count: <INVALID>[IvarId(0)]
 :00020 _%7 = %7 == 5: i16                   [<INVALID>][<INVALID>]
 :00021 condnotbr _%7 =>:00093
+:00022 %8 = %1 >> 13: i16                   [<INVALID>][<INVALID>]
 :00023 %8 = %8 & 3: i16                     [<INVALID>][<INVALID>]
 :00024 %9 = 0: i32
 :00025 _%9 = %9 === %8                      [<INVALID>][<INVALID>]
 :00026 condnotbr _%9 =>:00054
+:00027 %9 = const[NMT_MODE]                 [<INVALID>]
 :00028 %10 = @shift: <INVALID>[IvarId(0)]
 :00029 %10 = %10 & 3: i16                   [<INVALID>][<INVALID>]
 :00030 %3 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00031 %9 = const[PRG_MODE]                 [<INVALID>]
 :00032 %10 = @shift: <INVALID>[IvarId(0)]
 :00033 %10 = %10 >> 2: i16                  [<INVALID>][<INVALID>]
 :00034 %10 = %10 & 3: i16                   [<INVALID>][<INVALID>]
 :00035 %4 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00036 %9 = const[CHR_MODE]                 [<INVALID>]
 :00037 %10 = @shift: <INVALID>[IvarId(0)]
 :00038 %10 = %10 >> 4: i16                  [<INVALID>][<INVALID>]
 :00039 %10 = %10 & 1: i16                   [<INVALID>][<INVALID>]
 :00040 %5 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00041 _ = %0.update_nmt(%3;1)              [<INVALID>]
 :00043 %9 = %4
 :00044 %10 = @prg_bank: <INVALID>[IvarId(0)]
 :00045 %11 = @chr_bank_0: <INVALID>[IvarId(0)]
 :00046 _ = %0.update_prg(%9;3)              [<INVALID>]
 :00048 %9 = %5
 :00049 %10 = @chr_bank_0: <INVALID>[IvarId(0)]
 :00050 %11 = @chr_bank_1: <INVALID>[IvarId(0)]
 :00051 %7 = %0.update_chr(%9;3)             [<INVALID>]
 :00053 br =>:00089
+:00054 %9 = 1: i32
 :00055 _%9 = %9 === %8                      [<INVALID>][<INVALID>]
 :00056 condnotbr _%9 =>:00070
+:00057 %6 = @chr_bank_0: <INVALID>[IvarId(0)]
 :00058 %9 = @prg_mode: <INVALID>[IvarId(0)]
 :00059 %10 = @prg_bank: <INVALID>[IvarId(0)]
 :00060 %11 = @shift: <INVALID>[IvarId(0)]
 :00061 _ = %0.update_prg(%9;3)              [<INVALID>]
 :00063 @chr_bank_0: <INVALID>[IvarId(0)] = %6
 :00064 %9 = @chr_mode: <INVALID>[IvarId(0)]
 :00065 %10 = @shift: <INVALID>[IvarId(0)]
 :00066 %11 = @chr_bank_1: <INVALID>[IvarId(0)]
 :00067 %7 = %0.update_chr(%9;3)             [<INVALID>]
 :00069 br =>:00089
+:00070 %9 = 2: i32
 :00071 _%9 = %9 === %8                      [<INVALID>][<INVALID>]
 :00072 condnotbr _%9 =>:00079
+:00073 %9 = @chr_mode: <INVALID>[IvarId(0)]
 :00074 %10 = @chr_bank_0: <INVALID>[IvarId(0)]
 :00075 %11 = @shift: <INVALID>[IvarId(0)]
 :00076 %7 = %0.update_chr(%9;3)             [<INVALID>]
 :00078 br =>:00089
+:00079 %9 = 3: i32
 :00080 _%9 = %9 === %8                      [<INVALID>][<INVALID>]
 :00081 condnotbr _%9 =>:00088
+:00082 %9 = @prg_mode: <INVALID>[IvarId(0)]
 :00083 %10 = @shift: <INVALID>[IvarId(0)]
 :00084 %11 = @chr_bank_0: <INVALID>[IvarId(0)]
 :00085 %7 = %0.update_prg(%9;3)             [<INVALID>]
 :00087 br =>:00089
+:00088 %7 = nil
+:00089 %7 = 0: i32
 :00090 @shift_count: <INVALID>[IvarId(0)] = %7
 :00091 @shift: <INVALID>[IvarId(0)] = %7
 :00092 ret %7
+:00093 %7 = nil
 :00094 ret %7
------------------------------------
------------------------------------
<update_nmt> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:61
meta:on_stack:true kind:Ruby mode:method FuncId(316) regs:4 ISeq(RubyFuncInfo { id:316 name:update_nmt method:(FuncId(316), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @nmt_mode: <INVALID>[IvarId(0)]
 :00002 _%2 = %2 == %1                       [<INVALID>][<INVALID>]
 :00003 condnotbr _%2 =>:00006
+:00004 %2 = nil
 :00005 ret %2
+:00006 @nmt_mode: <INVALID>[IvarId(0)] = %1
 :00007 %2 = @ppu: <INVALID>[IvarId(0)]
 :00008 %3 = @nmt_mode: <INVALID>[IvarId(0)]
 :00009 _ = %2.nametables=(%3;1)             [<INVALID>]
 :00011 ret %3
------------------------------------
------------------------------------
<update_prg> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:67
meta:on_stack:true kind:Ruby mode:method FuncId(317) regs:13 ISeq(RubyFuncInfo { id:317 name:update_prg method:(FuncId(317), 0) args: 3 non_temp: 7 temp: 5})
[]
+:00000 init_method reg:12 arg:3 req:3 opt:0 rest:false block:None stack_offset:10
 :00001 %8 = @prg_mode: <INVALID>[IvarId(0)]
 :00002 _%8 = %1 == %8                       [<INVALID>][<INVALID>]
 :00003 condnotbr _%8 =>:00012
+:00004 %8 = @prg_bank: <INVALID>[IvarId(0)]
 :00005 _%8 = %2 == %8                       [<INVALID>][<INVALID>]
 :00006 condnotbr _%8 =>:00012
+:00007 %8 = @chr_bank_0: <INVALID>[IvarId(0)]
 :00008 _%8 = %3 == %8                       [<INVALID>][<INVALID>]
 :00009 condnotbr _%8 =>:00012
+:00010 %8 = nil
 :00011 ret %8
+:00012 %8 = %1
 :00013 %9 = %2
 :00014 %10 = %3
 :00015 @prg_mode: <INVALID>[IvarId(0)] = %8
 :00016 @prg_bank: <INVALID>[IvarId(0)] = %9
 :00017 @chr_bank_0: <INVALID>[IvarId(0)] = %10
 :00018 %8 = @prg_banks: <INVALID>[IvarId(0)]
 :00019 %8 = %8.size()                       [<INVALID>]
 :00021 %8 = %8 - 1: i16                     [<INVALID>][<INVALID>]
 :00022 %8 = 16: i16 & %8                    [<INVALID>][<INVALID>]
 :00023 %4 = %3 & %8                         [<INVALID>][<INVALID>]
 :00024 %8 = @prg_bank: <INVALID>[IvarId(0)]
 :00025 %8 = %8 & 15: i16                    [<INVALID>][<INVALID>]
 :00026 %8 = %8 | %4                         [<INVALID>][<INVALID>]
 :00027 %9 = @prg_banks: <INVALID>[IvarId(0)]
 :00028 %9 = %9.size()                       [<INVALID>]
 :00030 %9 = %9 - 1: i16                     [<INVALID>][<INVALID>]
 :00031 %5 = %8 & %9                         [<INVALID>][<INVALID>]
 :00032 %9 = @prg_mode: <INVALID>[IvarId(0)]
 :00033 %10 = :conseq
 :00034 _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00035 condnotbr _%10 =>:00042
+:00036 %10 = 1: i32
 :00037 %10 = ~%10                           [<INVALID>]
 :00038 %6 = %5 & %10                        [<INVALID>][<INVALID>]
 :00039 %7 = %6 + 1: i16                     [<INVALID>][<INVALID>]
 :00040 %8 = %7
 :00041 br =>:00062
+:00042 %10 = :fix_first
 :00043 _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00044 condnotbr _%10 =>:00049
+:00045 %6 = 0: i32
 :00046 %7 = %5
 :00047 %8 = %7
 :00048 br =>:00062
+:00049 %10 = :fix_last
 :00050 _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00051 condnotbr _%10 =>:00061
+:00052 %6 = %5
 :00053 %10 = @prg_banks: <INVALID>[IvarId(0)]
 :00054 %10 = %10.size()                     [<INVALID>]
 :00056 %10 = %10 - 1: i16                   [<INVALID>][<INVALID>]
 :00057 %10 = %10 & 15: i16                  [<INVALID>][<INVALID>]
 :00058 %7 = %10 | %4                        [<INVALID>][<INVALID>]
 :00059 %8 = %7
 :00060 br =>:00062
+:00061 %8 = nil
+:00062 %8 = @prg_ref: <INVALID>[IvarId(0)]
 :00063 %9 = 32768: i32
 :00064 %10 = 16384: i32
 :00065 %12 = @prg_banks: <INVALID>[IvarId(0)]
 :00066 %12 = %12.[%6]                       [<INVALID>][<INVALID>]
 :00067 %11 = %12
 :00068 _ = %8.[]=(%9;3)                     [<INVALID>]
 :00070 %8 = @prg_ref: <INVALID>[IvarId(0)]
 :00071 %9 = 49152: i32
 :00072 %10 = 16384: i32
 :00073 %12 = @prg_banks: <INVALID>[IvarId(0)]
 :00074 %12 = %12.[%7]                       [<INVALID>][<INVALID>]
 :00075 %11 = %12
 :00076 _ = %8.[]=(%9;3)                     [<INVALID>]
 :00078 ret %12
------------------------------------
------------------------------------
<update_chr> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:88
meta:on_stack:true kind:Ruby mode:method FuncId(318) regs:11 ISeq(RubyFuncInfo { id:318 name:update_chr method:(FuncId(318), 0) args: 3 non_temp: 5 temp: 5})
[]
+:00000 init_method reg:10 arg:3 req:3 opt:0 rest:false block:None stack_offset:9
 :00001 %6 = @chr_mode: <INVALID>[IvarId(0)]
 :00002 _%6 = %1 == %6                       [<INVALID>][<INVALID>]
 :00003 condnotbr _%6 =>:00012
+:00004 %6 = @chr_bank_0: <INVALID>[IvarId(0)]
 :00005 _%6 = %2 == %6                       [<INVALID>][<INVALID>]
 :00006 condnotbr _%6 =>:00012
+:00007 %6 = @chr_bank_1: <INVALID>[IvarId(0)]
 :00008 _%6 = %3 == %6                       [<INVALID>][<INVALID>]
 :00009 condnotbr _%6 =>:00012
+:00010 %6 = nil
 :00011 ret %6
+:00012 %6 = %1
 :00013 %7 = %2
 :00014 %8 = %3
 :00015 @chr_mode: <INVALID>[IvarId(0)] = %6
 :00016 @chr_bank_0: <INVALID>[IvarId(0)] = %7
 :00017 @chr_bank_1: <INVALID>[IvarId(0)] = %8
 :00018 %6 = @chr_ram: <INVALID>[IvarId(0)]
 :00019 condnotbr %6 =>:00022
+:00020 %6 = nil
 :00021 ret %6
+:00022 %6 = @ppu: <INVALID>[IvarId(0)]
 :00023 %7 = 0: i32
 :00024 _ = %6.update(%7;1)                  [<INVALID>]
 :00026 %6 = @chr_mode: <INVALID>[IvarId(0)]
 :00027 %7 = :conseq
 :00028 _%6 = %6 == %7                       [<INVALID>][<INVALID>]
 :00029 condnotbr _%6 =>:00034
+:00030 %6 = @chr_bank_0: <INVALID>[IvarId(0)]
 :00031 %4 = %6 & 30: i16                    [<INVALID>][<INVALID>]
 :00032 %5 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00033 br =>:00036
+:00034 %4 = @chr_bank_0: <INVALID>[IvarId(0)]
 :00035 %5 = @chr_bank_1: <INVALID>[IvarId(0)]
+:00036 %6 = @chr_ref: <INVALID>[IvarId(0)]
 :00037 %7 = 0: i32
 :00038 %8 = 4096: i32
 :00039 %10 = @chr_banks: <INVALID>[IvarId(0)]
 :00040 %10 = %10.[%4]                       [<INVALID>][<INVALID>]
 :00041 %9 = %10
 :00042 _ = %6.[]=(%7;3)                     [<INVALID>]
 :00044 %6 = @chr_ref: <INVALID>[IvarId(0)]
 :00045 %7 = 4096: i32
 :00046 %8 = 4096: i32
 :00047 %10 = @chr_banks: <INVALID>[IvarId(0)]
 :00048 %10 = %10.[%5]                       [<INVALID>][<INVALID>]
 :00049 %9 = %10
 :00050 _ = %6.[]=(%7;3)                     [<INVALID>]
 :00052 ret %10
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(319) regs:2 ISeq(RubyFuncInfo { id:319 name:/main method:(FuncId(319), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(320)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(320) regs:3 ISeq(RubyFuncInfo { id:320 name:Optcarrot method:(FuncId(320), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[ROM]                      [<INVALID>]
 :00002 %1 = class_def UxROM < %2: FuncId(321)
 :00003 ret %1
------------------------------------
------------------------------------
<UxROM> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(321) regs:4 ISeq(RubyFuncInfo { id:321 name:UxROM method:(FuncId(321), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = const[MAPPER_DB]                [<INVALID>]
 :00002 %2 = 2: i32
 :00003 %3 = %0
 :00004 %1:.[%2:] = %3
 :00005 method_def reset: FuncId(322)
 :00006 method_def poke_8000: FuncId(323)
 :00007 %1 = :poke_8000
 :00008 ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:6
meta:on_stack:true kind:Ruby mode:method FuncId(322) regs:5 ISeq(RubyFuncInfo { id:322 name:reset method:(FuncId(322), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @cpu: <INVALID>[IvarId(0)]
 :00002 %2 = literal[32768..65535]
 :00003 %3 = @prg_ref: <INVALID>[IvarId(0)]
 :00004 %4 = :poke_8000
 :00005 %4 = %0.method(%4;1)                 [<INVALID>]
 :00007 %1 = %1.add_mappings(%2;3)           [<INVALID>]
 :00009 ret %1
------------------------------------
------------------------------------
<poke_8000> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:10
meta:on_stack:true kind:Ruby mode:method FuncId(323) regs:9 ISeq(RubyFuncInfo { id:323 name:poke_8000 method:(FuncId(323), 0) args: 2 non_temp: 2 temp: 6})
[]
+:00000 init_method reg:8 arg:2 req:2 opt:0 rest:false block:None stack_offset:8
 :00001 %3 = @prg_ref: <INVALID>[IvarId(0)]
 :00002 %4 = 32768: i32
 :00003 %5 = 16384: i32
 :00004 %7 = @prg_banks: <INVALID>[IvarId(0)]
 :00005 %8 = %2 & 7: i16                     [<INVALID>][<INVALID>]
 :00006 %7 = %7.[%8]                         [<INVALID>][<INVALID>]
 :00007 %6 = %7
 :00008 _ = %3.[]=(%4;3)                     [<INVALID>]
 :00010 ret %7
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(324) regs:2 ISeq(RubyFuncInfo { id:324 name:/main method:(FuncId(324), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(325)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(325) regs:3 ISeq(RubyFuncInfo { id:325 name:Optcarrot method:(FuncId(325), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[ROM]                      [<INVALID>]
 :00002 %1 = class_def CNROM < %2: FuncId(326)
 :00003 ret %1
------------------------------------
------------------------------------
<CNROM> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(326) regs:4 ISeq(RubyFuncInfo { id:326 name:CNROM method:(FuncId(326), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = const[MAPPER_DB]                [<INVALID>]
 :00002 %2 = 3: i32
 :00003 %3 = %0
 :00004 %1:.[%2:] = %3
 :00005 method_def reset: FuncId(327)
 :00006 method_def poke_8000: FuncId(328)
 :00007 %1 = :poke_8000
 :00008 ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:6
meta:on_stack:true kind:Ruby mode:method FuncId(327) regs:5 ISeq(RubyFuncInfo { id:327 name:reset method:(FuncId(327), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @cpu: <INVALID>[IvarId(0)]
 :00002 %2 = literal[32768..65535]
 :00003 %3 = @prg_ref: <INVALID>[IvarId(0)]
 :00004 %4 = @chr_ram: <INVALID>[IvarId(0)]
 :00005 condnotbr %4 =>:00008
+:00006 %4 = nil
 :00007 br =>:00011
+:00008 %4 = :poke_8000
 :00009 %4 = %0.method(%4;1)                 [<INVALID>]
+:00011 %1 = %1.add_mappings(%2;3)           [<INVALID>]
 :00013 ret %1
------------------------------------
------------------------------------
<poke_8000> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:10
meta:on_stack:true kind:Ruby mode:method FuncId(328) regs:6 ISeq(RubyFuncInfo { id:328 name:poke_8000 method:(FuncId(328), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @chr_ref: <INVALID>[IvarId(0)]
 :00002 %4 = @chr_banks: <INVALID>[IvarId(0)]
 :00003 %5 = %2 & 3: i16                     [<INVALID>][<INVALID>]
 :00004 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00005 %3 = %3.replace(%4;1)                [<INVALID>]
 :00007 ret %3
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(329) regs:2 ISeq(RubyFuncInfo { id:329 name:/main method:(FuncId(329), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(330)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(330) regs:3 ISeq(RubyFuncInfo { id:330 name:Optcarrot method:(FuncId(330), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[ROM]                      [<INVALID>]
 :00002 %1 = class_def MMC3 < %2: FuncId(331)
 :00003 ret %1
------------------------------------
------------------------------------
<MMC3> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(331) regs:4 ISeq(RubyFuncInfo { id:331 name:MMC3 method:(FuncId(331), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = const[MAPPER_DB]                [<INVALID>]
 :00002 %2 = 4: i32
 :00003 %3 = %0
 :00004 %1:.[%2:] = %3
 :00005 method_def init: FuncId(332)
 :00006 method_def reset: FuncId(333)
 :00007 method_def update_prg: FuncId(334)
 :00008 method_def update_chr: FuncId(335)
 :00009 method_def poke_8000: FuncId(336)
 :00010 method_def poke_8001: FuncId(337)
 :00011 method_def poke_a000: FuncId(338)
 :00012 method_def poke_a001: FuncId(339)
 :00013 method_def poke_c000: FuncId(340)
 :00014 method_def poke_c001: FuncId(341)
 :00015 method_def poke_e000: FuncId(342)
 :00016 method_def poke_e001: FuncId(343)
 :00017 method_def vsync: FuncId(344)
 :00018 method_def a12_signaled: FuncId(345)
 :00019 %1 = :a12_signaled
 :00020 ret %1
------------------------------------
------------------------------------
<init> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:6
meta:on_stack:true kind:Ruby mode:method FuncId(332) regs:4 ISeq(RubyFuncInfo { id:332 name:init method:(FuncId(332), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:0 opt:1 rest:false block:None stack_offset:5
 :00001 check_local(%1) =>:00003
+:00002 %1 = :B
+:00003 %2 = :A
 :00004 %2 = %1 != %2                        [<INVALID>][<INVALID>]
 :00005 @persistant: <INVALID>[IvarId(0)] = %2
 :00006 %2 = @prg_banks: <INVALID>[IvarId(0)]
 :00007 %2 = %2.flatten()                    [<INVALID>]
 :00009 %3 = 8192: i32
 :00010 %2 = %2.each_slice(%3;1)             [<INVALID>]
 :00012 %2 = %2.to_a()                       [<INVALID>]
 :00014 @prg_banks: <INVALID>[IvarId(0)] = %2
 :00015 %2 = literal[false]
 :00016 @prg_bank_swap: <INVALID>[IvarId(0)] = %2
 :00017 %2 = @chr_banks: <INVALID>[IvarId(0)]
 :00018 %2 = %2.flatten()                    [<INVALID>]
 :00020 %3 = 1024: i32
 :00021 %2 = %2.each_slice(%3;1)             [<INVALID>]
 :00023 %2 = %2.to_a()                       [<INVALID>]
 :00025 @chr_banks: <INVALID>[IvarId(0)] = %2
 :00026 %2 = literal[[nil]]
 :00027 %2 = %2 * 8: i16                     [<INVALID>][<INVALID>]
 :00028 @chr_bank_mapping: <INVALID>[IvarId(0)] = %2
 :00029 %2 = literal[false]
 :00030 @chr_bank_swap: <INVALID>[IvarId(0)] = %2
 :00031 ret %2
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:17
meta:on_stack:true kind:Ruby mode:method FuncId(333) regs:6 ISeq(RubyFuncInfo { id:333 name:reset method:(FuncId(333), 0) args: 0 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[true]
 :00002 @wrk_readable: <INVALID>[IvarId(0)] = %2
 :00003 %2 = literal[false]
 :00004 @wrk_writable: <INVALID>[IvarId(0)] = %2
 :00005 %2 = @mirroring: <INVALID>[IvarId(0)]
 :00006 %3 = :FourScreen
 :00007 _%2 = %2 != %3                       [<INVALID>][<INVALID>]
 :00008 condnotbr _%2 =>:00013
+:00009 %2 = :poke_a000
 :00010 %2 = %0.method(%2;1)                 [<INVALID>]
 :00012 br =>:00014
+:00013 %2 = nil
+:00014 %1 = %2
 :00015 %2 = @cpu: <INVALID>[IvarId(0)]
 :00016 %3 = literal[24576..32767]
 :00017 %4 = :peek_6000
 :00018 %4 = %0.method(%4;1)                 [<INVALID>]
 :00020 %5 = :poke_6000
 :00021 %5 = %0.method(%5;1)                 [<INVALID>]
 :00023 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00025 %2 = @cpu: <INVALID>[IvarId(0)]
 :00026 %3 = 32768: i32
 :00027 %4 = 40959: i32
 :00028 %5 = 2: i32
 :00029 %3 = %3.step(%4;2)                   [<INVALID>]
 :00031 %4 = @prg_ref: <INVALID>[IvarId(0)]
 :00032 %5 = :poke_8000
 :00033 %5 = %0.method(%5;1)                 [<INVALID>]
 :00035 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00037 %2 = @cpu: <INVALID>[IvarId(0)]
 :00038 %3 = 32769: i32
 :00039 %4 = 40959: i32
 :00040 %5 = 2: i32
 :00041 %3 = %3.step(%4;2)                   [<INVALID>]
 :00043 %4 = @prg_ref: <INVALID>[IvarId(0)]
 :00044 %5 = :poke_8001
 :00045 %5 = %0.method(%5;1)                 [<INVALID>]
 :00047 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00049 %2 = @cpu: <INVALID>[IvarId(0)]
 :00050 %3 = 40960: i32
 :00051 %4 = 49151: i32
 :00052 %5 = 2: i32
 :00053 %3 = %3.step(%4;2)                   [<INVALID>]
 :00055 %4 = @prg_ref: <INVALID>[IvarId(0)]
 :00056 %5 = %1
 :00057 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00059 %2 = @cpu: <INVALID>[IvarId(0)]
 :00060 %3 = 40961: i32
 :00061 %4 = 49151: i32
 :00062 %5 = 2: i32
 :00063 %3 = %3.step(%4;2)                   [<INVALID>]
 :00065 %4 = @prg_ref: <INVALID>[IvarId(0)]
 :00066 %5 = :poke_a001
 :00067 %5 = %0.method(%5;1)                 [<INVALID>]
 :00069 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00071 %2 = @cpu: <INVALID>[IvarId(0)]
 :00072 %3 = 49152: i32
 :00073 %4 = 57343: i32
 :00074 %5 = 2: i32
 :00075 %3 = %3.step(%4;2)                   [<INVALID>]
 :00077 %4 = @prg_ref: <INVALID>[IvarId(0)]
 :00078 %5 = :poke_c000
 :00079 %5 = %0.method(%5;1)                 [<INVALID>]
 :00081 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00083 %2 = @cpu: <INVALID>[IvarId(0)]
 :00084 %3 = 49153: i32
 :00085 %4 = 57343: i32
 :00086 %5 = 2: i32
 :00087 %3 = %3.step(%4;2)                   [<INVALID>]
 :00089 %4 = @prg_ref: <INVALID>[IvarId(0)]
 :00090 %5 = :poke_c001
 :00091 %5 = %0.method(%5;1)                 [<INVALID>]
 :00093 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00095 %2 = @cpu: <INVALID>[IvarId(0)]
 :00096 %3 = 57344: i32
 :00097 %4 = 65535: i32
 :00098 %5 = 2: i32
 :00099 %3 = %3.step(%4;2)                   [<INVALID>]
 :00101 %4 = @prg_ref: <INVALID>[IvarId(0)]
 :00102 %5 = :poke_e000
 :00103 %5 = %0.method(%5;1)                 [<INVALID>]
 :00105 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00107 %2 = @cpu: <INVALID>[IvarId(0)]
 :00108 %3 = 57345: i32
 :00109 %4 = 65535: i32
 :00110 %5 = 2: i32
 :00111 %3 = %3.step(%4;2)                   [<INVALID>]
 :00113 %4 = @prg_ref: <INVALID>[IvarId(0)]
 :00114 %5 = :poke_e001
 :00115 %5 = %0.method(%5;1)                 [<INVALID>]
 :00117 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00119 %2 = 32768: i32
 :00120 %3 = 0: i32
 :00121 _ = %0.update_prg(%2;2)              [<INVALID>]
 :00123 %2 = 40960: i32
 :00124 %3 = 1: i32
 :00125 _ = %0.update_prg(%2;2)              [<INVALID>]
 :00127 %2 = 49152: i32
 :00128 %3 = -2: i32
 :00129 _ = %0.update_prg(%2;2)              [<INVALID>]
 :00131 %2 = 57344: i32
 :00132 %3 = -1: i32
 :00133 _ = %0.update_prg(%2;2)              [<INVALID>]
 :00135 %2 = 8: i32
 :00136 %3 = literal[22675457]
 :00137 _ = %2.times( &%3)                   [<INVALID>]
 :00139 %2 = 0: i32
 :00140 @clock: <INVALID>[IvarId(0)] = %2
 :00141 %2 = const[PPU::RP2C02_CC]           [<INVALID>]
 :00142 %2 = %2 * 16: i16                    [<INVALID>][<INVALID>]
 :00143 @hold: <INVALID>[IvarId(0)] = %2
 :00144 %2 = @ppu: <INVALID>[IvarId(0)]
 :00145 %3 = %0
 :00146 _ = %2.monitor_a12_rising_edge(%3;1) [<INVALID>]
 :00148 %2 = @cpu: <INVALID>[IvarId(0)]
 :00149 %3 = literal[true]
 :00150 _ = %2.ppu_sync=(%3;1)               [<INVALID>]
 :00152 %2 = 0: i32
 :00153 @count: <INVALID>[IvarId(0)] = %2
 :00154 %2 = 0: i32
 :00155 @latch: <INVALID>[IvarId(0)] = %2
 :00156 %2 = literal[false]
 :00157 @reload: <INVALID>[IvarId(0)] = %2
 :00158 %2 = literal[false]
 :00159 @enabled: <INVALID>[IvarId(0)] = %2
 :00160 ret %2
------------------------------------
------------------------------------
<update_prg> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:54
meta:on_stack:true kind:Ruby mode:method FuncId(334) regs:8 ISeq(RubyFuncInfo { id:334 name:update_prg method:(FuncId(334), 0) args: 2 non_temp: 2 temp: 5})
[]
+:00000 init_method reg:7 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 %3 = @prg_banks: <INVALID>[IvarId(0)]
 :00002 %3 = %3.size()                       [<INVALID>]
 :00004 %2 = %2 % %3                         [<INVALID>][<INVALID>]
 :00005 %3 = @prg_bank_swap: <INVALID>[IvarId(0)]
 :00006 condnotbr %3 =>:00012
+:00007 %3 = 13: i32
 :00008 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
 :00009 _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00010 condnotbr _%3 =>:00012
+:00011 %1 = %1 ^ 16384: i16                 [<INVALID>][<INVALID>]
+:00012 %3 = @prg_ref: <INVALID>[IvarId(0)]
 :00013 %4 = %1
 :00014 %5 = 8192: i32
 :00015 %7 = @prg_banks: <INVALID>[IvarId(0)]
 :00016 %7 = %7.[%2]                         [<INVALID>][<INVALID>]
 :00017 %6 = %7
 :00018 _ = %3.[]=(%4;3)                     [<INVALID>]
 :00020 ret %7
------------------------------------
------------------------------------
<update_chr> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:60
meta:on_stack:true kind:Ruby mode:method FuncId(335) regs:9 ISeq(RubyFuncInfo { id:335 name:update_chr method:(FuncId(335), 0) args: 2 non_temp: 3 temp: 5})
[]
+:00000 init_method reg:8 arg:2 req:2 opt:0 rest:false block:None stack_offset:8
 :00001 %4 = @chr_ram: <INVALID>[IvarId(0)]
 :00002 condnotbr %4 =>:00005
+:00003 %4 = nil
 :00004 ret %4
+:00005 %3 = %1 / 1024: i16                  [<INVALID>][<INVALID>]
 :00006 %4 = @chr_banks: <INVALID>[IvarId(0)]
 :00007 %4 = %4.size()                       [<INVALID>]
 :00009 %2 = %2 % %4                         [<INVALID>][<INVALID>]
 :00010 %4 = @chr_bank_mapping: <INVALID>[IvarId(0)]
 :00011 %4 = %4.[%3]                         [<INVALID>][<INVALID>]
 :00012 _%4 = %4 == %2                       [<INVALID>][<INVALID>]
 :00013 condnotbr _%4 =>:00016
+:00014 %4 = nil
 :00015 ret %4
+:00016 %4 = @chr_bank_swap: <INVALID>[IvarId(0)]
 :00017 condnotbr %4 =>:00019
+:00018 %1 = %1 ^ 4096: i16                  [<INVALID>][<INVALID>]
+:00019 %4 = @ppu: <INVALID>[IvarId(0)]
 :00020 %5 = 0: i32
 :00021 _ = %4.update(%5;1)                  [<INVALID>]
 :00023 %4 = @chr_ref: <INVALID>[IvarId(0)]
 :00024 %5 = %1
 :00025 %6 = 1024: i32
 :00026 %8 = @chr_banks: <INVALID>[IvarId(0)]
 :00027 %8 = %8.[%2]                         [<INVALID>][<INVALID>]
 :00028 %7 = %8
 :00029 _ = %4.[]=(%5;3)                     [<INVALID>]
 :00031 %4 = @chr_bank_mapping: <INVALID>[IvarId(0)]
 :00032 %4:.[%3:] = %2
 :00033 ret %2
------------------------------------
------------------------------------
<poke_8000> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:71
meta:on_stack:true kind:Ruby mode:method FuncId(336) regs:17 ISeq(RubyFuncInfo { id:336 name:poke_8000 method:(FuncId(336), 0) args: 2 non_temp: 4 temp: 12})
[]
+:00000 init_method reg:16 arg:2 req:2 opt:0 rest:false block:None stack_offset:12
 :00001 %5 = %2 & 7: i16                     [<INVALID>][<INVALID>]
 :00002 @reg_select: <INVALID>[IvarId(0)] = %5
 :00003 %5 = 6: i32
 :00004 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00005 %3 = %5 == 1: i16                    [<INVALID>][<INVALID>]
 :00006 %5 = 7: i32
 :00007 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00008 %4 = %5 == 1: i16                    [<INVALID>][<INVALID>]
 :00009 %5 = @prg_bank_swap: <INVALID>[IvarId(0)]
 :00010 _%5 = %3 != %5                       [<INVALID>][<INVALID>]
 :00011 condnotbr _%5 =>:00035
+:00012 @prg_bank_swap: <INVALID>[IvarId(0)] = %3
 :00013 %5 = @prg_ref: <INVALID>[IvarId(0)]
 :00014 %6 = 32768: i32
 :00015 %7 = 8192: i32
 :00016 %9 = @prg_ref: <INVALID>[IvarId(0)]
 :00017 %10 = 49152: i32
 :00018 %11 = 8192: i32
 :00019 %13 = @prg_ref: <INVALID>[IvarId(0)]
 :00020 %14 = 49152: i32
 :00021 %15 = 8192: i32
 :00022 %13 = %13.[](%14;2)                  [<INVALID>]
 :00024 %14 = @prg_ref: <INVALID>[IvarId(0)]
 :00025 %15 = 32768: i32
 :00026 %16 = 8192: i32
 :00027 %14 = %14.[](%15;2)                  [<INVALID>]
 :00029 %8 = %13
 :00030 _ = %5.[]=(%6;3)                     [<INVALID>]
 :00032 %12 = %14
 :00033 _ = %9.[]=(%10;3)                    [<INVALID>]
+:00035 %5 = @chr_bank_swap: <INVALID>[IvarId(0)]
 :00036 _%5 = %4 != %5                       [<INVALID>][<INVALID>]
 :00037 condnotbr _%5 =>:00056
+:00038 @chr_bank_swap: <INVALID>[IvarId(0)] = %4
 :00039 %5 = @chr_ram: <INVALID>[IvarId(0)]
 :00040 condnotbr %5 =>:00043
+:00041 %5 = nil
 :00042 ret %5
+:00043 %5 = @ppu: <INVALID>[IvarId(0)]
 :00044 %6 = 0: i32
 :00045 _ = %5.update(%6;1)                  [<INVALID>]
 :00047 %5 = @chr_ref: <INVALID>[IvarId(0)]
 :00048 %6 = 4096: i32
 :00049 _ = %5.rotate!(%6;1)                 [<INVALID>]
 :00051 %5 = @chr_bank_mapping: <INVALID>[IvarId(0)]
 :00052 %6 = 4: i32
 :00053 %5 = %5.rotate!(%6;1)                [<INVALID>]
 :00055 ret %5
+:00056 %5 = nil
 :00057 ret %5
------------------------------------
------------------------------------
<poke_8001> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:91
meta:on_stack:true kind:Ruby mode:method FuncId(337) regs:5 ISeq(RubyFuncInfo { id:337 name:poke_8001 method:(FuncId(337), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @reg_select: <INVALID>[IvarId(0)]
 :00002 _%3 = %3 < 6: i16                    [<INVALID>][<INVALID>]
 :00003 condnotbr _%3 =>:00027
+:00004 %3 = @reg_select: <INVALID>[IvarId(0)]
 :00005 _%3 = %3 < 2: i16                    [<INVALID>][<INVALID>]
 :00006 condnotbr _%3 =>:00019
+:00007 %3 = @reg_select: <INVALID>[IvarId(0)]
 :00008 %3 = %3 * 2048: i16                  [<INVALID>][<INVALID>]
 :00009 %4 = %2 & 254: i16                   [<INVALID>][<INVALID>]
 :00010 _ = %0.update_chr(%3;2)              [<INVALID>]
 :00012 %3 = @reg_select: <INVALID>[IvarId(0)]
 :00013 %3 = %3 * 2048: i16                  [<INVALID>][<INVALID>]
 :00014 %3 = %3 + 1024: i16                  [<INVALID>][<INVALID>]
 :00015 %4 = %2 | 1: i16                     [<INVALID>][<INVALID>]
 :00016 %3 = %0.update_chr(%3;2)             [<INVALID>]
 :00018 ret %3
+:00019 %3 = @reg_select: <INVALID>[IvarId(0)]
 :00020 %3 = %3 - 2: i16                     [<INVALID>][<INVALID>]
 :00021 %3 = %3 * 1024: i16                  [<INVALID>][<INVALID>]
 :00022 %3 = %3 + 4096: i16                  [<INVALID>][<INVALID>]
 :00023 %4 = %2
 :00024 %3 = %0.update_chr(%3;2)             [<INVALID>]
 :00026 ret %3
+:00027 %3 = @reg_select: <INVALID>[IvarId(0)]
 :00028 %3 = %3 - 6: i16                     [<INVALID>][<INVALID>]
 :00029 %3 = %3 * 8192: i16                  [<INVALID>][<INVALID>]
 :00030 %4 = 32768: i32
 :00031 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00032 %4 = %2 & 63: i16                    [<INVALID>][<INVALID>]
 :00033 %3 = %0.update_prg(%3;2)             [<INVALID>]
 :00035 ret %3
------------------------------------
------------------------------------
<poke_a000> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:104
meta:on_stack:true kind:Ruby mode:method FuncId(338) regs:5 ISeq(RubyFuncInfo { id:338 name:poke_a000 method:(FuncId(338), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @ppu: <INVALID>[IvarId(0)]
 :00002 %4 = 0: i32
 :00003 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00004 _%4 = %4 == 1: i16                   [<INVALID>][<INVALID>]
 :00005 condnotbr _%4 =>:00008
+:00006 %4 = :horizontal
 :00007 br =>:00009
+:00008 %4 = :vertical
+:00009 _ = %3.nametables=(%4;1)             [<INVALID>]
 :00011 ret %4
------------------------------------
------------------------------------
<poke_a001> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:108
meta:on_stack:true kind:Ruby mode:method FuncId(339) regs:5 ISeq(RubyFuncInfo { id:339 name:poke_a001 method:(FuncId(339), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = 7: i32
 :00002 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00003 %3 = %3 == 1: i16                    [<INVALID>][<INVALID>]
 :00004 @wrk_readable: <INVALID>[IvarId(0)] = %3
 :00005 %4 = 6: i32
 :00006 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00007 %3 = %4 == 0: i16                    [<INVALID>][<INVALID>]
 :00008 condnotbr %3 =>:00010
+:00009 %3 = @wrk_readable: <INVALID>[IvarId(0)]
+:00010 @wrk_writable: <INVALID>[IvarId(0)] = %3
 :00011 ret %3
------------------------------------
------------------------------------
<poke_c000> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:113
meta:on_stack:true kind:Ruby mode:method FuncId(340) regs:5 ISeq(RubyFuncInfo { id:340 name:poke_c000 method:(FuncId(340), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @ppu: <INVALID>[IvarId(0)]
 :00002 %4 = 0: i32
 :00003 _ = %3.update(%4;1)                  [<INVALID>]
 :00005 @latch: <INVALID>[IvarId(0)] = %2
 :00006 ret %2
------------------------------------
------------------------------------
<poke_c001> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:118
meta:on_stack:true kind:Ruby mode:method FuncId(341) regs:5 ISeq(RubyFuncInfo { id:341 name:poke_c001 method:(FuncId(341), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @ppu: <INVALID>[IvarId(0)]
 :00002 %4 = 0: i32
 :00003 _ = %3.update(%4;1)                  [<INVALID>]
 :00005 %3 = literal[true]
 :00006 @reload: <INVALID>[IvarId(0)] = %3
 :00007 ret %3
------------------------------------
------------------------------------
<poke_e000> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:123
meta:on_stack:true kind:Ruby mode:method FuncId(342) regs:5 ISeq(RubyFuncInfo { id:342 name:poke_e000 method:(FuncId(342), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @ppu: <INVALID>[IvarId(0)]
 :00002 %4 = 0: i32
 :00003 _ = %3.update(%4;1)                  [<INVALID>]
 :00005 %3 = literal[false]
 :00006 @enabled: <INVALID>[IvarId(0)] = %3
 :00007 %3 = @cpu: <INVALID>[IvarId(0)]
 :00008 %4 = const[CPU::IRQ_EXT]             [<INVALID>]
 :00009 %3 = %3.clear_irq(%4;1)              [<INVALID>]
 :00011 ret %3
------------------------------------
------------------------------------
<poke_e001> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:129
meta:on_stack:true kind:Ruby mode:method FuncId(343) regs:5 ISeq(RubyFuncInfo { id:343 name:poke_e001 method:(FuncId(343), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @ppu: <INVALID>[IvarId(0)]
 :00002 %4 = 0: i32
 :00003 _ = %3.update(%4;1)                  [<INVALID>]
 :00005 %3 = literal[true]
 :00006 @enabled: <INVALID>[IvarId(0)] = %3
 :00007 ret %3
------------------------------------
------------------------------------
<vsync> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:134
meta:on_stack:true kind:Ruby mode:method FuncId(344) regs:4 ISeq(RubyFuncInfo { id:344 name:vsync method:(FuncId(344), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clock: <INVALID>[IvarId(0)]
 :00002 %2 = @cpu: <INVALID>[IvarId(0)]
 :00003 %2 = %2.next_frame_clock()           [<INVALID>]
 :00005 _%1 = %1 > %2                        [<INVALID>][<INVALID>]
 :00006 condnotbr _%1 =>:00013
+:00007 %1 = @clock: <INVALID>[IvarId(0)]
 :00008 %2 = @cpu: <INVALID>[IvarId(0)]
 :00009 %2 = %2.next_frame_clock()           [<INVALID>]
 :00011 %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00012 br =>:00014
+:00013 %1 = 0: i32
+:00014 @clock: <INVALID>[IvarId(0)] = %1
 :00015 ret %1
------------------------------------
------------------------------------
<a12_signaled> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:138
meta:on_stack:true kind:Ruby mode:method FuncId(345) regs:7 ISeq(RubyFuncInfo { id:345 name:a12_signaled method:(FuncId(345), 0) args: 1 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = @clock: <INVALID>[IvarId(0)]
 :00002 %5 = @hold: <INVALID>[IvarId(0)]
 :00003 %5 = %1 + %5                         [<INVALID>][<INVALID>]
 :00004 %2 = %4
 :00005 @clock: <INVALID>[IvarId(0)] = %5
 :00006 _%4 = %1 < %2                        [<INVALID>][<INVALID>]
 :00007 condnotbr _%4 =>:00010
+:00008 %4 = nil
 :00009 ret %4
+:00010 %4 = @persistant: <INVALID>[IvarId(0)]
 :00011 condbr %4 =>:00014
+:00012 %5 = @count: <INVALID>[IvarId(0)]
 :00013 %4 = %5 > 0: i16                     [<INVALID>][<INVALID>]
+:00014 %3 = %4
 :00015 %4 = @reload: <INVALID>[IvarId(0)]
 :00016 condnotbr %4 =>:00022
+:00017 %4 = literal[false]
 :00018 @reload: <INVALID>[IvarId(0)] = %4
 :00019 %4 = @latch: <INVALID>[IvarId(0)]
 :00020 @count: <INVALID>[IvarId(0)] = %4
 :00021 br =>:00031
+:00022 %4 = @count: <INVALID>[IvarId(0)]
 :00023 _%4 = %4 == 0: i16                   [<INVALID>][<INVALID>]
 :00024 condnotbr _%4 =>:00028
+:00025 %4 = @latch: <INVALID>[IvarId(0)]
 :00026 @count: <INVALID>[IvarId(0)] = %4
 :00027 br =>:00031
+:00028 %4 = @count: <INVALID>[IvarId(0)]
 :00029 %4 = %4 - 1: i16                     [<INVALID>][<INVALID>]
 :00030 @count: <INVALID>[IvarId(0)] = %4
+:00031 condnotbr %3 =>:00043
+:00032 %4 = @count: <INVALID>[IvarId(0)]
 :00033 _%4 = %4 == 0: i16                   [<INVALID>][<INVALID>]
 :00034 condnotbr _%4 =>:00043
+:00035 %4 = @enabled: <INVALID>[IvarId(0)]
 :00036 condnotbr %4 =>:00043
+:00037 %4 = @cpu: <INVALID>[IvarId(0)]
 :00038 %5 = const[CPU::IRQ_EXT]             [<INVALID>]
 :00039 %6 = %1
 :00040 %4 = %4.do_irq(%5;2)                 [<INVALID>]
 :00042 ret %4
+:00043 %4 = nil
 :00044 ret %4
------------------------------------
------------------------------------
<block in reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:36
meta:on_stack:true kind:Ruby mode:method FuncId(346) regs:4 ISeq(RubyFuncInfo { id:346 name:<unnamed> method:(FuncId(333), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1 * 1024: i16                  [<INVALID>][<INVALID>]
 :00002 %3 = %1
 :00003 %2 = %0.update_chr(%2;2)             [<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(347) regs:2 ISeq(RubyFuncInfo { id:347 name:/main method:(FuncId(347), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(348)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(348) regs:2 ISeq(RubyFuncInfo { id:348 name:Optcarrot method:(FuncId(348), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 _ = class_def Pads < _: FuncId(349)
 :00002 %1 = class_def Pad < _: FuncId(350)
 :00003 ret %1
------------------------------------
------------------------------------
<Pads> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(349) regs:2 ISeq(RubyFuncInfo { id:349 name:Pads method:(FuncId(349), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 method_def inspect: FuncId(351)
 :00002 method_def initialize: FuncId(352)
 :00003 method_def reset: FuncId(353)
 :00004 method_def peek_401x: FuncId(354)
 :00005 method_def poke_4016: FuncId(355)
 :00006 method_def keydown: FuncId(356)
 :00007 method_def keyup: FuncId(357)
 :00008 %1 = :keyup
 :00009 ret %1
------------------------------------
------------------------------------
<Pad> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:49
meta:on_stack:true kind:Ruby mode:class_def FuncId(350) regs:2 ISeq(RubyFuncInfo { id:350 name:Pad method:(FuncId(350), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = 0: i32
 :00002 const[A] = %1
 :00003 %1 = 1: i32
 :00004 const[B] = %1
 :00005 %1 = 2: i32
 :00006 const[SELECT] = %1
 :00007 %1 = 3: i32
 :00008 const[START] = %1
 :00009 %1 = 4: i32
 :00010 const[UP] = %1
 :00011 %1 = 5: i32
 :00012 const[DOWN] = %1
 :00013 %1 = 6: i32
 :00014 const[LEFT] = %1
 :00015 %1 = 7: i32
 :00016 const[RIGHT] = %1
 :00017 method_def initialize: FuncId(358)
 :00018 method_def reset: FuncId(359)
 :00019 method_def poke: FuncId(360)
 :00020 method_def peek: FuncId(361)
 :00021 method_def poll_state: FuncId(362)
 :00022 %1 = :buttons
 :00023 %1 = %0.attr_accessor(%1;1)          [<INVALID>]
 :00025 ret %1
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:4
meta:on_stack:true kind:Ruby mode:method FuncId(351) regs:4 ISeq(RubyFuncInfo { id:351 name:inspect method:(FuncId(351), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["#<"]
 :00002 %2 = %0.class()                      [<INVALID>]
 :00004 %3 = literal[">"]
 :00005 %1 = concat(%1; 3)
 :00006 ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:11
meta:on_stack:true kind:Ruby mode:method FuncId(352) regs:8 ISeq(RubyFuncInfo { id:352 name:initialize method:(FuncId(352), 0) args: 3 non_temp: 3 temp: 4})
[]
+:00000 init_method reg:7 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 @conf: <INVALID>[IvarId(0)] = %1
 :00002 @cpu: <INVALID>[IvarId(0)] = %2
 :00003 @apu: <INVALID>[IvarId(0)] = %3
 :00004 %5 = const[Pad]                      [<INVALID>]
 :00005 %5 = %5.new()                        [<INVALID>]
 :00007 %6 = const[Pad]                      [<INVALID>]
 :00008 %6 = %6.new()                        [<INVALID>]
 :00010 %4 = array[%5; 2]
 :00011 @pads: <INVALID>[IvarId(0)] = %4
 :00012 ret %4
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:18
meta:on_stack:true kind:Ruby mode:method FuncId(353) regs:6 ISeq(RubyFuncInfo { id:353 name:reset method:(FuncId(353), 0) args: 0 non_temp: 0 temp: 5})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @cpu: <INVALID>[IvarId(0)]
 :00002 %2 = 16406: i32
 :00003 %3 = :peek_401x
 :00004 %3 = %0.method(%3;1)                 [<INVALID>]
 :00006 %4 = :poke_4016
 :00007 %4 = %0.method(%4;1)                 [<INVALID>]
 :00009 _ = %1.add_mappings(%2;3)            [<INVALID>]
 :00011 %1 = @cpu: <INVALID>[IvarId(0)]
 :00012 %2 = 16407: i32
 :00013 %3 = :peek_401x
 :00014 %3 = %0.method(%3;1)                 [<INVALID>]
 :00016 %4 = @apu: <INVALID>[IvarId(0)]
 :00017 %5 = :poke_4017
 :00018 %4 = %4.method(%5;1)                 [<INVALID>]
 :00020 _ = %1.add_mappings(%2;3)            [<INVALID>]
 :00022 %1 = @pads: <INVALID>[IvarId(0)]
 :00023 %2 = 0: i32
 :00024 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00025 _ = %1.reset()                       [<INVALID>]
 :00027 %1 = @pads: <INVALID>[IvarId(0)]
 :00028 %2 = 1: i32
 :00029 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00030 %1 = %1.reset()                      [<INVALID>]
 :00032 ret %1
------------------------------------
------------------------------------
<peek_401x> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:25
meta:on_stack:true kind:Ruby mode:method FuncId(354) regs:4 ISeq(RubyFuncInfo { id:354 name:peek_401x method:(FuncId(354), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @cpu: <INVALID>[IvarId(0)]
 :00002 _ = %2.update()                      [<INVALID>]
 :00004 %2 = @pads: <INVALID>[IvarId(0)]
 :00005 %3 = %1 - 16406: i16                 [<INVALID>][<INVALID>]
 :00006 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00007 %2 = %2.peek()                       [<INVALID>]
 :00009 %2 = %2 | 64: i16                    [<INVALID>][<INVALID>]
 :00010 ret %2
------------------------------------
------------------------------------
<poke_4016> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:30
meta:on_stack:true kind:Ruby mode:method FuncId(355) regs:5 ISeq(RubyFuncInfo { id:355 name:poke_4016 method:(FuncId(355), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @pads: <INVALID>[IvarId(0)]
 :00002 %4 = 0: i32
 :00003 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00004 _ = %3.poke(%2;1)                    [<INVALID>]
 :00006 %3 = @pads: <INVALID>[IvarId(0)]
 :00007 %4 = 1: i32
 :00008 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00009 %3 = %3.poke(%2;1)                   [<INVALID>]
 :00011 ret %3
------------------------------------
------------------------------------
<keydown> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:38
meta:on_stack:true kind:Ruby mode:method FuncId(356) regs:6 ISeq(RubyFuncInfo { id:356 name:keydown method:(FuncId(356), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @pads: <INVALID>[IvarId(0)]
 :00002 %3 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00003 %4 = @pads: <INVALID>[IvarId(0)]
 :00004 %4 = %4.[%1]                         [<INVALID>][<INVALID>]
 :00005 %4 = %4.buttons()                    [<INVALID>]
 :00007 %5 = 1: i16 << %2                    [<INVALID>][<INVALID>]
 :00008 %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00009 _ = %3.buttons=(%4;1)                [<INVALID>]
 :00011 ret %4
------------------------------------
------------------------------------
<keyup> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:42
meta:on_stack:true kind:Ruby mode:method FuncId(357) regs:6 ISeq(RubyFuncInfo { id:357 name:keyup method:(FuncId(357), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @pads: <INVALID>[IvarId(0)]
 :00002 %3 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00003 %4 = @pads: <INVALID>[IvarId(0)]
 :00004 %4 = %4.[%1]                         [<INVALID>][<INVALID>]
 :00005 %4 = %4.buttons()                    [<INVALID>]
 :00007 %5 = 1: i16 << %2                    [<INVALID>][<INVALID>]
 :00008 %5 = ~%5                             [<INVALID>]
 :00009 %4 = %4 & %5                         [<INVALID>][<INVALID>]
 :00010 _ = %3.buttons=(%4;1)                [<INVALID>]
 :00012 ret %4
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:59
meta:on_stack:true kind:Ruby mode:method FuncId(358) regs:2 ISeq(RubyFuncInfo { id:358 name:initialize method:(FuncId(358), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = %0.reset()                      [<INVALID>]
 :00003 ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:63
meta:on_stack:true kind:Ruby mode:method FuncId(359) regs:2 ISeq(RubyFuncInfo { id:359 name:reset method:(FuncId(359), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[false]
 :00002 @strobe: <INVALID>[IvarId(0)] = %1
 :00003 %1 = 0: i32
 :00004 @stream: <INVALID>[IvarId(0)] = %1
 :00005 @buttons: <INVALID>[IvarId(0)] = %1
 :00006 ret %1
------------------------------------
------------------------------------
<poke> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:68
meta:on_stack:true kind:Ruby mode:method FuncId(360) regs:4 ISeq(RubyFuncInfo { id:360 name:poke method:(FuncId(360), 0) args: 1 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @strobe: <INVALID>[IvarId(0)]
 :00002 %3 = 0: i32
 :00003 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
 :00004 %3 = %3 == 1: i16                    [<INVALID>][<INVALID>]
 :00005 @strobe: <INVALID>[IvarId(0)] = %3
 :00006 condnotbr %2 =>:00016
+:00007 %3 = @strobe: <INVALID>[IvarId(0)]
 :00008 %3 = !%3                             [<INVALID>]
 :00009 condnotbr %3 =>:00016
+:00010 %3 = %0.poll_state()                 [<INVALID>]
 :00012 %3 = %3 << 1: i16                    [<INVALID>][<INVALID>]
 :00013 %3 = %3 ^ -512: i16                  [<INVALID>][<INVALID>]
 :00014 @stream: <INVALID>[IvarId(0)] = %3
 :00015 ret %3
+:00016 %3 = nil
 :00017 ret %3
------------------------------------
------------------------------------
<peek> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:74
meta:on_stack:true kind:Ruby mode:method FuncId(361) regs:3 ISeq(RubyFuncInfo { id:361 name:peek method:(FuncId(361), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @strobe: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00007
+:00003 %1 = %0.poll_state()                 [<INVALID>]
 :00005 %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00006 ret %1
+:00007 %1 = @stream: <INVALID>[IvarId(0)]
 :00008 %1 = %1 >> 1: i16                    [<INVALID>][<INVALID>]
 :00009 @stream: <INVALID>[IvarId(0)] = %1
 :00010 %1 = @stream: <INVALID>[IvarId(0)]
 :00011 %2 = 0: i32
 :00012 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00013 ret %1
------------------------------------
------------------------------------
<poll_state> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:80
meta:on_stack:true kind:Ruby mode:method FuncId(362) regs:3 ISeq(RubyFuncInfo { id:362 name:poll_state method:(FuncId(362), 0) args: 0 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @buttons: <INVALID>[IvarId(0)]
 :00002 %2 = %1 & 48: i16                    [<INVALID>][<INVALID>]
 :00003 _%2 = %2 == 48: i16                  [<INVALID>][<INVALID>]
 :00004 condnotbr _%2 =>:00006
+:00005 %1 = %1 & 207: i16                   [<INVALID>][<INVALID>]
+:00006 %2 = %1 & 192: i16                   [<INVALID>][<INVALID>]
 :00007 _%2 = %2 == 192: i16                 [<INVALID>][<INVALID>]
 :00008 condnotbr _%2 =>:00010
+:00009 %1 = %1 & 63: i16                    [<INVALID>][<INVALID>]
+:00010 ret %1
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(365) regs:2 ISeq(RubyFuncInfo { id:365 name:/main method:(FuncId(365), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal["opt"]
 :00002 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00004 %1 = module_def Optcarrot: FuncId(366)
 :00005 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(366) regs:2 ISeq(RubyFuncInfo { id:366 name:Optcarrot method:(FuncId(366), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = class_def CPU < _: FuncId(367)
 :00002 ret %1
------------------------------------
------------------------------------
<CPU> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:5
meta:on_stack:true kind:Ruby mode:class_def FuncId(367) regs:10 ISeq(RubyFuncInfo { id:367 name:CPU method:(FuncId(367), 0) args: 0 non_temp: 0 temp: 9})
[]
+:00000 init_method reg:9 arg:0 req:0 opt:0 rest:false block:None stack_offset:8
 :00001 %1 = 65530: i32
 :00002 const[NMI_VECTOR] = %1
 :00003 %1 = 65532: i32
 :00004 const[RESET_VECTOR] = %1
 :00005 %1 = 65534: i32
 :00006 const[IRQ_VECTOR] = %1
 :00007 %1 = 1: i32
 :00008 const[IRQ_EXT] = %1
 :00009 %1 = 64: i32
 :00010 const[IRQ_FRAME] = %1
 :00011 %1 = 128: i32
 :00012 const[IRQ_DMC] = %1
 :00013 %1 = literal[1..8]
 :00014 %2 = literal[24117249]
 :00015 %1 = %1.map( &%2)                    [<INVALID>]
 :00017 %2; 8 = expand(%1)
 :00018 const[CLK_1] = %2
 :00019 const[CLK_2] = %3
 :00020 const[CLK_3] = %4
 :00021 const[CLK_4] = %5
 :00022 const[CLK_5] = %6
 :00023 const[CLK_6] = %7
 :00024 const[CLK_7] = %8
 :00025 const[CLK_8] = %9
 :00026 method_def inspect: FuncId(369)
 :00027 method_def initialize: FuncId(370)
 :00028 method_def reset: FuncId(371)
 :00029 method_def peek_ram: FuncId(372)
 :00030 method_def poke_ram: FuncId(373)
 :00031 method_def peek_nop: FuncId(374)
 :00032 method_def peek_jam_1: FuncId(375)
 :00033 method_def peek_jam_2: FuncId(376)
 :00034 method_def add_mappings: FuncId(377)
 :00035 %1 = %0
 :00036 singleton_method_def %1.poke_nop: FuncId(378)
 :00037 method_def fetch: FuncId(379)
 :00038 method_def store: FuncId(380)
 :00039 method_def peek16: FuncId(381)
 :00040 %1 = :ram
 :00041 _ = %0.attr_reader(%1;1)             [<INVALID>]
 :00043 %1 = :apu
 :00044 %2 = :ppu
 :00045 %3 = :ppu_sync
 :00046 _ = %0.attr_writer(%1;3)             [<INVALID>]
 :00048 method_def current_clock: FuncId(382)
 :00049 method_def next_frame_clock: FuncId(383)
 :00050 method_def next_frame_clock=: FuncId(384)
 :00051 method_def steal_clocks: FuncId(385)
 :00052 method_def odd_clock?: FuncId(386)
 :00053 method_def update: FuncId(387)
 :00054 method_def dmc_dma: FuncId(388)
 :00055 method_def sprite_dma: FuncId(389)
 :00056 method_def boot: FuncId(390)
 :00057 method_def vsync: FuncId(391)
 :00058 method_def clear_irq: FuncId(392)
 :00059 method_def next_interrupt_clock: FuncId(393)
 :00060 method_def do_irq: FuncId(394)
 :00061 method_def do_nmi: FuncId(395)
 :00062 method_def do_isr: FuncId(396)
 :00063 method_def fetch_irq_isr_vector: FuncId(397)
 :00064 method_def flags_pack: FuncId(398)
 :00065 method_def flags_unpack: FuncId(399)
 :00066 method_def branch: FuncId(400)
 :00067 method_def store_mem: FuncId(401)
 :00068 method_def store_zpg: FuncId(402)
 :00069 method_def push8: FuncId(403)
 :00070 method_def push16: FuncId(404)
 :00071 method_def pull8: FuncId(405)
 :00072 method_def pull16: FuncId(406)
 :00073 method_def imm: FuncId(407)
 :00074 method_def zpg: FuncId(408)
 :00075 method_def zpg_reg: FuncId(409)
 :00076 method_def zpg_x: FuncId(410)
 :00077 method_def zpg_y: FuncId(411)
 :00078 method_def abs: FuncId(412)
 :00079 method_def abs_reg: FuncId(413)
 :00080 method_def abs_x: FuncId(414)
 :00081 method_def abs_y: FuncId(415)
 :00082 method_def ind_x: FuncId(416)
 :00083 method_def ind_y: FuncId(417)
 :00084 method_def read_write: FuncId(418)
 :00085 method_def _lda: FuncId(419)
 :00086 method_def _ldx: FuncId(420)
 :00087 method_def _ldy: FuncId(421)
 :00088 method_def _sta: FuncId(422)
 :00089 method_def _stx: FuncId(423)
 :00090 method_def _sty: FuncId(424)
 :00091 method_def _tax: FuncId(425)
 :00092 method_def _tay: FuncId(426)
 :00093 method_def _txa: FuncId(427)
 :00094 method_def _tya: FuncId(428)
 :00095 method_def _jmp_a: FuncId(429)
 :00096 method_def _jmp_i: FuncId(430)
 :00097 method_def _jsr: FuncId(431)
 :00098 method_def _rts: FuncId(432)
 :00099 method_def _rti: FuncId(433)
 :00100 method_def _bne: FuncId(434)
 :00101 method_def _beq: FuncId(435)
 :00102 method_def _bmi: FuncId(436)
 :00103 method_def _bpl: FuncId(437)
 :00104 method_def _bcs: FuncId(438)
 :00105 method_def _bcc: FuncId(439)
 :00106 method_def _bvs: FuncId(440)
 :00107 method_def _bvc: FuncId(441)
 :00108 method_def _adc: FuncId(442)
 :00109 method_def _sbc: FuncId(443)
 :00110 method_def _and: FuncId(444)
 :00111 method_def _ora: FuncId(445)
 :00112 method_def _eor: FuncId(446)
 :00113 method_def _bit: FuncId(447)
 :00114 method_def _cmp: FuncId(448)
 :00115 method_def _cpx: FuncId(449)
 :00116 method_def _cpy: FuncId(450)
 :00117 method_def _asl: FuncId(451)
 :00118 method_def _lsr: FuncId(452)
 :00119 method_def _rol: FuncId(453)
 :00120 method_def _ror: FuncId(454)
 :00121 method_def _dec: FuncId(455)
 :00122 method_def _inc: FuncId(456)
 :00123 method_def _dex: FuncId(457)
 :00124 method_def _dey: FuncId(458)
 :00125 method_def _inx: FuncId(459)
 :00126 method_def _iny: FuncId(460)
 :00127 method_def _clc: FuncId(461)
 :00128 method_def _sec: FuncId(462)
 :00129 method_def _cld: FuncId(463)
 :00130 method_def _sed: FuncId(464)
 :00131 method_def _clv: FuncId(465)
 :00132 method_def _sei: FuncId(466)
 :00133 method_def _cli: FuncId(467)
 :00134 method_def _pha: FuncId(468)
 :00135 method_def _php: FuncId(469)
 :00136 method_def _pla: FuncId(470)
 :00137 method_def _plp: FuncId(471)
 :00138 method_def _tsx: FuncId(472)
 :00139 method_def _txs: FuncId(473)
 :00140 method_def _anc: FuncId(474)
 :00141 method_def _ane: FuncId(475)
 :00142 method_def _arr: FuncId(476)
 :00143 method_def _asr: FuncId(477)
 :00144 method_def _dcp: FuncId(478)
 :00145 method_def _isb: FuncId(479)
 :00146 method_def _las: FuncId(480)
 :00147 method_def _lax: FuncId(481)
 :00148 method_def _lxa: FuncId(482)
 :00149 method_def _rla: FuncId(483)
 :00150 method_def _rra: FuncId(484)
 :00151 method_def _sax: FuncId(485)
 :00152 method_def _sbx: FuncId(486)
 :00153 method_def _sha: FuncId(487)
 :00154 method_def _shs: FuncId(488)
 :00155 method_def _shx: FuncId(489)
 :00156 method_def _shy: FuncId(490)
 :00157 method_def _slo: FuncId(491)
 :00158 method_def _sre: FuncId(492)
 :00159 method_def _nop: FuncId(493)
 :00160 method_def _brk: FuncId(494)
 :00161 method_def _jam: FuncId(495)
 :00162 method_def r_op: FuncId(496)
 :00163 method_def w_op: FuncId(497)
 :00164 method_def rw_op: FuncId(498)
 :00165 method_def a_op: FuncId(499)
 :00166 method_def no_op: FuncId(500)
 :00167 method_def do_clock: FuncId(501)
 :00168 method_def run: FuncId(502)
 :00169 %2 = :ctl
 :00170 %3 = literal[[:imm, :zpg, :imm, :abs, nil, :zpg_x, nil, :abs_x]]
 :00171 %4 = :rmw
 :00172 %5 = literal[[:imm, :zpg, :imm, :abs, nil, :zpg_y, nil, :abs_y]]
 :00173 %6 = :alu
 :00174 %7 = literal[[:ind_x, :zpg, :imm, :abs, :ind_y, :zpg_x, :abs_y, :abs_x]]
 :00175 %8 = :uno
 :00176 %9 = literal[[:ind_x, :zpg, :imm, :abs, :ind_y, :zpg_y, :abs_y, :abs_y]]
 :00177 %1 = hash[%2; 4]
 :00178 const[ADDRESSING_MODES] = %1
 :00179 %1 = literal[[]]
 :00180 const[DISPATCH] = %1
 :00181 %1 = %0
 :00182 singleton_method_def %1.op: FuncId(503)
 :00183 %1 = literal[[169, 165, 181, 173, 189, 185, 161, 177]]
 :00184 %2 = literal[[:r_op, :_lda, :alu]]
 :00185 _ = %0.op(%1;2)                      [<INVALID>]
 :00187 %1 = literal[[162, 166, 182, 174, 190]]
 :00188 %2 = literal[[:r_op, :_ldx, :rmw]]
 :00189 _ = %0.op(%1;2)                      [<INVALID>]
 :00191 %1 = literal[[160, 164, 180, 172, 188]]
 :00192 %2 = literal[[:r_op, :_ldy, :ctl]]
 :00193 _ = %0.op(%1;2)                      [<INVALID>]
 :00195 %1 = literal[[133, 149, 141, 157, 153, 129, 145]]
 :00196 %2 = literal[[:w_op, :_sta, :alu]]
 :00197 _ = %0.op(%1;2)                      [<INVALID>]
 :00199 %1 = literal[[134, 150, 142]]
 :00200 %2 = literal[[:w_op, :_stx, :rmw]]
 :00201 _ = %0.op(%1;2)                      [<INVALID>]
 :00203 %1 = literal[[132, 148, 140]]
 :00204 %2 = literal[[:w_op, :_sty, :ctl]]
 :00205 _ = %0.op(%1;2)                      [<INVALID>]
 :00207 %1 = literal[[170]]
 :00208 %2 = :_tax
 :00209 _ = %0.op(%1;2)                      [<INVALID>]
 :00211 %1 = literal[[168]]
 :00212 %2 = :_tay
 :00213 _ = %0.op(%1;2)                      [<INVALID>]
 :00215 %1 = literal[[138]]
 :00216 %2 = :_txa
 :00217 _ = %0.op(%1;2)                      [<INVALID>]
 :00219 %1 = literal[[152]]
 :00220 %2 = :_tya
 :00221 _ = %0.op(%1;2)                      [<INVALID>]
 :00223 %1 = literal[[76]]
 :00224 %2 = :_jmp_a
 :00225 _ = %0.op(%1;2)                      [<INVALID>]
 :00227 %1 = literal[[108]]
 :00228 %2 = :_jmp_i
 :00229 _ = %0.op(%1;2)                      [<INVALID>]
 :00231 %1 = literal[[32]]
 :00232 %2 = :_jsr
 :00233 _ = %0.op(%1;2)                      [<INVALID>]
 :00235 %1 = literal[[96]]
 :00236 %2 = :_rts
 :00237 _ = %0.op(%1;2)                      [<INVALID>]
 :00239 %1 = literal[[64]]
 :00240 %2 = :_rti
 :00241 _ = %0.op(%1;2)                      [<INVALID>]
 :00243 %1 = literal[[208]]
 :00244 %2 = :_bne
 :00245 _ = %0.op(%1;2)                      [<INVALID>]
 :00247 %1 = literal[[240]]
 :00248 %2 = :_beq
 :00249 _ = %0.op(%1;2)                      [<INVALID>]
 :00251 %1 = literal[[48]]
 :00252 %2 = :_bmi
 :00253 _ = %0.op(%1;2)                      [<INVALID>]
 :00255 %1 = literal[[16]]
 :00256 %2 = :_bpl
 :00257 _ = %0.op(%1;2)                      [<INVALID>]
 :00259 %1 = literal[[176]]
 :00260 %2 = :_bcs
 :00261 _ = %0.op(%1;2)                      [<INVALID>]
 :00263 %1 = literal[[144]]
 :00264 %2 = :_bcc
 :00265 _ = %0.op(%1;2)                      [<INVALID>]
 :00267 %1 = literal[[112]]
 :00268 %2 = :_bvs
 :00269 _ = %0.op(%1;2)                      [<INVALID>]
 :00271 %1 = literal[[80]]
 :00272 %2 = :_bvc
 :00273 _ = %0.op(%1;2)                      [<INVALID>]
 :00275 %1 = literal[[105, 101, 117, 109, 125, 121, 97, 113]]
 :00276 %2 = literal[[:r_op, :_adc, :alu]]
 :00277 _ = %0.op(%1;2)                      [<INVALID>]
 :00279 %1 = literal[[233, 235, 229, 245, 237, 253, 249, 225, 241]]
 :00280 %2 = literal[[:r_op, :_sbc, :alu]]
 :00281 _ = %0.op(%1;2)                      [<INVALID>]
 :00283 %1 = literal[[41, 37, 53, 45, 61, 57, 33, 49]]
 :00284 %2 = literal[[:r_op, :_and, :alu]]
 :00285 _ = %0.op(%1;2)                      [<INVALID>]
 :00287 %1 = literal[[9, 5, 21, 13, 29, 25, 1, 17]]
 :00288 %2 = literal[[:r_op, :_ora, :alu]]
 :00289 _ = %0.op(%1;2)                      [<INVALID>]
 :00291 %1 = literal[[73, 69, 85, 77, 93, 89, 65, 81]]
 :00292 %2 = literal[[:r_op, :_eor, :alu]]
 :00293 _ = %0.op(%1;2)                      [<INVALID>]
 :00295 %1 = literal[[36, 44]]
 :00296 %2 = literal[[:r_op, :_bit, :alu]]
 :00297 _ = %0.op(%1;2)                      [<INVALID>]
 :00299 %1 = literal[[201, 197, 213, 205, 221, 217, 193, 209]]
 :00300 %2 = literal[[:r_op, :_cmp, :alu]]
 :00301 _ = %0.op(%1;2)                      [<INVALID>]
 :00303 %1 = literal[[224, 228, 236]]
 :00304 %2 = literal[[:r_op, :_cpx, :rmw]]
 :00305 _ = %0.op(%1;2)                      [<INVALID>]
 :00307 %1 = literal[[192, 196, 204]]
 :00308 %2 = literal[[:r_op, :_cpy, :rmw]]
 :00309 _ = %0.op(%1;2)                      [<INVALID>]
 :00311 %1 = literal[[10]]
 :00312 %2 = literal[[:a_op, :_asl]]
 :00313 _ = %0.op(%1;2)                      [<INVALID>]
 :00315 %1 = literal[[6, 22, 14, 30]]
 :00316 %2 = literal[[:rw_op, :_asl, :alu]]
 :00317 _ = %0.op(%1;2)                      [<INVALID>]
 :00319 %1 = literal[[74]]
 :00320 %2 = literal[[:a_op, :_lsr]]
 :00321 _ = %0.op(%1;2)                      [<INVALID>]
 :00323 %1 = literal[[70, 86, 78, 94]]
 :00324 %2 = literal[[:rw_op, :_lsr, :alu]]
 :00325 _ = %0.op(%1;2)                      [<INVALID>]
 :00327 %1 = literal[[42]]
 :00328 %2 = literal[[:a_op, :_rol]]
 :00329 _ = %0.op(%1;2)                      [<INVALID>]
 :00331 %1 = literal[[38, 54, 46, 62]]
 :00332 %2 = literal[[:rw_op, :_rol, :alu]]
 :00333 _ = %0.op(%1;2)                      [<INVALID>]
 :00335 %1 = literal[[106]]
 :00336 %2 = literal[[:a_op, :_ror]]
 :00337 _ = %0.op(%1;2)                      [<INVALID>]
 :00339 %1 = literal[[102, 118, 110, 126]]
 :00340 %2 = literal[[:rw_op, :_ror, :alu]]
 :00341 _ = %0.op(%1;2)                      [<INVALID>]
 :00343 %1 = literal[[198, 214, 206, 222]]
 :00344 %2 = literal[[:rw_op, :_dec, :alu]]
 :00345 _ = %0.op(%1;2)                      [<INVALID>]
 :00347 %1 = literal[[230, 246, 238, 254]]
 :00348 %2 = literal[[:rw_op, :_inc, :alu]]
 :00349 _ = %0.op(%1;2)                      [<INVALID>]
 :00351 %1 = literal[[202]]
 :00352 %2 = :_dex
 :00353 _ = %0.op(%1;2)                      [<INVALID>]
 :00355 %1 = literal[[136]]
 :00356 %2 = :_dey
 :00357 _ = %0.op(%1;2)                      [<INVALID>]
 :00359 %1 = literal[[232]]
 :00360 %2 = :_inx
 :00361 _ = %0.op(%1;2)                      [<INVALID>]
 :00363 %1 = literal[[200]]
 :00364 %2 = :_iny
 :00365 _ = %0.op(%1;2)                      [<INVALID>]
 :00367 %1 = literal[[24]]
 :00368 %2 = :_clc
 :00369 _ = %0.op(%1;2)                      [<INVALID>]
 :00371 %1 = literal[[56]]
 :00372 %2 = :_sec
 :00373 _ = %0.op(%1;2)                      [<INVALID>]
 :00375 %1 = literal[[216]]
 :00376 %2 = :_cld
 :00377 _ = %0.op(%1;2)                      [<INVALID>]
 :00379 %1 = literal[[248]]
 :00380 %2 = :_sed
 :00381 _ = %0.op(%1;2)                      [<INVALID>]
 :00383 %1 = literal[[88]]
 :00384 %2 = :_cli
 :00385 _ = %0.op(%1;2)                      [<INVALID>]
 :00387 %1 = literal[[120]]
 :00388 %2 = :_sei
 :00389 _ = %0.op(%1;2)                      [<INVALID>]
 :00391 %1 = literal[[184]]
 :00392 %2 = :_clv
 :00393 _ = %0.op(%1;2)                      [<INVALID>]
 :00395 %1 = literal[[72]]
 :00396 %2 = :_pha
 :00397 _ = %0.op(%1;2)                      [<INVALID>]
 :00399 %1 = literal[[8]]
 :00400 %2 = :_php
 :00401 _ = %0.op(%1;2)                      [<INVALID>]
 :00403 %1 = literal[[104]]
 :00404 %2 = :_pla
 :00405 _ = %0.op(%1;2)                      [<INVALID>]
 :00407 %1 = literal[[40]]
 :00408 %2 = :_plp
 :00409 _ = %0.op(%1;2)                      [<INVALID>]
 :00411 %1 = literal[[186]]
 :00412 %2 = :_tsx
 :00413 _ = %0.op(%1;2)                      [<INVALID>]
 :00415 %1 = literal[[154]]
 :00416 %2 = :_txs
 :00417 _ = %0.op(%1;2)                      [<INVALID>]
 :00419 %1 = literal[[11, 43]]
 :00420 %2 = literal[[:r_op, :_anc, :uno]]
 :00421 _ = %0.op(%1;2)                      [<INVALID>]
 :00423 %1 = literal[[139]]
 :00424 %2 = literal[[:r_op, :_ane, :uno]]
 :00425 _ = %0.op(%1;2)                      [<INVALID>]
 :00427 %1 = literal[[107]]
 :00428 %2 = literal[[:r_op, :_arr, :uno]]
 :00429 _ = %0.op(%1;2)                      [<INVALID>]
 :00431 %1 = literal[[75]]
 :00432 %2 = literal[[:r_op, :_asr, :uno]]
 :00433 _ = %0.op(%1;2)                      [<INVALID>]
 :00435 %1 = literal[[199, 215, 195, 211, 207, 223, 219]]
 :00436 %2 = literal[[:rw_op, :_dcp, :alu]]
 :00437 _ = %0.op(%1;2)                      [<INVALID>]
 :00439 %1 = literal[[231, 247, 239, 255, 251, 227, 243]]
 :00440 %2 = literal[[:rw_op, :_isb, :alu]]
 :00441 _ = %0.op(%1;2)                      [<INVALID>]
 :00443 %1 = literal[[187]]
 :00444 %2 = literal[[:r_op, :_las, :uno]]
 :00445 _ = %0.op(%1;2)                      [<INVALID>]
 :00447 %1 = literal[[167, 183, 175, 191, 163, 179]]
 :00448 %2 = literal[[:r_op, :_lax, :uno]]
 :00449 _ = %0.op(%1;2)                      [<INVALID>]
 :00451 %1 = literal[[171]]
 :00452 %2 = literal[[:r_op, :_lxa, :uno]]
 :00453 _ = %0.op(%1;2)                      [<INVALID>]
 :00455 %1 = literal[[39, 55, 47, 63, 59, 35, 51]]
 :00456 %2 = literal[[:rw_op, :_rla, :alu]]
 :00457 _ = %0.op(%1;2)                      [<INVALID>]
 :00459 %1 = literal[[103, 119, 111, 127, 123, 99, 115]]
 :00460 %2 = literal[[:rw_op, :_rra, :alu]]
 :00461 _ = %0.op(%1;2)                      [<INVALID>]
 :00463 %1 = literal[[135, 151, 143, 131]]
 :00464 %2 = literal[[:w_op, :_sax, :uno]]
 :00465 _ = %0.op(%1;2)                      [<INVALID>]
 :00467 %1 = literal[[203]]
 :00468 %2 = literal[[:r_op, :_sbx, :uno]]
 :00469 _ = %0.op(%1;2)                      [<INVALID>]
 :00471 %1 = literal[[159, 147]]
 :00472 %2 = literal[[:w_op, :_sha, :uno]]
 :00473 _ = %0.op(%1;2)                      [<INVALID>]
 :00475 %1 = literal[[155]]
 :00476 %2 = literal[[:w_op, :_shs, :uno]]
 :00477 _ = %0.op(%1;2)                      [<INVALID>]
 :00479 %1 = literal[[158]]
 :00480 %2 = literal[[:w_op, :_shx, :rmw]]
 :00481 _ = %0.op(%1;2)                      [<INVALID>]
 :00483 %1 = literal[[156]]
 :00484 %2 = literal[[:w_op, :_shy, :ctl]]
 :00485 _ = %0.op(%1;2)                      [<INVALID>]
 :00487 %1 = literal[[7, 23, 15, 31, 27, 3, 19]]
 :00488 %2 = literal[[:rw_op, :_slo, :alu]]
 :00489 _ = %0.op(%1;2)                      [<INVALID>]
 :00491 %1 = literal[[71, 87, 79, 95, 91, 67, 83]]
 :00492 %2 = literal[[:rw_op, :_sre, :alu]]
 :00493 _ = %0.op(%1;2)                      [<INVALID>]
 :00495 %1 = literal[[26, 58, 90, 122, 218, 234, 250]]
 :00496 %2 = literal[[:no_op, :_nop, 0, 2]]
 :00497 _ = %0.op(%1;2)                      [<INVALID>]
 :00499 %1 = literal[[128, 130, 137, 194, 226]]
 :00500 %2 = literal[[:no_op, :_nop, 1, 2]]
 :00501 _ = %0.op(%1;2)                      [<INVALID>]
 :00503 %1 = literal[[4, 68, 100]]
 :00504 %2 = literal[[:no_op, :_nop, 1, 3]]
 :00505 _ = %0.op(%1;2)                      [<INVALID>]
 :00507 %1 = literal[[20, 52, 84, 116, 212, 244]]
 :00508 %2 = literal[[:no_op, :_nop, 1, 4]]
 :00509 _ = %0.op(%1;2)                      [<INVALID>]
 :00511 %1 = literal[[12]]
 :00512 %2 = literal[[:no_op, :_nop, 2, 4]]
 :00513 _ = %0.op(%1;2)                      [<INVALID>]
 :00515 %1 = literal[[28, 60, 92, 124, 220, 252]]
 :00516 %2 = literal[[:r_op, :_nop, :ctl]]
 :00517 _ = %0.op(%1;2)                      [<INVALID>]
 :00519 %1 = literal[[0]]
 :00520 %2 = :_brk
 :00521 _ = %0.op(%1;2)                      [<INVALID>]
 :00523 %1 = literal[[2, 18, 34, 50, 66, 82, 98, 114, 146, 178, 210, 242]]
 :00524 %2 = :_jam
 :00525 _ = %0.op(%1;2)                      [<INVALID>]
 :00527 %1 = class_def OptimizedCodeBuilder < _: FuncId(504)
 :00528 ret %1
------------------------------------
------------------------------------
<block in CPU> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:14
meta:on_stack:true kind:Ruby mode:method FuncId(368) regs:3 ISeq(RubyFuncInfo { id:368 name:<unnamed> method:(FuncId(367), 1) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[RP2A03_CC]                [<INVALID>]
 :00002 %2 = %1 * %2                         [<INVALID>][<INVALID>]
 :00003 ret %2
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:16
meta:on_stack:true kind:Ruby mode:method FuncId(369) regs:4 ISeq(RubyFuncInfo { id:369 name:inspect method:(FuncId(369), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["#<"]
 :00002 %2 = %0.class()                      [<INVALID>]
 :00004 %3 = literal[">"]
 :00005 %1 = concat(%1; 3)
 :00006 ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:23
meta:on_stack:true kind:Ruby mode:method FuncId(370) regs:6 ISeq(RubyFuncInfo { id:370 name:initialize method:(FuncId(370), 0) args: 1 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 @conf: <INVALID>[IvarId(0)] = %1
 :00002 %2 = @conf: <INVALID>[IvarId(0)]
 :00003 %2 = %2.load_cpu()                   [<INVALID>]
 :00005 condnotbr %2 =>:00015
+:00006 %2 = const[File]                     [<INVALID>]
 :00007 %3 = @conf: <INVALID>[IvarId(0)]
 :00008 %3 = %3.load_cpu()                   [<INVALID>]
 :00010 %2 = %2.read(%3;1)                   [<INVALID>]
 :00012 _ = %0.eval(%2;1)                    [<INVALID>]
 :00014 br =>:00034
+:00015 %2 = @conf: <INVALID>[IvarId(0)]
 :00016 %2 = %2.opt_cpu()                    [<INVALID>]
 :00018 condnotbr %2 =>:00034
+:00019 %2 = const[OptimizedCodeBuilder]     [<INVALID>]
 :00020 %3 = @conf: <INVALID>[IvarId(0)]
 :00021 %3 = %3.loglevel()                   [<INVALID>]
 :00023 %4 = @conf: <INVALID>[IvarId(0)]
 :00024 %4 = %4.opt_cpu()                    [<INVALID>]
 :00026 %2 = %2.new(%3;2)                    [<INVALID>]
 :00028 %2 = %2.build()                      [<INVALID>]
 :00030 %3 = nil
 :00031 %4 = literal["(generated CPU core)"]
 :00032 _ = %0.eval(%2;3)                    [<INVALID>]
+:00034 %2 = literal[[nil]]
 :00035 %3 = 65536: i32
 :00036 %2 = %2 * %3                         [<INVALID>][<INVALID>]
 :00037 @fetch: <INVALID>[IvarId(0)] = %2
 :00038 %2 = literal[[nil]]
 :00039 %3 = 65536: i32
 :00040 %2 = %2 * %3                         [<INVALID>][<INVALID>]
 :00041 @store: <INVALID>[IvarId(0)] = %2
 :00042 %2 = literal[{}]
 :00043 @peeks: <INVALID>[IvarId(0)] = %2
 :00044 %2 = literal[{}]
 :00045 @pokes: <INVALID>[IvarId(0)] = %2
 :00046 %2 = literal[[0]]
 :00047 %2 = %2 * 2048: i16                  [<INVALID>][<INVALID>]
 :00048 @ram: <INVALID>[IvarId(0)] = %2
 :00049 %2 = 0: i32
 :00050 @clk: <INVALID>[IvarId(0)] = %2
 :00051 %2 = 0: i32
 :00052 @clk_frame: <INVALID>[IvarId(0)] = %2
 :00053 %2 = 0: i32
 :00054 @clk_target: <INVALID>[IvarId(0)] = %2
 :00055 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00056 @clk_nmi: <INVALID>[IvarId(0)] = %2
 :00057 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00058 @clk_irq: <INVALID>[IvarId(0)] = %2
 :00059 %2 = 0: i32
 :00060 @clk_total: <INVALID>[IvarId(0)] = %2
 :00061 %2 = 0: i32
 :00062 @irq_flags: <INVALID>[IvarId(0)] = %2
 :00063 %2 = literal[false]
 :00064 @jammed: <INVALID>[IvarId(0)] = %2
 :00065 %2 = const[CPU]                      [<INVALID>]
 :00066 %3 = :poke_nop
 :00067 %2 = %2.method(%3;1)                 [<INVALID>]
 :00069 @poke_nop: <INVALID>[IvarId(0)] = %2
 :00070 _ = %0.reset()                       [<INVALID>]
 :00072 %2 = 0: i32
 :00073 @data: <INVALID>[IvarId(0)] = %2
 :00074 @addr: <INVALID>[IvarId(0)] = %2
 :00075 %2 = nil
 :00076 @opcode: <INVALID>[IvarId(0)] = %2
 :00077 %2 = literal[false]
 :00078 @ppu_sync: <INVALID>[IvarId(0)] = %2
 :00079 ret %2
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:63
meta:on_stack:true kind:Ruby mode:method FuncId(371) regs:5 ISeq(RubyFuncInfo { id:371 name:reset method:(FuncId(371), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = 0: i32
 :00002 @_y: <INVALID>[IvarId(0)] = %1
 :00003 @_x: <INVALID>[IvarId(0)] = %1
 :00004 @_a: <INVALID>[IvarId(0)] = %1
 :00005 %1 = 253: i32
 :00006 @_sp: <INVALID>[IvarId(0)] = %1
 :00007 %1 = 65532: i32
 :00008 @_pc: <INVALID>[IvarId(0)] = %1
 :00009 %1 = 1: i32
 :00010 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00011 %1 = 0: i32
 :00012 @_p_c: <INVALID>[IvarId(0)] = %1
 :00013 %1 = 0: i32
 :00014 @_p_v: <INVALID>[IvarId(0)] = %1
 :00015 %1 = 4: i32
 :00016 @_p_i: <INVALID>[IvarId(0)] = %1
 :00017 %1 = 0: i32
 :00018 @_p_d: <INVALID>[IvarId(0)] = %1
 :00019 %1 = 0: i32
 :00020 @clk_total: <INVALID>[IvarId(0)] = %1
 :00021 @clk: <INVALID>[IvarId(0)] = %1
 :00022 %1 = @ram: <INVALID>[IvarId(0)]
 :00023 %2 = 255: i32
 :00024 _ = %1.fill(%2;1)                    [<INVALID>]
 :00026 %1 = literal[0..2047]
 :00027 %2 = @ram: <INVALID>[IvarId(0)]
 :00028 %3 = @ram: <INVALID>[IvarId(0)]
 :00029 %4 = :[]=
 :00030 %3 = %3.method(%4;1)                 [<INVALID>]
 :00032 _ = %0.add_mappings(%1;3)            [<INVALID>]
 :00034 %1 = literal[2048..8191]
 :00035 %2 = :peek_ram
 :00036 %2 = %0.method(%2;1)                 [<INVALID>]
 :00038 %3 = :poke_ram
 :00039 %3 = %0.method(%3;1)                 [<INVALID>]
 :00041 _ = %0.add_mappings(%1;3)            [<INVALID>]
 :00043 %1 = literal[8192..65535]
 :00044 %2 = :peek_nop
 :00045 %2 = %0.method(%2;1)                 [<INVALID>]
 :00047 %3 = nil
 :00048 _ = %0.add_mappings(%1;3)            [<INVALID>]
 :00050 %1 = 65532: i32
 :00051 %2 = :peek_jam_1
 :00052 %2 = %0.method(%2;1)                 [<INVALID>]
 :00054 %3 = nil
 :00055 _ = %0.add_mappings(%1;3)            [<INVALID>]
 :00057 %1 = 65533: i32
 :00058 %2 = :peek_jam_2
 :00059 %2 = %0.method(%2;1)                 [<INVALID>]
 :00061 %3 = nil
 :00062 %1 = %0.add_mappings(%1;3)           [<INVALID>]
 :00064 ret %1
------------------------------------
------------------------------------
<peek_ram> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:90
meta:on_stack:true kind:Ruby mode:method FuncId(372) regs:4 ISeq(RubyFuncInfo { id:372 name:peek_ram method:(FuncId(372), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @ram: <INVALID>[IvarId(0)]
 :00002 %3 = 2048: i32
 :00003 %3 = %1 % %3                         [<INVALID>][<INVALID>]
 :00004 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
<poke_ram> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:94
meta:on_stack:true kind:Ruby mode:method FuncId(373) regs:5 ISeq(RubyFuncInfo { id:373 name:poke_ram method:(FuncId(373), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @ram: <INVALID>[IvarId(0)]
 :00002 %4 = 2048: i32
 :00003 %4 = %1 % %4                         [<INVALID>][<INVALID>]
 :00004 %3:.[%4:] = %2
 :00005 ret %2
------------------------------------
------------------------------------
<peek_nop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:98
meta:on_stack:true kind:Ruby mode:method FuncId(374) regs:3 ISeq(RubyFuncInfo { id:374 name:peek_nop method:(FuncId(374), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1 >> 8: i16                    [<INVALID>][<INVALID>]
 :00002 ret %2
------------------------------------
------------------------------------
<peek_jam_1> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:102
meta:on_stack:true kind:Ruby mode:method FuncId(375) regs:4 ISeq(RubyFuncInfo { id:375 name:peek_jam_1 method:(FuncId(375), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @_pc: <INVALID>[IvarId(0)]
 :00002 %2 = %2 - 1: i16                     [<INVALID>][<INVALID>]
 :00003 %3 = 65535: i32
 :00004 %2 = %2 & %3                         [<INVALID>][<INVALID>]
 :00005 @_pc: <INVALID>[IvarId(0)] = %2
 :00006 %2 = 252: i32
 :00007 ret %2
------------------------------------
------------------------------------
<peek_jam_2> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:107
meta:on_stack:true kind:Ruby mode:method FuncId(376) regs:3 ISeq(RubyFuncInfo { id:376 name:peek_jam_2 method:(FuncId(376), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = 255: i32
 :00002 ret %2
------------------------------------
------------------------------------
<add_mappings> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:114
meta:on_stack:true kind:Ruby mode:method FuncId(377) regs:7 ISeq(RubyFuncInfo { id:377 name:add_mappings method:(FuncId(377), 0) args: 3 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 %5 = @peeks: <INVALID>[IvarId(0)]
 :00002 %4 = %5.[%2]                         [<INVALID>][<INVALID>]
 :00003 condbr %4 =>:00007
+:00004 %5 = @peeks: <INVALID>[IvarId(0)]
 :00005 %4 = %2
 :00006 %5:.[%2:] = %4
+:00007 %2 = %4
 :00008 %5 = @pokes: <INVALID>[IvarId(0)]
 :00009 %4 = %5.[%3]                         [<INVALID>][<INVALID>]
 :00010 condbr %4 =>:00014
+:00011 %5 = @pokes: <INVALID>[IvarId(0)]
 :00012 %4 = %3
 :00013 %5:.[%3:] = %4
+:00014 %3 = %4
 :00015 %4 = const[Integer]                  [<INVALID>]
 :00016 %4 = %1.is_a?(%4;1)                  [<INVALID>]
 :00018 condnotbr %4 =>:00022
+:00019 %5 = %1
 :00020 %4 = array[%5; 1]
 :00021 br =>:00023
+:00022 %4 = %1
+:00023 %5 = literal[33095681]
 :00024 %4 = %4.each( &%5)                   [<INVALID>]
 :00026 ret %4
------------------------------------
------------------------------------
<poke_nop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:125
meta:on_stack:true kind:Ruby mode:method FuncId(378) regs:4 ISeq(RubyFuncInfo { id:378 name:poke_nop method:(FuncId(378), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 %3 = nil
 :00002 ret %3
------------------------------------
------------------------------------
<fetch> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:128
meta:on_stack:true kind:Ruby mode:method FuncId(379) regs:3 ISeq(RubyFuncInfo { id:379 name:fetch method:(FuncId(379), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @fetch: <INVALID>[IvarId(0)]
 :00002 %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00003 %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00004 ret %2
------------------------------------
------------------------------------
<store> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:132
meta:on_stack:true kind:Ruby mode:method FuncId(380) regs:6 ISeq(RubyFuncInfo { id:380 name:store method:(FuncId(380), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @store: <INVALID>[IvarId(0)]
 :00002 %3 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00003 %4 = %1
 :00004 %5 = %2
 :00005 %3 = %3.[](%4;2)                     [<INVALID>]
 :00007 ret %3
------------------------------------
------------------------------------
<peek16> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:136
meta:on_stack:true kind:Ruby mode:method FuncId(381) regs:5 ISeq(RubyFuncInfo { id:381 name:peek16 method:(FuncId(381), 0) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @fetch: <INVALID>[IvarId(0)]
 :00002 %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00003 %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00004 %3 = @fetch: <INVALID>[IvarId(0)]
 :00005 %4 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00006 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00007 %4 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00008 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00009 %3 = %3 << 8: i16                    [<INVALID>][<INVALID>]
 :00010 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00011 ret %2
------------------------------------
------------------------------------
<current_clock> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:146
meta:on_stack:true kind:Ruby mode:method FuncId(382) regs:2 ISeq(RubyFuncInfo { id:382 name:current_clock method:(FuncId(382), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 ret %1
------------------------------------
------------------------------------
<next_frame_clock> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:150
meta:on_stack:true kind:Ruby mode:method FuncId(383) regs:2 ISeq(RubyFuncInfo { id:383 name:next_frame_clock method:(FuncId(383), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @clk_frame: <INVALID>[IvarId(0)]
 :00002 ret %1
------------------------------------
------------------------------------
<next_frame_clock=> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:154
meta:on_stack:true kind:Ruby mode:method FuncId(384) regs:3 ISeq(RubyFuncInfo { id:384 name:next_frame_clock= method:(FuncId(384), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 @clk_frame: <INVALID>[IvarId(0)] = %1
 :00002 %2 = @clk_target: <INVALID>[IvarId(0)]
 :00003 _%2 = %1 < %2                        [<INVALID>][<INVALID>]
 :00004 condnotbr _%2 =>:00007
+:00005 @clk_target: <INVALID>[IvarId(0)] = %1
 :00006 ret %1
+:00007 %2 = nil
 :00008 ret %2
------------------------------------
------------------------------------
<steal_clocks> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:159
meta:on_stack:true kind:Ruby mode:method FuncId(385) regs:3 ISeq(RubyFuncInfo { id:385 name:steal_clocks method:(FuncId(385), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00003 @clk: <INVALID>[IvarId(0)] = %2
 :00004 ret %2
------------------------------------
------------------------------------
<odd_clock?> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:163
meta:on_stack:true kind:Ruby mode:method FuncId(386) regs:3 ISeq(RubyFuncInfo { id:386 name:odd_clock? method:(FuncId(386), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk_total: <INVALID>[IvarId(0)]
 :00002 %2 = @clk: <INVALID>[IvarId(0)]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 %2 = const[CLK_2]                    [<INVALID>]
 :00005 %1 = %1 % %2                         [<INVALID>][<INVALID>]
 :00006 %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00007 ret %1
------------------------------------
------------------------------------
<update> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:167
meta:on_stack:true kind:Ruby mode:method FuncId(387) regs:3 ISeq(RubyFuncInfo { id:387 name:update method:(FuncId(387), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @apu: <INVALID>[IvarId(0)]
 :00002 %2 = @clk: <INVALID>[IvarId(0)]
 :00003 _ = %1.clock_dma(%2;1)               [<INVALID>]
 :00005 %1 = @clk: <INVALID>[IvarId(0)]
 :00006 ret %1
------------------------------------
------------------------------------
<dmc_dma> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:172
meta:on_stack:true kind:Ruby mode:method FuncId(388) regs:5 ISeq(RubyFuncInfo { id:388 name:dmc_dma method:(FuncId(388), 0) args: 1 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @clk: <INVALID>[IvarId(0)]
 :00002 %4 = const[CLK_3]                    [<INVALID>]
 :00003 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %3
 :00005 %2 = %0.fetch(%1;1)                  [<INVALID>]
 :00007 %3 = @clk: <INVALID>[IvarId(0)]
 :00008 %4 = const[CLK_1]                    [<INVALID>]
 :00009 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00010 @clk: <INVALID>[IvarId(0)] = %3
 :00011 ret %2
------------------------------------
------------------------------------
<sprite_dma> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:181
meta:on_stack:true kind:Ruby mode:method FuncId(389) regs:6 ISeq(RubyFuncInfo { id:389 name:sprite_dma method:(FuncId(389), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = 256: i32
 :00002 %4 = literal[33161217]
 :00003 _ = %3.times( &%4)                   [<INVALID>]
 :00005 %3 = 64: i32
 :00006 %4 = literal[33226753]
 :00007 %3 = %3.times( &%4)                  [<INVALID>]
 :00009 ret %3
------------------------------------
------------------------------------
<boot> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:186
meta:on_stack:true kind:Ruby mode:method FuncId(390) regs:2 ISeq(RubyFuncInfo { id:390 name:boot method:(FuncId(390), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = const[CLK_7]                    [<INVALID>]
 :00002 @clk: <INVALID>[IvarId(0)] = %1
 :00003 %1 = const[RESET_VECTOR]             [<INVALID>]
 :00004 %1 = %0.peek16(%1;1)                 [<INVALID>]
 :00006 @_pc: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<vsync> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:191
meta:on_stack:true kind:Ruby mode:method FuncId(391) regs:3 ISeq(RubyFuncInfo { id:391 name:vsync method:(FuncId(391), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @ppu_sync: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00007
+:00003 %1 = @ppu: <INVALID>[IvarId(0)]
 :00004 %2 = @clk: <INVALID>[IvarId(0)]
 :00005 _ = %1.sync(%2;1)                    [<INVALID>]
+:00007 %1 = @clk: <INVALID>[IvarId(0)]
 :00008 %2 = @clk_frame: <INVALID>[IvarId(0)]
 :00009 %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00010 @clk: <INVALID>[IvarId(0)] = %1
 :00011 %1 = @clk_total: <INVALID>[IvarId(0)]
 :00012 %2 = @clk_frame: <INVALID>[IvarId(0)]
 :00013 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00014 @clk_total: <INVALID>[IvarId(0)] = %1
 :00015 %1 = @clk_nmi: <INVALID>[IvarId(0)]
 :00016 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00017 _%1 = %1 != %2                       [<INVALID>][<INVALID>]
 :00018 condnotbr _%1 =>:00023
+:00019 %1 = @clk_nmi: <INVALID>[IvarId(0)]
 :00020 %2 = @clk_frame: <INVALID>[IvarId(0)]
 :00021 %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00022 @clk_nmi: <INVALID>[IvarId(0)] = %1
+:00023 %1 = @clk_irq: <INVALID>[IvarId(0)]
 :00024 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00025 _%1 = %1 != %2                       [<INVALID>][<INVALID>]
 :00026 condnotbr _%1 =>:00031
+:00027 %1 = @clk_irq: <INVALID>[IvarId(0)]
 :00028 %2 = @clk_frame: <INVALID>[IvarId(0)]
 :00029 %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00030 @clk_irq: <INVALID>[IvarId(0)] = %1
+:00031 %1 = @clk_irq: <INVALID>[IvarId(0)]
 :00032 _%1 = %1 < 0: i16                    [<INVALID>][<INVALID>]
 :00033 condnotbr _%1 =>:00037
+:00034 %1 = 0: i32
 :00035 @clk_irq: <INVALID>[IvarId(0)] = %1
 :00036 ret %1
+:00037 %1 = nil
 :00038 ret %1
------------------------------------
------------------------------------
<clear_irq> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:205
meta:on_stack:true kind:Ruby mode:method FuncId(392) regs:6 ISeq(RubyFuncInfo { id:392 name:clear_irq method:(FuncId(392), 0) args: 1 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @irq_flags: <INVALID>[IvarId(0)]
 :00002 %4 = const[IRQ_FRAME]                [<INVALID>]
 :00003 %5 = const[IRQ_DMC]                  [<INVALID>]
 :00004 %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00005 %2 = %3 & %4                         [<INVALID>][<INVALID>]
 :00006 %3 = @irq_flags: <INVALID>[IvarId(0)]
 :00007 %4 = const[IRQ_EXT]                  [<INVALID>]
 :00008 %5 = const[IRQ_FRAME]                [<INVALID>]
 :00009 %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00010 %5 = const[IRQ_DMC]                  [<INVALID>]
 :00011 %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00012 %4 = %1 ^ %4                         [<INVALID>][<INVALID>]
 :00013 %3 = %3 & %4                         [<INVALID>][<INVALID>]
 :00014 @irq_flags: <INVALID>[IvarId(0)] = %3
 :00015 %3 = @irq_flags: <INVALID>[IvarId(0)]
 :00016 _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00017 condnotbr _%3 =>:00020
+:00018 %3 = const[FOREVER_CLOCK]            [<INVALID>]
 :00019 @clk_irq: <INVALID>[IvarId(0)] = %3
+:00020 ret %2
------------------------------------
------------------------------------
<next_interrupt_clock> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:212
meta:on_stack:true kind:Ruby mode:method FuncId(393) regs:4 ISeq(RubyFuncInfo { id:393 name:next_interrupt_clock method:(FuncId(393), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[CLK_1]                    [<INVALID>]
 :00002 %3 = const[CLK_1]                    [<INVALID>]
 :00003 %3 = %3 / 2: i16                     [<INVALID>][<INVALID>]
 :00004 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00005 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00006 %2 = @clk_target: <INVALID>[IvarId(0)]
 :00007 _%2 = %2 > %1                        [<INVALID>][<INVALID>]
 :00008 condnotbr _%2 =>:00010
+:00009 @clk_target: <INVALID>[IvarId(0)] = %1
+:00010 ret %1
------------------------------------
------------------------------------
<do_irq> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:218
meta:on_stack:true kind:Ruby mode:method FuncId(394) regs:5 ISeq(RubyFuncInfo { id:394 name:do_irq method:(FuncId(394), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @irq_flags: <INVALID>[IvarId(0)]
 :00002 %3 = %3 | %1                         [<INVALID>][<INVALID>]
 :00003 @irq_flags: <INVALID>[IvarId(0)] = %3
 :00004 %3 = @clk_irq: <INVALID>[IvarId(0)]
 :00005 %4 = const[FOREVER_CLOCK]            [<INVALID>]
 :00006 _%3 = %3 == %4                       [<INVALID>][<INVALID>]
 :00007 condnotbr _%3 =>:00015
+:00008 %3 = @_p_i: <INVALID>[IvarId(0)]
 :00009 _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00010 condnotbr _%3 =>:00015
+:00011 %3 = %0.next_interrupt_clock(%2;1)   [<INVALID>]
 :00013 @clk_irq: <INVALID>[IvarId(0)] = %3
 :00014 ret %3
+:00015 %3 = nil
 :00016 ret %3
------------------------------------
------------------------------------
<do_nmi> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:223
meta:on_stack:true kind:Ruby mode:method FuncId(395) regs:4 ISeq(RubyFuncInfo { id:395 name:do_nmi method:(FuncId(395), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @clk_nmi: <INVALID>[IvarId(0)]
 :00002 %3 = const[FOREVER_CLOCK]            [<INVALID>]
 :00003 _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00004 condnotbr _%2 =>:00009
+:00005 %2 = %0.next_interrupt_clock(%1;1)   [<INVALID>]
 :00007 @clk_nmi: <INVALID>[IvarId(0)] = %2
 :00008 ret %2
+:00009 %2 = nil
 :00010 ret %2
------------------------------------
------------------------------------
<do_isr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:227
meta:on_stack:true kind:Ruby mode:method FuncId(396) regs:5 ISeq(RubyFuncInfo { id:396 name:do_isr method:(FuncId(396), 0) args: 1 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @jammed: <INVALID>[IvarId(0)]
 :00002 condnotbr %3 =>:00005
+:00003 %3 = nil
 :00004 ret %3
+:00005 %3 = @_pc: <INVALID>[IvarId(0)]
 :00006 _ = %0.push16(%3;1)                  [<INVALID>]
 :00008 %3 = %0.flags_pack()                 [<INVALID>]
 :00010 _ = %0.push8(%3;1)                   [<INVALID>]
 :00012 %3 = 4: i32
 :00013 @_p_i: <INVALID>[IvarId(0)] = %3
 :00014 %3 = @clk: <INVALID>[IvarId(0)]
 :00015 %4 = const[CLK_7]                    [<INVALID>]
 :00016 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00017 @clk: <INVALID>[IvarId(0)] = %3
 :00018 %3 = const[NMI_VECTOR]               [<INVALID>]
 :00019 _%3 = %1 == %3                       [<INVALID>][<INVALID>]
 :00020 condnotbr _%3 =>:00023
+:00021 %3 = const[NMI_VECTOR]               [<INVALID>]
 :00022 br =>:00025
+:00023 %3 = %0.fetch_irq_isr_vector()       [<INVALID>]
+:00025 %2 = %3
 :00026 %3 = %0.peek16(%2;1)                 [<INVALID>]
 :00028 @_pc: <INVALID>[IvarId(0)] = %3
 :00029 ret %3
------------------------------------
------------------------------------
<fetch_irq_isr_vector> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:237
meta:on_stack:true kind:Ruby mode:method FuncId(397) regs:3 ISeq(RubyFuncInfo { id:397 name:fetch_irq_isr_vector method:(FuncId(397), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = @clk_frame: <INVALID>[IvarId(0)]
 :00003 _%1 = %1 >= %2                       [<INVALID>][<INVALID>]
 :00004 condnotbr _%1 =>:00008
+:00005 %1 = 12288: i32
 :00006 _ = %0.fetch(%1;1)                   [<INVALID>]
+:00008 %1 = @clk_nmi: <INVALID>[IvarId(0)]
 :00009 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00010 _%1 = %1 != %2                       [<INVALID>][<INVALID>]
 :00011 condnotbr _%1 =>:00025
+:00012 %1 = @clk_nmi: <INVALID>[IvarId(0)]
 :00013 %2 = const[CLK_2]                    [<INVALID>]
 :00014 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00015 %2 = @clk: <INVALID>[IvarId(0)]
 :00016 _%1 = %1 <= %2                       [<INVALID>][<INVALID>]
 :00017 condnotbr _%1 =>:00022
+:00018 %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00019 @clk_nmi: <INVALID>[IvarId(0)] = %1
 :00020 %1 = const[NMI_VECTOR]               [<INVALID>]
 :00021 ret %1
+:00022 %1 = @clk: <INVALID>[IvarId(0)]
 :00023 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00024 @clk_nmi: <INVALID>[IvarId(0)] = %1
+:00025 %1 = const[IRQ_VECTOR]               [<INVALID>]
 :00026 ret %1
------------------------------------
------------------------------------
<flags_pack> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:254
meta:on_stack:true kind:Ruby mode:method FuncId(398) regs:3 ISeq(RubyFuncInfo { id:398 name:flags_pack method:(FuncId(398), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_p_nz: <INVALID>[IvarId(0)]
 :00002 %2 = @_p_nz: <INVALID>[IvarId(0)]
 :00003 %2 = %2 >> 1: i16                    [<INVALID>][<INVALID>]
 :00004 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00005 %1 = %1 & 128: i16                   [<INVALID>][<INVALID>]
 :00006 %2 = @_p_nz: <INVALID>[IvarId(0)]
 :00007 %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00009 condnotbr _%2 =>:00012
+:00010 %2 = 0: i32
 :00011 br =>:00013
+:00012 %2 = 2: i32
+:00013 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00014 %2 = @_p_c: <INVALID>[IvarId(0)]
 :00015 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00016 %2 = @_p_v: <INVALID>[IvarId(0)]
 :00017 _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00018 condnotbr _%2 =>:00021
+:00019 %2 = 64: i32
 :00020 br =>:00022
+:00021 %2 = 0: i32
+:00022 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00023 %2 = @_p_i: <INVALID>[IvarId(0)]
 :00024 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00025 %2 = @_p_d: <INVALID>[IvarId(0)]
 :00026 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00027 %1 = %1 | 32: i16                    [<INVALID>][<INVALID>]
 :00028 ret %1
------------------------------------
------------------------------------
<flags_unpack> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:265
meta:on_stack:true kind:Ruby mode:method FuncId(399) regs:4 ISeq(RubyFuncInfo { id:399 name:flags_unpack method:(FuncId(399), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = ~%1                             [<INVALID>]
 :00002 %2 = %2 & 2: i16                     [<INVALID>][<INVALID>]
 :00003 %3 = %1 & 128: i16                   [<INVALID>][<INVALID>]
 :00004 %3 = %3 << 1: i16                    [<INVALID>][<INVALID>]
 :00005 %2 = %2 | %3                         [<INVALID>][<INVALID>]
 :00006 @_p_nz: <INVALID>[IvarId(0)] = %2
 :00007 %2 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00008 @_p_c: <INVALID>[IvarId(0)] = %2
 :00009 %2 = %1 & 64: i16                    [<INVALID>][<INVALID>]
 :00010 @_p_v: <INVALID>[IvarId(0)] = %2
 :00011 %2 = %1 & 4: i16                     [<INVALID>][<INVALID>]
 :00012 @_p_i: <INVALID>[IvarId(0)] = %2
 :00013 %2 = %1 & 8: i16                     [<INVALID>][<INVALID>]
 :00014 @_p_d: <INVALID>[IvarId(0)] = %2
 :00015 ret %2
------------------------------------
------------------------------------
<branch> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:274
meta:on_stack:true kind:Ruby mode:method FuncId(400) regs:8 ISeq(RubyFuncInfo { id:400 name:branch method:(FuncId(400), 0) args: 1 non_temp: 3 temp: 4})
[]
+:00000 init_method reg:7 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 condnotbr %1 =>:00031
+:00002 %4 = @_pc: <INVALID>[IvarId(0)]
 :00003 %2 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00004 %4 = @_pc: <INVALID>[IvarId(0)]
 :00005 %3 = %0.fetch(%4;1)                  [<INVALID>]
 :00007 _%4 = %3 < 128: i16                  [<INVALID>][<INVALID>]
 :00008 condnotbr _%4 =>:00011
+:00009 %4 = %3
 :00010 br =>:00013
+:00011 %4 = 65280: i32
 :00012 %4 = %3 | %4                         [<INVALID>][<INVALID>]
+:00013 %4 = %2 + %4                         [<INVALID>][<INVALID>]
 :00014 %5 = 65535: i32
 :00015 %4 = %4 & %5                         [<INVALID>][<INVALID>]
 :00016 @_pc: <INVALID>[IvarId(0)] = %4
 :00017 %4 = @clk: <INVALID>[IvarId(0)]
 :00018 %5 = 8: i32
 :00019 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00020 %6 = @_pc: <INVALID>[IvarId(0)]
 :00021 %7 = 8: i32
 :00022 %6 = %6.[%7]                         [<INVALID>][<INVALID>]
 :00023 _%5 = %5 == %6                       [<INVALID>][<INVALID>]
 :00024 condnotbr _%5 =>:00027
+:00025 %5 = const[CLK_3]                    [<INVALID>]
 :00026 br =>:00028
+:00027 %5 = const[CLK_4]                    [<INVALID>]
+:00028 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00029 @clk: <INVALID>[IvarId(0)] = %4
 :00030 ret %4
+:00031 %4 = @_pc: <INVALID>[IvarId(0)]
 :00032 %4 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00033 @_pc: <INVALID>[IvarId(0)] = %4
 :00034 %4 = @clk: <INVALID>[IvarId(0)]
 :00035 %5 = const[CLK_2]                    [<INVALID>]
 :00036 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00037 @clk: <INVALID>[IvarId(0)] = %4
 :00038 ret %4
------------------------------------
------------------------------------
<store_mem> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:287
meta:on_stack:true kind:Ruby mode:method FuncId(401) regs:3 ISeq(RubyFuncInfo { id:401 name:store_mem method:(FuncId(401), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @addr: <INVALID>[IvarId(0)]
 :00002 %2 = @data: <INVALID>[IvarId(0)]
 :00003 _ = %0.store(%1;2)                   [<INVALID>]
 :00005 %1 = @clk: <INVALID>[IvarId(0)]
 :00006 %2 = const[CLK_1]                    [<INVALID>]
 :00007 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00008 @clk: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<store_zpg> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:292
meta:on_stack:true kind:Ruby mode:method FuncId(402) regs:4 ISeq(RubyFuncInfo { id:402 name:store_zpg method:(FuncId(402), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @ram: <INVALID>[IvarId(0)]
 :00002 %2 = @addr: <INVALID>[IvarId(0)]
 :00003 %3 = @data: <INVALID>[IvarId(0)]
 :00004 %1:.[%2:] = %3
 :00005 ret %3
------------------------------------
------------------------------------
<push8> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:297
meta:on_stack:true kind:Ruby mode:method FuncId(403) regs:4 ISeq(RubyFuncInfo { id:403 name:push8 method:(FuncId(403), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @ram: <INVALID>[IvarId(0)]
 :00002 %3 = @_sp: <INVALID>[IvarId(0)]
 :00003 %3 = 256: i16 + %3                   [<INVALID>][<INVALID>]
 :00004 %2:.[%3:] = %1
 :00005 %2 = @_sp: <INVALID>[IvarId(0)]
 :00006 %2 = %2 - 1: i16                     [<INVALID>][<INVALID>]
 :00007 %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 @_sp: <INVALID>[IvarId(0)] = %2
 :00009 ret %2
------------------------------------
------------------------------------
<push16> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:302
meta:on_stack:true kind:Ruby mode:method FuncId(404) regs:3 ISeq(RubyFuncInfo { id:404 name:push16 method:(FuncId(404), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1 >> 8: i16                    [<INVALID>][<INVALID>]
 :00002 _ = %0.push8(%2;1)                   [<INVALID>]
 :00004 %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00005 %2 = %0.push8(%2;1)                  [<INVALID>]
 :00007 ret %2
------------------------------------
------------------------------------
<pull8> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:307
meta:on_stack:true kind:Ruby mode:method FuncId(405) regs:3 ISeq(RubyFuncInfo { id:405 name:pull8 method:(FuncId(405), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_sp: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 @_sp: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @ram: <INVALID>[IvarId(0)]
 :00006 %2 = @_sp: <INVALID>[IvarId(0)]
 :00007 %2 = 256: i16 + %2                   [<INVALID>][<INVALID>]
 :00008 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00009 ret %1
------------------------------------
------------------------------------
<pull16> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:312
meta:on_stack:true kind:Ruby mode:method FuncId(406) regs:3 ISeq(RubyFuncInfo { id:406 name:pull16 method:(FuncId(406), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = %0.pull8()                      [<INVALID>]
 :00003 %2 = %0.pull8()                      [<INVALID>]
 :00005 %2 = 256: i16 * %2                   [<INVALID>][<INVALID>]
 :00006 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00007 ret %1
------------------------------------
------------------------------------
<imm> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:320
meta:on_stack:true kind:Ruby mode:method FuncId(407) regs:5 ISeq(RubyFuncInfo { id:407 name:imm method:(FuncId(407), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @_pc: <INVALID>[IvarId(0)]
 :00002 %3 = %0.fetch(%3;1)                  [<INVALID>]
 :00004 @data: <INVALID>[IvarId(0)] = %3
 :00005 %3 = @_pc: <INVALID>[IvarId(0)]
 :00006 %3 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 @_pc: <INVALID>[IvarId(0)] = %3
 :00008 %3 = @clk: <INVALID>[IvarId(0)]
 :00009 %4 = const[CLK_2]                    [<INVALID>]
 :00010 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00011 @clk: <INVALID>[IvarId(0)] = %3
 :00012 ret %3
------------------------------------
------------------------------------
<zpg> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:327
meta:on_stack:true kind:Ruby mode:method FuncId(408) regs:5 ISeq(RubyFuncInfo { id:408 name:zpg method:(FuncId(408), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @_pc: <INVALID>[IvarId(0)]
 :00002 %3 = %0.fetch(%3;1)                  [<INVALID>]
 :00004 @addr: <INVALID>[IvarId(0)] = %3
 :00005 %3 = @_pc: <INVALID>[IvarId(0)]
 :00006 %3 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 @_pc: <INVALID>[IvarId(0)] = %3
 :00008 %3 = @clk: <INVALID>[IvarId(0)]
 :00009 %4 = const[CLK_3]                    [<INVALID>]
 :00010 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00011 @clk: <INVALID>[IvarId(0)] = %3
 :00012 condnotbr %1 =>:00025
+:00013 %3 = @ram: <INVALID>[IvarId(0)]
 :00014 %4 = @addr: <INVALID>[IvarId(0)]
 :00015 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00016 @data: <INVALID>[IvarId(0)] = %3
 :00017 condnotbr %2 =>:00023
+:00018 %3 = @clk: <INVALID>[IvarId(0)]
 :00019 %4 = const[CLK_2]                    [<INVALID>]
 :00020 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00021 @clk: <INVALID>[IvarId(0)] = %3
 :00022 ret %3
+:00023 %3 = nil
 :00024 ret %3
+:00025 %3 = nil
 :00026 ret %3
------------------------------------
------------------------------------
<zpg_reg> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:338
meta:on_stack:true kind:Ruby mode:method FuncId(409) regs:6 ISeq(RubyFuncInfo { id:409 name:zpg_reg method:(FuncId(409), 0) args: 3 non_temp: 3 temp: 2})
[]
+:00000 init_method reg:5 arg:3 req:3 opt:0 rest:false block:None stack_offset:6
 :00001 %4 = @_pc: <INVALID>[IvarId(0)]
 :00002 %4 = %0.fetch(%4;1)                  [<INVALID>]
 :00004 %4 = %1 + %4                         [<INVALID>][<INVALID>]
 :00005 %4 = %4 & 255: i16                   [<INVALID>][<INVALID>]
 :00006 @addr: <INVALID>[IvarId(0)] = %4
 :00007 %4 = @_pc: <INVALID>[IvarId(0)]
 :00008 %4 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 @_pc: <INVALID>[IvarId(0)] = %4
 :00010 %4 = @clk: <INVALID>[IvarId(0)]
 :00011 %5 = const[CLK_4]                    [<INVALID>]
 :00012 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00013 @clk: <INVALID>[IvarId(0)] = %4
 :00014 condnotbr %2 =>:00027
+:00015 %4 = @ram: <INVALID>[IvarId(0)]
 :00016 %5 = @addr: <INVALID>[IvarId(0)]
 :00017 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00018 @data: <INVALID>[IvarId(0)] = %4
 :00019 condnotbr %3 =>:00025
+:00020 %4 = @clk: <INVALID>[IvarId(0)]
 :00021 %5 = const[CLK_2]                    [<INVALID>]
 :00022 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00023 @clk: <INVALID>[IvarId(0)] = %4
 :00024 ret %4
+:00025 %4 = nil
 :00026 ret %4
+:00027 %4 = nil
 :00028 ret %4
------------------------------------
------------------------------------
<zpg_x> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:348
meta:on_stack:true kind:Ruby mode:method FuncId(410) regs:6 ISeq(RubyFuncInfo { id:410 name:zpg_x method:(FuncId(410), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @_x: <INVALID>[IvarId(0)]
 :00002 %4 = %1
 :00003 %5 = %2
 :00004 %3 = %0.zpg_reg(%3;3)                [<INVALID>]
 :00006 ret %3
------------------------------------
------------------------------------
<zpg_y> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:352
meta:on_stack:true kind:Ruby mode:method FuncId(411) regs:6 ISeq(RubyFuncInfo { id:411 name:zpg_y method:(FuncId(411), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @_y: <INVALID>[IvarId(0)]
 :00002 %4 = %1
 :00003 %5 = %2
 :00004 %3 = %0.zpg_reg(%3;3)                [<INVALID>]
 :00006 ret %3
------------------------------------
------------------------------------
<abs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:357
meta:on_stack:true kind:Ruby mode:method FuncId(412) regs:5 ISeq(RubyFuncInfo { id:412 name:abs method:(FuncId(412), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @_pc: <INVALID>[IvarId(0)]
 :00002 %3 = %0.peek16(%3;1)                 [<INVALID>]
 :00004 @addr: <INVALID>[IvarId(0)] = %3
 :00005 %3 = @_pc: <INVALID>[IvarId(0)]
 :00006 %3 = %3 + 2: i16                     [<INVALID>][<INVALID>]
 :00007 @_pc: <INVALID>[IvarId(0)] = %3
 :00008 %3 = @clk: <INVALID>[IvarId(0)]
 :00009 %4 = const[CLK_3]                    [<INVALID>]
 :00010 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00011 @clk: <INVALID>[IvarId(0)] = %3
 :00012 %3 = %1
 :00013 %4 = %2
 :00014 %3 = %0.read_write(%3;2)             [<INVALID>]
 :00016 ret %3
------------------------------------
------------------------------------
<abs_reg> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:365
meta:on_stack:true kind:Ruby mode:method FuncId(413) regs:8 ISeq(RubyFuncInfo { id:413 name:abs_reg method:(FuncId(413), 0) args: 3 non_temp: 5 temp: 2})
[]
+:00000 init_method reg:7 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 %6 = @_pc: <INVALID>[IvarId(0)]
 :00002 %4 = %6 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 %6 = @_pc: <INVALID>[IvarId(0)]
 :00004 %6 = %0.fetch(%6;1)                  [<INVALID>]
 :00006 %5 = %1 + %6                         [<INVALID>][<INVALID>]
 :00007 %6 = %0.fetch(%4;1)                  [<INVALID>]
 :00009 %6 = %6 << 8: i16                    [<INVALID>][<INVALID>]
 :00010 %6 = %6 + %5                         [<INVALID>][<INVALID>]
 :00011 %7 = 65535: i32
 :00012 %6 = %6 & %7                         [<INVALID>][<INVALID>]
 :00013 @addr: <INVALID>[IvarId(0)] = %6
 :00014 condnotbr %3 =>:00027
+:00015 %6 = @addr: <INVALID>[IvarId(0)]
 :00016 %7 = %5 & 256: i16                   [<INVALID>][<INVALID>]
 :00017 %6 = %6 - %7                         [<INVALID>][<INVALID>]
 :00018 %7 = 65535: i32
 :00019 %4 = %6 & %7                         [<INVALID>][<INVALID>]
 :00020 _ = %0.fetch(%4;1)                   [<INVALID>]
 :00022 %6 = @clk: <INVALID>[IvarId(0)]
 :00023 %7 = const[CLK_4]                    [<INVALID>]
 :00024 %6 = %6 + %7                         [<INVALID>][<INVALID>]
 :00025 @clk: <INVALID>[IvarId(0)] = %6
 :00026 br =>:00044
+:00027 %6 = @clk: <INVALID>[IvarId(0)]
 :00028 %7 = const[CLK_3]                    [<INVALID>]
 :00029 %6 = %6 + %7                         [<INVALID>][<INVALID>]
 :00030 @clk: <INVALID>[IvarId(0)] = %6
 :00031 %6 = %5 & 256: i16                   [<INVALID>][<INVALID>]
 :00032 _%6 = %6 != 0: i16                   [<INVALID>][<INVALID>]
 :00033 condnotbr _%6 =>:00044
+:00034 %6 = @addr: <INVALID>[IvarId(0)]
 :00035 %6 = %6 - 256: i16                   [<INVALID>][<INVALID>]
 :00036 %7 = 65535: i32
 :00037 %4 = %6 & %7                         [<INVALID>][<INVALID>]
 :00038 _ = %0.fetch(%4;1)                   [<INVALID>]
 :00040 %6 = @clk: <INVALID>[IvarId(0)]
 :00041 %7 = const[CLK_1]                    [<INVALID>]
 :00042 %6 = %6 + %7                         [<INVALID>][<INVALID>]
 :00043 @clk: <INVALID>[IvarId(0)] = %6
+:00044 %6 = %2
 :00045 %7 = %3
 :00046 _ = %0.read_write(%6;2)              [<INVALID>]
 :00048 %6 = @_pc: <INVALID>[IvarId(0)]
 :00049 %6 = %6 + 2: i16                     [<INVALID>][<INVALID>]
 :00050 @_pc: <INVALID>[IvarId(0)] = %6
 :00051 ret %6
------------------------------------
------------------------------------
<abs_x> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:385
meta:on_stack:true kind:Ruby mode:method FuncId(414) regs:6 ISeq(RubyFuncInfo { id:414 name:abs_x method:(FuncId(414), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @_x: <INVALID>[IvarId(0)]
 :00002 %4 = %1
 :00003 %5 = %2
 :00004 %3 = %0.abs_reg(%3;3)                [<INVALID>]
 :00006 ret %3
------------------------------------
------------------------------------
<abs_y> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:389
meta:on_stack:true kind:Ruby mode:method FuncId(415) regs:6 ISeq(RubyFuncInfo { id:415 name:abs_y method:(FuncId(415), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @_y: <INVALID>[IvarId(0)]
 :00002 %4 = %1
 :00003 %5 = %2
 :00004 %3 = %0.abs_reg(%3;3)                [<INVALID>]
 :00006 ret %3
------------------------------------
------------------------------------
<ind_x> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:394
meta:on_stack:true kind:Ruby mode:method FuncId(416) regs:7 ISeq(RubyFuncInfo { id:416 name:ind_x method:(FuncId(416), 0) args: 2 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = @_pc: <INVALID>[IvarId(0)]
 :00002 %4 = %0.fetch(%4;1)                  [<INVALID>]
 :00004 %5 = @_x: <INVALID>[IvarId(0)]
 :00005 %3 = %4 + %5                         [<INVALID>][<INVALID>]
 :00006 %4 = @_pc: <INVALID>[IvarId(0)]
 :00007 %4 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00008 @_pc: <INVALID>[IvarId(0)] = %4
 :00009 %4 = @clk: <INVALID>[IvarId(0)]
 :00010 %5 = const[CLK_5]                    [<INVALID>]
 :00011 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00012 @clk: <INVALID>[IvarId(0)] = %4
 :00013 %4 = @ram: <INVALID>[IvarId(0)]
 :00014 %5 = %3 & 255: i16                   [<INVALID>][<INVALID>]
 :00015 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00016 %5 = @ram: <INVALID>[IvarId(0)]
 :00017 %6 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00018 %6 = %6 & 255: i16                   [<INVALID>][<INVALID>]
 :00019 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00020 %5 = %5 << 8: i16                    [<INVALID>][<INVALID>]
 :00021 %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00022 @addr: <INVALID>[IvarId(0)] = %4
 :00023 %4 = %1
 :00024 %5 = %2
 :00025 %4 = %0.read_write(%4;2)             [<INVALID>]
 :00027 ret %4
------------------------------------
------------------------------------
<ind_y> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:403
meta:on_stack:true kind:Ruby mode:method FuncId(417) regs:7 ISeq(RubyFuncInfo { id:417 name:ind_y method:(FuncId(417), 0) args: 2 non_temp: 4 temp: 2})
[]
+:00000 init_method reg:6 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 %5 = @_pc: <INVALID>[IvarId(0)]
 :00002 %3 = %0.fetch(%5;1)                  [<INVALID>]
 :00004 %5 = @_pc: <INVALID>[IvarId(0)]
 :00005 %5 = %5 + 1: i16                     [<INVALID>][<INVALID>]
 :00006 @_pc: <INVALID>[IvarId(0)] = %5
 :00007 %5 = @ram: <INVALID>[IvarId(0)]
 :00008 %5 = %5.[%3]                         [<INVALID>][<INVALID>]
 :00009 %6 = @_y: <INVALID>[IvarId(0)]
 :00010 %4 = %5 + %6                         [<INVALID>][<INVALID>]
 :00011 %5 = @clk: <INVALID>[IvarId(0)]
 :00012 %6 = const[CLK_4]                    [<INVALID>]
 :00013 %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00014 @clk: <INVALID>[IvarId(0)] = %5
 :00015 condnotbr %2 =>:00033
+:00016 %5 = @clk: <INVALID>[IvarId(0)]
 :00017 %6 = const[CLK_1]                    [<INVALID>]
 :00018 %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00019 @clk: <INVALID>[IvarId(0)] = %5
 :00020 %5 = @ram: <INVALID>[IvarId(0)]
 :00021 %6 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00022 %6 = %6 & 255: i16                   [<INVALID>][<INVALID>]
 :00023 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00024 %5 = %5 << 8: i16                    [<INVALID>][<INVALID>]
 :00025 %5 = %5 + %4                         [<INVALID>][<INVALID>]
 :00026 @addr: <INVALID>[IvarId(0)] = %5
 :00027 %5 = @addr: <INVALID>[IvarId(0)]
 :00028 %6 = %4 & 256: i16                   [<INVALID>][<INVALID>]
 :00029 %3 = %5 - %6                         [<INVALID>][<INVALID>]
 :00030 _ = %0.fetch(%3;1)                   [<INVALID>]
 :00032 br =>:00055
+:00033 %5 = @ram: <INVALID>[IvarId(0)]
 :00034 %6 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00035 %6 = %6 & 255: i16                   [<INVALID>][<INVALID>]
 :00036 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00037 %5 = %5 << 8: i16                    [<INVALID>][<INVALID>]
 :00038 %5 = %5 + %4                         [<INVALID>][<INVALID>]
 :00039 %6 = 65535: i32
 :00040 %5 = %5 & %6                         [<INVALID>][<INVALID>]
 :00041 @addr: <INVALID>[IvarId(0)] = %5
 :00042 %5 = %4 & 256: i16                   [<INVALID>][<INVALID>]
 :00043 _%5 = %5 != 0: i16                   [<INVALID>][<INVALID>]
 :00044 condnotbr _%5 =>:00055
+:00045 %5 = @addr: <INVALID>[IvarId(0)]
 :00046 %5 = %5 - 256: i16                   [<INVALID>][<INVALID>]
 :00047 %6 = 65535: i32
 :00048 %3 = %5 & %6                         [<INVALID>][<INVALID>]
 :00049 _ = %0.fetch(%3;1)                   [<INVALID>]
 :00051 %5 = @clk: <INVALID>[IvarId(0)]
 :00052 %6 = const[CLK_1]                    [<INVALID>]
 :00053 %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00054 @clk: <INVALID>[IvarId(0)] = %5
+:00055 %5 = %1
 :00056 %6 = %2
 :00057 %5 = %0.read_write(%5;2)             [<INVALID>]
 :00059 ret %5
------------------------------------
------------------------------------
<read_write> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:424
meta:on_stack:true kind:Ruby mode:method FuncId(418) regs:5 ISeq(RubyFuncInfo { id:418 name:read_write method:(FuncId(418), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 condnotbr %1 =>:00022
+:00002 %3 = @addr: <INVALID>[IvarId(0)]
 :00003 %3 = %0.fetch(%3;1)                  [<INVALID>]
 :00005 @data: <INVALID>[IvarId(0)] = %3
 :00006 %3 = @clk: <INVALID>[IvarId(0)]
 :00007 %4 = const[CLK_1]                    [<INVALID>]
 :00008 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00009 @clk: <INVALID>[IvarId(0)] = %3
 :00010 condnotbr %2 =>:00020
+:00011 %3 = @addr: <INVALID>[IvarId(0)]
 :00012 %4 = @data: <INVALID>[IvarId(0)]
 :00013 _ = %0.store(%3;2)                   [<INVALID>]
 :00015 %3 = @clk: <INVALID>[IvarId(0)]
 :00016 %4 = const[CLK_1]                    [<INVALID>]
 :00017 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00018 @clk: <INVALID>[IvarId(0)] = %3
 :00019 ret %3
+:00020 %3 = nil
 :00021 ret %3
+:00022 %3 = nil
 :00023 ret %3
------------------------------------
------------------------------------
<_lda> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:439
meta:on_stack:true kind:Ruby mode:method FuncId(419) regs:2 ISeq(RubyFuncInfo { id:419 name:_lda method:(FuncId(419), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 @_a: <INVALID>[IvarId(0)] = %1
 :00003 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00004 ret %1
------------------------------------
------------------------------------
<_ldx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:443
meta:on_stack:true kind:Ruby mode:method FuncId(420) regs:2 ISeq(RubyFuncInfo { id:420 name:_ldx method:(FuncId(420), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 @_x: <INVALID>[IvarId(0)] = %1
 :00003 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00004 ret %1
------------------------------------
------------------------------------
<_ldy> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:447
meta:on_stack:true kind:Ruby mode:method FuncId(421) regs:2 ISeq(RubyFuncInfo { id:421 name:_ldy method:(FuncId(421), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 @_y: <INVALID>[IvarId(0)] = %1
 :00003 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00004 ret %1
------------------------------------
------------------------------------
<_sta> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:452
meta:on_stack:true kind:Ruby mode:method FuncId(422) regs:2 ISeq(RubyFuncInfo { id:422 name:_sta method:(FuncId(422), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 @data: <INVALID>[IvarId(0)] = %1
 :00003 ret %1
------------------------------------
------------------------------------
<_stx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:456
meta:on_stack:true kind:Ruby mode:method FuncId(423) regs:2 ISeq(RubyFuncInfo { id:423 name:_stx method:(FuncId(423), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_x: <INVALID>[IvarId(0)]
 :00002 @data: <INVALID>[IvarId(0)] = %1
 :00003 ret %1
------------------------------------
------------------------------------
<_sty> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:460
meta:on_stack:true kind:Ruby mode:method FuncId(424) regs:2 ISeq(RubyFuncInfo { id:424 name:_sty method:(FuncId(424), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_y: <INVALID>[IvarId(0)]
 :00002 @data: <INVALID>[IvarId(0)] = %1
 :00003 ret %1
------------------------------------
------------------------------------
<_tax> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:465
meta:on_stack:true kind:Ruby mode:method FuncId(425) regs:3 ISeq(RubyFuncInfo { id:425 name:_tax method:(FuncId(425), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_a: <INVALID>[IvarId(0)]
 :00006 @_x: <INVALID>[IvarId(0)] = %1
 :00007 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00008 ret %1
------------------------------------
------------------------------------
<_tay> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:470
meta:on_stack:true kind:Ruby mode:method FuncId(426) regs:3 ISeq(RubyFuncInfo { id:426 name:_tay method:(FuncId(426), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_a: <INVALID>[IvarId(0)]
 :00006 @_y: <INVALID>[IvarId(0)] = %1
 :00007 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00008 ret %1
------------------------------------
------------------------------------
<_txa> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:475
meta:on_stack:true kind:Ruby mode:method FuncId(427) regs:3 ISeq(RubyFuncInfo { id:427 name:_txa method:(FuncId(427), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_x: <INVALID>[IvarId(0)]
 :00006 @_a: <INVALID>[IvarId(0)] = %1
 :00007 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00008 ret %1
------------------------------------
------------------------------------
<_tya> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:480
meta:on_stack:true kind:Ruby mode:method FuncId(428) regs:3 ISeq(RubyFuncInfo { id:428 name:_tya method:(FuncId(428), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_y: <INVALID>[IvarId(0)]
 :00006 @_a: <INVALID>[IvarId(0)] = %1
 :00007 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00008 ret %1
------------------------------------
------------------------------------
<_jmp_a> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:486
meta:on_stack:true kind:Ruby mode:method FuncId(429) regs:3 ISeq(RubyFuncInfo { id:429 name:_jmp_a method:(FuncId(429), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_pc: <INVALID>[IvarId(0)]
 :00002 %1 = %0.peek16(%1;1)                 [<INVALID>]
 :00004 @_pc: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @clk: <INVALID>[IvarId(0)]
 :00006 %2 = const[CLK_3]                    [<INVALID>]
 :00007 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00008 @clk: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<_jmp_i> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:491
meta:on_stack:true kind:Ruby mode:method FuncId(430) regs:6 ISeq(RubyFuncInfo { id:430 name:_jmp_i method:(FuncId(430), 0) args: 0 non_temp: 3 temp: 2})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %4 = @_pc: <INVALID>[IvarId(0)]
 :00002 %1 = %0.peek16(%4;1)                 [<INVALID>]
 :00004 %2 = %0.fetch(%1;1)                  [<INVALID>]
 :00006 %4 = 65280: i32
 :00007 %4 = %1 & %4                         [<INVALID>][<INVALID>]
 :00008 %5 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 %5 = %5 & 255: i16                   [<INVALID>][<INVALID>]
 :00010 %1 = %4 | %5                         [<INVALID>][<INVALID>]
 :00011 %3 = %0.fetch(%1;1)                  [<INVALID>]
 :00013 %4 = %3 * 256: i16                   [<INVALID>][<INVALID>]
 :00014 %4 = %4 + %2                         [<INVALID>][<INVALID>]
 :00015 @_pc: <INVALID>[IvarId(0)] = %4
 :00016 %4 = @clk: <INVALID>[IvarId(0)]
 :00017 %5 = const[CLK_5]                    [<INVALID>]
 :00018 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00019 @clk: <INVALID>[IvarId(0)] = %4
 :00020 ret %4
------------------------------------
------------------------------------
<_jsr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:500
meta:on_stack:true kind:Ruby mode:method FuncId(431) regs:4 ISeq(RubyFuncInfo { id:431 name:_jsr method:(FuncId(431), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @_pc: <INVALID>[IvarId(0)]
 :00002 %1 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 _ = %0.push16(%1;1)                  [<INVALID>]
 :00005 %2 = @_pc: <INVALID>[IvarId(0)]
 :00006 %2 = %0.peek16(%2;1)                 [<INVALID>]
 :00008 @_pc: <INVALID>[IvarId(0)] = %2
 :00009 %2 = @clk: <INVALID>[IvarId(0)]
 :00010 %3 = const[CLK_6]                    [<INVALID>]
 :00011 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00012 @clk: <INVALID>[IvarId(0)] = %2
 :00013 ret %2
------------------------------------
------------------------------------
<_rts> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:507
meta:on_stack:true kind:Ruby mode:method FuncId(432) regs:3 ISeq(RubyFuncInfo { id:432 name:_rts method:(FuncId(432), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = %0.pull16()                     [<INVALID>]
 :00003 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00004 %2 = 65535: i32
 :00005 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00006 @_pc: <INVALID>[IvarId(0)] = %1
 :00007 %1 = @clk: <INVALID>[IvarId(0)]
 :00008 %2 = const[CLK_6]                    [<INVALID>]
 :00009 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00010 @clk: <INVALID>[IvarId(0)] = %1
 :00011 ret %1
------------------------------------
------------------------------------
<_rti> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:512
meta:on_stack:true kind:Ruby mode:method FuncId(433) regs:4 ISeq(RubyFuncInfo { id:433 name:_rti method:(FuncId(433), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @clk: <INVALID>[IvarId(0)]
 :00002 %3 = const[CLK_6]                    [<INVALID>]
 :00003 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %2
 :00005 %2 = %0.pull8()                      [<INVALID>]
 :00007 %1 = %2
 :00008 %2 = %0.pull16()                     [<INVALID>]
 :00010 @_pc: <INVALID>[IvarId(0)] = %2
 :00011 _ = %0.flags_unpack(%1;1)            [<INVALID>]
 :00013 %2 = @irq_flags: <INVALID>[IvarId(0)]
 :00014 _%2 = %2 == 0: i16                   [<INVALID>][<INVALID>]
 :00015 condbr _%2 =>:00019
+:00016 %2 = @_p_i: <INVALID>[IvarId(0)]
 :00017 _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00018 condnotbr _%2 =>:00021
+:00019 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00020 br =>:00023
+:00021 %2 = 0: i32
 :00022 @clk_target: <INVALID>[IvarId(0)] = %2
+:00023 @clk_irq: <INVALID>[IvarId(0)] = %2
 :00024 ret %2
------------------------------------
------------------------------------
<_bne> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:520
meta:on_stack:true kind:Ruby mode:method FuncId(434) regs:2 ISeq(RubyFuncInfo { id:434 name:_bne method:(FuncId(434), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_p_nz: <INVALID>[IvarId(0)]
 :00002 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00003 %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00004 %1 = %0.branch(%1;1)                 [<INVALID>]
 :00006 ret %1
------------------------------------
------------------------------------
<_beq> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:524
meta:on_stack:true kind:Ruby mode:method FuncId(435) regs:2 ISeq(RubyFuncInfo { id:435 name:_beq method:(FuncId(435), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_p_nz: <INVALID>[IvarId(0)]
 :00002 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00003 %1 = %1 == 0: i16                    [<INVALID>][<INVALID>]
 :00004 %1 = %0.branch(%1;1)                 [<INVALID>]
 :00006 ret %1
------------------------------------
------------------------------------
<_bmi> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:528
meta:on_stack:true kind:Ruby mode:method FuncId(436) regs:2 ISeq(RubyFuncInfo { id:436 name:_bmi method:(FuncId(436), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_p_nz: <INVALID>[IvarId(0)]
 :00002 %1 = %1 & 384: i16                   [<INVALID>][<INVALID>]
 :00003 %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00004 %1 = %0.branch(%1;1)                 [<INVALID>]
 :00006 ret %1
------------------------------------
------------------------------------
<_bpl> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:532
meta:on_stack:true kind:Ruby mode:method FuncId(437) regs:2 ISeq(RubyFuncInfo { id:437 name:_bpl method:(FuncId(437), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_p_nz: <INVALID>[IvarId(0)]
 :00002 %1 = %1 & 384: i16                   [<INVALID>][<INVALID>]
 :00003 %1 = %1 == 0: i16                    [<INVALID>][<INVALID>]
 :00004 %1 = %0.branch(%1;1)                 [<INVALID>]
 :00006 ret %1
------------------------------------
------------------------------------
<_bcs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:536
meta:on_stack:true kind:Ruby mode:method FuncId(438) regs:2 ISeq(RubyFuncInfo { id:438 name:_bcs method:(FuncId(438), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_p_c: <INVALID>[IvarId(0)]
 :00002 %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00003 %1 = %0.branch(%1;1)                 [<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<_bcc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:540
meta:on_stack:true kind:Ruby mode:method FuncId(439) regs:2 ISeq(RubyFuncInfo { id:439 name:_bcc method:(FuncId(439), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_p_c: <INVALID>[IvarId(0)]
 :00002 %1 = %1 == 0: i16                    [<INVALID>][<INVALID>]
 :00003 %1 = %0.branch(%1;1)                 [<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<_bvs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:544
meta:on_stack:true kind:Ruby mode:method FuncId(440) regs:2 ISeq(RubyFuncInfo { id:440 name:_bvs method:(FuncId(440), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_p_v: <INVALID>[IvarId(0)]
 :00002 %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00003 %1 = %0.branch(%1;1)                 [<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<_bvc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:548
meta:on_stack:true kind:Ruby mode:method FuncId(441) regs:2 ISeq(RubyFuncInfo { id:441 name:_bvc method:(FuncId(441), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @_p_v: <INVALID>[IvarId(0)]
 :00002 %1 = %1 == 0: i16                    [<INVALID>][<INVALID>]
 :00003 %1 = %0.branch(%1;1)                 [<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<_adc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:553
meta:on_stack:true kind:Ruby mode:method FuncId(442) regs:5 ISeq(RubyFuncInfo { id:442 name:_adc method:(FuncId(442), 0) args: 0 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @_a: <INVALID>[IvarId(0)]
 :00002 %3 = @data: <INVALID>[IvarId(0)]
 :00003 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 %3 = @_p_c: <INVALID>[IvarId(0)]
 :00005 %1 = %2 + %3                         [<INVALID>][<INVALID>]
 :00006 %3 = @_a: <INVALID>[IvarId(0)]
 :00007 %4 = @data: <INVALID>[IvarId(0)]
 :00008 %2 = %3 ^ %4                         [<INVALID>][<INVALID>]
 :00009 %2 = ~%2                             [<INVALID>]
 :00010 %3 = @_a: <INVALID>[IvarId(0)]
 :00011 %3 = %3 ^ %1                         [<INVALID>][<INVALID>]
 :00012 %2 = %2 & %3                         [<INVALID>][<INVALID>]
 :00013 %2 = %2 & 128: i16                   [<INVALID>][<INVALID>]
 :00014 @_p_v: <INVALID>[IvarId(0)] = %2
 :00015 %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00016 @_a: <INVALID>[IvarId(0)] = %2
 :00017 @_p_nz: <INVALID>[IvarId(0)] = %2
 :00018 %2 = 8: i32
 :00019 %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00020 @_p_c: <INVALID>[IvarId(0)] = %2
 :00021 ret %2
------------------------------------
------------------------------------
<_sbc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:560
meta:on_stack:true kind:Ruby mode:method FuncId(443) regs:5 ISeq(RubyFuncInfo { id:443 name:_sbc method:(FuncId(443), 0) args: 0 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %3 ^ 255: i16                   [<INVALID>][<INVALID>]
 :00003 %3 = @_a: <INVALID>[IvarId(0)]
 :00004 %3 = %3 + %1                         [<INVALID>][<INVALID>]
 :00005 %4 = @_p_c: <INVALID>[IvarId(0)]
 :00006 %2 = %3 + %4                         [<INVALID>][<INVALID>]
 :00007 %4 = @_a: <INVALID>[IvarId(0)]
 :00008 %3 = %4 ^ %1                         [<INVALID>][<INVALID>]
 :00009 %3 = ~%3                             [<INVALID>]
 :00010 %4 = @_a: <INVALID>[IvarId(0)]
 :00011 %4 = %4 ^ %2                         [<INVALID>][<INVALID>]
 :00012 %3 = %3 & %4                         [<INVALID>][<INVALID>]
 :00013 %3 = %3 & 128: i16                   [<INVALID>][<INVALID>]
 :00014 @_p_v: <INVALID>[IvarId(0)] = %3
 :00015 %3 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00016 @_a: <INVALID>[IvarId(0)] = %3
 :00017 @_p_nz: <INVALID>[IvarId(0)] = %3
 :00018 %3 = 8: i32
 :00019 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00020 @_p_c: <INVALID>[IvarId(0)] = %3
 :00021 ret %3
------------------------------------
------------------------------------
<_and> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:569
meta:on_stack:true kind:Ruby mode:method FuncId(444) regs:3 ISeq(RubyFuncInfo { id:444 name:_and method:(FuncId(444), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 %2 = @data: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 @_a: <INVALID>[IvarId(0)] = %1
 :00005 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00006 ret %1
------------------------------------
------------------------------------
<_ora> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:573
meta:on_stack:true kind:Ruby mode:method FuncId(445) regs:3 ISeq(RubyFuncInfo { id:445 name:_ora method:(FuncId(445), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 %2 = @data: <INVALID>[IvarId(0)]
 :00003 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00004 @_a: <INVALID>[IvarId(0)] = %1
 :00005 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00006 ret %1
------------------------------------
------------------------------------
<_eor> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:577
meta:on_stack:true kind:Ruby mode:method FuncId(446) regs:3 ISeq(RubyFuncInfo { id:446 name:_eor method:(FuncId(446), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 %2 = @data: <INVALID>[IvarId(0)]
 :00003 %1 = %1 ^ %2                         [<INVALID>][<INVALID>]
 :00004 @_a: <INVALID>[IvarId(0)] = %1
 :00005 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00006 ret %1
------------------------------------
------------------------------------
<_bit> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:581
meta:on_stack:true kind:Ruby mode:method FuncId(447) regs:3 ISeq(RubyFuncInfo { id:447 name:_bit method:(FuncId(447), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %2 = @_a: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 _%1 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00005 condnotbr _%1 =>:00008
+:00006 %1 = 1: i32
 :00007 br =>:00009
+:00008 %1 = 0: i32
+:00009 %2 = @data: <INVALID>[IvarId(0)]
 :00010 %2 = %2 & 128: i16                   [<INVALID>][<INVALID>]
 :00011 %2 = %2 << 1: i16                    [<INVALID>][<INVALID>]
 :00012 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00013 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00014 %1 = @data: <INVALID>[IvarId(0)]
 :00015 %1 = %1 & 64: i16                    [<INVALID>][<INVALID>]
 :00016 @_p_v: <INVALID>[IvarId(0)] = %1
 :00017 ret %1
------------------------------------
------------------------------------
<_cmp> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:586
meta:on_stack:true kind:Ruby mode:method FuncId(448) regs:4 ISeq(RubyFuncInfo { id:448 name:_cmp method:(FuncId(448), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @_a: <INVALID>[IvarId(0)]
 :00002 %3 = @data: <INVALID>[IvarId(0)]
 :00003 %1 = %2 - %3                         [<INVALID>][<INVALID>]
 :00004 %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00005 @_p_nz: <INVALID>[IvarId(0)] = %2
 :00006 %2 = 8: i32
 :00007 %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00008 %2 = 1: i16 - %2                     [<INVALID>][<INVALID>]
 :00009 @_p_c: <INVALID>[IvarId(0)] = %2
 :00010 ret %2
------------------------------------
------------------------------------
<_cpx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:592
meta:on_stack:true kind:Ruby mode:method FuncId(449) regs:4 ISeq(RubyFuncInfo { id:449 name:_cpx method:(FuncId(449), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @_x: <INVALID>[IvarId(0)]
 :00002 %3 = @data: <INVALID>[IvarId(0)]
 :00003 %1 = %2 - %3                         [<INVALID>][<INVALID>]
 :00004 %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00005 @_p_nz: <INVALID>[IvarId(0)] = %2
 :00006 %2 = 8: i32
 :00007 %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00008 %2 = 1: i16 - %2                     [<INVALID>][<INVALID>]
 :00009 @_p_c: <INVALID>[IvarId(0)] = %2
 :00010 ret %2
------------------------------------
------------------------------------
<_cpy> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:598
meta:on_stack:true kind:Ruby mode:method FuncId(450) regs:4 ISeq(RubyFuncInfo { id:450 name:_cpy method:(FuncId(450), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @_y: <INVALID>[IvarId(0)]
 :00002 %3 = @data: <INVALID>[IvarId(0)]
 :00003 %1 = %2 - %3                         [<INVALID>][<INVALID>]
 :00004 %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00005 @_p_nz: <INVALID>[IvarId(0)] = %2
 :00006 %2 = 8: i32
 :00007 %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00008 %2 = 1: i16 - %2                     [<INVALID>][<INVALID>]
 :00009 @_p_c: <INVALID>[IvarId(0)] = %2
 :00010 ret %2
------------------------------------
------------------------------------
<_asl> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:605
meta:on_stack:true kind:Ruby mode:method FuncId(451) regs:2 ISeq(RubyFuncInfo { id:451 name:_asl method:(FuncId(451), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 >> 7: i16                    [<INVALID>][<INVALID>]
 :00003 @_p_c: <INVALID>[IvarId(0)] = %1
 :00004 %1 = @data: <INVALID>[IvarId(0)]
 :00005 %1 = %1 << 1: i16                    [<INVALID>][<INVALID>]
 :00006 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00007 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00008 @data: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<_lsr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:610
meta:on_stack:true kind:Ruby mode:method FuncId(452) regs:2 ISeq(RubyFuncInfo { id:452 name:_lsr method:(FuncId(452), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00003 @_p_c: <INVALID>[IvarId(0)] = %1
 :00004 %1 = @data: <INVALID>[IvarId(0)]
 :00005 %1 = %1 >> 1: i16                    [<INVALID>][<INVALID>]
 :00006 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00007 @data: <INVALID>[IvarId(0)] = %1
 :00008 ret %1
------------------------------------
------------------------------------
<_rol> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:615
meta:on_stack:true kind:Ruby mode:method FuncId(453) regs:3 ISeq(RubyFuncInfo { id:453 name:_rol method:(FuncId(453), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 << 1: i16                    [<INVALID>][<INVALID>]
 :00003 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 %2 = @_p_c: <INVALID>[IvarId(0)]
 :00005 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00006 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00007 %1 = @data: <INVALID>[IvarId(0)]
 :00008 %1 = %1 >> 7: i16                    [<INVALID>][<INVALID>]
 :00009 @_p_c: <INVALID>[IvarId(0)] = %1
 :00010 %1 = @_p_nz: <INVALID>[IvarId(0)]
 :00011 @data: <INVALID>[IvarId(0)] = %1
 :00012 ret %1
------------------------------------
------------------------------------
<_ror> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:621
meta:on_stack:true kind:Ruby mode:method FuncId(454) regs:3 ISeq(RubyFuncInfo { id:454 name:_ror method:(FuncId(454), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 >> 1: i16                    [<INVALID>][<INVALID>]
 :00003 %2 = @_p_c: <INVALID>[IvarId(0)]
 :00004 %2 = %2 << 7: i16                    [<INVALID>][<INVALID>]
 :00005 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00006 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00007 %1 = @data: <INVALID>[IvarId(0)]
 :00008 %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00009 @_p_c: <INVALID>[IvarId(0)] = %1
 :00010 %1 = @_p_nz: <INVALID>[IvarId(0)]
 :00011 @data: <INVALID>[IvarId(0)] = %1
 :00012 ret %1
------------------------------------
------------------------------------
<_dec> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:628
meta:on_stack:true kind:Ruby mode:method FuncId(455) regs:2 ISeq(RubyFuncInfo { id:455 name:_dec method:(FuncId(455), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00003 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00005 @data: <INVALID>[IvarId(0)] = %1
 :00006 ret %1
------------------------------------
------------------------------------
<_inc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:632
meta:on_stack:true kind:Ruby mode:method FuncId(456) regs:2 ISeq(RubyFuncInfo { id:456 name:_inc method:(FuncId(456), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00005 @data: <INVALID>[IvarId(0)] = %1
 :00006 ret %1
------------------------------------
------------------------------------
<_dex> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:636
meta:on_stack:true kind:Ruby mode:method FuncId(457) regs:3 ISeq(RubyFuncInfo { id:457 name:_dex method:(FuncId(457), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_x: <INVALID>[IvarId(0)]
 :00006 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00007 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 @_x: <INVALID>[IvarId(0)] = %1
 :00009 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00010 @data: <INVALID>[IvarId(0)] = %1
 :00011 ret %1
------------------------------------
------------------------------------
<_dey> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:641
meta:on_stack:true kind:Ruby mode:method FuncId(458) regs:3 ISeq(RubyFuncInfo { id:458 name:_dey method:(FuncId(458), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_y: <INVALID>[IvarId(0)]
 :00006 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00007 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 @_y: <INVALID>[IvarId(0)] = %1
 :00009 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00010 @data: <INVALID>[IvarId(0)] = %1
 :00011 ret %1
------------------------------------
------------------------------------
<_inx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:646
meta:on_stack:true kind:Ruby mode:method FuncId(459) regs:3 ISeq(RubyFuncInfo { id:459 name:_inx method:(FuncId(459), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_x: <INVALID>[IvarId(0)]
 :00006 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 @_x: <INVALID>[IvarId(0)] = %1
 :00009 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00010 @data: <INVALID>[IvarId(0)] = %1
 :00011 ret %1
------------------------------------
------------------------------------
<_iny> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:651
meta:on_stack:true kind:Ruby mode:method FuncId(460) regs:3 ISeq(RubyFuncInfo { id:460 name:_iny method:(FuncId(460), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_y: <INVALID>[IvarId(0)]
 :00006 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 @_y: <INVALID>[IvarId(0)] = %1
 :00009 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00010 @data: <INVALID>[IvarId(0)] = %1
 :00011 ret %1
------------------------------------
------------------------------------
<_clc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:657
meta:on_stack:true kind:Ruby mode:method FuncId(461) regs:3 ISeq(RubyFuncInfo { id:461 name:_clc method:(FuncId(461), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = 0: i32
 :00006 @_p_c: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<_sec> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:662
meta:on_stack:true kind:Ruby mode:method FuncId(462) regs:3 ISeq(RubyFuncInfo { id:462 name:_sec method:(FuncId(462), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = 1: i32
 :00006 @_p_c: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<_cld> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:667
meta:on_stack:true kind:Ruby mode:method FuncId(463) regs:3 ISeq(RubyFuncInfo { id:463 name:_cld method:(FuncId(463), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = 0: i32
 :00006 @_p_d: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<_sed> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:672
meta:on_stack:true kind:Ruby mode:method FuncId(464) regs:3 ISeq(RubyFuncInfo { id:464 name:_sed method:(FuncId(464), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = 8: i32
 :00006 @_p_d: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<_clv> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:677
meta:on_stack:true kind:Ruby mode:method FuncId(465) regs:3 ISeq(RubyFuncInfo { id:465 name:_clv method:(FuncId(465), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = 0: i32
 :00006 @_p_v: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<_sei> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:682
meta:on_stack:true kind:Ruby mode:method FuncId(466) regs:3 ISeq(RubyFuncInfo { id:466 name:_sei method:(FuncId(466), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_p_i: <INVALID>[IvarId(0)]
 :00006 _%1 = %1 == 0: i16                   [<INVALID>][<INVALID>]
 :00007 condnotbr _%1 =>:00021
+:00008 %1 = 4: i32
 :00009 @_p_i: <INVALID>[IvarId(0)] = %1
 :00010 %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00011 @clk_irq: <INVALID>[IvarId(0)] = %1
 :00012 %1 = @irq_flags: <INVALID>[IvarId(0)]
 :00013 _%1 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00014 condnotbr _%1 =>:00019
+:00015 %1 = const[IRQ_VECTOR]               [<INVALID>]
 :00016 %1 = %0.do_isr(%1;1)                 [<INVALID>]
 :00018 ret %1
+:00019 %1 = nil
 :00020 ret %1
+:00021 %1 = nil
 :00022 ret %1
------------------------------------
------------------------------------
<_cli> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:691
meta:on_stack:true kind:Ruby mode:method FuncId(467) regs:4 ISeq(RubyFuncInfo { id:467 name:_cli method:(FuncId(467), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @clk: <INVALID>[IvarId(0)]
 :00002 %3 = const[CLK_2]                    [<INVALID>]
 :00003 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %2
 :00005 %2 = @_p_i: <INVALID>[IvarId(0)]
 :00006 _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00007 condnotbr _%2 =>:00025
+:00008 %2 = 0: i32
 :00009 @_p_i: <INVALID>[IvarId(0)] = %2
 :00010 %2 = @irq_flags: <INVALID>[IvarId(0)]
 :00011 _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00012 condnotbr _%2 =>:00023
+:00013 %2 = @clk: <INVALID>[IvarId(0)]
 :00014 %1 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00015 @clk_irq: <INVALID>[IvarId(0)] = %1
 :00016 %2 = @clk_target: <INVALID>[IvarId(0)]
 :00017 _%2 = %2 > %1                        [<INVALID>][<INVALID>]
 :00018 condnotbr _%2 =>:00021
+:00019 @clk_target: <INVALID>[IvarId(0)] = %1
 :00020 ret %1
+:00021 %2 = nil
 :00022 ret %2
+:00023 %2 = nil
 :00024 ret %2
+:00025 %2 = nil
 :00026 ret %2
------------------------------------
------------------------------------
<_pha> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:703
meta:on_stack:true kind:Ruby mode:method FuncId(468) regs:3 ISeq(RubyFuncInfo { id:468 name:_pha method:(FuncId(468), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_3]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_a: <INVALID>[IvarId(0)]
 :00006 %1 = %0.push8(%1;1)                  [<INVALID>]
 :00008 ret %1
------------------------------------
------------------------------------
<_php> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:708
meta:on_stack:true kind:Ruby mode:method FuncId(469) regs:4 ISeq(RubyFuncInfo { id:469 name:_php method:(FuncId(469), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @clk: <INVALID>[IvarId(0)]
 :00002 %3 = const[CLK_3]                    [<INVALID>]
 :00003 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %2
 :00005 %2 = %0.flags_pack()                 [<INVALID>]
 :00007 %1 = %2 | 16: i16                    [<INVALID>][<INVALID>]
 :00008 %2 = %0.push8(%1;1)                  [<INVALID>]
 :00010 ret %2
------------------------------------
------------------------------------
<_pla> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:714
meta:on_stack:true kind:Ruby mode:method FuncId(470) regs:3 ISeq(RubyFuncInfo { id:470 name:_pla method:(FuncId(470), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_4]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = %0.pull8()                      [<INVALID>]
 :00007 @_a: <INVALID>[IvarId(0)] = %1
 :00008 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<_plp> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:719
meta:on_stack:true kind:Ruby mode:method FuncId(471) regs:5 ISeq(RubyFuncInfo { id:471 name:_plp method:(FuncId(471), 0) args: 0 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @clk: <INVALID>[IvarId(0)]
 :00002 %4 = const[CLK_4]                    [<INVALID>]
 :00003 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %3
 :00005 %1 = @_p_i: <INVALID>[IvarId(0)]
 :00006 %3 = %0.pull8()                      [<INVALID>]
 :00008 _ = %0.flags_unpack(%3;1)            [<INVALID>]
 :00010 %3 = @irq_flags: <INVALID>[IvarId(0)]
 :00011 _%3 = %3 != 0: i16                   [<INVALID>][<INVALID>]
 :00012 condnotbr _%3 =>:00037
+:00013 %3 = @_p_i: <INVALID>[IvarId(0)]
 :00014 _%3 = %1 > %3                        [<INVALID>][<INVALID>]
 :00015 condnotbr _%3 =>:00026
+:00016 %3 = @clk: <INVALID>[IvarId(0)]
 :00017 %2 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00018 @clk_irq: <INVALID>[IvarId(0)] = %2
 :00019 %3 = @clk_target: <INVALID>[IvarId(0)]
 :00020 _%3 = %3 > %2                        [<INVALID>][<INVALID>]
 :00021 condnotbr _%3 =>:00024
+:00022 @clk_target: <INVALID>[IvarId(0)] = %2
 :00023 ret %2
+:00024 %3 = nil
 :00025 ret %3
+:00026 %3 = @_p_i: <INVALID>[IvarId(0)]
 :00027 _%3 = %1 < %3                        [<INVALID>][<INVALID>]
 :00028 condnotbr _%3 =>:00035
+:00029 %3 = const[FOREVER_CLOCK]            [<INVALID>]
 :00030 @clk_irq: <INVALID>[IvarId(0)] = %3
 :00031 %3 = const[IRQ_VECTOR]               [<INVALID>]
 :00032 %3 = %0.do_isr(%3;1)                 [<INVALID>]
 :00034 ret %3
+:00035 %3 = nil
 :00036 ret %3
+:00037 %3 = nil
 :00038 ret %3
------------------------------------
------------------------------------
<_tsx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:734
meta:on_stack:true kind:Ruby mode:method FuncId(472) regs:3 ISeq(RubyFuncInfo { id:472 name:_tsx method:(FuncId(472), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_sp: <INVALID>[IvarId(0)]
 :00006 @_x: <INVALID>[IvarId(0)] = %1
 :00007 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00008 ret %1
------------------------------------
------------------------------------
<_txs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:739
meta:on_stack:true kind:Ruby mode:method FuncId(473) regs:3 ISeq(RubyFuncInfo { id:473 name:_txs method:(FuncId(473), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @clk: <INVALID>[IvarId(0)]
 :00002 %2 = const[CLK_2]                    [<INVALID>]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_x: <INVALID>[IvarId(0)]
 :00006 @_sp: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<_anc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:745
meta:on_stack:true kind:Ruby mode:method FuncId(474) regs:3 ISeq(RubyFuncInfo { id:474 name:_anc method:(FuncId(474), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 %2 = @data: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 @_a: <INVALID>[IvarId(0)] = %1
 :00005 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00006 %1 = @_p_nz: <INVALID>[IvarId(0)]
 :00007 %1 = %1 >> 7: i16                    [<INVALID>][<INVALID>]
 :00008 @_p_c: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<_ane> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:750
meta:on_stack:true kind:Ruby mode:method FuncId(475) regs:3 ISeq(RubyFuncInfo { id:475 name:_ane method:(FuncId(475), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 %1 = %1 | 238: i16                   [<INVALID>][<INVALID>]
 :00003 %2 = @_x: <INVALID>[IvarId(0)]
 :00004 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00005 %2 = @data: <INVALID>[IvarId(0)]
 :00006 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00007 @_a: <INVALID>[IvarId(0)] = %1
 :00008 %1 = @_a: <INVALID>[IvarId(0)]
 :00009 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00010 ret %1
------------------------------------
------------------------------------
<_arr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:755
meta:on_stack:true kind:Ruby mode:method FuncId(476) regs:4 ISeq(RubyFuncInfo { id:476 name:_arr method:(FuncId(476), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %2 = @_a: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 %1 = %1 >> 1: i16                    [<INVALID>][<INVALID>]
 :00005 %2 = @_p_c: <INVALID>[IvarId(0)]
 :00006 %2 = %2 << 7: i16                    [<INVALID>][<INVALID>]
 :00007 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00008 @_a: <INVALID>[IvarId(0)] = %1
 :00009 %1 = @_a: <INVALID>[IvarId(0)]
 :00010 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00011 %1 = @_a: <INVALID>[IvarId(0)]
 :00012 %2 = 6: i32
 :00013 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00014 @_p_c: <INVALID>[IvarId(0)] = %1
 :00015 %1 = @_a: <INVALID>[IvarId(0)]
 :00016 %2 = 6: i32
 :00017 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00018 %2 = @_a: <INVALID>[IvarId(0)]
 :00019 %3 = 5: i32
 :00020 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00021 %1 = %1 ^ %2                         [<INVALID>][<INVALID>]
 :00022 @_p_v: <INVALID>[IvarId(0)] = %1
 :00023 ret %1
------------------------------------
------------------------------------
<_asr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:762
meta:on_stack:true kind:Ruby mode:method FuncId(477) regs:3 ISeq(RubyFuncInfo { id:477 name:_asr method:(FuncId(477), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %2 = @_a: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00005 @_p_c: <INVALID>[IvarId(0)] = %1
 :00006 %1 = @data: <INVALID>[IvarId(0)]
 :00007 %2 = @_a: <INVALID>[IvarId(0)]
 :00008 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00009 %1 = %1 >> 1: i16                    [<INVALID>][<INVALID>]
 :00010 @_a: <INVALID>[IvarId(0)] = %1
 :00011 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00012 ret %1
------------------------------------
------------------------------------
<_dcp> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:767
meta:on_stack:true kind:Ruby mode:method FuncId(478) regs:2 ISeq(RubyFuncInfo { id:478 name:_dcp method:(FuncId(478), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00003 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 @data: <INVALID>[IvarId(0)] = %1
 :00005 %1 = %0._cmp()                       [<INVALID>]
 :00007 ret %1
------------------------------------
------------------------------------
<_isb> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:772
meta:on_stack:true kind:Ruby mode:method FuncId(479) regs:2 ISeq(RubyFuncInfo { id:479 name:_isb method:(FuncId(479), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 @data: <INVALID>[IvarId(0)] = %1
 :00005 %1 = %0._sbc()                       [<INVALID>]
 :00007 ret %1
------------------------------------
------------------------------------
<_las> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:777
meta:on_stack:true kind:Ruby mode:method FuncId(480) regs:3 ISeq(RubyFuncInfo { id:480 name:_las method:(FuncId(480), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_sp: <INVALID>[IvarId(0)]
 :00002 %2 = @data: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 @_sp: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_sp: <INVALID>[IvarId(0)]
 :00006 @_x: <INVALID>[IvarId(0)] = %1
 :00007 @_a: <INVALID>[IvarId(0)] = %1
 :00008 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<_lax> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:782
meta:on_stack:true kind:Ruby mode:method FuncId(481) regs:2 ISeq(RubyFuncInfo { id:481 name:_lax method:(FuncId(481), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 @_x: <INVALID>[IvarId(0)] = %1
 :00003 @_a: <INVALID>[IvarId(0)] = %1
 :00004 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00005 ret %1
------------------------------------
------------------------------------
<_lxa> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:786
meta:on_stack:true kind:Ruby mode:method FuncId(482) regs:2 ISeq(RubyFuncInfo { id:482 name:_lxa method:(FuncId(482), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 @_x: <INVALID>[IvarId(0)] = %1
 :00003 @_a: <INVALID>[IvarId(0)] = %1
 :00004 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00005 ret %1
------------------------------------
------------------------------------
<_rla> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:790
meta:on_stack:true kind:Ruby mode:method FuncId(483) regs:4 ISeq(RubyFuncInfo { id:483 name:_rla method:(FuncId(483), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_p_c: <INVALID>[IvarId(0)]
 :00002 %2 = @data: <INVALID>[IvarId(0)]
 :00003 %2 = %2 >> 7: i16                    [<INVALID>][<INVALID>]
 :00004 @_p_c: <INVALID>[IvarId(0)] = %2
 :00005 %2 = @data: <INVALID>[IvarId(0)]
 :00006 %2 = %2 << 1: i16                    [<INVALID>][<INVALID>]
 :00007 %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 %2 = %2 | %1                         [<INVALID>][<INVALID>]
 :00009 @data: <INVALID>[IvarId(0)] = %2
 :00010 %2 = @_a: <INVALID>[IvarId(0)]
 :00011 %3 = @data: <INVALID>[IvarId(0)]
 :00012 %2 = %2 & %3                         [<INVALID>][<INVALID>]
 :00013 @_a: <INVALID>[IvarId(0)] = %2
 :00014 @_p_nz: <INVALID>[IvarId(0)] = %2
 :00015 ret %2
------------------------------------
------------------------------------
<_rra> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:797
meta:on_stack:true kind:Ruby mode:method FuncId(484) regs:3 ISeq(RubyFuncInfo { id:484 name:_rra method:(FuncId(484), 0) args: 0 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @_p_c: <INVALID>[IvarId(0)]
 :00002 %1 = %2 << 7: i16                    [<INVALID>][<INVALID>]
 :00003 %2 = @data: <INVALID>[IvarId(0)]
 :00004 %2 = %2 & 1: i16                     [<INVALID>][<INVALID>]
 :00005 @_p_c: <INVALID>[IvarId(0)] = %2
 :00006 %2 = @data: <INVALID>[IvarId(0)]
 :00007 %2 = %2 >> 1: i16                    [<INVALID>][<INVALID>]
 :00008 %2 = %2 | %1                         [<INVALID>][<INVALID>]
 :00009 @data: <INVALID>[IvarId(0)] = %2
 :00010 %2 = %0._adc()                       [<INVALID>]
 :00012 ret %2
------------------------------------
------------------------------------
<_sax> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:804
meta:on_stack:true kind:Ruby mode:method FuncId(485) regs:3 ISeq(RubyFuncInfo { id:485 name:_sax method:(FuncId(485), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 %2 = @_x: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 @data: <INVALID>[IvarId(0)] = %1
 :00005 ret %1
------------------------------------
------------------------------------
<_sbx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:808
meta:on_stack:true kind:Ruby mode:method FuncId(486) regs:3 ISeq(RubyFuncInfo { id:486 name:_sbx method:(FuncId(486), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 %2 = @_x: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 %2 = @data: <INVALID>[IvarId(0)]
 :00005 %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00006 @data: <INVALID>[IvarId(0)] = %1
 :00007 %1 = @data: <INVALID>[IvarId(0)]
 :00008 %2 = 65535: i32
 :00009 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00010 _%1 = %1 <= 255: i16                 [<INVALID>][<INVALID>]
 :00011 condnotbr _%1 =>:00014
+:00012 %1 = 1: i32
 :00013 br =>:00015
+:00014 %1 = 0: i32
+:00015 @_p_c: <INVALID>[IvarId(0)] = %1
 :00016 %1 = @data: <INVALID>[IvarId(0)]
 :00017 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00018 @_x: <INVALID>[IvarId(0)] = %1
 :00019 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00020 ret %1
------------------------------------
------------------------------------
<_sha> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:814
meta:on_stack:true kind:Ruby mode:method FuncId(487) regs:3 ISeq(RubyFuncInfo { id:487 name:_sha method:(FuncId(487), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 %2 = @_x: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 %2 = @addr: <INVALID>[IvarId(0)]
 :00005 %2 = %2 >> 8: i16                    [<INVALID>][<INVALID>]
 :00006 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00008 @data: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<_shs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:818
meta:on_stack:true kind:Ruby mode:method FuncId(488) regs:3 ISeq(RubyFuncInfo { id:488 name:_shs method:(FuncId(488), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_a: <INVALID>[IvarId(0)]
 :00002 %2 = @_x: <INVALID>[IvarId(0)]
 :00003 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 @_sp: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @_sp: <INVALID>[IvarId(0)]
 :00006 %2 = @addr: <INVALID>[IvarId(0)]
 :00007 %2 = %2 >> 8: i16                    [<INVALID>][<INVALID>]
 :00008 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00010 @data: <INVALID>[IvarId(0)] = %1
 :00011 ret %1
------------------------------------
------------------------------------
<_shx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:823
meta:on_stack:true kind:Ruby mode:method FuncId(489) regs:3 ISeq(RubyFuncInfo { id:489 name:_shx method:(FuncId(489), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_x: <INVALID>[IvarId(0)]
 :00002 %2 = @addr: <INVALID>[IvarId(0)]
 :00003 %2 = %2 >> 8: i16                    [<INVALID>][<INVALID>]
 :00004 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00005 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00006 @data: <INVALID>[IvarId(0)] = %1
 :00007 %1 = @data: <INVALID>[IvarId(0)]
 :00008 %1 = %1 << 8: i16                    [<INVALID>][<INVALID>]
 :00009 %2 = @addr: <INVALID>[IvarId(0)]
 :00010 %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00011 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00012 @addr: <INVALID>[IvarId(0)] = %1
 :00013 ret %1
------------------------------------
------------------------------------
<_shy> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:828
meta:on_stack:true kind:Ruby mode:method FuncId(490) regs:3 ISeq(RubyFuncInfo { id:490 name:_shy method:(FuncId(490), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_y: <INVALID>[IvarId(0)]
 :00002 %2 = @addr: <INVALID>[IvarId(0)]
 :00003 %2 = %2 >> 8: i16                    [<INVALID>][<INVALID>]
 :00004 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00005 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00006 @data: <INVALID>[IvarId(0)] = %1
 :00007 %1 = @data: <INVALID>[IvarId(0)]
 :00008 %1 = %1 << 8: i16                    [<INVALID>][<INVALID>]
 :00009 %2 = @addr: <INVALID>[IvarId(0)]
 :00010 %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00011 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00012 @addr: <INVALID>[IvarId(0)] = %1
 :00013 ret %1
------------------------------------
------------------------------------
<_slo> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:833
meta:on_stack:true kind:Ruby mode:method FuncId(491) regs:3 ISeq(RubyFuncInfo { id:491 name:_slo method:(FuncId(491), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 >> 7: i16                    [<INVALID>][<INVALID>]
 :00003 @_p_c: <INVALID>[IvarId(0)] = %1
 :00004 %1 = @data: <INVALID>[IvarId(0)]
 :00005 %1 = %1 << 1: i16                    [<INVALID>][<INVALID>]
 :00006 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00007 @data: <INVALID>[IvarId(0)] = %1
 :00008 %1 = @_a: <INVALID>[IvarId(0)]
 :00009 %2 = @data: <INVALID>[IvarId(0)]
 :00010 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00011 @_a: <INVALID>[IvarId(0)] = %1
 :00012 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00013 ret %1
------------------------------------
------------------------------------
<_sre> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:839
meta:on_stack:true kind:Ruby mode:method FuncId(492) regs:3 ISeq(RubyFuncInfo { id:492 name:_sre method:(FuncId(492), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @data: <INVALID>[IvarId(0)]
 :00002 %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00003 @_p_c: <INVALID>[IvarId(0)] = %1
 :00004 %1 = @data: <INVALID>[IvarId(0)]
 :00005 %1 = %1 >> 1: i16                    [<INVALID>][<INVALID>]
 :00006 @data: <INVALID>[IvarId(0)] = %1
 :00007 %1 = @_a: <INVALID>[IvarId(0)]
 :00008 %2 = @data: <INVALID>[IvarId(0)]
 :00009 %1 = %1 ^ %2                         [<INVALID>][<INVALID>]
 :00010 @_a: <INVALID>[IvarId(0)] = %1
 :00011 @_p_nz: <INVALID>[IvarId(0)] = %1
 :00012 ret %1
------------------------------------
------------------------------------
<_nop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:846
meta:on_stack:true kind:Ruby mode:method FuncId(493) regs:2 ISeq(RubyFuncInfo { id:493 name:_nop method:(FuncId(493), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<_brk> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:850
meta:on_stack:true kind:Ruby mode:method FuncId(494) regs:5 ISeq(RubyFuncInfo { id:494 name:_brk method:(FuncId(494), 0) args: 0 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @_pc: <INVALID>[IvarId(0)]
 :00002 %1 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 _ = %0.push16(%1;1)                  [<INVALID>]
 :00005 %3 = %0.flags_pack()                 [<INVALID>]
 :00007 %1 = %3 | 16: i16                    [<INVALID>][<INVALID>]
 :00008 _ = %0.push8(%1;1)                   [<INVALID>]
 :00010 %3 = 4: i32
 :00011 @_p_i: <INVALID>[IvarId(0)] = %3
 :00012 %3 = const[FOREVER_CLOCK]            [<INVALID>]
 :00013 @clk_irq: <INVALID>[IvarId(0)] = %3
 :00014 %3 = @clk: <INVALID>[IvarId(0)]
 :00015 %4 = const[CLK_7]                    [<INVALID>]
 :00016 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00017 @clk: <INVALID>[IvarId(0)] = %3
 :00018 %3 = %0.fetch_irq_isr_vector()       [<INVALID>]
 :00020 %2 = %3
 :00021 %3 = %0.peek16(%2;1)                 [<INVALID>]
 :00023 @_pc: <INVALID>[IvarId(0)] = %3
 :00024 ret %3
------------------------------------
------------------------------------
<_jam> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:862
meta:on_stack:true kind:Ruby mode:method FuncId(495) regs:3 ISeq(RubyFuncInfo { id:495 name:_jam method:(FuncId(495), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @_pc: <INVALID>[IvarId(0)]
 :00002 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00003 %2 = 65535: i32
 :00004 %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00005 @_pc: <INVALID>[IvarId(0)] = %1
 :00006 %1 = @clk: <INVALID>[IvarId(0)]
 :00007 %2 = const[CLK_2]                    [<INVALID>]
 :00008 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00009 @clk: <INVALID>[IvarId(0)] = %1
 :00010 %1 = @jammed: <INVALID>[IvarId(0)]
 :00011 condnotbr %1 =>:00014
+:00012 %1 = nil
 :00013 ret %1
+:00014 %1 = literal[true]
 :00015 @jammed: <INVALID>[IvarId(0)] = %1
 :00016 %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00017 @clk_nmi: <INVALID>[IvarId(0)] = %1
 :00018 %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00019 @clk_irq: <INVALID>[IvarId(0)] = %1
 :00020 %1 = 0: i32
 :00021 @irq_flags: <INVALID>[IvarId(0)] = %1
 :00022 ret %1
------------------------------------
------------------------------------
<r_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:877
meta:on_stack:true kind:Ruby mode:method FuncId(496) regs:6 ISeq(RubyFuncInfo { id:496 name:r_op method:(FuncId(496), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = %2
 :00002 %4 = literal[true]
 :00003 %5 = literal[false]
 :00004 _ = %0.send(%3;3)                    [<INVALID>]
 :00006 %3 = %0.send(%1;1)                   [<INVALID>]
 :00008 ret %3
------------------------------------
------------------------------------
<w_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:882
meta:on_stack:true kind:Ruby mode:method FuncId(497) regs:7 ISeq(RubyFuncInfo { id:497 name:w_op method:(FuncId(497), 0) args: 3 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = %2
 :00002 %5 = literal[false]
 :00003 %6 = literal[true]
 :00004 _ = %0.send(%4;3)                    [<INVALID>]
 :00006 _ = %0.send(%1;1)                    [<INVALID>]
 :00008 %4 = %0.send(%3;1)                   [<INVALID>]
 :00010 ret %4
------------------------------------
------------------------------------
<rw_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:888
meta:on_stack:true kind:Ruby mode:method FuncId(498) regs:7 ISeq(RubyFuncInfo { id:498 name:rw_op method:(FuncId(498), 0) args: 3 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = %2
 :00002 %5 = literal[true]
 :00003 %6 = literal[true]
 :00004 _ = %0.send(%4;3)                    [<INVALID>]
 :00006 _ = %0.send(%1;1)                    [<INVALID>]
 :00008 %4 = %0.send(%3;1)                   [<INVALID>]
 :00010 ret %4
------------------------------------
------------------------------------
<a_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:894
meta:on_stack:true kind:Ruby mode:method FuncId(499) regs:4 ISeq(RubyFuncInfo { id:499 name:a_op method:(FuncId(499), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @clk: <INVALID>[IvarId(0)]
 :00002 %3 = const[CLK_2]                    [<INVALID>]
 :00003 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 @clk: <INVALID>[IvarId(0)] = %2
 :00005 %2 = @_a: <INVALID>[IvarId(0)]
 :00006 @data: <INVALID>[IvarId(0)] = %2
 :00007 _ = %0.send(%1;1)                    [<INVALID>]
 :00009 %2 = @data: <INVALID>[IvarId(0)]
 :00010 @_a: <INVALID>[IvarId(0)] = %2
 :00011 ret %2
------------------------------------
------------------------------------
<no_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:901
meta:on_stack:true kind:Ruby mode:method FuncId(500) regs:6 ISeq(RubyFuncInfo { id:500 name:no_op method:(FuncId(500), 0) args: 3 non_temp: 3 temp: 2})
[]
+:00000 init_method reg:5 arg:3 req:3 opt:0 rest:false block:None stack_offset:6
 :00001 %4 = @_pc: <INVALID>[IvarId(0)]
 :00002 %4 = %4 + %2                         [<INVALID>][<INVALID>]
 :00003 @_pc: <INVALID>[IvarId(0)] = %4
 :00004 %4 = @clk: <INVALID>[IvarId(0)]
 :00005 %5 = const[RP2A03_CC]                [<INVALID>]
 :00006 %5 = %3 * %5                         [<INVALID>][<INVALID>]
 :00007 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00008 @clk: <INVALID>[IvarId(0)] = %4
 :00009 ret %4
------------------------------------
------------------------------------
<do_clock> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:906
meta:on_stack:true kind:Ruby mode:method FuncId(501) regs:4 ISeq(RubyFuncInfo { id:501 name:do_clock method:(FuncId(501), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @apu: <INVALID>[IvarId(0)]
 :00002 %1 = %2.do_clock()                   [<INVALID>]
 :00004 %2 = @clk_frame: <INVALID>[IvarId(0)]
 :00005 _%2 = %1 > %2                        [<INVALID>][<INVALID>]
 :00006 condnotbr _%2 =>:00008
+:00007 %1 = @clk_frame: <INVALID>[IvarId(0)]
+:00008 %2 = @clk: <INVALID>[IvarId(0)]
 :00009 %3 = @clk_nmi: <INVALID>[IvarId(0)]
 :00010 _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00011 condnotbr _%2 =>:00031
+:00012 %2 = @clk_nmi: <INVALID>[IvarId(0)]
 :00013 _%2 = %1 > %2                        [<INVALID>][<INVALID>]
 :00014 condnotbr _%2 =>:00016
+:00015 %1 = @clk_nmi: <INVALID>[IvarId(0)]
+:00016 %2 = @clk: <INVALID>[IvarId(0)]
 :00017 %3 = @clk_irq: <INVALID>[IvarId(0)]
 :00018 _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00019 condnotbr _%2 =>:00025
+:00020 %2 = @clk_irq: <INVALID>[IvarId(0)]
 :00021 _%2 = %1 > %2                        [<INVALID>][<INVALID>]
 :00022 condnotbr _%2 =>:00024
+:00023 %1 = @clk_irq: <INVALID>[IvarId(0)]
+:00024 br =>:00030
+:00025 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00026 @clk_irq: <INVALID>[IvarId(0)] = %2
 :00027 %2 = const[IRQ_VECTOR]               [<INVALID>]
 :00028 _ = %0.do_isr(%2;1)                  [<INVALID>]
+:00030 br =>:00037
+:00031 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00032 @clk_irq: <INVALID>[IvarId(0)] = %2
 :00033 @clk_nmi: <INVALID>[IvarId(0)] = %2
 :00034 %2 = const[NMI_VECTOR]               [<INVALID>]
 :00035 _ = %0.do_isr(%2;1)                  [<INVALID>]
+:00037 @clk_target: <INVALID>[IvarId(0)] = %1
 :00038 ret %1
------------------------------------
------------------------------------
<run> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:926
meta:on_stack:true kind:Ruby mode:method FuncId(502) regs:14 ISeq(RubyFuncInfo { id:502 name:run method:(FuncId(502), 0) args: 0 non_temp: 0 temp: 13})
[]
+:00000 init_method reg:13 arg:0 req:0 opt:0 rest:false block:None stack_offset:10
 :00001 _ = %0.do_clock()                    [<INVALID>]
+:00003 loop_start counter=0 jit-addr=0000000000000000
+:00004 loop_start counter=0 jit-addr=0000000000000000
 :00005 %1 = @_pc: <INVALID>[IvarId(0)]
 :00006 %1 = %0.fetch(%1;1)                  [<INVALID>]
 :00008 @opcode: <INVALID>[IvarId(0)] = %1
 :00009 %1 = @conf: <INVALID>[IvarId(0)]
 :00010 %1 = %1.loglevel()                   [<INVALID>]
 :00012 _%1 = %1 >= 3: i16                   [<INVALID>][<INVALID>]
 :00013 condnotbr _%1 =>:00034
+:00014 %1 = @conf: <INVALID>[IvarId(0)]
 :00015 %2 = literal["PC:%04X A:%02X X:%02X Y:%02X P:%02X SP:%02X CYC:%3d : OPCODE:%02X (%d, %d)"]
 :00016 %4 = @_pc: <INVALID>[IvarId(0)]
 :00017 %5 = @_a: <INVALID>[IvarId(0)]
 :00018 %6 = @_x: <INVALID>[IvarId(0)]
 :00019 %7 = @_y: <INVALID>[IvarId(0)]
 :00020 %8 = %0.flags_pack()                 [<INVALID>]
 :00022 %9 = @_sp: <INVALID>[IvarId(0)]
 :00023 %10 = @clk: <INVALID>[IvarId(0)]
 :00024 %10 = %10 / 4: i16                   [<INVALID>][<INVALID>]
 :00025 %11 = 341: i32
 :00026 %10 = %10 % %11                      [<INVALID>][<INVALID>]
 :00027 %11 = @opcode: <INVALID>[IvarId(0)]
 :00028 %12 = @clk: <INVALID>[IvarId(0)]
 :00029 %13 = @clk_target: <INVALID>[IvarId(0)]
 :00030 %3 = array[%4; 10]
 :00031 %2 = %2 % %3                         [<INVALID>][<INVALID>]
 :00032 _ = %1.debug(%2;1)                   [<INVALID>]
+:00034 %1 = @_pc: <INVALID>[IvarId(0)]
 :00035 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00036 @_pc: <INVALID>[IvarId(0)] = %1
 :00037 %1 = const[DISPATCH]                 [<INVALID>]
 :00038 %2 = @opcode: <INVALID>[IvarId(0)]
 :00039 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00040 _ = %0.send(%1;1)*                   [<INVALID>]
 :00042 %1 = @ppu_sync: <INVALID>[IvarId(0)]
 :00043 condnotbr %1 =>:00048
+:00044 %1 = @ppu: <INVALID>[IvarId(0)]
 :00045 %2 = @clk: <INVALID>[IvarId(0)]
 :00046 _ = %1.sync(%2;1)                    [<INVALID>]
+:00048 %1 = @clk: <INVALID>[IvarId(0)]
 :00049 %2 = @clk_target: <INVALID>[IvarId(0)]
 :00050 _%1 = %1 < %2                        [<INVALID>][<INVALID>]
 :00051 condbr _%1 =>:00004
+:00052 loop_end
+:00053 _ = %0.do_clock()                    [<INVALID>]
 :00055 %1 = @clk: <INVALID>[IvarId(0)]
 :00056 %2 = @clk_frame: <INVALID>[IvarId(0)]
 :00057 _%1 = %1 < %2                        [<INVALID>][<INVALID>]
 :00058 condbr _%1 =>:00003
+:00059 %1 = nil
 :00060 loop_end
+:00061 ret %1
------------------------------------
------------------------------------
<op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:957
meta:on_stack:true kind:Ruby mode:method FuncId(503) regs:5 ISeq(RubyFuncInfo { id:503 name:op method:(FuncId(503), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = literal[33292289]
 :00002 %3 = %1.each( &%3)                   [<INVALID>]
 :00004 ret %3
------------------------------------
------------------------------------
<OptimizedCodeBuilder> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1085
meta:on_stack:true kind:Ruby mode:class_def FuncId(504) regs:2 ISeq(RubyFuncInfo { id:504 name:OptimizedCodeBuilder method:(FuncId(504), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = const[CodeOptimizationHelper]   [<INVALID>]
 :00002 _ = %0.include(%1;1)                 [<INVALID>]
 :00004 %1 = literal[[:method_inlining, :constant_inlining, :ivar_localization, :trivial_branches]]
 :00005 const[OPTIONS] = %1
 :00006 %1 = literal[[:@addr, :@data, :@_a, :@_x, :@_y, :@_pc, :@_sp, :@fetch, :@store, :@ram, :@opcode]]
 :00007 const[LOCALIZE_IVARS] = %1
 :00008 method_def build: FuncId(509)
 :00009 method_def build_loop: FuncId(510)
 :00010 method_def cpu_expand_methods: FuncId(511)
 :00011 method_def expand_constants: FuncId(512)
 :00012 %1 = :expand_constants
 :00013 ret %1
------------------------------------
------------------------------------
<block in add_mappings> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:119
meta:on_stack:true kind:Ruby mode:method FuncId(505) regs:4 ISeq(RubyFuncInfo { id:505 name:<unnamed> method:(FuncId(377), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @fetch: <INVALID>[IvarId(0)]
 :00002 %3 = dynvar(1, %2)
 :00003 %2:.[%1:] = %3
 :00004 %2 = @store: <INVALID>[IvarId(0)]
 :00005 %3 = dynvar(1, %3)
 :00006 condbr %3 =>:00008
+:00007 %3 = @poke_nop: <INVALID>[IvarId(0)]
+:00008 %2:.[%1:] = %3
 :00009 ret %3
------------------------------------
------------------------------------
<block in sprite_dma> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:182
meta:on_stack:true kind:Ruby mode:method FuncId(506) regs:5 ISeq(RubyFuncInfo { id:506 name:<unnamed> method:(FuncId(389), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = dynvar(1, %2)
 :00002 %3 = @ram: <INVALID>[IvarId(0)]
 :00003 %4 = dynvar(1, %1)
 :00004 %4 = %4 + %1                         [<INVALID>][<INVALID>]
 :00005 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00006 %2:.[%1:] = %3
 :00007 ret %3
------------------------------------
------------------------------------
<block in sprite_dma> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:183
meta:on_stack:true kind:Ruby mode:method FuncId(507) regs:6 ISeq(RubyFuncInfo { id:507 name:<unnamed> method:(FuncId(389), 1) args: 1 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = dynvar(1, %2)
 :00002 %3 = %1 * 4: i16                     [<INVALID>][<INVALID>]
 :00003 %3 = %3 + 2: i16                     [<INVALID>][<INVALID>]
 :00004 %4 = dynvar(1, %2)
 :00005 %5 = %1 * 4: i16                     [<INVALID>][<INVALID>]
 :00006 %5 = %5 + 2: i16                     [<INVALID>][<INVALID>]
 :00007 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00008 %4 = %4 & 227: i16                   [<INVALID>][<INVALID>]
 :00009 %2:.[%3:] = %4
 :00010 ret %4
------------------------------------
------------------------------------
<block in op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:958
meta:on_stack:true kind:Ruby mode:method FuncId(508) regs:10 ISeq(RubyFuncInfo { id:508 name:<unnamed> method:(FuncId(503), 1) args: 1 non_temp: 5 temp: 4})
[]
+:00000 init_method reg:9 arg:1 req:1 opt:0 rest:false block:None stack_offset:8
 :00001 %6 = dynvar(1, %2)
 :00002 %7 = const[Array]                    [<INVALID>]
 :00003 %6 = %6.is_a?(%7;1)                  [<INVALID>]
 :00005 condnotbr %6 =>:00043
+:00006 %6 = literal[[:r_op, :w_op, :rw_op]]
 :00007 %7 = dynvar(1, %2)
 :00008 %8 = 0: i32
 :00009 %7 = %7.[%8]                         [<INVALID>][<INVALID>]
 :00010 %6 = %6.include?(%7;1)               [<INVALID>]
 :00012 condnotbr %6 =>:00043
+:00013 %6 = dynvar(1, %2)
 :00014 %7; 3 = expand(%6)
 :00015 %2 = %7
 :00016 %3 = %8
 :00017 %4 = %9
 :00018 %6 = const[ADDRESSING_MODES]         [<INVALID>]
 :00019 %6 = %6.[%4]                         [<INVALID>][<INVALID>]
 :00020 %7 = %1 >> 2: i16                    [<INVALID>][<INVALID>]
 :00021 %7 = %7 & 7: i16                     [<INVALID>][<INVALID>]
 :00022 %4 = %6.[%7]                         [<INVALID>][<INVALID>]
 :00023 %6 = %2
 :00024 %7 = %3
 :00025 %8 = %4
 :00026 %5 = array[%6; 3]
 :00027 %6 = :r_op
 :00028 _%6 = %2 != %6                       [<INVALID>][<INVALID>]
 :00029 condnotbr _%6 =>:00040
+:00030 %6 = %4.to_s()                       [<INVALID>]
 :00032 %7 = literal["zpg"]
 :00033 %6 = %6.start_with?(%7;1)            [<INVALID>]
 :00035 condnotbr %6 =>:00038
+:00036 %6 = :store_zpg
 :00037 br =>:00039
+:00038 %6 = :store_mem
+:00039 %6 = %5 << %6                        [<INVALID>][<INVALID>]
+:00040 %6 = const[DISPATCH]                 [<INVALID>]
 :00041 %6:.[%1:] = %5
 :00042 ret %5
+:00043 %6 = const[DISPATCH]                 [<INVALID>]
 :00044 %8 = dynvar(1, %2)
 :00045 %7 = array[%8; 1]
 :00046 %6:.[%1:] = %7
 :00047 ret %7
------------------------------------
------------------------------------
<build> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1092
meta:on_stack:true kind:Ruby mode:method FuncId(509) regs:6 ISeq(RubyFuncInfo { id:509 name:build method:(FuncId(509), 0) args: 0 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = :ivar_localization
 :00002 %4 = :method_inlining
 :00003 _ = %0.depends(%3;2)                 [<INVALID>]
 :00005 %3 = literal["/home/monochrome/optcarrot/lib/optcarrot/cpu.rb"]
 :00006 %1 = %0.parse_method_definitions(%3;1) [<INVALID>]
 :00008 %2 = %0.build_loop(%1;1)             [<INVALID>]
 :00010 %3 = @method_inlining: <INVALID>[IvarId(0)]
 :00011 condnotbr %3 =>:00016
+:00012 %3 = %2
 :00013 %4 = %1
 :00014 %2 = %0.cpu_expand_methods(%3;2)     [<INVALID>]
+:00016 %3 = @trivial_branches: <INVALID>[IvarId(0)]
 :00017 condnotbr %3 =>:00020
+:00018 %2 = %0.remove_trivial_branches(%2;1) [<INVALID>]
+:00020 %3 = @constant_inlining: <INVALID>[IvarId(0)]
 :00021 condnotbr %3 =>:00024
+:00022 %2 = %0.expand_constants(%2;1)       [<INVALID>]
+:00024 %3 = @ivar_localization: <INVALID>[IvarId(0)]
 :00025 condnotbr %3 =>:00030
+:00026 %3 = %2
 :00027 %4 = const[LOCALIZE_IVARS]           [<INVALID>]
 :00028 %2 = %0.localize_instance_variables(%3;2) [<INVALID>]
+:00030 %3 = literal["def self.run"]
 :00031 %4 = 2: i32
 :00032 %5 = %2
 :00033 %4 = %0.indent(%4;2)                 [<INVALID>]
 :00035 %5 = literal["end"]
 :00036 %3 = %0.gen(%3;3)                    [<INVALID>]
 :00038 ret %3
------------------------------------
------------------------------------
<build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1112
meta:on_stack:true kind:Ruby mode:method FuncId(510) regs:8 ISeq(RubyFuncInfo { id:510 name:build_loop method:(FuncId(510), 0) args: 1 non_temp: 3 temp: 4})
[]
+:00000 init_method reg:7 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = literal["case @opcode"]
 :00002 %5 = const[DISPATCH]                 [<INVALID>]
 :00003 %5 = %5.map()                        [<INVALID>]
 :00005 %6 = literal[33619969]
 :00006 %5 = %5.with_index( &%6)             [<INVALID>]
 :00008 %6 = literal["end"]
 :00009 %2 = %0.gen(%4;3)*                   [<INVALID>]
 :00011 %4 = :run
 :00012 %4 = %1.[%4]                         [<INVALID>][<INVALID>]
 :00013 %4 = %4.body()                       [<INVALID>]
 :00015 %5 = literal[33685505]
 :00016 %6 = literal["@conf.loglevel >= 3"]
 :00017 %3 = %4.sub(%6;1 &%5)                [<INVALID>]
 :00019 %4 = literal[33751041]
 :00020 %5 = literal[/(?m)^ *send.*\n/]
 :00021 %4 = %3.sub(%5;1 &%4)                [<INVALID>]
 :00023 ret %4
------------------------------------
------------------------------------
<cpu_expand_methods> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1134
meta:on_stack:true kind:Ruby mode:method FuncId(511) regs:12 ISeq(RubyFuncInfo { id:511 name:cpu_expand_methods method:(FuncId(511), 0) args: 2 non_temp: 2 temp: 9})
[]
+:00000 init_method reg:11 arg:2 req:2 opt:0 rest:false block:None stack_offset:9
 :00001 %3 = %1
 :00002 %4 = %2
 :00003 %5 = %2.keys()                       [<INVALID>]
 :00005 %6 = literal[/(?m)^_/]
 :00006 %5 = %5.grep(%6;1)                   [<INVALID>]
 :00008 %1 = %0.expand_methods(%3;3)         [<INVALID>]
 :00010 %4 = literal[[:_adc, :_sbc, :_cmp, :store_mem, :store_zpg]]
 :00011 %5 = literal[[:imm, :abs, :zpg, :abs_x, :abs_y, :zpg_x, :zpg_y, :ind_x, :ind_y]]
 :00012 %6 = literal[[:abs_reg, :zpg_reg]]
 :00013 %7 = literal[[:read_write]]
 :00014 %8 = literal[[:do_clock]]
 :00015 %9 = literal[[:do_isr]]
 :00016 %10 = literal[[:branch, :push16]]
 :00017 %11 = literal[[:push8]]
 :00018 %3 = array[%4; 8]
 :00019 %4 = literal[33816577]
 :00020 _ = %3.each( &%4)                    [<INVALID>]
 :00022 %3 = literal[[:fetch, :peek16, :store, :pull16, :pull8]]
 :00023 %4 = literal[33882113]
 :00024 _ = %3.each( &%4)                    [<INVALID>]
 :00026 ret %1
------------------------------------
------------------------------------
<expand_constants> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1155
meta:on_stack:true kind:Ruby mode:method FuncId(512) regs:4 ISeq(RubyFuncInfo { id:512 name:expand_constants method:(FuncId(512), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal[33947649]
 :00002 %3 = literal[/(?m)CLK_(\d+)/]
 :00003 %1 = %1.gsub(%3;1 &%2)               [<INVALID>]
 :00005 %2 = literal[34013185]
 :00006 %3 = literal[/(?m)FOREVER_CLOCK/]
 :00007 %1 = %1.gsub(%3;1 &%2)               [<INVALID>]
 :00009 ret %1
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1115
meta:on_stack:true kind:Ruby mode:method FuncId(513) regs:10 ISeq(RubyFuncInfo { id:513 name:<unnamed> method:(FuncId(510), 1) args: 2 non_temp: 5 temp: 4})
[]
+:00000 init_method reg:9 arg:2 req:2 opt:0 rest:false block:None stack_offset:8
 :00001 %6 = %1.size()                       [<INVALID>]
 :00003 _%6 = %6 > 1: i16                    [<INVALID>][<INVALID>]
 :00004 condnotbr _%6 =>:00038
+:00005 %6 = %1
 :00006 %7; 2 = expand(%6)
 :00007 %3 = %7
 :00008 %4 = %8
 :00009 %6 = %3
 :00010 %7 = literal["("]
 :00011 %8 = 1: i32
 :00012 %8 = %1.drop(%8;1)                   [<INVALID>]
 :00014 %9 = literal[", "]
 :00015 %8 = %8.join(%9;1)                   [<INVALID>]
 :00017 %9 = literal[")"]
 :00018 %6 = concat(%6; 4)
 :00019 %7 = %3
 :00020 %8 = dynvar(1, %1)
 :00021 %8 = %8.[%3]                         [<INVALID>][<INVALID>]
 :00022 %5 = %0.expand_inline_methods(%6;3)  [<INVALID>]
 :00024 %6 = literal[34078721]
 :00025 %7 = literal[/(?m)send\((\w+), (.*?)\)/]
 :00026 %5 = %5.gsub(%7;1 &%6)               [<INVALID>]
 :00028 %6 = literal[34144257]
 :00029 %7 = literal[/(?m)send\((\w+)\)/]
 :00030 %5 = %5.gsub(%7;1 &%6)               [<INVALID>]
 :00032 %6 = literal[1..-2]
 :00033 %6 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00034 %7 = literal["; "]
 :00035 %5 = %6.split(%7;1)                  [<INVALID>]
 :00037 br =>:00041
+:00038 %6 = 0: i32
 :00039 %5 = %1.[%6]                         [<INVALID>][<INVALID>]
 :00040 %4 = %5
+:00041 %6 = literal["when 0x%02x # "]
 :00042 %7 = %4
 :00043 %8 = literal["\n"]
 :00044 %6 = concat(%6; 3)
 :00045 %6 = %6 % %2                         [<INVALID>][<INVALID>]
 :00046 %7 = 2: i32
 :00047 %8 = %0.gen(%5;1)*                   [<INVALID>]
 :00049 %7 = %0.indent(%7;2)                 [<INVALID>]
 :00051 %6 = %6 + %7                         [<INVALID>][<INVALID>]
 :00052 ret %6
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1129
meta:on_stack:true kind:Ruby mode:method FuncId(514) regs:2 ISeq(RubyFuncInfo { id:514 name:<unnamed> method:(FuncId(510), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @loglevel: <INVALID>[IvarId(0)]
 :00002 %1 = %1 >= 3: i16                    [<INVALID>][<INVALID>]
 :00003 ret %1
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1130
meta:on_stack:true kind:Ruby mode:method FuncId(515) regs:3 ISeq(RubyFuncInfo { id:515 name:<unnamed> method:(FuncId(510), 1) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = 4: i32
 :00002 %2 = dynvar(1, %2)
 :00003 %1 = %0.indent(%1;2)                 [<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<block in cpu_expand_methods> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1145
meta:on_stack:true kind:Ruby mode:method FuncId(516) regs:5 ISeq(RubyFuncInfo { id:516 name:<unnamed> method:(FuncId(511), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = dynvar(1, %1)
 :00002 %3 = dynvar(1, %2)
 :00003 %4 = %1
 :00004 %2 = %0.expand_methods(%2;3)         [<INVALID>]
 :00006 dynvar(1, %1) = %2
 :00007 ret %2
------------------------------------
------------------------------------
<block in cpu_expand_methods> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1148
meta:on_stack:true kind:Ruby mode:method FuncId(517) regs:5 ISeq(RubyFuncInfo { id:517 name:<unnamed> method:(FuncId(511), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = dynvar(1, %1)
 :00002 %3 = %1
 :00003 %4 = dynvar(1, %2)
 :00004 %4 = %4.[%1]                         [<INVALID>][<INVALID>]
 :00005 %2 = %0.expand_inline_methods(%2;3)  [<INVALID>]
 :00007 dynvar(1, %1) = %2
 :00008 ret %2
------------------------------------
------------------------------------
<block in expand_constants> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1156
meta:on_stack:true kind:Ruby mode:method FuncId(518) regs:2 ISeq(RubyFuncInfo { id:518 name:<unnamed> method:(FuncId(512), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = $&
 :00002 %1 = %0.eval(%1;1)                   [<INVALID>]
 :00004 ret %1
------------------------------------
------------------------------------
<block in expand_constants> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1157
meta:on_stack:true kind:Ruby mode:method FuncId(519) regs:2 ISeq(RubyFuncInfo { id:519 name:<unnamed> method:(FuncId(512), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal["0xffffffff"]
 :00002 ret %1
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1119
meta:on_stack:true kind:Ruby mode:method FuncId(520) regs:5 ISeq(RubyFuncInfo { id:520 name:<unnamed> method:(FuncId(510), 2) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = $1
 :00002 %2 = literal["("]
 :00003 %3 = $2
 :00004 %4 = literal[")"]
 :00005 %1 = concat(%1; 4)
 :00006 ret %1
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1120
meta:on_stack:true kind:Ruby mode:method FuncId(521) regs:2 ISeq(RubyFuncInfo { id:521 name:<unnamed> method:(FuncId(510), 2) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = $1
 :00002 ret %1
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(522) regs:2 ISeq(RubyFuncInfo { id:522 name:/main method:(FuncId(522), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(523)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(523) regs:2 ISeq(RubyFuncInfo { id:523 name:Optcarrot method:(FuncId(523), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def CodeOptimizationHelper: FuncId(524)
 :00002 ret %1
------------------------------------
------------------------------------
<CodeOptimizationHelper> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(524) regs:4 ISeq(RubyFuncInfo { id:524 name:CodeOptimizationHelper method:(FuncId(524), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 method_def initialize: FuncId(525)
 :00002 method_def depends: FuncId(526)
 :00003 method_def gen: FuncId(527)
 :00004 method_def indent: FuncId(528)
 :00005 method_def branch: FuncId(529)
 :00006 %1 = const[Struct]                   [<INVALID>]
 :00007 %2 = :params
 :00008 %3 = :body
 :00009 %1 = %1.new(%2;2)                    [<INVALID>]
 :00011 const[MethodDef] = %1
 :00012 %1 = literal[/(?mx)
      ^(\ +)def[[:space:]]+(\w+)(?:\((.*)\))?\n
      ^((?:\1\ +.*\n|\n)*)
      ^\1end$
    /]
 :00013 const[METHOD_DEFINITIONS_RE] = %1
 :00014 method_def parse_method_definitions: FuncId(530)
 :00015 method_def expand_methods: FuncId(531)
 :00016 method_def expand_inline_methods: FuncId(532)
 :00017 method_def replace_var: FuncId(533)
 :00018 method_def replace_cond_var: FuncId(534)
 :00019 %1 = literal[/(?mx)
      ^(\ *)(if|unless)\ (true|false)\n
      ^((?:\1\ +.*\n|\n)*)
       (?:
         \1else\n
         ((?:\1\ +.*\n|\n)*)
       )?
      ^\1end\n
    /]
 :00020 const[TRIVIAL_BRANCH_RE] = %1
 :00021 method_def remove_trivial_branches: FuncId(535)
 :00022 method_def localize_instance_variables: FuncId(536)
 :00023 %1 = :localize_instance_variables
 :00024 ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:4
meta:on_stack:true kind:Ruby mode:method FuncId(525) regs:9 ISeq(RubyFuncInfo { id:525 name:initialize method:(FuncId(525), 0) args: 2 non_temp: 5 temp: 3})
[]
+:00000 init_method reg:8 arg:2 req:2 opt:0 rest:false block:None stack_offset:8
 :00001 @loglevel: <INVALID>[IvarId(0)] = %1
 :00002 %3 = const[OPTIONS]                  [<INVALID>]
 :00003 %4 = literal[{}]
 :00004 %6 = %2
 :00005 condbr %6 =>:00008
+:00006 %2 = literal[[:all]]
 :00007 %6 = %2
+:00008 %7 = literal[[:all]]
 :00009 %6 = %2 == %7                        [<INVALID>][<INVALID>]
 :00010 condbr %6 =>:00017
+:00011 %7 = literal[[]]
 :00012 %6 = %2 != %7                        [<INVALID>][<INVALID>]
 :00013 condnotbr %6 =>:00017
+:00014 %7 = literal[35192833]
 :00015 %6 = %2.all?( &%7)                   [<INVALID>]
+:00017 %5 = %6
 :00018 %6 = literal[35258369]
 :00019 _ = %3.each( &%6)                    [<INVALID>]
 :00021 %6 = literal[[:none, :all]]
 :00022 %6 = %2 - %6                         [<INVALID>][<INVALID>]
 :00023 %7 = literal[35323905]
 :00024 _ = %6.each( &%7)                    [<INVALID>]
 :00026 %6 = literal[35389441]
 :00027 %6 = %3.each( &%6)                   [<INVALID>]
 :00029 ret %6
------------------------------------
------------------------------------
<depends> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:24
meta:on_stack:true kind:Ruby mode:method FuncId(526) regs:8 ISeq(RubyFuncInfo { id:526 name:depends method:(FuncId(526), 0) args: 2 non_temp: 2 temp: 5})
[]
+:00000 init_method reg:7 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 %3 = literal["@"]
 :00002 %4 = %1
 :00003 %3 = concat(%3; 2)
 :00004 %3 = %3.to_sym()                     [<INVALID>]
 :00006 %3 = %0.instance_variable_get(%3;1)  [<INVALID>]
 :00008 condnotbr %3 =>:00027
+:00009 %4 = literal["@"]
 :00010 %5 = %2
 :00011 %4 = concat(%4; 2)
 :00012 %4 = %4.to_sym()                     [<INVALID>]
 :00014 %3 = %0.instance_variable_get(%4;1)  [<INVALID>]
 :00016 %3 = !%3                             [<INVALID>]
 :00017 condnotbr %3 =>:00027
+:00018 %3 = literal["`"]
 :00019 %4 = %1
 :00020 %5 = literal["' depends upon `"]
 :00021 %6 = %2
 :00022 %7 = literal["'"]
 :00023 %3 = concat(%3; 5)
 :00024 %3 = %0.raise(%3;1)                  [<INVALID>]
 :00026 ret %3
+:00027 %3 = nil
 :00028 ret %3
------------------------------------
------------------------------------
<gen> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:30
meta:on_stack:true kind:Ruby mode:method FuncId(527) regs:4 ISeq(RubyFuncInfo { id:527 name:gen method:(FuncId(527), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:0 opt:0 rest:true block:None stack_offset:5
 :00001 %2 = literal[35454977]
 :00002 %2 = %1.map( &%2)                    [<INVALID>]
 :00004 %3 = literal["\n"]
 :00005 %2 = %2.join(%3;1)                   [<INVALID>]
 :00007 %3 = literal["\n"]
 :00008 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00009 ret %2
------------------------------------
------------------------------------
<indent> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:35
meta:on_stack:true kind:Ruby mode:method FuncId(528) regs:8 ISeq(RubyFuncInfo { id:528 name:indent method:(FuncId(528), 0) args: 2 non_temp: 2 temp: 5})
[]
+:00000 init_method reg:7 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 _%3 = %1 > 0: i16                    [<INVALID>][<INVALID>]
 :00002 condnotbr _%3 =>:00008
+:00003 %3 = literal[35520513]
 :00004 %4 = literal[/(?m)^(.+)$/]
 :00005 %3 = %2.gsub(%4;1 &%3)               [<INVALID>]
 :00007 ret %3
+:00008 _%3 = %1 < 0: i16                    [<INVALID>][<INVALID>]
 :00009 condnotbr _%3 =>:00019
+:00010 %4 = literal["(?m)"]
 :00011 %5 = literal["^ {"]
 :00012 %6 = -%1                             [<INVALID>]
 :00013 %7 = literal["}"]
 :00014 %3 = concat_regexp(%4; 4)
 :00015 %4 = literal[""]
 :00016 %3 = %2.gsub(%3;2)                   [<INVALID>]
 :00018 ret %3
+:00019 ret %2
------------------------------------
------------------------------------
<branch> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:46
meta:on_stack:true kind:Ruby mode:method FuncId(529) regs:9 ISeq(RubyFuncInfo { id:529 name:branch method:(FuncId(529), 0) args: 3 non_temp: 3 temp: 5})
[]
+:00000 init_method reg:8 arg:3 req:3 opt:0 rest:false block:None stack_offset:8
 :00001 %4 = literal["if "]
 :00002 %5 = %1
 :00003 %4 = concat(%4; 2)
 :00004 %5 = 2: i32
 :00005 %6 = %2
 :00006 %5 = %0.indent(%5;2)                 [<INVALID>]
 :00008 %6 = literal["else"]
 :00009 %7 = 2: i32
 :00010 %8 = %3
 :00011 %7 = %0.indent(%7;2)                 [<INVALID>]
 :00013 %8 = literal["end"]
 :00014 %4 = %0.gen(%4;5)                    [<INVALID>]
 :00016 ret %4
------------------------------------
------------------------------------
<parse_method_definitions> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:64
meta:on_stack:true kind:Ruby mode:method FuncId(530) regs:6 ISeq(RubyFuncInfo { id:530 name:parse_method_definitions method:(FuncId(530), 0) args: 1 non_temp: 3 temp: 2})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %4 = const[File]                     [<INVALID>]
 :00002 %2 = %4.read(%1;1)                   [<INVALID>]
 :00004 %3 = literal[{}]
 :00005 %4 = literal[35586049]
 :00006 %5 = const[METHOD_DEFINITIONS_RE]    [<INVALID>]
 :00007 _ = %2.scan(%5;1 &%4)                [<INVALID>]
 :00009 ret %3
------------------------------------
------------------------------------
<expand_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:85
meta:on_stack:true kind:Ruby mode:method FuncId(531) regs:10 ISeq(RubyFuncInfo { id:531 name:expand_methods method:(FuncId(531), 0) args: 3 non_temp: 3 temp: 6})
[]
+:00000 init_method reg:9 arg:3 req:2 opt:1 rest:false block:None stack_offset:8
 :00001 check_local(%3) =>:00004
+:00002 %3 = %2.keys()                       [<INVALID>]
+:00004 %4 = literal[35651585]
 :00005 %6 = literal["(?m)"]
 :00006 %7 = literal["^( *)\\b("]
 :00007 %8 = literal["|"]
 :00008 %8 = %3 * %8                         [<INVALID>][<INVALID>]
 :00009 %9 = literal[")\\b(?:\\((.*?)\\))?\\n"]
 :00010 %5 = concat_regexp(%6; 4)
 :00011 %4 = %1.gsub(%5;1 &%4)               [<INVALID>]
 :00013 ret %4
------------------------------------
------------------------------------
<expand_inline_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:99
meta:on_stack:true kind:Ruby mode:method FuncId(532) regs:10 ISeq(RubyFuncInfo { id:532 name:expand_inline_methods method:(FuncId(532), 0) args: 3 non_temp: 3 temp: 6})
[]
+:00000 init_method reg:9 arg:3 req:3 opt:0 rest:false block:None stack_offset:8
 :00001 %4 = literal[35717121]
 :00002 %6 = literal["(?m)"]
 :00003 %7 = literal["\\b"]
 :00004 %8 = %2
 :00005 %9 = literal["\\b(?:\\(((?:@?\\w+, )*@?\\w+)\\))?"]
 :00006 %5 = concat_regexp(%6; 4)
 :00007 %4 = %1.gsub(%5;1 &%4)               [<INVALID>]
 :00009 ret %4
------------------------------------
------------------------------------
<replace_var> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:112
meta:on_stack:true kind:Ruby mode:method FuncId(533) regs:10 ISeq(RubyFuncInfo { id:533 name:replace_var method:(FuncId(533), 0) args: 3 non_temp: 4 temp: 5})
[]
+:00000 init_method reg:9 arg:3 req:3 opt:0 rest:false block:None stack_offset:8
 :00001 %5 = literal["@"]
 :00002 %5 = %2.start_with?(%5;1)            [<INVALID>]
 :00004 condnotbr %5 =>:00011
+:00005 %6 = literal["(?m)"]
 :00006 %7 = literal[""]
 :00007 %8 = %2
 :00008 %9 = literal["\\b"]
 :00009 %5 = concat_regexp(%6; 4)
 :00010 br =>:00016
+:00011 %6 = literal["(?m)"]
 :00012 %7 = literal["\\b"]
 :00013 %8 = %2
 :00014 %9 = literal["\\b"]
 :00015 %5 = concat_regexp(%6; 4)
+:00016 %4 = %5
 :00017 %5 = literal[35782657]
 :00018 %6 = %4
 :00019 %5 = %1.gsub(%6;1 &%5)               [<INVALID>]
 :00021 ret %5
------------------------------------
------------------------------------
<replace_cond_var> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:117
meta:on_stack:true kind:Ruby mode:method FuncId(534) regs:10 ISeq(RubyFuncInfo { id:534 name:replace_cond_var method:(FuncId(534), 0) args: 3 non_temp: 3 temp: 6})
[]
+:00000 init_method reg:9 arg:3 req:3 opt:0 rest:false block:None stack_offset:8
 :00001 %4 = literal[35848193]
 :00002 %6 = literal["(?m)"]
 :00003 %7 = literal["(if|unless)[[:space:]]"]
 :00004 %8 = %2
 :00005 %9 = literal["\\b"]
 :00006 %5 = concat_regexp(%6; 4)
 :00007 %4 = %1.gsub(%5;1 &%4)               [<INVALID>]
 :00009 ret %4
------------------------------------
------------------------------------
<remove_trivial_branches> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:131
meta:on_stack:true kind:Ruby mode:method FuncId(535) regs:4 ISeq(RubyFuncInfo { id:535 name:remove_trivial_branches method:(FuncId(535), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = %1.dup()                        [<INVALID>]
+:00003 loop_start counter=0 jit-addr=0000000000000000
 :00004 %2 = literal[35913729]
 :00005 %3 = const[TRIVIAL_BRANCH_RE]        [<INVALID>]
 :00006 %2 = %1.gsub!(%3;1 &%2)              [<INVALID>]
 :00008 condnotbr %2 =>:00010
+:00009 br =>:00003
+:00010 loop_end
+:00011 ret %1
------------------------------------
------------------------------------
<localize_instance_variables> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:146
meta:on_stack:true kind:Ruby mode:method FuncId(536) regs:11 ISeq(RubyFuncInfo { id:536 name:localize_instance_variables method:(FuncId(536), 0) args: 2 non_temp: 4 temp: 6})
[]
+:00000 init_method reg:10 arg:2 req:1 opt:1 rest:false block:None stack_offset:9
 :00001 check_local(%2) =>:00009
+:00002 %5 = literal[/(?m)@\w+/]
 :00003 %5 = %1.scan(%5;1)                   [<INVALID>]
 :00005 %5 = %5.uniq()                       [<INVALID>]
 :00007 %2 = %5.sort()                       [<INVALID>]
+:00009 %5 = literal[35979265]
 :00010 %2 = %2.map( &%5)                    [<INVALID>]
 :00012 %5 = literal[[]]
 :00013 %6 = literal[[]]
 :00014 %3 = %5
 :00015 %4 = %6
 :00016 %5 = literal[36044801]
 :00017 _ = %2.each( &%5)                    [<INVALID>]
 :00019 %5 = literal[36110337]
 :00020 %7 = literal["(?m)"]
 :00021 %8 = literal["@("]
 :00022 %9 = literal["|"]
 :00023 %9 = %2 * %9                         [<INVALID>][<INVALID>]
 :00024 %10 = literal[")\\b"]
 :00025 %6 = concat_regexp(%7; 4)
 :00026 %1 = %1.gsub(%6;1 &%5)               [<INVALID>]
 :00028 %5 = literal["begin"]
 :00029 %6 = 2: i32
 :00030 %7 = literal["\n"]
 :00031 %7 = %3.join(%7;1)                   [<INVALID>]
 :00033 %6 = %0.indent(%6;2)                 [<INVALID>]
 :00035 %7 = 2: i32
 :00036 %8 = %1
 :00037 %7 = %0.indent(%7;2)                 [<INVALID>]
 :00039 %8 = literal["ensure"]
 :00040 %9 = 2: i32
 :00041 %10 = literal["\n"]
 :00042 %10 = %4.join(%10;1)                 [<INVALID>]
 :00044 %9 = %0.indent(%9;2)                 [<INVALID>]
 :00046 %10 = literal["end"]
 :00047 %5 = %0.gen(%5;6)                    [<INVALID>]
 :00049 ret %5
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:10
meta:on_stack:true kind:Ruby mode:method FuncId(537) regs:4 ISeq(RubyFuncInfo { id:537 name:<unnamed> method:(FuncId(525), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1.to_s()                       [<INVALID>]
 :00003 %3 = literal["-"]
 :00004 %2 = %2.start_with?(%3;1)            [<INVALID>]
 :00006 ret %2
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:11
meta:on_stack:true kind:Ruby mode:method FuncId(538) regs:4 ISeq(RubyFuncInfo { id:538 name:<unnamed> method:(FuncId(525), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = dynvar(1, %4)
 :00002 %3 = dynvar(1, %5)
 :00003 %2:.[%1:] = %3
 :00004 ret %3
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:12
meta:on_stack:true kind:Ruby mode:method FuncId(539) regs:6 ISeq(RubyFuncInfo { id:539 name:<unnamed> method:(FuncId(525), 1) args: 1 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[true]
 :00002 %3 = %1.to_s()                       [<INVALID>]
 :00004 %4 = literal["-"]
 :00005 %3 = %3.start_with?(%4;1)            [<INVALID>]
 :00007 condnotbr %3 =>:00015
+:00008 %3 = %1.to_s()                       [<INVALID>]
 :00010 %4 = literal[1..-1]
 :00011 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00012 %1 = %3.to_sym()                     [<INVALID>]
 :00014 %2 = literal[false]
+:00015 %3 = dynvar(1, %3)
 :00016 %3 = %3.include?(%1;1)               [<INVALID>]
 :00018 condnotbr %3 =>:00020
+:00019 br =>:00026
+:00020 %3 = literal["unknown optimization: `"]
 :00021 %4 = %1
 :00022 %5 = literal["'"]
 :00023 %3 = concat(%3; 3)
 :00024 _ = %0.raise(%3;1)                   [<INVALID>]
+:00026 %3 = dynvar(1, %4)
 :00027 %3:.[%1:] = %2
 :00028 ret %2
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:21
meta:on_stack:true kind:Ruby mode:method FuncId(540) regs:4 ISeq(RubyFuncInfo { id:540 name:<unnamed> method:(FuncId(525), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal["@"]
 :00002 %3 = %1
 :00003 %2 = concat(%2; 2)
 :00004 %2 = %2.to_sym()                     [<INVALID>]
 :00006 %3 = dynvar(1, %4)
 :00007 %3 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00008 %2 = %0.instance_variable_set(%2;2)  [<INVALID>]
 :00010 ret %2
------------------------------------
------------------------------------
<block in gen> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:31
meta:on_stack:true kind:Ruby mode:method FuncId(541) regs:4 ISeq(RubyFuncInfo { id:541 name:<unnamed> method:(FuncId(527), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1.to_s()                       [<INVALID>]
 :00003 %2 = %2.chomp()                      [<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
<block in indent> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:37
meta:on_stack:true kind:Ruby mode:method FuncId(542) regs:3 ISeq(RubyFuncInfo { id:542 name:<unnamed> method:(FuncId(528), 1) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal[" "]
 :00002 %2 = dynvar(1, %1)
 :00003 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00004 %2 = $1
 :00005 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00006 ret %1
------------------------------------
------------------------------------
<block in parse_method_definitions> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:67
meta:on_stack:true kind:Ruby mode:method FuncId(543) regs:10 ISeq(RubyFuncInfo { id:543 name:<unnamed> method:(FuncId(530), 1) args: 4 non_temp: 4 temp: 5})
[]
+:00000 init_method reg:9 arg:4 req:4 opt:0 rest:false block:None stack_offset:8
 :00001 %5 = %1.size()                       [<INVALID>]
 :00003 %5 = -%5                             [<INVALID>]
 :00004 %5 = %5 - 2: i16                     [<INVALID>][<INVALID>]
 :00005 %6 = %4
 :00006 %4 = %0.indent(%5;2)                 [<INVALID>]
 :00008 %5 = literal[36175873]
 :00009 %6 = literal[/(?m)^( *)when +(.*?) +then +(.*)/]
 :00010 %4 = %4.gsub(%6;1 &%5)               [<INVALID>]
 :00012 %5 = literal[/(?m)\Areturn unless (.*)/]
 :00013 %5 = %4.=~(%5;1)                     [<INVALID>]
 :00015 condnotbr %5 =>:00026
+:00016 %5 = literal["if "]
 :00017 %6 = $1
 :00018 %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00019 %6 = 2: i32
 :00020 %7 = $'
 :00021 %6 = %0.indent(%6;2)                 [<INVALID>]
 :00023 %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00024 %6 = literal["end\n"]
 :00025 %4 = %5 + %6                         [<INVALID>][<INVALID>]
+:00026 loop_start counter=0 jit-addr=0000000000000000
 :00027 %5 = literal[36241409]
 :00028 %6 = literal[/(?m)^( *)((?!#)\S.*) ((?:if|unless) .*\n)/]
 :00029 %5 = %4.gsub!(%6;1 &%5)              [<INVALID>]
 :00031 condnotbr %5 =>:00033
+:00032 br =>:00026
+:00033 loop_end
+:00034 %5 = dynvar(1, %3)
 :00035 %6 = %2.to_sym()                     [<INVALID>]
 :00037 %7 = const[MethodDef]                [<INVALID>]
 :00038 condnotbr %3 =>:00043
+:00039 %8 = literal[", "]
 :00040 %8 = %3.split(%8;1)                  [<INVALID>]
 :00042 br =>:00044
+:00043 %8 = nil
+:00044 %9 = %4
 :00045 %7 = %7.[](%8;2)                     [<INVALID>]
 :00047 %5:.[%6:] = %7
 :00048 ret %7
------------------------------------
------------------------------------
<block in expand_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:86
meta:on_stack:true kind:Ruby mode:method FuncId(544) regs:8 ISeq(RubyFuncInfo { id:544 name:<unnamed> method:(FuncId(531), 1) args: 0 non_temp: 4 temp: 3})
[]
+:00000 init_method reg:7 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %5 = $1
 :00002 %6 = $2
 :00003 %7 = $3
 :00004 %1 = %5
 :00005 %2 = %6
 :00006 %3 = %7
 :00007 %5 = dynvar(1, %2)
 :00008 %6 = %2.to_sym()                     [<INVALID>]
 :00010 %4 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00011 %5 = const[MethodDef]                [<INVALID>]
 :00012 %5 = %4.is_a?(%5;1)                  [<INVALID>]
 :00014 condnotbr %5 =>:00017
+:00015 %4 = %4.body()                       [<INVALID>]
+:00017 condnotbr %3 =>:00030
+:00018 %5 = dynvar(1, %2)
 :00019 %6 = %2.to_sym()                     [<INVALID>]
 :00021 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00022 %5 = %5.params()                     [<INVALID>]
 :00024 %6 = literal[36306945]
 :00025 %7 = literal[", "]
 :00026 %7 = %3.split(%7;1)                  [<INVALID>]
 :00028 _ = %5.zip(%7;1 &%6)                 [<INVALID>]
+:00030 %5 = %1.size()                       [<INVALID>]
 :00032 %6 = %4
 :00033 %5 = %0.indent(%5;2)                 [<INVALID>]
 :00035 ret %5
------------------------------------
------------------------------------
<block in expand_inline_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:100
meta:on_stack:true kind:Ruby mode:method FuncId(545) regs:7 ISeq(RubyFuncInfo { id:545 name:<unnamed> method:(FuncId(532), 1) args: 0 non_temp: 2 temp: 4})
[]
+:00000 init_method reg:6 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %1 = $1
 :00002 %3 = literal["("]
 :00003 %4 = dynvar(1, %3)
 :00004 %4 = %4.body()                       [<INVALID>]
 :00006 %4 = %4.chomp()                      [<INVALID>]
 :00008 %5 = literal[/(?m) *#.*/]
 :00009 %6 = literal[""]
 :00010 %4 = %4.gsub(%5;2)                   [<INVALID>]
 :00012 %5 = literal["\n"]
 :00013 %6 = literal["; "]
 :00014 %4 = %4.gsub(%5;2)                   [<INVALID>]
 :00016 %5 = literal[")"]
 :00017 %3 = concat(%3; 3)
 :00018 %2 = %3
 :00019 condnotbr %1 =>:00029
+:00020 %3 = dynvar(1, %3)
 :00021 %3 = %3.params()                     [<INVALID>]
 :00023 %4 = literal[36372481]
 :00024 %5 = literal[", "]
 :00025 %5 = %1.split(%5;1)                  [<INVALID>]
 :00027 _ = %3.zip(%5;1 &%4)                 [<INVALID>]
+:00029 ret %2
------------------------------------
------------------------------------
<block in replace_var> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:114
meta:on_stack:true kind:Ruby mode:method FuncId(546) regs:2 ISeq(RubyFuncInfo { id:546 name:<unnamed> method:(FuncId(533), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = dynvar(1, %3)
 :00002 ret %1
------------------------------------
------------------------------------
<block in replace_cond_var> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:118
meta:on_stack:true kind:Ruby mode:method FuncId(547) regs:3 ISeq(RubyFuncInfo { id:547 name:<unnamed> method:(FuncId(534), 1) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = $1
 :00002 %2 = literal[" "]
 :00003 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 %2 = dynvar(1, %3)
 :00005 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00006 ret %1
------------------------------------
------------------------------------
<block in remove_trivial_branches> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:134
meta:on_stack:true kind:Ruby mode:method FuncId(548) regs:4 ISeq(RubyFuncInfo { id:548 name:<unnamed> method:(FuncId(535), 1) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = $2
 :00002 %2 = literal["if"]
 :00003 %1 = %1 == %2                        [<INVALID>][<INVALID>]
 :00004 %2 = $3
 :00005 %3 = literal["true"]
 :00006 %2 = %2 == %3                        [<INVALID>][<INVALID>]
 :00007 _%1 = %1 == %2                       [<INVALID>][<INVALID>]
 :00008 condnotbr _%1 =>:00014
+:00009 %1 = -2: i32
 :00010 %2 = $4
 :00011 %1 = %0.indent(%1;2)                 [<INVALID>]
 :00013 ret %1
+:00014 %1 = $5
 :00015 condnotbr %1 =>:00021
+:00016 %1 = -2: i32
 :00017 %2 = $5
 :00018 %1 = %0.indent(%1;2)                 [<INVALID>]
 :00020 ret %1
+:00021 %1 = literal[""]
 :00022 ret %1
------------------------------------
------------------------------------
<block in localize_instance_variables> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:147
meta:on_stack:true kind:Ruby mode:method FuncId(549) regs:4 ISeq(RubyFuncInfo { id:549 name:<unnamed> method:(FuncId(536), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1.to_s()                       [<INVALID>]
 :00003 %3 = literal[1..-1]
 :00004 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
<block in localize_instance_variables> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:150
meta:on_stack:true kind:Ruby mode:method FuncId(550) regs:8 ISeq(RubyFuncInfo { id:550 name:<unnamed> method:(FuncId(536), 1) args: 1 non_temp: 2 temp: 5})
[]
+:00000 init_method reg:7 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 %3 = literal["__"]
 :00002 %4 = %1
 :00003 %5 = literal["__"]
 :00004 %3 = concat(%3; 3)
 :00005 %2 = %3
 :00006 %3 = dynvar(1, %3)
 :00007 %4 = %2
 :00008 %5 = literal[" = @"]
 :00009 %6 = %1
 :00010 %4 = concat(%4; 3)
 :00011 %3 = %3 << %4                        [<INVALID>][<INVALID>]
 :00012 %3 = dynvar(1, %4)
 :00013 %4 = literal["@"]
 :00014 %5 = %1
 :00015 %6 = literal[" = "]
 :00016 %7 = %2
 :00017 %4 = concat(%4; 4)
 :00018 %3 = %3 << %4                        [<INVALID>][<INVALID>]
 :00019 ret %3
------------------------------------
------------------------------------
<block in localize_instance_variables> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:156
meta:on_stack:true kind:Ruby mode:method FuncId(551) regs:4 ISeq(RubyFuncInfo { id:551 name:<unnamed> method:(FuncId(536), 1) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["__"]
 :00002 %2 = $1
 :00003 %3 = literal["__"]
 :00004 %1 = concat(%1; 3)
 :00005 ret %1
------------------------------------
------------------------------------
<block in parse_method_definitions> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:71
meta:on_stack:true kind:Ruby mode:method FuncId(552) regs:5 ISeq(RubyFuncInfo { id:552 name:<unnamed> method:(FuncId(530), 2) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = $1
 :00002 %2 = literal["when "]
 :00003 %3 = $2
 :00004 %4 = literal["\n"]
 :00005 %2 = concat(%2; 3)
 :00006 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00007 %2 = $1
 :00008 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00009 %2 = literal["  "]
 :00010 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00011 %2 = $3
 :00012 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00013 ret %1
------------------------------------
------------------------------------
<block in parse_method_definitions> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:77
meta:on_stack:true kind:Ruby mode:method FuncId(553) regs:5 ISeq(RubyFuncInfo { id:553 name:<unnamed> method:(FuncId(530), 2) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = $1
 :00002 %1 = %1.size()                       [<INVALID>]
 :00004 %2 = $3
 :00005 %3 = literal["  "]
 :00006 %4 = $2
 :00007 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00008 %4 = literal["end"]
 :00009 %2 = %0.gen(%2;3)                    [<INVALID>]
 :00011 %1 = %0.indent(%1;2)                 [<INVALID>]
 :00013 ret %1
------------------------------------
------------------------------------
<block in expand_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:91
meta:on_stack:true kind:Ruby mode:method FuncId(554) regs:6 ISeq(RubyFuncInfo { id:554 name:<unnamed> method:(FuncId(531), 2) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = dynvar(1, %4)
 :00002 %4 = %1
 :00003 %5 = %2
 :00004 %3 = %0.replace_var(%3;3)            [<INVALID>]
 :00006 dynvar(1, %4) = %3
 :00007 ret %3
------------------------------------
------------------------------------
<block in expand_inline_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:104
meta:on_stack:true kind:Ruby mode:method FuncId(555) regs:6 ISeq(RubyFuncInfo { id:555 name:<unnamed> method:(FuncId(532), 2) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = dynvar(1, %2)
 :00002 %4 = %1
 :00003 %5 = %2
 :00004 %3 = %0.replace_var(%3;3)            [<INVALID>]
 :00006 dynvar(1, %2) = %3
 :00007 ret %3
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(569) regs:2 ISeq(RubyFuncInfo { id:569 name:/main method:(FuncId(569), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(570)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(570) regs:2 ISeq(RubyFuncInfo { id:570 name:Optcarrot method:(FuncId(570), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = class_def APU < _: FuncId(571)
 :00002 ret %1
------------------------------------
------------------------------------
<APU> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(571) regs:8 ISeq(RubyFuncInfo { id:571 name:APU method:(FuncId(571), 0) args: 0 non_temp: 0 temp: 7})
[]
+:00000 init_method reg:7 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %1 = 6: i32
 :00002 const[CLK_M2_MUL] = %1
 :00003 %1 = 39375000: i32
 :00004 %2 = const[CLK_M2_MUL]               [<INVALID>]
 :00005 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00006 const[CLK_NTSC] = %1
 :00007 %1 = 11: i32
 :00008 const[CLK_NTSC_DIV] = %1
 :00009 %1 = 256: i32
 :00010 const[CHANNEL_OUTPUT_MUL] = %1
 :00011 %1 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00012 %1 = %1 / 4: i16                     [<INVALID>][<INVALID>]
 :00013 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00014 const[CHANNEL_OUTPUT_DECAY] = %1
 :00015 %1 = literal[[29830, 1, 1, 29828]]
 :00016 %2 = literal[37486593]
 :00017 %1 = %1.map( &%2)                    [<INVALID>]
 :00019 const[FRAME_CLOCKS] = %1
 :00020 %2 = literal[[7458, 7456, 7458, 7458]]
 :00021 %4 = 7458: i32
 :00022 %5 = 7456: i32
 :00023 %6 = 7458: i32
 :00024 %7 = 7458: i32
 :00025 %7 = %7 + 7452: i16                  [<INVALID>][<INVALID>]
 :00026 %3 = array[%4; 4]
 :00027 %1 = array[%2; 2]
 :00028 %2 = literal[37552129]
 :00029 %1 = %1.map( &%2)                    [<INVALID>]
 :00031 const[OSCILLATOR_CLOCKS] = %1
 :00032 method_def inspect: FuncId(574)
 :00033 method_def initialize: FuncId(575)
 :00034 method_def reset_mapping: FuncId(576)
 :00035 method_def reset: FuncId(577)
 :00036 %1 = :output
 :00037 _ = %0.attr_reader(%1;1)             [<INVALID>]
 :00039 method_def do_clock: FuncId(578)
 :00040 method_def clock_dma: FuncId(579)
 :00041 method_def update: FuncId(580)
 :00042 method_def update_latency: FuncId(581)
 :00043 method_def update_delta: FuncId(582)
 :00044 method_def vsync: FuncId(583)
 :00045 method_def clock_oscillators: FuncId(584)
 :00046 method_def clock_dmc: FuncId(585)
 :00047 method_def clock_frame_counter: FuncId(586)
 :00048 method_def clock_frame_irq: FuncId(587)
 :00049 method_def flush_sound: FuncId(588)
 :00050 method_def proceed: FuncId(589)
 :00051 method_def poke_4015: FuncId(590)
 :00052 method_def peek_4015: FuncId(591)
 :00053 method_def poke_4017: FuncId(592)
 :00054 method_def peek_40xx: FuncId(593)
 :00055 _ = class_def LengthCounter < _: FuncId(594)
 :00056 _ = class_def Envelope < _: FuncId(595)
 :00057 _ = class_def Mixer < _: FuncId(596)
 :00058 _ = class_def Oscillator < _: FuncId(597)
 :00059 %1 = const[Oscillator]               [<INVALID>]
 :00060 _ = class_def Pulse < %1: FuncId(598)
 :00061 %1 = const[Oscillator]               [<INVALID>]
 :00062 _ = class_def Triangle < %1: FuncId(599)
 :00063 %1 = const[Oscillator]               [<INVALID>]
 :00064 _ = class_def Noise < %1: FuncId(600)
 :00065 %1 = class_def DMC < _: FuncId(601)
 :00066 ret %1
------------------------------------
------------------------------------
<block in APU> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:11
meta:on_stack:true kind:Ruby mode:method FuncId(572) regs:3 ISeq(RubyFuncInfo { id:572 name:<unnamed> method:(FuncId(571), 1) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[RP2A03_CC]                [<INVALID>]
 :00002 %2 = %2 * %1                         [<INVALID>][<INVALID>]
 :00003 ret %2
------------------------------------
------------------------------------
<block in APU> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:15
meta:on_stack:true kind:Ruby mode:method FuncId(573) regs:4 ISeq(RubyFuncInfo { id:573 name:<unnamed> method:(FuncId(571), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal[39452673]
 :00002 %2 = %1.map( &%2)                    [<INVALID>]
 :00004 ret %2
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:17
meta:on_stack:true kind:Ruby mode:method FuncId(574) regs:4 ISeq(RubyFuncInfo { id:574 name:inspect method:(FuncId(574), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["#<"]
 :00002 %2 = %0.class()                      [<INVALID>]
 :00004 %3 = literal[">"]
 :00005 %1 = concat(%1; 3)
 :00006 ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:24
meta:on_stack:true kind:Ruby mode:method FuncId(575) regs:11 ISeq(RubyFuncInfo { id:575 name:initialize method:(FuncId(575), 0) args: 4 non_temp: 4 temp: 6})
[]
+:00000 init_method reg:10 arg:4 req:4 opt:0 rest:false block:None stack_offset:9
 :00001 @conf: <INVALID>[IvarId(0)] = %1
 :00002 @cpu: <INVALID>[IvarId(0)] = %2
 :00003 %5 = const[Pulse]                    [<INVALID>]
 :00004 %6 = %0
 :00005 %5 = %5.new(%6;1)                    [<INVALID>]
 :00007 %6 = const[Pulse]                    [<INVALID>]
 :00008 %7 = %0
 :00009 %6 = %6.new(%7;1)                    [<INVALID>]
 :00011 @pulse_0: <INVALID>[IvarId(0)] = %5
 :00012 @pulse_1: <INVALID>[IvarId(0)] = %6
 :00013 %5 = const[Triangle]                 [<INVALID>]
 :00014 %6 = %0
 :00015 %5 = %5.new(%6;1)                    [<INVALID>]
 :00017 @triangle: <INVALID>[IvarId(0)] = %5
 :00018 %5 = const[Noise]                    [<INVALID>]
 :00019 %6 = %0
 :00020 %5 = %5.new(%6;1)                    [<INVALID>]
 :00022 @noise: <INVALID>[IvarId(0)] = %5
 :00023 %5 = const[DMC]                      [<INVALID>]
 :00024 %6 = @cpu: <INVALID>[IvarId(0)]
 :00025 %7 = %0
 :00026 %5 = %5.new(%6;2)                    [<INVALID>]
 :00028 @dmc: <INVALID>[IvarId(0)] = %5
 :00029 %5 = const[Mixer]                    [<INVALID>]
 :00030 %6 = @pulse_0: <INVALID>[IvarId(0)]
 :00031 %7 = @pulse_1: <INVALID>[IvarId(0)]
 :00032 %8 = @triangle: <INVALID>[IvarId(0)]
 :00033 %9 = @noise: <INVALID>[IvarId(0)]
 :00034 %10 = @dmc: <INVALID>[IvarId(0)]
 :00035 %5 = %5.new(%6;5)                    [<INVALID>]
 :00037 @mixer: <INVALID>[IvarId(0)] = %5
 :00038 _%5 = %3 < 11050: i16                [<INVALID>][<INVALID>]
 :00039 condnotbr _%5 =>:00044
+:00040 %5 = @conf: <INVALID>[IvarId(0)]
 :00041 %6 = literal["audio sample rate must be >= 11050"]
 :00042 _ = %5.fatal(%6;1)                   [<INVALID>]
+:00044 _%5 = %4 != 8: i16                   [<INVALID>][<INVALID>]
 :00045 condnotbr _%5 =>:00052
+:00046 _%5 = %4 != 16: i16                  [<INVALID>][<INVALID>]
 :00047 condnotbr _%5 =>:00052
+:00048 %5 = @conf: <INVALID>[IvarId(0)]
 :00049 %6 = literal["audio bit depth must be 8 or 16"]
 :00050 _ = %5.fatal(%6;1)                   [<INVALID>]
+:00052 @settings_rate: <INVALID>[IvarId(0)] = %3
 :00053 %5 = literal[[]]
 :00054 @output: <INVALID>[IvarId(0)] = %5
 :00055 %5 = literal[[]]
 :00056 @buffer: <INVALID>[IvarId(0)] = %5
 :00057 %5 = 1: i32
 :00058 @fixed_clock: <INVALID>[IvarId(0)] = %5
 :00059 %5 = 1: i32
 :00060 @rate_clock: <INVALID>[IvarId(0)] = %5
 :00061 %5 = 0: i32
 :00062 @rate_counter: <INVALID>[IvarId(0)] = %5
 :00063 %5 = 0: i32
 :00064 @frame_counter: <INVALID>[IvarId(0)] = %5
 :00065 %5 = 0: i32
 :00066 @frame_divider: <INVALID>[IvarId(0)] = %5
 :00067 %5 = 0: i32
 :00068 @frame_irq_clock: <INVALID>[IvarId(0)] = %5
 :00069 %5 = 0: i32
 :00070 @frame_irq_repeat: <INVALID>[IvarId(0)] = %5
 :00071 %5 = 0: i32
 :00072 @dmc_clock: <INVALID>[IvarId(0)] = %5
 :00073 %5 = literal[false]
 :00074 %5 = %0.reset(%5;1)                  [<INVALID>]
 :00076 ret %5
------------------------------------
------------------------------------
<reset_mapping> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:54
meta:on_stack:true kind:Ruby mode:method FuncId(576) regs:9 ISeq(RubyFuncInfo { id:576 name:reset_mapping method:(FuncId(576), 0) args: 0 non_temp: 3 temp: 5})
[]
+:00000 init_method reg:8 arg:0 req:0 opt:0 rest:false block:None stack_offset:8
 :00001 %4 = @frame_counter: <INVALID>[IvarId(0)]
 :00002 %5 = @fixed_clock: <INVALID>[IvarId(0)]
 :00003 %4 = %4 / %5                         [<INVALID>][<INVALID>]
 :00004 @frame_counter: <INVALID>[IvarId(0)] = %4
 :00005 %4 = @rate_counter: <INVALID>[IvarId(0)]
 :00006 %5 = @fixed_clock: <INVALID>[IvarId(0)]
 :00007 %4 = %4 / %5                         [<INVALID>][<INVALID>]
 :00008 @rate_counter: <INVALID>[IvarId(0)] = %4
 :00009 %1 = 0: i32
+:00010 loop_start counter=0 jit-addr=0000000000000000
 :00011 %4 = literal[true]
 :00012 condnotbr %4 =>:00025
+:00013 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00014 _%4 = %1 >= 512: i16                 [<INVALID>][<INVALID>]
 :00015 condnotbr _%4 =>:00017
+:00016 br =>:00025
+:00017 %4 = const[CLK_NTSC]                 [<INVALID>]
 :00018 %4 = %4 * %1                         [<INVALID>][<INVALID>]
 :00019 %5 = @settings_rate: <INVALID>[IvarId(0)]
 :00020 %4 = %4 % %5                         [<INVALID>][<INVALID>]
 :00021 _%4 = %4 == 0: i16                   [<INVALID>][<INVALID>]
 :00022 condnotbr _%4 =>:00024
+:00023 br =>:00025
+:00024 br =>:00010
+:00025 loop_end
+:00026 %4 = const[CLK_NTSC]                 [<INVALID>]
 :00027 %4 = %4 * %1                         [<INVALID>][<INVALID>]
 :00028 %5 = @settings_rate: <INVALID>[IvarId(0)]
 :00029 %4 = %4 / %5                         [<INVALID>][<INVALID>]
 :00030 @rate_clock: <INVALID>[IvarId(0)] = %4
 :00031 %4 = const[CLK_NTSC_DIV]             [<INVALID>]
 :00032 %4 = %4 * %1                         [<INVALID>][<INVALID>]
 :00033 @fixed_clock: <INVALID>[IvarId(0)] = %4
 :00034 %4 = @frame_counter: <INVALID>[IvarId(0)]
 :00035 %5 = @fixed_clock: <INVALID>[IvarId(0)]
 :00036 %4 = %4 * %5                         [<INVALID>][<INVALID>]
 :00037 @frame_counter: <INVALID>[IvarId(0)] = %4
 :00038 %4 = @rate_counter: <INVALID>[IvarId(0)]
 :00039 %5 = @fixed_clock: <INVALID>[IvarId(0)]
 :00040 %4 = %4 * %5                         [<INVALID>][<INVALID>]
 :00041 @rate_counter: <INVALID>[IvarId(0)] = %4
 :00042 %4 = @mixer: <INVALID>[IvarId(0)]
 :00043 _ = %4.reset()                       [<INVALID>]
 :00045 %4 = @buffer: <INVALID>[IvarId(0)]
 :00046 _ = %4.clear()                       [<INVALID>]
 :00048 %1 = 0: i32
+:00049 loop_start counter=0 jit-addr=0000000000000000
 :00050 %4 = literal[true]
 :00051 condnotbr %4 =>:00073
+:00052 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00053 _%4 = %1 >= 4096: i16                [<INVALID>][<INVALID>]
 :00054 condnotbr _%4 =>:00056
+:00055 br =>:00073
+:00056 %4 = const[CLK_NTSC]                 [<INVALID>]
 :00057 %5 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00058 %4 = %4 * %5                         [<INVALID>][<INVALID>]
 :00059 %5 = @settings_rate: <INVALID>[IvarId(0)]
 :00060 %4 = %4 / %5                         [<INVALID>][<INVALID>]
 :00061 %5 = 524287: i32
 :00062 _%4 = %4 > %5                        [<INVALID>][<INVALID>]
 :00063 condnotbr _%4 =>:00065
+:00064 br =>:00073
+:00065 %4 = const[CLK_NTSC]                 [<INVALID>]
 :00066 %4 = %4 * %1                         [<INVALID>][<INVALID>]
 :00067 %5 = @settings_rate: <INVALID>[IvarId(0)]
 :00068 %4 = %4 % %5                         [<INVALID>][<INVALID>]
 :00069 _%4 = %4 == 0: i16                   [<INVALID>][<INVALID>]
 :00070 condnotbr _%4 =>:00072
+:00071 br =>:00073
+:00072 br =>:00049
+:00073 loop_end
+:00074 %4 = const[CLK_NTSC]                 [<INVALID>]
 :00075 %4 = %4 * %1                         [<INVALID>][<INVALID>]
 :00076 %5 = @settings_rate: <INVALID>[IvarId(0)]
 :00077 %2 = %4 / %5                         [<INVALID>][<INVALID>]
 :00078 %4 = const[CLK_NTSC_DIV]             [<INVALID>]
 :00079 %5 = const[CPU::CLK_1]               [<INVALID>]
 :00080 %4 = %4 * %5                         [<INVALID>][<INVALID>]
 :00081 %3 = %4 * %1                         [<INVALID>][<INVALID>]
 :00082 %4 = @pulse_0: <INVALID>[IvarId(0)]
 :00083 %5 = %2
 :00084 %6 = %3
 :00085 _ = %4.update_settings(%5;2)         [<INVALID>]
 :00087 %4 = @pulse_1: <INVALID>[IvarId(0)]
 :00088 %5 = %2
 :00089 %6 = %3
 :00090 _ = %4.update_settings(%5;2)         [<INVALID>]
 :00092 %4 = @triangle: <INVALID>[IvarId(0)]
 :00093 %5 = %2
 :00094 %6 = %3
 :00095 _ = %4.update_settings(%5;2)         [<INVALID>]
 :00097 %4 = @noise: <INVALID>[IvarId(0)]
 :00098 %5 = %2
 :00099 %6 = %3
 :00100 _ = %4.update_settings(%5;2)         [<INVALID>]
 :00102 %4 = @cpu: <INVALID>[IvarId(0)]
 :00103 %5 = 16384: i32
 :00104 %6 = :peek_40xx
 :00105 %6 = %0.method(%6;1)                 [<INVALID>]
 :00107 %7 = @pulse_0: <INVALID>[IvarId(0)]
 :00108 %8 = :poke_0
 :00109 %7 = %7.method(%8;1)                 [<INVALID>]
 :00111 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00113 %4 = @cpu: <INVALID>[IvarId(0)]
 :00114 %5 = 16385: i32
 :00115 %6 = :peek_40xx
 :00116 %6 = %0.method(%6;1)                 [<INVALID>]
 :00118 %7 = @pulse_0: <INVALID>[IvarId(0)]
 :00119 %8 = :poke_1
 :00120 %7 = %7.method(%8;1)                 [<INVALID>]
 :00122 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00124 %4 = @cpu: <INVALID>[IvarId(0)]
 :00125 %5 = 16386: i32
 :00126 %6 = :peek_40xx
 :00127 %6 = %0.method(%6;1)                 [<INVALID>]
 :00129 %7 = @pulse_0: <INVALID>[IvarId(0)]
 :00130 %8 = :poke_2
 :00131 %7 = %7.method(%8;1)                 [<INVALID>]
 :00133 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00135 %4 = @cpu: <INVALID>[IvarId(0)]
 :00136 %5 = 16387: i32
 :00137 %6 = :peek_40xx
 :00138 %6 = %0.method(%6;1)                 [<INVALID>]
 :00140 %7 = @pulse_0: <INVALID>[IvarId(0)]
 :00141 %8 = :poke_3
 :00142 %7 = %7.method(%8;1)                 [<INVALID>]
 :00144 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00146 %4 = @cpu: <INVALID>[IvarId(0)]
 :00147 %5 = 16388: i32
 :00148 %6 = :peek_40xx
 :00149 %6 = %0.method(%6;1)                 [<INVALID>]
 :00151 %7 = @pulse_1: <INVALID>[IvarId(0)]
 :00152 %8 = :poke_0
 :00153 %7 = %7.method(%8;1)                 [<INVALID>]
 :00155 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00157 %4 = @cpu: <INVALID>[IvarId(0)]
 :00158 %5 = 16389: i32
 :00159 %6 = :peek_40xx
 :00160 %6 = %0.method(%6;1)                 [<INVALID>]
 :00162 %7 = @pulse_1: <INVALID>[IvarId(0)]
 :00163 %8 = :poke_1
 :00164 %7 = %7.method(%8;1)                 [<INVALID>]
 :00166 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00168 %4 = @cpu: <INVALID>[IvarId(0)]
 :00169 %5 = 16390: i32
 :00170 %6 = :peek_40xx
 :00171 %6 = %0.method(%6;1)                 [<INVALID>]
 :00173 %7 = @pulse_1: <INVALID>[IvarId(0)]
 :00174 %8 = :poke_2
 :00175 %7 = %7.method(%8;1)                 [<INVALID>]
 :00177 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00179 %4 = @cpu: <INVALID>[IvarId(0)]
 :00180 %5 = 16391: i32
 :00181 %6 = :peek_40xx
 :00182 %6 = %0.method(%6;1)                 [<INVALID>]
 :00184 %7 = @pulse_1: <INVALID>[IvarId(0)]
 :00185 %8 = :poke_3
 :00186 %7 = %7.method(%8;1)                 [<INVALID>]
 :00188 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00190 %4 = @cpu: <INVALID>[IvarId(0)]
 :00191 %5 = 16392: i32
 :00192 %6 = :peek_40xx
 :00193 %6 = %0.method(%6;1)                 [<INVALID>]
 :00195 %7 = @triangle: <INVALID>[IvarId(0)]
 :00196 %8 = :poke_0
 :00197 %7 = %7.method(%8;1)                 [<INVALID>]
 :00199 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00201 %4 = @cpu: <INVALID>[IvarId(0)]
 :00202 %5 = 16394: i32
 :00203 %6 = :peek_40xx
 :00204 %6 = %0.method(%6;1)                 [<INVALID>]
 :00206 %7 = @triangle: <INVALID>[IvarId(0)]
 :00207 %8 = :poke_2
 :00208 %7 = %7.method(%8;1)                 [<INVALID>]
 :00210 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00212 %4 = @cpu: <INVALID>[IvarId(0)]
 :00213 %5 = 16395: i32
 :00214 %6 = :peek_40xx
 :00215 %6 = %0.method(%6;1)                 [<INVALID>]
 :00217 %7 = @triangle: <INVALID>[IvarId(0)]
 :00218 %8 = :poke_3
 :00219 %7 = %7.method(%8;1)                 [<INVALID>]
 :00221 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00223 %4 = @cpu: <INVALID>[IvarId(0)]
 :00224 %5 = 16396: i32
 :00225 %6 = :peek_40xx
 :00226 %6 = %0.method(%6;1)                 [<INVALID>]
 :00228 %7 = @noise: <INVALID>[IvarId(0)]
 :00229 %8 = :poke_0
 :00230 %7 = %7.method(%8;1)                 [<INVALID>]
 :00232 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00234 %4 = @cpu: <INVALID>[IvarId(0)]
 :00235 %5 = 16398: i32
 :00236 %6 = :peek_40xx
 :00237 %6 = %0.method(%6;1)                 [<INVALID>]
 :00239 %7 = @noise: <INVALID>[IvarId(0)]
 :00240 %8 = :poke_2
 :00241 %7 = %7.method(%8;1)                 [<INVALID>]
 :00243 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00245 %4 = @cpu: <INVALID>[IvarId(0)]
 :00246 %5 = 16399: i32
 :00247 %6 = :peek_40xx
 :00248 %6 = %0.method(%6;1)                 [<INVALID>]
 :00250 %7 = @noise: <INVALID>[IvarId(0)]
 :00251 %8 = :poke_3
 :00252 %7 = %7.method(%8;1)                 [<INVALID>]
 :00254 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00256 %4 = @cpu: <INVALID>[IvarId(0)]
 :00257 %5 = 16400: i32
 :00258 %6 = :peek_40xx
 :00259 %6 = %0.method(%6;1)                 [<INVALID>]
 :00261 %7 = @dmc: <INVALID>[IvarId(0)]
 :00262 %8 = :poke_0
 :00263 %7 = %7.method(%8;1)                 [<INVALID>]
 :00265 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00267 %4 = @cpu: <INVALID>[IvarId(0)]
 :00268 %5 = 16401: i32
 :00269 %6 = :peek_40xx
 :00270 %6 = %0.method(%6;1)                 [<INVALID>]
 :00272 %7 = @dmc: <INVALID>[IvarId(0)]
 :00273 %8 = :poke_1
 :00274 %7 = %7.method(%8;1)                 [<INVALID>]
 :00276 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00278 %4 = @cpu: <INVALID>[IvarId(0)]
 :00279 %5 = 16402: i32
 :00280 %6 = :peek_40xx
 :00281 %6 = %0.method(%6;1)                 [<INVALID>]
 :00283 %7 = @dmc: <INVALID>[IvarId(0)]
 :00284 %8 = :poke_2
 :00285 %7 = %7.method(%8;1)                 [<INVALID>]
 :00287 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00289 %4 = @cpu: <INVALID>[IvarId(0)]
 :00290 %5 = 16403: i32
 :00291 %6 = :peek_40xx
 :00292 %6 = %0.method(%6;1)                 [<INVALID>]
 :00294 %7 = @dmc: <INVALID>[IvarId(0)]
 :00295 %8 = :poke_3
 :00296 %7 = %7.method(%8;1)                 [<INVALID>]
 :00298 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00300 %4 = @cpu: <INVALID>[IvarId(0)]
 :00301 %5 = 16405: i32
 :00302 %6 = :peek_4015
 :00303 %6 = %0.method(%6;1)                 [<INVALID>]
 :00305 %7 = :poke_4015
 :00306 %7 = %0.method(%7;1)                 [<INVALID>]
 :00308 _ = %4.add_mappings(%5;3)            [<INVALID>]
 :00310 %4 = @frame_counter: <INVALID>[IvarId(0)]
 :00311 %5 = @fixed_clock: <INVALID>[IvarId(0)]
 :00312 %4 = %4 / %5                         [<INVALID>][<INVALID>]
 :00313 %5 = const[CPU::CLK_1]               [<INVALID>]
 :00314 %4 = %4 - %5                         [<INVALID>][<INVALID>]
 :00315 @frame_irq_clock: <INVALID>[IvarId(0)] = %4
 :00316 ret %4
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:108
meta:on_stack:true kind:Ruby mode:method FuncId(577) regs:4 ISeq(RubyFuncInfo { id:577 name:reset method:(FuncId(577), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:0 opt:1 rest:false block:None stack_offset:5
 :00001 check_local(%1) =>:00003
+:00002 %1 = literal[true]
+:00003 %2 = 0: i32
 :00004 @cycles_ratecounter: <INVALID>[IvarId(0)] = %2
 :00005 %2 = 0: i32
 :00006 @frame_divider: <INVALID>[IvarId(0)] = %2
 :00007 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00008 @frame_irq_clock: <INVALID>[IvarId(0)] = %2
 :00009 %2 = 0: i32
 :00010 @frame_irq_repeat: <INVALID>[IvarId(0)] = %2
 :00011 %2 = const[DMC::LUT]                 [<INVALID>]
 :00012 %3 = 0: i32
 :00013 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00014 @dmc_clock: <INVALID>[IvarId(0)] = %2
 :00015 %2 = const[FRAME_CLOCKS]             [<INVALID>]
 :00016 %3 = 0: i32
 :00017 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00018 %3 = @fixed_clock: <INVALID>[IvarId(0)]
 :00019 %2 = %2 * %3                         [<INVALID>][<INVALID>]
 :00020 @frame_counter: <INVALID>[IvarId(0)] = %2
 :00021 condnotbr %1 =>:00024
+:00022 _ = %0.reset_mapping()               [<INVALID>]
+:00024 %2 = @pulse_0: <INVALID>[IvarId(0)]
 :00025 _ = %2.reset()                       [<INVALID>]
 :00027 %2 = @pulse_1: <INVALID>[IvarId(0)]
 :00028 _ = %2.reset()                       [<INVALID>]
 :00030 %2 = @triangle: <INVALID>[IvarId(0)]
 :00031 _ = %2.reset()                       [<INVALID>]
 :00033 %2 = @noise: <INVALID>[IvarId(0)]
 :00034 _ = %2.reset()                       [<INVALID>]
 :00036 %2 = @dmc: <INVALID>[IvarId(0)]
 :00037 _ = %2.reset()                       [<INVALID>]
 :00039 %2 = @mixer: <INVALID>[IvarId(0)]
 :00040 _ = %2.reset()                       [<INVALID>]
 :00042 %2 = @buffer: <INVALID>[IvarId(0)]
 :00043 _ = %2.clear()                       [<INVALID>]
 :00045 %2 = const[OSCILLATOR_CLOCKS]        [<INVALID>]
 :00046 %3 = 0: i32
 :00047 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00048 @oscillator_clocks: <INVALID>[IvarId(0)] = %2
 :00049 ret %2
------------------------------------
------------------------------------
<do_clock> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:133
meta:on_stack:true kind:Ruby mode:method FuncId(578) regs:4 ISeq(RubyFuncInfo { id:578 name:do_clock method:(FuncId(578), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @cpu: <INVALID>[IvarId(0)]
 :00002 %1 = %1.current_clock()              [<INVALID>]
 :00004 _ = %0.clock_dma(%1;1)               [<INVALID>]
 :00006 %1 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00007 %2 = @cpu: <INVALID>[IvarId(0)]
 :00008 %2 = %2.current_clock()              [<INVALID>]
 :00010 _%1 = %1 <= %2                       [<INVALID>][<INVALID>]
 :00011 condnotbr _%1 =>:00017
+:00012 %1 = @cpu: <INVALID>[IvarId(0)]
 :00013 %1 = %1.current_clock()              [<INVALID>]
 :00015 _ = %0.clock_frame_irq(%1;1)         [<INVALID>]
+:00017 %1 = @dmc_clock: <INVALID>[IvarId(0)]
 :00018 %2 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00019 _%1 = %1 < %2                        [<INVALID>][<INVALID>]
 :00020 condnotbr _%1 =>:00023
+:00021 %1 = @dmc_clock: <INVALID>[IvarId(0)]
 :00022 ret %1
+:00023 %1 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00024 ret %1
------------------------------------
------------------------------------
<clock_dma> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:139
meta:on_stack:true kind:Ruby mode:method FuncId(579) regs:3 ISeq(RubyFuncInfo { id:579 name:clock_dma method:(FuncId(579), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @dmc_clock: <INVALID>[IvarId(0)]
 :00002 _%2 = %2 <= %1                       [<INVALID>][<INVALID>]
 :00003 condnotbr _%2 =>:00007
+:00004 %2 = %0.clock_dmc(%1;1)              [<INVALID>]
 :00006 ret %2
+:00007 %2 = nil
 :00008 ret %2
------------------------------------
------------------------------------
<update> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:143
meta:on_stack:true kind:Ruby mode:method FuncId(580) regs:4 ISeq(RubyFuncInfo { id:580 name:update method:(FuncId(580), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:0 opt:1 rest:false block:None stack_offset:5
 :00001 check_local(%1) =>:00005
+:00002 %2 = @cpu: <INVALID>[IvarId(0)]
 :00003 %1 = %2.update()                     [<INVALID>]
+:00005 %2 = @fixed_clock: <INVALID>[IvarId(0)]
 :00006 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00007 _ = %0.proceed(%1;1)                 [<INVALID>]
 :00009 %2 = @frame_counter: <INVALID>[IvarId(0)]
 :00010 _%2 = %2 < %1                        [<INVALID>][<INVALID>]
 :00011 condnotbr _%2 =>:00015
+:00012 %2 = %0.clock_frame_counter()        [<INVALID>]
 :00014 ret %2
+:00015 %2 = nil
 :00016 ret %2
------------------------------------
------------------------------------
<update_latency> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:149
meta:on_stack:true kind:Ruby mode:method FuncId(581) regs:3 ISeq(RubyFuncInfo { id:581 name:update_latency method:(FuncId(581), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @cpu: <INVALID>[IvarId(0)]
 :00002 %1 = %1.update()                     [<INVALID>]
 :00004 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00005 %1 = %0.update(%1;1)                 [<INVALID>]
 :00007 ret %1
------------------------------------
------------------------------------
<update_delta> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:153
meta:on_stack:true kind:Ruby mode:method FuncId(582) regs:5 ISeq(RubyFuncInfo { id:582 name:update_delta method:(FuncId(582), 0) args: 0 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @cpu: <INVALID>[IvarId(0)]
 :00002 %1 = %3.update()                     [<INVALID>]
 :00004 %3 = @frame_counter: <INVALID>[IvarId(0)]
 :00005 %4 = @fixed_clock: <INVALID>[IvarId(0)]
 :00006 %4 = %1 * %4                         [<INVALID>][<INVALID>]
 :00007 %2 = %3 != %4                        [<INVALID>][<INVALID>]
 :00008 %3 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 _ = %0.update(%3;1)                  [<INVALID>]
 :00011 ret %2
------------------------------------
------------------------------------
<vsync> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:160
meta:on_stack:true kind:Ruby mode:method FuncId(583) regs:4 ISeq(RubyFuncInfo { id:583 name:vsync method:(FuncId(583), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 _ = %0.flush_sound()                 [<INVALID>]
 :00003 %2 = @cpu: <INVALID>[IvarId(0)]
 :00004 %2 = %2.current_clock()              [<INVALID>]
 :00006 _ = %0.update(%2;1)                  [<INVALID>]
 :00008 %2 = @cpu: <INVALID>[IvarId(0)]
 :00009 %1 = %2.next_frame_clock()           [<INVALID>]
 :00011 %2 = @dmc_clock: <INVALID>[IvarId(0)]
 :00012 %2 = %2 - %1                         [<INVALID>][<INVALID>]
 :00013 @dmc_clock: <INVALID>[IvarId(0)] = %2
 :00014 %2 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00015 %3 = const[FOREVER_CLOCK]            [<INVALID>]
 :00016 _%2 = %2 != %3                       [<INVALID>][<INVALID>]
 :00017 condnotbr _%2 =>:00021
+:00018 %2 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00019 %2 = %2 - %1                         [<INVALID>][<INVALID>]
 :00020 @frame_irq_clock: <INVALID>[IvarId(0)] = %2
+:00021 %2 = @fixed_clock: <INVALID>[IvarId(0)]
 :00022 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00023 %2 = @rate_counter: <INVALID>[IvarId(0)]
 :00024 %2 = %2 - %1                         [<INVALID>][<INVALID>]
 :00025 @rate_counter: <INVALID>[IvarId(0)] = %2
 :00026 %2 = @frame_counter: <INVALID>[IvarId(0)]
 :00027 %2 = %2 - %1                         [<INVALID>][<INVALID>]
 :00028 @frame_counter: <INVALID>[IvarId(0)] = %2
 :00029 ret %2
------------------------------------
------------------------------------
<clock_oscillators> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:174
meta:on_stack:true kind:Ruby mode:method FuncId(584) regs:4 ISeq(RubyFuncInfo { id:584 name:clock_oscillators method:(FuncId(584), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @pulse_0: <INVALID>[IvarId(0)]
 :00002 _ = %2.clock_envelope()              [<INVALID>]
 :00004 %2 = @pulse_1: <INVALID>[IvarId(0)]
 :00005 _ = %2.clock_envelope()              [<INVALID>]
 :00007 %2 = @triangle: <INVALID>[IvarId(0)]
 :00008 _ = %2.clock_linear_counter()        [<INVALID>]
 :00010 %2 = @noise: <INVALID>[IvarId(0)]
 :00011 _ = %2.clock_envelope()              [<INVALID>]
 :00013 condnotbr %1 =>:00015
+:00014 br =>:00017
+:00015 %2 = nil
 :00016 ret %2
+:00017 %2 = @pulse_0: <INVALID>[IvarId(0)]
 :00018 %3 = -1: i32
 :00019 _ = %2.clock_sweep(%3;1)             [<INVALID>]
 :00021 %2 = @pulse_1: <INVALID>[IvarId(0)]
 :00022 %3 = 0: i32
 :00023 _ = %2.clock_sweep(%3;1)             [<INVALID>]
 :00025 %2 = @triangle: <INVALID>[IvarId(0)]
 :00026 _ = %2.clock_length_counter()        [<INVALID>]
 :00028 %2 = @noise: <INVALID>[IvarId(0)]
 :00029 %2 = %2.clock_length_counter()       [<INVALID>]
 :00031 ret %2
------------------------------------
------------------------------------
<clock_dmc> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:186
meta:on_stack:true kind:Ruby mode:method FuncId(585) regs:5 ISeq(RubyFuncInfo { id:585 name:clock_dmc method:(FuncId(585), 0) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
+:00001 loop_start counter=0 jit-addr=0000000000000000
 :00002 %2 = @dmc: <INVALID>[IvarId(0)]
 :00003 %2 = %2.clock_dac()                  [<INVALID>]
 :00005 condnotbr %2 =>:00012
+:00006 %2 = @dmc_clock: <INVALID>[IvarId(0)]
 :00007 _ = %0.update(%2;1)                  [<INVALID>]
 :00009 %2 = @dmc: <INVALID>[IvarId(0)]
 :00010 _ = %2.update()                      [<INVALID>]
+:00012 %2 = @dmc_clock: <INVALID>[IvarId(0)]
 :00013 %3 = @dmc: <INVALID>[IvarId(0)]
 :00014 %3 = %3.freq()                       [<INVALID>]
 :00016 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00017 @dmc_clock: <INVALID>[IvarId(0)] = %2
 :00018 %2 = @dmc: <INVALID>[IvarId(0)]
 :00019 _ = %2.clock_dma()                   [<INVALID>]
 :00021 %2 = @dmc_clock: <INVALID>[IvarId(0)]
 :00022 _%2 = %2 <= %1                       [<INVALID>][<INVALID>]
 :00023 condbr _%2 =>:00001
+:00024 %2 = nil
 :00025 loop_end
+:00026 ret %2
------------------------------------
------------------------------------
<clock_frame_counter> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:197
meta:on_stack:true kind:Ruby mode:method FuncId(586) regs:4 ISeq(RubyFuncInfo { id:586 name:clock_frame_counter method:(FuncId(586), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @frame_divider: <INVALID>[IvarId(0)]
 :00002 %2 = 0: i32
 :00003 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00004 %1 = %1 == 1: i16                    [<INVALID>][<INVALID>]
 :00005 _ = %0.clock_oscillators(%1;1)       [<INVALID>]
 :00007 %1 = @frame_divider: <INVALID>[IvarId(0)]
 :00008 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 %1 = %1 & 3: i16                     [<INVALID>][<INVALID>]
 :00010 @frame_divider: <INVALID>[IvarId(0)] = %1
 :00011 %1 = @frame_counter: <INVALID>[IvarId(0)]
 :00012 %2 = @oscillator_clocks: <INVALID>[IvarId(0)]
 :00013 %3 = @frame_divider: <INVALID>[IvarId(0)]
 :00014 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00015 %3 = @fixed_clock: <INVALID>[IvarId(0)]
 :00016 %2 = %2 * %3                         [<INVALID>][<INVALID>]
 :00017 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00018 @frame_counter: <INVALID>[IvarId(0)] = %1
 :00019 ret %1
------------------------------------
------------------------------------
<clock_frame_irq> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:203
meta:on_stack:true kind:Ruby mode:method FuncId(587) regs:6 ISeq(RubyFuncInfo { id:587 name:clock_frame_irq method:(FuncId(587), 0) args: 1 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @cpu: <INVALID>[IvarId(0)]
 :00002 %3 = const[CPU::IRQ_FRAME]           [<INVALID>]
 :00003 %4 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00004 _ = %2.do_irq(%3;2)                  [<INVALID>]
+:00006 loop_start counter=0 jit-addr=0000000000000000
 :00007 %2 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00008 %3 = const[FRAME_CLOCKS]             [<INVALID>]
 :00009 %4 = @frame_irq_repeat: <INVALID>[IvarId(0)]
 :00010 %5 = 3: i32
 :00011 %4 = %4 % %5                         [<INVALID>][<INVALID>]
 :00012 %4 = 1: i16 + %4                     [<INVALID>][<INVALID>]
 :00013 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00014 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00015 @frame_irq_clock: <INVALID>[IvarId(0)] = %2
 :00016 %2 = @frame_irq_repeat: <INVALID>[IvarId(0)]
 :00017 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00018 @frame_irq_repeat: <INVALID>[IvarId(0)] = %2
 :00019 %2 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00020 _%2 = %2 <= %1                       [<INVALID>][<INVALID>]
 :00021 condbr _%2 =>:00006
+:00022 %2 = nil
 :00023 loop_end
+:00024 ret %2
------------------------------------
------------------------------------
<flush_sound> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:211
meta:on_stack:true kind:Ruby mode:method FuncId(588) regs:5 ISeq(RubyFuncInfo { id:588 name:flush_sound method:(FuncId(588), 0) args: 0 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @buffer: <INVALID>[IvarId(0)]
 :00002 %2 = %2.size()                       [<INVALID>]
 :00004 %3 = @settings_rate: <INVALID>[IvarId(0)]
 :00005 %3 = %3 / 60: i16                    [<INVALID>][<INVALID>]
 :00006 _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00007 condnotbr _%2 =>:00042
+:00008 %2 = @cpu: <INVALID>[IvarId(0)]
 :00009 %2 = %2.current_clock()              [<INVALID>]
 :00011 %3 = @fixed_clock: <INVALID>[IvarId(0)]
 :00012 %1 = %2 * %3                         [<INVALID>][<INVALID>]
 :00013 _ = %0.proceed(%1;1)                 [<INVALID>]
 :00015 %2 = @buffer: <INVALID>[IvarId(0)]
 :00016 %2 = %2.size()                       [<INVALID>]
 :00018 %3 = @settings_rate: <INVALID>[IvarId(0)]
 :00019 %3 = %3 / 60: i16                    [<INVALID>][<INVALID>]
 :00020 _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00021 condnotbr _%2 =>:00042
+:00022 %2 = @frame_counter: <INVALID>[IvarId(0)]
 :00023 _%2 = %2 < %1                        [<INVALID>][<INVALID>]
 :00024 condnotbr _%2 =>:00027
+:00025 _ = %0.clock_frame_counter()         [<INVALID>]
+:00027 loop_start counter=0 jit-addr=0000000000000000
 :00028 %2 = @buffer: <INVALID>[IvarId(0)]
 :00029 %2 = %2.size()                       [<INVALID>]
 :00031 %3 = @settings_rate: <INVALID>[IvarId(0)]
 :00032 %3 = %3 / 60: i16                    [<INVALID>][<INVALID>]
 :00033 _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00034 condnotbr _%2 =>:00041
+:00035 %2 = @buffer: <INVALID>[IvarId(0)]
 :00036 %3 = @mixer: <INVALID>[IvarId(0)]
 :00037 %3 = %3.sample()                     [<INVALID>]
 :00039 %2 = %2 << %3                        [<INVALID>][<INVALID>]
 :00040 br =>:00027
+:00041 loop_end
+:00042 %2 = @output: <INVALID>[IvarId(0)]
 :00043 _ = %2.clear()                       [<INVALID>]
 :00045 %2 = @output: <INVALID>[IvarId(0)]
 :00046 %3 = @buffer: <INVALID>[IvarId(0)]
 :00047 _ = %2.concat(%3;1)                  [<INVALID>]
 :00049 %2 = @buffer: <INVALID>[IvarId(0)]
 :00050 %2 = %2.clear()                      [<INVALID>]
 :00052 ret %2
------------------------------------
------------------------------------
<proceed> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:225
meta:on_stack:true kind:Ruby mode:method FuncId(589) regs:5 ISeq(RubyFuncInfo { id:589 name:proceed method:(FuncId(589), 0) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
+:00001 loop_start counter=0 jit-addr=0000000000000000
 :00002 %2 = @rate_counter: <INVALID>[IvarId(0)]
 :00003 _%2 = %2 < %1                        [<INVALID>][<INVALID>]
 :00004 condnotbr _%2 =>:00028
+:00005 %2 = @buffer: <INVALID>[IvarId(0)]
 :00006 %2 = %2.size()                       [<INVALID>]
 :00008 %3 = @settings_rate: <INVALID>[IvarId(0)]
 :00009 %3 = %3 / 60: i16                    [<INVALID>][<INVALID>]
 :00010 _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00011 condnotbr _%2 =>:00028
+:00012 %2 = @buffer: <INVALID>[IvarId(0)]
 :00013 %3 = @mixer: <INVALID>[IvarId(0)]
 :00014 %3 = %3.sample()                     [<INVALID>]
 :00016 %2 = %2 << %3                        [<INVALID>][<INVALID>]
 :00017 %2 = @frame_counter: <INVALID>[IvarId(0)]
 :00018 %3 = @rate_counter: <INVALID>[IvarId(0)]
 :00019 _%2 = %2 <= %3                       [<INVALID>][<INVALID>]
 :00020 condnotbr _%2 =>:00023
+:00021 _ = %0.clock_frame_counter()         [<INVALID>]
+:00023 %2 = @rate_counter: <INVALID>[IvarId(0)]
 :00024 %3 = @rate_clock: <INVALID>[IvarId(0)]
 :00025 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00026 @rate_counter: <INVALID>[IvarId(0)] = %2
 :00027 br =>:00001
+:00028 %2 = nil
 :00029 loop_end
+:00030 ret %2
------------------------------------
------------------------------------
<poke_4015> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:237
meta:on_stack:true kind:Ruby mode:method FuncId(590) regs:5 ISeq(RubyFuncInfo { id:590 name:poke_4015 method:(FuncId(590), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 _ = %0.update()                      [<INVALID>]
 :00003 %3 = @pulse_0: <INVALID>[IvarId(0)]
 :00004 %4 = 0: i32
 :00005 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00006 %4 = %4 == 1: i16                    [<INVALID>][<INVALID>]
 :00007 _ = %3.enable(%4;1)                  [<INVALID>]
 :00009 %3 = @pulse_1: <INVALID>[IvarId(0)]
 :00010 %4 = 1: i32
 :00011 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00012 %4 = %4 == 1: i16                    [<INVALID>][<INVALID>]
 :00013 _ = %3.enable(%4;1)                  [<INVALID>]
 :00015 %3 = @triangle: <INVALID>[IvarId(0)]
 :00016 %4 = 2: i32
 :00017 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00018 %4 = %4 == 1: i16                    [<INVALID>][<INVALID>]
 :00019 _ = %3.enable(%4;1)                  [<INVALID>]
 :00021 %3 = @noise: <INVALID>[IvarId(0)]
 :00022 %4 = 3: i32
 :00023 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00024 %4 = %4 == 1: i16                    [<INVALID>][<INVALID>]
 :00025 _ = %3.enable(%4;1)                  [<INVALID>]
 :00027 %3 = @dmc: <INVALID>[IvarId(0)]
 :00028 %4 = 4: i32
 :00029 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00030 %4 = %4 == 1: i16                    [<INVALID>][<INVALID>]
 :00031 %3 = %3.enable(%4;1)                 [<INVALID>]
 :00033 ret %3
------------------------------------
------------------------------------
<peek_4015> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:247
meta:on_stack:true kind:Ruby mode:method FuncId(591) regs:6 ISeq(RubyFuncInfo { id:591 name:peek_4015 method:(FuncId(591), 0) args: 1 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @cpu: <INVALID>[IvarId(0)]
 :00002 %2 = %3.update()                     [<INVALID>]
 :00004 %3 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00005 _%3 = %3 <= %2                       [<INVALID>][<INVALID>]
 :00006 condnotbr _%3 =>:00009
+:00007 _ = %0.clock_frame_irq(%2;1)         [<INVALID>]
+:00009 %3 = @frame_counter: <INVALID>[IvarId(0)]
 :00010 %4 = @fixed_clock: <INVALID>[IvarId(0)]
 :00011 %4 = %2 * %4                         [<INVALID>][<INVALID>]
 :00012 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
 :00013 condnotbr _%3 =>:00016
+:00014 _ = %0.update(%2;1)                  [<INVALID>]
+:00016 %3 = @cpu: <INVALID>[IvarId(0)]
 :00017 %4 = const[CPU::IRQ_FRAME]           [<INVALID>]
 :00018 %3 = %3.clear_irq(%4;1)              [<INVALID>]
 :00020 %4 = @pulse_0: <INVALID>[IvarId(0)]
 :00021 %4 = %4.status()                     [<INVALID>]
 :00023 condnotbr %4 =>:00026
+:00024 %4 = 1: i32
 :00025 br =>:00027
+:00026 %4 = 0: i32
+:00027 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00028 %4 = @pulse_1: <INVALID>[IvarId(0)]
 :00029 %4 = %4.status()                     [<INVALID>]
 :00031 condnotbr %4 =>:00034
+:00032 %4 = 2: i32
 :00033 br =>:00035
+:00034 %4 = 0: i32
+:00035 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00036 %4 = @triangle: <INVALID>[IvarId(0)]
 :00037 %4 = %4.status()                     [<INVALID>]
 :00039 condnotbr %4 =>:00042
+:00040 %4 = 4: i32
 :00041 br =>:00043
+:00042 %4 = 0: i32
+:00043 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00044 %4 = @noise: <INVALID>[IvarId(0)]
 :00045 %4 = %4.status()                     [<INVALID>]
 :00047 condnotbr %4 =>:00050
+:00048 %4 = 8: i32
 :00049 br =>:00051
+:00050 %4 = 0: i32
+:00051 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00052 %4 = @dmc: <INVALID>[IvarId(0)]
 :00053 %4 = %4.status()                     [<INVALID>]
 :00055 condnotbr %4 =>:00058
+:00056 %4 = 16: i32
 :00057 br =>:00059
+:00058 %4 = 0: i32
+:00059 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00060 ret %3
------------------------------------
------------------------------------
<poke_4017> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:260
meta:on_stack:true kind:Ruby mode:method FuncId(592) regs:6 ISeq(RubyFuncInfo { id:592 name:poke_4017 method:(FuncId(592), 0) args: 2 non_temp: 3 temp: 2})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %4 = @cpu: <INVALID>[IvarId(0)]
 :00002 %3 = %4.update()                     [<INVALID>]
 :00004 %4 = @cpu: <INVALID>[IvarId(0)]
 :00005 %4 = %4.odd_clock?()                 [<INVALID>]
 :00007 condnotbr %4 =>:00010
+:00008 %4 = const[CPU::CLK_1]               [<INVALID>]
 :00009 %3 = %3 + %4                         [<INVALID>][<INVALID>]
+:00010 _ = %0.update(%3;1)                  [<INVALID>]
 :00012 %4 = @frame_irq_clock: <INVALID>[IvarId(0)]
 :00013 _%4 = %4 <= %3                       [<INVALID>][<INVALID>]
 :00014 condnotbr _%4 =>:00017
+:00015 _ = %0.clock_frame_irq(%3;1)         [<INVALID>]
+:00017 %4 = const[CPU::CLK_1]               [<INVALID>]
 :00018 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00019 %4 = const[OSCILLATOR_CLOCKS]        [<INVALID>]
 :00020 %5 = 7: i32
 :00021 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00022 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00023 @oscillator_clocks: <INVALID>[IvarId(0)] = %4
 :00024 %4 = @oscillator_clocks: <INVALID>[IvarId(0)]
 :00025 %5 = 0: i32
 :00026 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00027 %4 = %3 + %4                         [<INVALID>][<INVALID>]
 :00028 %5 = @fixed_clock: <INVALID>[IvarId(0)]
 :00029 %4 = %4 * %5                         [<INVALID>][<INVALID>]
 :00030 @frame_counter: <INVALID>[IvarId(0)] = %4
 :00031 %4 = 0: i32
 :00032 @frame_divider: <INVALID>[IvarId(0)] = %4
 :00033 %4 = %2 & 192: i16                   [<INVALID>][<INVALID>]
 :00034 _%4 = %4 != 0: i16                   [<INVALID>][<INVALID>]
 :00035 condnotbr _%4 =>:00038
+:00036 %4 = const[FOREVER_CLOCK]            [<INVALID>]
 :00037 br =>:00042
+:00038 %4 = const[FRAME_CLOCKS]             [<INVALID>]
 :00039 %5 = 0: i32
 :00040 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00041 %4 = %3 + %4                         [<INVALID>][<INVALID>]
+:00042 @frame_irq_clock: <INVALID>[IvarId(0)] = %4
 :00043 %4 = 0: i32
 :00044 @frame_irq_repeat: <INVALID>[IvarId(0)] = %4
 :00045 %4 = 6: i32
 :00046 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00047 _%4 = %4 != 0: i16                   [<INVALID>][<INVALID>]
 :00048 condnotbr _%4 =>:00053
+:00049 %4 = @cpu: <INVALID>[IvarId(0)]
 :00050 %5 = const[CPU::IRQ_FRAME]           [<INVALID>]
 :00051 _ = %4.clear_irq(%5;1)               [<INVALID>]
+:00053 %4 = 7: i32
 :00054 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00055 _%4 = %4 != 0: i16                   [<INVALID>][<INVALID>]
 :00056 condnotbr _%4 =>:00061
+:00057 %4 = literal[true]
 :00058 %4 = %0.clock_oscillators(%4;1)      [<INVALID>]
 :00060 ret %4
+:00061 %4 = nil
 :00062 ret %4
------------------------------------
------------------------------------
<peek_40xx> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:275
meta:on_stack:true kind:Ruby mode:method FuncId(593) regs:3 ISeq(RubyFuncInfo { id:593 name:peek_40xx method:(FuncId(593), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = 64: i32
 :00002 ret %2
------------------------------------
------------------------------------
<LengthCounter> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:283
meta:on_stack:true kind:Ruby mode:class_def FuncId(594) regs:2 ISeq(RubyFuncInfo { id:594 name:LengthCounter method:(FuncId(594), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[[10, 254, 20, 2, 40, 4, 80, 6, 160, 8, 60, 10, 14, 12, 26, 14, 12, 16, 24, 18, 48, 20, 96, 22, 192, 24, 72, 26, 16, 28, 32, 30]]
 :00002 const[LUT] = %1
 :00003 method_def reset: FuncId(603)
 :00004 %1 = :count
 :00005 _ = %0.attr_reader(%1;1)             [<INVALID>]
 :00007 method_def enable: FuncId(604)
 :00008 method_def write: FuncId(605)
 :00009 method_def clock: FuncId(606)
 :00010 %1 = :clock
 :00011 ret %1
------------------------------------
------------------------------------
<Envelope> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:313
meta:on_stack:true kind:Ruby mode:class_def FuncId(595) regs:3 ISeq(RubyFuncInfo { id:595 name:Envelope method:(FuncId(595), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = :output
 :00002 %2 = :looping
 :00003 _ = %0.attr_reader(%1;2)             [<INVALID>]
 :00005 method_def reset_clock: FuncId(607)
 :00006 method_def reset: FuncId(608)
 :00007 method_def clock: FuncId(609)
 :00008 method_def write: FuncId(610)
 :00009 method_def update_output: FuncId(611)
 :00010 %1 = :update_output
 :00011 ret %1
------------------------------------
------------------------------------
<Mixer> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:358
meta:on_stack:true kind:Ruby mode:class_def FuncId(596) regs:3 ISeq(RubyFuncInfo { id:596 name:Mixer method:(FuncId(596), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = 192: i32
 :00002 const[VOL] = %1
 :00003 %1 = 900: i32
 :00004 const[P_F] = %1
 :00005 %1 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00006 %1 = 9552: i16 * %1                  [<INVALID>][<INVALID>]
 :00007 %2 = const[VOL]                      [<INVALID>]
 :00008 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00009 %2 = const[P_F]                      [<INVALID>]
 :00010 %2 = %2 / 100: i16                   [<INVALID>][<INVALID>]
 :00011 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00012 const[P_0] = %1
 :00013 %1 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00014 %1 = 8128: i16 * %1                  [<INVALID>][<INVALID>]
 :00015 %2 = const[P_F]                      [<INVALID>]
 :00016 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00017 const[P_1] = %1
 :00018 %1 = const[P_F]                      [<INVALID>]
 :00019 %1 = %1 * 100: i16                   [<INVALID>][<INVALID>]
 :00020 const[P_2] = %1
 :00021 %1 = 500: i32
 :00022 const[TND_F] = %1
 :00023 %1 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00024 %1 = 16367: i16 * %1                 [<INVALID>][<INVALID>]
 :00025 %2 = const[VOL]                      [<INVALID>]
 :00026 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00027 %2 = const[TND_F]                    [<INVALID>]
 :00028 %2 = %2 / 100: i16                   [<INVALID>][<INVALID>]
 :00029 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00030 const[TND_0] = %1
 :00031 %1 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00032 %1 = 24329: i16 * %1                 [<INVALID>][<INVALID>]
 :00033 %2 = const[TND_F]                    [<INVALID>]
 :00034 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00035 const[TND_1] = %1
 :00036 %1 = const[TND_F]                    [<INVALID>]
 :00037 %1 = %1 * 100: i16                   [<INVALID>][<INVALID>]
 :00038 const[TND_2] = %1
 :00039 method_def initialize: FuncId(612)
 :00040 method_def reset: FuncId(613)
 :00041 method_def sample: FuncId(614)
 :00042 %1 = :sample
 :00043 ret %1
------------------------------------
------------------------------------
<Oscillator> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:394
meta:on_stack:true kind:Ruby mode:class_def FuncId(597) regs:2 ISeq(RubyFuncInfo { id:597 name:Oscillator method:(FuncId(597), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 method_def inspect: FuncId(615)
 :00002 method_def initialize: FuncId(616)
 :00003 method_def reset: FuncId(617)
 :00004 method_def active?: FuncId(618)
 :00005 method_def poke_0: FuncId(619)
 :00006 method_def poke_2: FuncId(620)
 :00007 method_def poke_3: FuncId(621)
 :00008 method_def enable: FuncId(622)
 :00009 method_def update_settings: FuncId(623)
 :00010 method_def status: FuncId(624)
 :00011 method_def clock_envelope: FuncId(625)
 :00012 %1 = :clock_envelope
 :00013 ret %1
------------------------------------
------------------------------------
<Pulse> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:473
meta:on_stack:true kind:Ruby mode:class_def FuncId(598) regs:4 ISeq(RubyFuncInfo { id:598 name:Pulse method:(FuncId(598), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = 8: i32
 :00002 const[MIN_FREQ] = %1
 :00003 %1 = 2047: i32
 :00004 const[MAX_FREQ] = %1
 :00005 %1 = literal[[253, 249, 225, 6]]
 :00006 %2 = literal[41025537]
 :00007 %1 = %1.map( &%2)                    [<INVALID>]
 :00009 const[WAVE_FORM] = %1
 :00010 method_def initialize: FuncId(627)
 :00011 method_def reset: FuncId(628)
 :00012 method_def active?: FuncId(629)
 :00013 method_def update_freq: FuncId(630)
 :00014 method_def poke_0: FuncId(631)
 :00015 method_def poke_1: FuncId(632)
 :00016 method_def poke_3: FuncId(633)
 :00017 method_def clock_sweep: FuncId(634)
 :00018 method_def sample: FuncId(635)
 :00019 %1 = :sample
 :00020 ret %1
------------------------------------
------------------------------------
<Triangle> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:591
meta:on_stack:true kind:Ruby mode:class_def FuncId(599) regs:4 ISeq(RubyFuncInfo { id:599 name:Triangle method:(FuncId(599), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = 2: i32
 :00002 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 const[MIN_FREQ] = %1
 :00004 %1 = literal[0..15]
 :00005 %1 = %1.to_a()                       [<INVALID>]
 :00007 %2 = literal[0..15]
 :00008 %2 = %2.to_a()                       [<INVALID>]
 :00010 %2 = %2.reverse()                    [<INVALID>]
 :00012 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00013 const[WAVE_FORM] = %1
 :00014 method_def initialize: FuncId(636)
 :00015 method_def reset: FuncId(637)
 :00016 method_def active?: FuncId(638)
 :00017 method_def update_freq: FuncId(639)
 :00018 method_def poke_0: FuncId(640)
 :00019 method_def poke_3: FuncId(641)
 :00020 method_def clock_linear_counter: FuncId(642)
 :00021 method_def clock_length_counter: FuncId(643)
 :00022 method_def sample: FuncId(644)
 :00023 %1 = :sample
 :00024 ret %1
------------------------------------
------------------------------------
<Noise> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:673
meta:on_stack:true kind:Ruby mode:class_def FuncId(600) regs:4 ISeq(RubyFuncInfo { id:600 name:Noise method:(FuncId(600), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal[[4, 8, 16, 32, 64, 96, 128, 160, 202, 254, 380, 508, 762, 1016, 2034, 4068]]
 :00002 const[LUT] = %1
 :00003 %1 = literal[[1, 6]]
 :00004 %2 = literal[42270721]
 :00005 %1 = %1.map( &%2)                    [<INVALID>]
 :00007 %2; 2 = expand(%1)
 :00008 const[NEXT_BITS_1] = %2
 :00009 const[NEXT_BITS_6] = %3
 :00010 method_def initialize: FuncId(646)
 :00011 method_def reset: FuncId(647)
 :00012 method_def poke_2: FuncId(648)
 :00013 method_def clock_length_counter: FuncId(649)
 :00014 method_def sample: FuncId(650)
 :00015 %1 = :sample
 :00016 ret %1
------------------------------------
------------------------------------
<DMC> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:731
meta:on_stack:true kind:Ruby mode:class_def FuncId(601) regs:4 ISeq(RubyFuncInfo { id:601 name:DMC method:(FuncId(601), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal[[428, 380, 340, 320, 286, 254, 226, 214, 190, 160, 142, 128, 106, 84, 72, 54]]
 :00002 %2 = literal[42663937]
 :00003 %1 = %1.map( &%2)                    [<INVALID>]
 :00005 const[LUT] = %1
 :00006 method_def initialize: FuncId(652)
 :00007 method_def reset: FuncId(653)
 :00008 %1 = :freq
 :00009 _ = %0.attr_reader(%1;1)             [<INVALID>]
 :00011 method_def enable: FuncId(654)
 :00012 method_def sample: FuncId(655)
 :00013 method_def do_dma: FuncId(656)
 :00014 method_def update: FuncId(657)
 :00015 method_def poke_0: FuncId(658)
 :00016 method_def poke_1: FuncId(659)
 :00017 method_def poke_2: FuncId(660)
 :00018 method_def poke_3: FuncId(661)
 :00019 method_def clock_dac: FuncId(662)
 :00020 method_def clock_dma: FuncId(663)
 :00021 method_def status: FuncId(664)
 :00022 %1 = :status
 :00023 ret %1
------------------------------------
------------------------------------
<block in APU> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:15
meta:on_stack:true kind:Ruby mode:method FuncId(602) regs:3 ISeq(RubyFuncInfo { id:602 name:<unnamed> method:(FuncId(571), 2) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[RP2A03_CC]                [<INVALID>]
 :00002 %2 = %2 * %1                         [<INVALID>][<INVALID>]
 :00003 ret %2
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:288
meta:on_stack:true kind:Ruby mode:method FuncId(603) regs:2 ISeq(RubyFuncInfo { id:603 name:reset method:(FuncId(603), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[false]
 :00002 @enabled: <INVALID>[IvarId(0)] = %1
 :00003 %1 = 0: i32
 :00004 @count: <INVALID>[IvarId(0)] = %1
 :00005 ret %1
------------------------------------
------------------------------------
<enable> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:295
meta:on_stack:true kind:Ruby mode:method FuncId(604) regs:3 ISeq(RubyFuncInfo { id:604 name:enable method:(FuncId(604), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 @enabled: <INVALID>[IvarId(0)] = %1
 :00002 %2 = @enabled: <INVALID>[IvarId(0)]
 :00003 condnotbr %2 =>:00005
+:00004 br =>:00007
+:00005 %2 = 0: i32
 :00006 @count: <INVALID>[IvarId(0)] = %2
+:00007 %2 = @enabled: <INVALID>[IvarId(0)]
 :00008 ret %2
------------------------------------
------------------------------------
<write> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:301
meta:on_stack:true kind:Ruby mode:method FuncId(605) regs:4 ISeq(RubyFuncInfo { id:605 name:write method:(FuncId(605), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 condbr %2 =>:00005
+:00002 %3 = @count: <INVALID>[IvarId(0)]
 :00003 _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00004 condnotbr _%3 =>:00013
+:00005 %3 = @enabled: <INVALID>[IvarId(0)]
 :00006 condnotbr %3 =>:00010
+:00007 %3 = const[LUT]                      [<INVALID>]
 :00008 %3 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00009 br =>:00011
+:00010 %3 = 0: i32
+:00011 @count: <INVALID>[IvarId(0)] = %3
 :00012 ret %3
+:00013 %3 = nil
 :00014 ret %3
------------------------------------
------------------------------------
<clock> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:305
meta:on_stack:true kind:Ruby mode:method FuncId(606) regs:2 ISeq(RubyFuncInfo { id:606 name:clock method:(FuncId(606), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @count: <INVALID>[IvarId(0)]
 :00002 _%1 = %1 == 0: i16                   [<INVALID>][<INVALID>]
 :00003 condnotbr _%1 =>:00006
+:00004 %1 = literal[false]
 :00005 ret %1
+:00006 %1 = @count: <INVALID>[IvarId(0)]
 :00007 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00008 @count: <INVALID>[IvarId(0)] = %1
 :00009 %1 = @count: <INVALID>[IvarId(0)]
 :00010 %1 = %1 == 0: i16                    [<INVALID>][<INVALID>]
 :00011 ret %1
------------------------------------
------------------------------------
<reset_clock> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:316
meta:on_stack:true kind:Ruby mode:method FuncId(607) regs:2 ISeq(RubyFuncInfo { id:607 name:reset_clock method:(FuncId(607), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[true]
 :00002 @reset: <INVALID>[IvarId(0)] = %1
 :00003 ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:320
meta:on_stack:true kind:Ruby mode:method FuncId(608) regs:2 ISeq(RubyFuncInfo { id:608 name:reset method:(FuncId(608), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = 0: i32
 :00002 @output: <INVALID>[IvarId(0)] = %1
 :00003 %1 = 0: i32
 :00004 @count: <INVALID>[IvarId(0)] = %1
 :00005 %1 = 0: i32
 :00006 @volume: <INVALID>[IvarId(0)] = %1
 :00007 @volume_base: <INVALID>[IvarId(0)] = %1
 :00008 %1 = literal[true]
 :00009 @constant: <INVALID>[IvarId(0)] = %1
 :00010 %1 = literal[false]
 :00011 @looping: <INVALID>[IvarId(0)] = %1
 :00012 %1 = literal[false]
 :00013 @reset: <INVALID>[IvarId(0)] = %1
 :00014 %1 = %0.update_output()              [<INVALID>]
 :00016 ret %1
------------------------------------
------------------------------------
<clock> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:330
meta:on_stack:true kind:Ruby mode:method FuncId(609) regs:2 ISeq(RubyFuncInfo { id:609 name:clock method:(FuncId(609), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @reset: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00008
+:00003 %1 = literal[false]
 :00004 @reset: <INVALID>[IvarId(0)] = %1
 :00005 %1 = 15: i32
 :00006 @volume: <INVALID>[IvarId(0)] = %1
 :00007 br =>:00025
+:00008 %1 = @count: <INVALID>[IvarId(0)]
 :00009 _%1 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00010 condnotbr _%1 =>:00016
+:00011 %1 = @count: <INVALID>[IvarId(0)]
 :00012 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00013 @count: <INVALID>[IvarId(0)] = %1
 :00014 %1 = nil
 :00015 ret %1
+:00016 %1 = @volume: <INVALID>[IvarId(0)]
 :00017 _%1 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00018 condbr _%1 =>:00021
+:00019 %1 = @looping: <INVALID>[IvarId(0)]
 :00020 condnotbr %1 =>:00025
+:00021 %1 = @volume: <INVALID>[IvarId(0)]
 :00022 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00023 %1 = %1 & 15: i16                    [<INVALID>][<INVALID>]
 :00024 @volume: <INVALID>[IvarId(0)] = %1
+:00025 %1 = @volume_base: <INVALID>[IvarId(0)]
 :00026 @count: <INVALID>[IvarId(0)] = %1
 :00027 %1 = %0.update_output()              [<INVALID>]
 :00029 ret %1
------------------------------------
------------------------------------
<write> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:345
meta:on_stack:true kind:Ruby mode:method FuncId(610) regs:3 ISeq(RubyFuncInfo { id:610 name:write method:(FuncId(610), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1 & 15: i16                    [<INVALID>][<INVALID>]
 :00002 @volume_base: <INVALID>[IvarId(0)] = %2
 :00003 %2 = 4: i32
 :00004 %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00005 %2 = %2 == 1: i16                    [<INVALID>][<INVALID>]
 :00006 @constant: <INVALID>[IvarId(0)] = %2
 :00007 %2 = 5: i32
 :00008 %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00009 %2 = %2 == 1: i16                    [<INVALID>][<INVALID>]
 :00010 @looping: <INVALID>[IvarId(0)] = %2
 :00011 %2 = %0.update_output()              [<INVALID>]
 :00013 ret %2
------------------------------------
------------------------------------
<update_output> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:352
meta:on_stack:true kind:Ruby mode:method FuncId(611) regs:3 ISeq(RubyFuncInfo { id:611 name:update_output method:(FuncId(611), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @constant: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00005
+:00003 %1 = @volume_base: <INVALID>[IvarId(0)]
 :00004 br =>:00006
+:00005 %1 = @volume: <INVALID>[IvarId(0)]
+:00006 %2 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00007 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00008 @output: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:369
meta:on_stack:true kind:Ruby mode:method FuncId(612) regs:11 ISeq(RubyFuncInfo { id:612 name:initialize method:(FuncId(612), 0) args: 5 non_temp: 5 temp: 5})
[]
+:00000 init_method reg:10 arg:5 req:5 opt:0 rest:false block:None stack_offset:9
 :00001 %6 = %1
 :00002 %7 = %2
 :00003 %8 = %3
 :00004 %9 = %4
 :00005 %10 = %5
 :00006 @pulse_0: <INVALID>[IvarId(0)] = %6
 :00007 @pulse_1: <INVALID>[IvarId(0)] = %7
 :00008 @triangle: <INVALID>[IvarId(0)] = %8
 :00009 @noise: <INVALID>[IvarId(0)] = %9
 :00010 @dmc: <INVALID>[IvarId(0)] = %10
 :00011 %6 = array[%6; 5]
 :00012 ret %6
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:373
meta:on_stack:true kind:Ruby mode:method FuncId(613) regs:2 ISeq(RubyFuncInfo { id:613 name:reset method:(FuncId(613), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = 0: i32
 :00002 @next: <INVALID>[IvarId(0)] = %1
 :00003 @prev: <INVALID>[IvarId(0)] = %1
 :00004 @acc: <INVALID>[IvarId(0)] = %1
 :00005 ret %1
------------------------------------
------------------------------------
<sample> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:377
meta:on_stack:true kind:Ruby mode:method FuncId(614) regs:8 ISeq(RubyFuncInfo { id:614 name:sample method:(FuncId(614), 0) args: 0 non_temp: 3 temp: 4})
[]
+:00000 init_method reg:7 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = @pulse_0: <INVALID>[IvarId(0)]
 :00002 %4 = %4.sample()                     [<INVALID>]
 :00004 %5 = @pulse_1: <INVALID>[IvarId(0)]
 :00005 %5 = %5.sample()                     [<INVALID>]
 :00007 %1 = %4 + %5                         [<INVALID>][<INVALID>]
 :00008 %4 = @triangle: <INVALID>[IvarId(0)]
 :00009 %4 = %4.sample()                     [<INVALID>]
 :00011 %5 = @noise: <INVALID>[IvarId(0)]
 :00012 %5 = %5.sample()                     [<INVALID>]
 :00014 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00015 %5 = @dmc: <INVALID>[IvarId(0)]
 :00016 %5 = %5.sample()                     [<INVALID>]
 :00018 %2 = %4 + %5                         [<INVALID>][<INVALID>]
 :00019 %4 = const[P_0]                      [<INVALID>]
 :00020 %4 = %4 * %1                         [<INVALID>][<INVALID>]
 :00021 %5 = const[P_1]                      [<INVALID>]
 :00022 %6 = const[P_2]                      [<INVALID>]
 :00023 %6 = %6 * %1                         [<INVALID>][<INVALID>]
 :00024 %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00025 %4 = %4 / %5                         [<INVALID>][<INVALID>]
 :00026 %5 = const[TND_0]                    [<INVALID>]
 :00027 %5 = %5 * %2                         [<INVALID>][<INVALID>]
 :00028 %6 = const[TND_1]                    [<INVALID>]
 :00029 %7 = const[TND_2]                    [<INVALID>]
 :00030 %7 = %7 * %2                         [<INVALID>][<INVALID>]
 :00031 %6 = %6 + %7                         [<INVALID>][<INVALID>]
 :00032 %5 = %5 / %6                         [<INVALID>][<INVALID>]
 :00033 %3 = %4 + %5                         [<INVALID>][<INVALID>]
 :00034 %4 = @acc: <INVALID>[IvarId(0)]
 :00035 %5 = @prev: <INVALID>[IvarId(0)]
 :00036 %4 = %4 - %5                         [<INVALID>][<INVALID>]
 :00037 @acc: <INVALID>[IvarId(0)] = %4
 :00038 %4 = %3 << 15: i16                   [<INVALID>][<INVALID>]
 :00039 @prev: <INVALID>[IvarId(0)] = %4
 :00040 %4 = @acc: <INVALID>[IvarId(0)]
 :00041 %5 = @prev: <INVALID>[IvarId(0)]
 :00042 %6 = @next: <INVALID>[IvarId(0)]
 :00043 %6 = %6 * 3: i16                     [<INVALID>][<INVALID>]
 :00044 %5 = %5 - %6                         [<INVALID>][<INVALID>]
 :00045 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00046 @acc: <INVALID>[IvarId(0)] = %4
 :00047 %4 = @acc: <INVALID>[IvarId(0)]
 :00048 %3 = %4 >> 15: i16                   [<INVALID>][<INVALID>]
 :00049 @next: <INVALID>[IvarId(0)] = %3
 :00050 _%4 = %3 < -32767: i16               [<INVALID>][<INVALID>]
 :00051 condnotbr _%4 =>:00053
+:00052 %3 = -32767: i32
+:00053 _%4 = %3 > 32767: i16                [<INVALID>][<INVALID>]
 :00054 condnotbr _%4 =>:00056
+:00055 %3 = 32767: i32
+:00056 ret %3
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:395
meta:on_stack:true kind:Ruby mode:method FuncId(615) regs:4 ISeq(RubyFuncInfo { id:615 name:inspect method:(FuncId(615), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["#<"]
 :00002 %2 = %0.class()                      [<INVALID>]
 :00004 %3 = literal[">"]
 :00005 %1 = concat(%1; 3)
 :00006 ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:399
meta:on_stack:true kind:Ruby mode:method FuncId(616) regs:3 ISeq(RubyFuncInfo { id:616 name:initialize method:(FuncId(616), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 @apu: <INVALID>[IvarId(0)] = %1
 :00002 %2 = 1: i32
 :00003 @fixed: <INVALID>[IvarId(0)] = %2
 :00004 @rate: <INVALID>[IvarId(0)] = %2
 :00005 %2 = nil
 :00006 @wave_length: <INVALID>[IvarId(0)] = %2
 :00007 @length_counter: <INVALID>[IvarId(0)] = %2
 :00008 @envelope: <INVALID>[IvarId(0)] = %2
 :00009 ret %2
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:405
meta:on_stack:true kind:Ruby mode:method FuncId(617) regs:3 ISeq(RubyFuncInfo { id:617 name:reset method:(FuncId(617), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @fixed: <INVALID>[IvarId(0)]
 :00002 %1 = 2048: i16 * %1                  [<INVALID>][<INVALID>]
 :00003 @timer: <INVALID>[IvarId(0)] = %1
 :00004 %1 = @fixed: <INVALID>[IvarId(0)]
 :00005 @freq: <INVALID>[IvarId(0)] = %1
 :00006 %1 = 0: i32
 :00007 @amp: <INVALID>[IvarId(0)] = %1
 :00008 %1 = @wave_length: <INVALID>[IvarId(0)]
 :00009 condnotbr %1 =>:00012
+:00010 %1 = 0: i32
 :00011 @wave_length: <INVALID>[IvarId(0)] = %1
+:00012 %1 = @envelope: <INVALID>[IvarId(0)]
 :00013 condnotbr %1 =>:00017
+:00014 %1 = @envelope: <INVALID>[IvarId(0)]
 :00015 _ = %1.reset()                       [<INVALID>]
+:00017 %1 = @length_counter: <INVALID>[IvarId(0)]
 :00018 condnotbr %1 =>:00022
+:00019 %1 = @length_counter: <INVALID>[IvarId(0)]
 :00020 _ = %1.reset()                       [<INVALID>]
+:00022 %1 = %0.active?()                    [<INVALID>]
 :00024 @active: <INVALID>[IvarId(0)] = %1
 :00025 ret %1
------------------------------------
------------------------------------
<active?> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:416
meta:on_stack:true kind:Ruby mode:method FuncId(618) regs:3 ISeq(RubyFuncInfo { id:618 name:active? method:(FuncId(618), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @length_counter: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00010
+:00003 %1 = @length_counter: <INVALID>[IvarId(0)]
 :00004 %1 = %1.count()                      [<INVALID>]
 :00006 _%1 = %1 == 0: i16                   [<INVALID>][<INVALID>]
 :00007 condnotbr _%1 =>:00010
+:00008 %1 = literal[false]
 :00009 ret %1
+:00010 %1 = @envelope: <INVALID>[IvarId(0)]
 :00011 condnotbr %1 =>:00019
+:00012 %1 = @envelope: <INVALID>[IvarId(0)]
 :00013 %1 = %1.output()                     [<INVALID>]
 :00015 _%1 = %1 == 0: i16                   [<INVALID>][<INVALID>]
 :00016 condnotbr _%1 =>:00019
+:00017 %1 = literal[false]
 :00018 ret %1
+:00019 %1 = literal[true]
 :00020 ret %1
------------------------------------
------------------------------------
<poke_0> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:422
meta:on_stack:true kind:Ruby mode:method FuncId(619) regs:5 ISeq(RubyFuncInfo { id:619 name:poke_0 method:(FuncId(619), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @envelope: <INVALID>[IvarId(0)]
 :00002 condnotbr %3 =>:00013
+:00003 %3 = @apu: <INVALID>[IvarId(0)]
 :00004 _ = %3.update_latency()              [<INVALID>]
 :00006 %3 = @envelope: <INVALID>[IvarId(0)]
 :00007 _ = %3.write(%2;1)                   [<INVALID>]
 :00009 %3 = %0.active?()                    [<INVALID>]
 :00011 @active: <INVALID>[IvarId(0)] = %3
 :00012 ret %3
+:00013 %3 = nil
 :00014 ret %3
------------------------------------
------------------------------------
<poke_2> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:430
meta:on_stack:true kind:Ruby mode:method FuncId(620) regs:5 ISeq(RubyFuncInfo { id:620 name:poke_2 method:(FuncId(620), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @apu: <INVALID>[IvarId(0)]
 :00002 _ = %3.update()                      [<INVALID>]
 :00004 %3 = @wave_length: <INVALID>[IvarId(0)]
 :00005 condnotbr %3 =>:00014
+:00006 %3 = @wave_length: <INVALID>[IvarId(0)]
 :00007 %3 = %3 & 1792: i16                  [<INVALID>][<INVALID>]
 :00008 %4 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00009 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00010 @wave_length: <INVALID>[IvarId(0)] = %3
 :00011 %3 = %0.update_freq()                [<INVALID>]
 :00013 ret %3
+:00014 %3 = nil
 :00015 ret %3
------------------------------------
------------------------------------
<poke_3> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:438
meta:on_stack:true kind:Ruby mode:method FuncId(621) regs:7 ISeq(RubyFuncInfo { id:621 name:poke_3 method:(FuncId(621), 0) args: 2 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = @apu: <INVALID>[IvarId(0)]
 :00002 %3 = %4.update_delta()               [<INVALID>]
 :00004 %4 = @wave_length: <INVALID>[IvarId(0)]
 :00005 condnotbr %4 =>:00014
+:00006 %4 = @wave_length: <INVALID>[IvarId(0)]
 :00007 %4 = %4 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 %5 = %2 & 7: i16                     [<INVALID>][<INVALID>]
 :00009 %5 = %5 << 8: i16                    [<INVALID>][<INVALID>]
 :00010 %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00011 @wave_length: <INVALID>[IvarId(0)] = %4
 :00012 _ = %0.update_freq()                 [<INVALID>]
+:00014 %4 = @envelope: <INVALID>[IvarId(0)]
 :00015 condnotbr %4 =>:00019
+:00016 %4 = @envelope: <INVALID>[IvarId(0)]
 :00017 _ = %4.reset_clock()                 [<INVALID>]
+:00019 %4 = @length_counter: <INVALID>[IvarId(0)]
 :00020 condnotbr %4 =>:00026
+:00021 %4 = @length_counter: <INVALID>[IvarId(0)]
 :00022 %5 = %2 >> 3: i16                    [<INVALID>][<INVALID>]
 :00023 %6 = %3
 :00024 _ = %4.write(%5;2)                   [<INVALID>]
+:00026 %4 = %0.active?()                    [<INVALID>]
 :00028 @active: <INVALID>[IvarId(0)] = %4
 :00029 ret %4
------------------------------------
------------------------------------
<enable> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:449
meta:on_stack:true kind:Ruby mode:method FuncId(622) regs:4 ISeq(RubyFuncInfo { id:622 name:enable method:(FuncId(622), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @length_counter: <INVALID>[IvarId(0)]
 :00002 _ = %2.enable(%1;1)                  [<INVALID>]
 :00004 %2 = %0.active?()                    [<INVALID>]
 :00006 @active: <INVALID>[IvarId(0)] = %2
 :00007 ret %2
------------------------------------
------------------------------------
<update_settings> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:454
meta:on_stack:true kind:Ruby mode:method FuncId(623) regs:5 ISeq(RubyFuncInfo { id:623 name:update_settings method:(FuncId(623), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @freq: <INVALID>[IvarId(0)]
 :00002 %4 = @fixed: <INVALID>[IvarId(0)]
 :00003 %3 = %3 / %4                         [<INVALID>][<INVALID>]
 :00004 %3 = %3 * %2                         [<INVALID>][<INVALID>]
 :00005 @freq: <INVALID>[IvarId(0)] = %3
 :00006 %3 = @timer: <INVALID>[IvarId(0)]
 :00007 %4 = @fixed: <INVALID>[IvarId(0)]
 :00008 %3 = %3 / %4                         [<INVALID>][<INVALID>]
 :00009 %3 = %3 * %2                         [<INVALID>][<INVALID>]
 :00010 @timer: <INVALID>[IvarId(0)] = %3
 :00011 %3 = %1
 :00012 %4 = %2
 :00013 @rate: <INVALID>[IvarId(0)] = %3
 :00014 @fixed: <INVALID>[IvarId(0)] = %4
 :00015 %3 = array[%3; 2]
 :00016 ret %3
------------------------------------
------------------------------------
<status> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:460
meta:on_stack:true kind:Ruby mode:method FuncId(624) regs:3 ISeq(RubyFuncInfo { id:624 name:status method:(FuncId(624), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @length_counter: <INVALID>[IvarId(0)]
 :00002 %1 = %1.count()                      [<INVALID>]
 :00004 %1 = %1 > 0: i16                     [<INVALID>][<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<clock_envelope> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:464
meta:on_stack:true kind:Ruby mode:method FuncId(625) regs:3 ISeq(RubyFuncInfo { id:625 name:clock_envelope method:(FuncId(625), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @envelope: <INVALID>[IvarId(0)]
 :00002 _ = %1.clock()                       [<INVALID>]
 :00004 %1 = %0.active?()                    [<INVALID>]
 :00006 @active: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<block in Pulse> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:476
meta:on_stack:true kind:Ruby mode:method FuncId(626) regs:5 ISeq(RubyFuncInfo { id:626 name:<unnamed> method:(FuncId(598), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[0..7]
 :00002 %3 = literal[43581441]
 :00003 %2 = %2.map( &%3)                    [<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:478
meta:on_stack:true kind:Ruby mode:method FuncId(627) regs:4 ISeq(RubyFuncInfo { id:627 name:initialize method:(FuncId(627), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 _ = super(%1;1)                      [<INVALID>]
 :00003 %2 = 0: i32
 :00004 @wave_length: <INVALID>[IvarId(0)] = %2
 :00005 %2 = const[Envelope]                 [<INVALID>]
 :00006 %2 = %2.new()                        [<INVALID>]
 :00008 @envelope: <INVALID>[IvarId(0)] = %2
 :00009 %2 = const[LengthCounter]            [<INVALID>]
 :00010 %2 = %2.new()                        [<INVALID>]
 :00012 @length_counter: <INVALID>[IvarId(0)] = %2
 :00013 ret %2
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:485
meta:on_stack:true kind:Ruby mode:method FuncId(628) regs:3 ISeq(RubyFuncInfo { id:628 name:reset method:(FuncId(628), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 _ = super()                          [<INVALID>]
 :00003 %1 = @fixed: <INVALID>[IvarId(0)]
 :00004 %1 = %1 * 2: i16                     [<INVALID>][<INVALID>]
 :00005 @freq: <INVALID>[IvarId(0)] = %1
 :00006 %1 = literal[false]
 :00007 @valid_freq: <INVALID>[IvarId(0)] = %1
 :00008 %1 = 0: i32
 :00009 @step: <INVALID>[IvarId(0)] = %1
 :00010 %1 = const[WAVE_FORM]                [<INVALID>]
 :00011 %2 = 0: i32
 :00012 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00013 @form: <INVALID>[IvarId(0)] = %1
 :00014 %1 = 0: i32
 :00015 @sweep_rate: <INVALID>[IvarId(0)] = %1
 :00016 %1 = 1: i32
 :00017 @sweep_count: <INVALID>[IvarId(0)] = %1
 :00018 %1 = literal[false]
 :00019 @sweep_reload: <INVALID>[IvarId(0)] = %1
 :00020 %1 = -1: i32
 :00021 @sweep_increase: <INVALID>[IvarId(0)] = %1
 :00022 %1 = 0: i32
 :00023 @sweep_shift: <INVALID>[IvarId(0)] = %1
 :00024 ret %1
------------------------------------
------------------------------------
<active?> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:498
meta:on_stack:true kind:Ruby mode:method FuncId(629) regs:3 ISeq(RubyFuncInfo { id:629 name:active? method:(FuncId(629), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = super()                         [<INVALID>]
 :00003 %1 = %2
 :00004 condnotbr %1 =>:00006
+:00005 %1 = @valid_freq: <INVALID>[IvarId(0)]
+:00006 ret %1
------------------------------------
------------------------------------
<update_freq> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:502
meta:on_stack:true kind:Ruby mode:method FuncId(630) regs:5 ISeq(RubyFuncInfo { id:630 name:update_freq method:(FuncId(630), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @wave_length: <INVALID>[IvarId(0)]
 :00002 %2 = const[MIN_FREQ]                 [<INVALID>]
 :00003 _%1 = %1 >= %2                       [<INVALID>][<INVALID>]
 :00004 condnotbr _%1 =>:00024
+:00005 %1 = @wave_length: <INVALID>[IvarId(0)]
 :00006 %2 = @sweep_increase: <INVALID>[IvarId(0)]
 :00007 %3 = @wave_length: <INVALID>[IvarId(0)]
 :00008 %4 = @sweep_shift: <INVALID>[IvarId(0)]
 :00009 %3 = %3 >> %4                        [<INVALID>][<INVALID>]
 :00010 %2 = %2 & %3                         [<INVALID>][<INVALID>]
 :00011 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00012 %2 = const[MAX_FREQ]                 [<INVALID>]
 :00013 _%1 = %1 <= %2                       [<INVALID>][<INVALID>]
 :00014 condnotbr _%1 =>:00024
+:00015 %1 = @wave_length: <INVALID>[IvarId(0)]
 :00016 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00017 %1 = %1 * 2: i16                     [<INVALID>][<INVALID>]
 :00018 %2 = @fixed: <INVALID>[IvarId(0)]
 :00019 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00020 @freq: <INVALID>[IvarId(0)] = %1
 :00021 %1 = literal[true]
 :00022 @valid_freq: <INVALID>[IvarId(0)] = %1
 :00023 br =>:00026
+:00024 %1 = literal[false]
 :00025 @valid_freq: <INVALID>[IvarId(0)] = %1
+:00026 %1 = %0.active?()                    [<INVALID>]
 :00028 @active: <INVALID>[IvarId(0)] = %1
 :00029 ret %1
------------------------------------
------------------------------------
<poke_0> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:512
meta:on_stack:true kind:Ruby mode:method FuncId(631) regs:5 ISeq(RubyFuncInfo { id:631 name:poke_0 method:(FuncId(631), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 _ = super(%1;2)                      [<INVALID>]
 :00003 %3 = const[WAVE_FORM]                [<INVALID>]
 :00004 %4 = %2 >> 6: i16                    [<INVALID>][<INVALID>]
 :00005 %4 = %4 & 3: i16                     [<INVALID>][<INVALID>]
 :00006 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00007 @form: <INVALID>[IvarId(0)] = %3
 :00008 ret %3
------------------------------------
------------------------------------
<poke_1> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:517
meta:on_stack:true kind:Ruby mode:method FuncId(632) regs:5 ISeq(RubyFuncInfo { id:632 name:poke_1 method:(FuncId(632), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @apu: <INVALID>[IvarId(0)]
 :00002 _ = %3.update()                      [<INVALID>]
 :00004 %3 = 3: i32
 :00005 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00006 _%3 = %3 != 0: i16                   [<INVALID>][<INVALID>]
 :00007 condnotbr _%3 =>:00010
+:00008 %3 = 0: i32
 :00009 br =>:00011
+:00010 %3 = -1: i32
+:00011 @sweep_increase: <INVALID>[IvarId(0)] = %3
 :00012 %3 = %2 & 7: i16                     [<INVALID>][<INVALID>]
 :00013 @sweep_shift: <INVALID>[IvarId(0)] = %3
 :00014 %3 = 0: i32
 :00015 @sweep_rate: <INVALID>[IvarId(0)] = %3
 :00016 %3 = 7: i32
 :00017 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00018 _%3 = %3 == 1: i16                   [<INVALID>][<INVALID>]
 :00019 condnotbr _%3 =>:00029
+:00020 %3 = @sweep_shift: <INVALID>[IvarId(0)]
 :00021 _%3 = %3 > 0: i16                    [<INVALID>][<INVALID>]
 :00022 condnotbr _%3 =>:00029
+:00023 %3 = %2 >> 4: i16                    [<INVALID>][<INVALID>]
 :00024 %3 = %3 & 7: i16                     [<INVALID>][<INVALID>]
 :00025 %3 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00026 @sweep_rate: <INVALID>[IvarId(0)] = %3
 :00027 %3 = literal[true]
 :00028 @sweep_reload: <INVALID>[IvarId(0)] = %3
+:00029 %3 = %0.update_freq()                [<INVALID>]
 :00031 ret %3
------------------------------------
------------------------------------
<poke_3> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:529
meta:on_stack:true kind:Ruby mode:method FuncId(633) regs:4 ISeq(RubyFuncInfo { id:633 name:poke_3 method:(FuncId(633), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 _ = super(%1;2)                      [<INVALID>]
 :00003 %3 = 0: i32
 :00004 @step: <INVALID>[IvarId(0)] = %3
 :00005 ret %3
------------------------------------
------------------------------------
<clock_sweep> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:534
meta:on_stack:true kind:Ruby mode:method FuncId(634) regs:6 ISeq(RubyFuncInfo { id:634 name:clock_sweep method:(FuncId(634), 0) args: 1 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %4 = @envelope: <INVALID>[IvarId(0)]
 :00002 %3 = %4.looping()                    [<INVALID>]
 :00004 %3 = !%3                             [<INVALID>]
 :00005 condnotbr %3 =>:00012
+:00006 %3 = @length_counter: <INVALID>[IvarId(0)]
 :00007 %3 = %3.clock()                      [<INVALID>]
 :00009 condnotbr %3 =>:00012
+:00010 %3 = literal[false]
 :00011 @active: <INVALID>[IvarId(0)] = %3
+:00012 %3 = @sweep_rate: <INVALID>[IvarId(0)]
 :00013 _%3 = %3 != 0: i16                   [<INVALID>][<INVALID>]
 :00014 condnotbr _%3 =>:00050
+:00015 %3 = @sweep_count: <INVALID>[IvarId(0)]
 :00016 %3 = %3 - 1: i16                     [<INVALID>][<INVALID>]
 :00017 @sweep_count: <INVALID>[IvarId(0)] = %3
 :00018 %3 = @sweep_count: <INVALID>[IvarId(0)]
 :00019 _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00020 condnotbr _%3 =>:00050
+:00021 %3 = @sweep_rate: <INVALID>[IvarId(0)]
 :00022 @sweep_count: <INVALID>[IvarId(0)] = %3
 :00023 %3 = @wave_length: <INVALID>[IvarId(0)]
 :00024 %4 = const[MIN_FREQ]                 [<INVALID>]
 :00025 _%3 = %3 >= %4                       [<INVALID>][<INVALID>]
 :00026 condnotbr _%3 =>:00050
+:00027 %3 = @wave_length: <INVALID>[IvarId(0)]
 :00028 %4 = @sweep_shift: <INVALID>[IvarId(0)]
 :00029 %2 = %3 >> %4                        [<INVALID>][<INVALID>]
 :00030 %3 = @sweep_increase: <INVALID>[IvarId(0)]
 :00031 _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00032 condnotbr _%3 =>:00040
+:00033 %3 = @wave_length: <INVALID>[IvarId(0)]
 :00034 %4 = %1 - %2                         [<INVALID>][<INVALID>]
 :00035 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00036 @wave_length: <INVALID>[IvarId(0)] = %3
 :00037 _ = %0.update_freq()                 [<INVALID>]
 :00039 br =>:00050
+:00040 %3 = @wave_length: <INVALID>[IvarId(0)]
 :00041 %3 = %3 + %2                         [<INVALID>][<INVALID>]
 :00042 %4 = const[MAX_FREQ]                 [<INVALID>]
 :00043 _%3 = %3 <= %4                       [<INVALID>][<INVALID>]
 :00044 condnotbr _%3 =>:00050
+:00045 %3 = @wave_length: <INVALID>[IvarId(0)]
 :00046 %3 = %3 + %2                         [<INVALID>][<INVALID>]
 :00047 @wave_length: <INVALID>[IvarId(0)] = %3
 :00048 _ = %0.update_freq()                 [<INVALID>]
+:00050 %3 = @sweep_reload: <INVALID>[IvarId(0)]
 :00051 condnotbr %3 =>:00053
+:00052 br =>:00055
+:00053 %3 = nil
 :00054 ret %3
+:00055 %3 = literal[false]
 :00056 @sweep_reload: <INVALID>[IvarId(0)] = %3
 :00057 %3 = @sweep_rate: <INVALID>[IvarId(0)]
 :00058 @sweep_count: <INVALID>[IvarId(0)] = %3
 :00059 ret %3
------------------------------------
------------------------------------
<sample> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:559
meta:on_stack:true kind:Ruby mode:method FuncId(635) regs:7 ISeq(RubyFuncInfo { id:635 name:sample method:(FuncId(635), 0) args: 0 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %1 = @timer: <INVALID>[IvarId(0)]
 :00002 %4 = @timer: <INVALID>[IvarId(0)]
 :00003 %5 = @rate: <INVALID>[IvarId(0)]
 :00004 %4 = %4 - %5                         [<INVALID>][<INVALID>]
 :00005 @timer: <INVALID>[IvarId(0)] = %4
 :00006 %4 = @active: <INVALID>[IvarId(0)]
 :00007 condnotbr %4 =>:00058
+:00008 %4 = @timer: <INVALID>[IvarId(0)]
 :00009 _%4 = %4 < 0: i16                    [<INVALID>][<INVALID>]
 :00010 condnotbr _%4 =>:00049
+:00011 %4 = @form: <INVALID>[IvarId(0)]
 :00012 %5 = @step: <INVALID>[IvarId(0)]
 :00013 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00014 %1 = %1 >> %4                        [<INVALID>][<INVALID>]
+:00015 loop_start counter=0 jit-addr=0000000000000000
 :00016 %2 = @timer: <INVALID>[IvarId(0)]
 :00017 %2 = -%2                             [<INVALID>]
 :00018 %4 = @freq: <INVALID>[IvarId(0)]
 :00019 _%4 = %2 > %4                        [<INVALID>][<INVALID>]
 :00020 condnotbr _%4 =>:00022
+:00021 %2 = @freq: <INVALID>[IvarId(0)]
+:00022 %4 = @form: <INVALID>[IvarId(0)]
 :00023 %5 = @step: <INVALID>[IvarId(0)]
 :00024 %5 = %5 + 1: i16                     [<INVALID>][<INVALID>]
 :00025 %5 = %5 & 7: i16                     [<INVALID>][<INVALID>]
 :00026 @step: <INVALID>[IvarId(0)] = %5
 :00027 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00028 %4 = %2 >> %4                        [<INVALID>][<INVALID>]
 :00029 %1 = %1 + %4                         [<INVALID>][<INVALID>]
 :00030 %4 = @timer: <INVALID>[IvarId(0)]
 :00031 %5 = @freq: <INVALID>[IvarId(0)]
 :00032 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00033 @timer: <INVALID>[IvarId(0)] = %4
 :00034 %4 = @timer: <INVALID>[IvarId(0)]
 :00035 _%4 = %4 < 0: i16                    [<INVALID>][<INVALID>]
 :00036 condbr _%4 =>:00015
+:00037 loop_end
+:00038 %4 = @envelope: <INVALID>[IvarId(0)]
 :00039 %4 = %4.output()                     [<INVALID>]
 :00041 %4 = %1 * %4                         [<INVALID>][<INVALID>]
 :00042 %5 = @rate: <INVALID>[IvarId(0)]
 :00043 %5 = %5 / 2: i16                     [<INVALID>][<INVALID>]
 :00044 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00045 %5 = @rate: <INVALID>[IvarId(0)]
 :00046 %4 = %4 / %5                         [<INVALID>][<INVALID>]
 :00047 @amp: <INVALID>[IvarId(0)] = %4
 :00048 br =>:00057
+:00049 %4 = @envelope: <INVALID>[IvarId(0)]
 :00050 %4 = %4.output()                     [<INVALID>]
 :00052 %5 = @form: <INVALID>[IvarId(0)]
 :00053 %6 = @step: <INVALID>[IvarId(0)]
 :00054 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00055 %4 = %4 >> %5                        [<INVALID>][<INVALID>]
 :00056 @amp: <INVALID>[IvarId(0)] = %4
+:00057 br =>:00087
+:00058 %4 = @timer: <INVALID>[IvarId(0)]
 :00059 _%4 = %4 < 0: i16                    [<INVALID>][<INVALID>]
 :00060 condnotbr _%4 =>:00077
+:00061 %4 = @timer: <INVALID>[IvarId(0)]
 :00062 %4 = -%4                             [<INVALID>]
 :00063 %5 = @freq: <INVALID>[IvarId(0)]
 :00064 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00065 %4 = %4 - 1: i16                     [<INVALID>][<INVALID>]
 :00066 %5 = @freq: <INVALID>[IvarId(0)]
 :00067 %3 = %4 / %5                         [<INVALID>][<INVALID>]
 :00068 %4 = @step: <INVALID>[IvarId(0)]
 :00069 %4 = %4 + %3                         [<INVALID>][<INVALID>]
 :00070 %4 = %4 & 7: i16                     [<INVALID>][<INVALID>]
 :00071 @step: <INVALID>[IvarId(0)] = %4
 :00072 %4 = @timer: <INVALID>[IvarId(0)]
 :00073 %5 = @freq: <INVALID>[IvarId(0)]
 :00074 %5 = %3 * %5                         [<INVALID>][<INVALID>]
 :00075 %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00076 @timer: <INVALID>[IvarId(0)] = %4
+:00077 %4 = @amp: <INVALID>[IvarId(0)]
 :00078 %5 = const[CHANNEL_OUTPUT_DECAY]     [<INVALID>]
 :00079 _%4 = %4 < %5                        [<INVALID>][<INVALID>]
 :00080 condnotbr _%4 =>:00083
+:00081 %4 = 0: i32
 :00082 ret %4
+:00083 %4 = @amp: <INVALID>[IvarId(0)]
 :00084 %5 = const[CHANNEL_OUTPUT_DECAY]     [<INVALID>]
 :00085 %4 = %4 - %5                         [<INVALID>][<INVALID>]
 :00086 @amp: <INVALID>[IvarId(0)] = %4
+:00087 %4 = @amp: <INVALID>[IvarId(0)]
 :00088 ret %4
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:595
meta:on_stack:true kind:Ruby mode:method FuncId(636) regs:4 ISeq(RubyFuncInfo { id:636 name:initialize method:(FuncId(636), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 _ = super(%1;1)                      [<INVALID>]
 :00003 %2 = 0: i32
 :00004 @wave_length: <INVALID>[IvarId(0)] = %2
 :00005 %2 = const[LengthCounter]            [<INVALID>]
 :00006 %2 = %2.new()                        [<INVALID>]
 :00008 @length_counter: <INVALID>[IvarId(0)] = %2
 :00009 ret %2
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:601
meta:on_stack:true kind:Ruby mode:method FuncId(637) regs:2 ISeq(RubyFuncInfo { id:637 name:reset method:(FuncId(637), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 _ = super()                          [<INVALID>]
 :00003 %1 = 7: i32
 :00004 @step: <INVALID>[IvarId(0)] = %1
 :00005 %1 = :counting
 :00006 @status: <INVALID>[IvarId(0)] = %1
 :00007 %1 = 0: i32
 :00008 @linear_counter_load: <INVALID>[IvarId(0)] = %1
 :00009 %1 = literal[true]
 :00010 @linear_counter_start: <INVALID>[IvarId(0)] = %1
 :00011 %1 = 0: i32
 :00012 @linear_counter: <INVALID>[IvarId(0)] = %1
 :00013 ret %1
------------------------------------
------------------------------------
<active?> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:610
meta:on_stack:true kind:Ruby mode:method FuncId(638) regs:4 ISeq(RubyFuncInfo { id:638 name:active? method:(FuncId(638), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = super()                         [<INVALID>]
 :00003 %1 = %2
 :00004 condnotbr %1 =>:00007
+:00005 %2 = @linear_counter: <INVALID>[IvarId(0)]
 :00006 %1 = %2 != 0: i16                    [<INVALID>][<INVALID>]
+:00007 condnotbr %1 =>:00011
+:00008 %2 = @wave_length: <INVALID>[IvarId(0)]
 :00009 %3 = const[MIN_FREQ]                 [<INVALID>]
 :00010 %1 = %2 >= %3                        [<INVALID>][<INVALID>]
+:00011 ret %1
------------------------------------
------------------------------------
<update_freq> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:614
meta:on_stack:true kind:Ruby mode:method FuncId(639) regs:3 ISeq(RubyFuncInfo { id:639 name:update_freq method:(FuncId(639), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @wave_length: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 %2 = @fixed: <INVALID>[IvarId(0)]
 :00004 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00005 @freq: <INVALID>[IvarId(0)] = %1
 :00006 %1 = %0.active?()                    [<INVALID>]
 :00008 @active: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<poke_0> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:619
meta:on_stack:true kind:Ruby mode:method FuncId(640) regs:5 ISeq(RubyFuncInfo { id:640 name:poke_0 method:(FuncId(640), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 _ = super(%1;2)                      [<INVALID>]
 :00003 %3 = @apu: <INVALID>[IvarId(0)]
 :00004 _ = %3.update()                      [<INVALID>]
 :00006 %3 = %2 & 127: i16                   [<INVALID>][<INVALID>]
 :00007 @linear_counter_load: <INVALID>[IvarId(0)] = %3
 :00008 %3 = 7: i32
 :00009 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00010 %3 = %3 == 0: i16                    [<INVALID>][<INVALID>]
 :00011 @linear_counter_start: <INVALID>[IvarId(0)] = %3
 :00012 ret %3
------------------------------------
------------------------------------
<poke_3> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:626
meta:on_stack:true kind:Ruby mode:method FuncId(641) regs:4 ISeq(RubyFuncInfo { id:641 name:poke_3 method:(FuncId(641), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 _ = super(%1;2)                      [<INVALID>]
 :00003 %3 = :reload
 :00004 @status: <INVALID>[IvarId(0)] = %3
 :00005 ret %3
------------------------------------
------------------------------------
<clock_linear_counter> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:631
meta:on_stack:true kind:Ruby mode:method FuncId(642) regs:3 ISeq(RubyFuncInfo { id:642 name:clock_linear_counter method:(FuncId(642), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @status: <INVALID>[IvarId(0)]
 :00002 %2 = :counting
 :00003 _%1 = %1 == %2                       [<INVALID>][<INVALID>]
 :00004 condnotbr _%1 =>:00012
+:00005 %1 = @linear_counter: <INVALID>[IvarId(0)]
 :00006 _%1 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00007 condnotbr _%1 =>:00011
+:00008 %1 = @linear_counter: <INVALID>[IvarId(0)]
 :00009 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00010 @linear_counter: <INVALID>[IvarId(0)] = %1
+:00011 br =>:00018
+:00012 %1 = @linear_counter_start: <INVALID>[IvarId(0)]
 :00013 condnotbr %1 =>:00016
+:00014 %1 = :counting
 :00015 @status: <INVALID>[IvarId(0)] = %1
+:00016 %1 = @linear_counter_load: <INVALID>[IvarId(0)]
 :00017 @linear_counter: <INVALID>[IvarId(0)] = %1
+:00018 %1 = %0.active?()                    [<INVALID>]
 :00020 @active: <INVALID>[IvarId(0)] = %1
 :00021 ret %1
------------------------------------
------------------------------------
<clock_length_counter> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:641
meta:on_stack:true kind:Ruby mode:method FuncId(643) regs:3 ISeq(RubyFuncInfo { id:643 name:clock_length_counter method:(FuncId(643), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @linear_counter_start: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00010
+:00003 %1 = @length_counter: <INVALID>[IvarId(0)]
 :00004 %1 = %1.clock()                      [<INVALID>]
 :00006 condnotbr %1 =>:00010
+:00007 %1 = literal[false]
 :00008 @active: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
+:00010 %1 = nil
 :00011 ret %1
------------------------------------
------------------------------------
<sample> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:645
meta:on_stack:true kind:Ruby mode:method FuncId(644) regs:5 ISeq(RubyFuncInfo { id:644 name:sample method:(FuncId(644), 0) args: 0 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @active: <INVALID>[IvarId(0)]
 :00002 condnotbr %3 =>:00056
+:00003 %1 = @timer: <INVALID>[IvarId(0)]
 :00004 %3 = @timer: <INVALID>[IvarId(0)]
 :00005 %4 = @rate: <INVALID>[IvarId(0)]
 :00006 %3 = %3 - %4                         [<INVALID>][<INVALID>]
 :00007 @timer: <INVALID>[IvarId(0)] = %3
 :00008 %3 = @timer: <INVALID>[IvarId(0)]
 :00009 _%3 = %3 < 0: i16                    [<INVALID>][<INVALID>]
 :00010 condnotbr _%3 =>:00048
+:00011 %3 = const[WAVE_FORM]                [<INVALID>]
 :00012 %4 = @step: <INVALID>[IvarId(0)]
 :00013 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00014 %1 = %1 * %3                         [<INVALID>][<INVALID>]
+:00015 loop_start counter=0 jit-addr=0000000000000000
 :00016 %2 = @timer: <INVALID>[IvarId(0)]
 :00017 %2 = -%2                             [<INVALID>]
 :00018 %3 = @freq: <INVALID>[IvarId(0)]
 :00019 _%3 = %2 > %3                        [<INVALID>][<INVALID>]
 :00020 condnotbr _%3 =>:00022
+:00021 %2 = @freq: <INVALID>[IvarId(0)]
+:00022 %3 = const[WAVE_FORM]                [<INVALID>]
 :00023 %4 = @step: <INVALID>[IvarId(0)]
 :00024 %4 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00025 %4 = %4 & 31: i16                    [<INVALID>][<INVALID>]
 :00026 @step: <INVALID>[IvarId(0)] = %4
 :00027 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00028 %3 = %2 * %3                         [<INVALID>][<INVALID>]
 :00029 %1 = %1 + %3                         [<INVALID>][<INVALID>]
 :00030 %3 = @timer: <INVALID>[IvarId(0)]
 :00031 %4 = @freq: <INVALID>[IvarId(0)]
 :00032 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00033 @timer: <INVALID>[IvarId(0)] = %3
 :00034 %3 = @timer: <INVALID>[IvarId(0)]
 :00035 _%3 = %3 < 0: i16                    [<INVALID>][<INVALID>]
 :00036 condbr _%3 =>:00015
+:00037 loop_end
+:00038 %3 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00039 %3 = %1 * %3                         [<INVALID>][<INVALID>]
 :00040 %4 = @rate: <INVALID>[IvarId(0)]
 :00041 %4 = %4 / 2: i16                     [<INVALID>][<INVALID>]
 :00042 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00043 %4 = @rate: <INVALID>[IvarId(0)]
 :00044 %3 = %3 / %4                         [<INVALID>][<INVALID>]
 :00045 %3 = %3 * 3: i16                     [<INVALID>][<INVALID>]
 :00046 @amp: <INVALID>[IvarId(0)] = %3
 :00047 br =>:00055
+:00048 %3 = const[WAVE_FORM]                [<INVALID>]
 :00049 %4 = @step: <INVALID>[IvarId(0)]
 :00050 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00051 %4 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00052 %3 = %3 * %4                         [<INVALID>][<INVALID>]
 :00053 %3 = %3 * 3: i16                     [<INVALID>][<INVALID>]
 :00054 @amp: <INVALID>[IvarId(0)] = %3
+:00055 br =>:00068
+:00056 %3 = @amp: <INVALID>[IvarId(0)]
 :00057 %4 = const[CHANNEL_OUTPUT_DECAY]     [<INVALID>]
 :00058 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
 :00059 condnotbr _%3 =>:00062
+:00060 %3 = 0: i32
 :00061 ret %3
+:00062 %3 = @amp: <INVALID>[IvarId(0)]
 :00063 %4 = const[CHANNEL_OUTPUT_DECAY]     [<INVALID>]
 :00064 %3 = %3 - %4                         [<INVALID>][<INVALID>]
 :00065 @amp: <INVALID>[IvarId(0)] = %3
 :00066 %3 = 0: i32
 :00067 @step: <INVALID>[IvarId(0)] = %3
+:00068 %3 = @amp: <INVALID>[IvarId(0)]
 :00069 ret %3
------------------------------------
------------------------------------
<block in Noise> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:675
meta:on_stack:true kind:Ruby mode:method FuncId(645) regs:5 ISeq(RubyFuncInfo { id:645 name:<unnamed> method:(FuncId(600), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[0..32767]
 :00002 %3 = literal[43646977]
 :00003 %2 = %2.map( &%3)                    [<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:679
meta:on_stack:true kind:Ruby mode:method FuncId(646) regs:4 ISeq(RubyFuncInfo { id:646 name:initialize method:(FuncId(646), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 _ = super(%1;1)                      [<INVALID>]
 :00003 %2 = const[Envelope]                 [<INVALID>]
 :00004 %2 = %2.new()                        [<INVALID>]
 :00006 @envelope: <INVALID>[IvarId(0)] = %2
 :00007 %2 = const[LengthCounter]            [<INVALID>]
 :00008 %2 = %2.new()                        [<INVALID>]
 :00010 @length_counter: <INVALID>[IvarId(0)] = %2
 :00011 ret %2
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:685
meta:on_stack:true kind:Ruby mode:method FuncId(647) regs:3 ISeq(RubyFuncInfo { id:647 name:reset method:(FuncId(647), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 _ = super()                          [<INVALID>]
 :00003 %1 = const[LUT]                      [<INVALID>]
 :00004 %2 = 0: i32
 :00005 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00006 %2 = @fixed: <INVALID>[IvarId(0)]
 :00007 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00008 @freq: <INVALID>[IvarId(0)] = %1
 :00009 %1 = 16384: i32
 :00010 @bits: <INVALID>[IvarId(0)] = %1
 :00011 %1 = const[NEXT_BITS_1]              [<INVALID>]
 :00012 @shifter: <INVALID>[IvarId(0)] = %1
 :00013 ret %1
------------------------------------
------------------------------------
<poke_2> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:692
meta:on_stack:true kind:Ruby mode:method FuncId(648) regs:5 ISeq(RubyFuncInfo { id:648 name:poke_2 method:(FuncId(648), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @apu: <INVALID>[IvarId(0)]
 :00002 _ = %3.update()                      [<INVALID>]
 :00004 %3 = const[LUT]                      [<INVALID>]
 :00005 %4 = %2 & 15: i16                    [<INVALID>][<INVALID>]
 :00006 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00007 %4 = @fixed: <INVALID>[IvarId(0)]
 :00008 %3 = %3 * %4                         [<INVALID>][<INVALID>]
 :00009 @freq: <INVALID>[IvarId(0)] = %3
 :00010 %3 = 7: i32
 :00011 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00012 _%3 = %3 != 0: i16                   [<INVALID>][<INVALID>]
 :00013 condnotbr _%3 =>:00016
+:00014 %3 = const[NEXT_BITS_6]              [<INVALID>]
 :00015 br =>:00017
+:00016 %3 = const[NEXT_BITS_1]              [<INVALID>]
+:00017 @shifter: <INVALID>[IvarId(0)] = %3
 :00018 ret %3
------------------------------------
------------------------------------
<clock_length_counter> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:698
meta:on_stack:true kind:Ruby mode:method FuncId(649) regs:4 ISeq(RubyFuncInfo { id:649 name:clock_length_counter method:(FuncId(649), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @envelope: <INVALID>[IvarId(0)]
 :00002 %1 = %2.looping()                    [<INVALID>]
 :00004 %1 = !%1                             [<INVALID>]
 :00005 condnotbr %1 =>:00013
+:00006 %1 = @length_counter: <INVALID>[IvarId(0)]
 :00007 %1 = %1.clock()                      [<INVALID>]
 :00009 condnotbr %1 =>:00013
+:00010 %1 = literal[false]
 :00011 @active: <INVALID>[IvarId(0)] = %1
 :00012 ret %1
+:00013 %1 = nil
 :00014 ret %1
------------------------------------
------------------------------------
<sample> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:702
meta:on_stack:true kind:Ruby mode:method FuncId(650) regs:5 ISeq(RubyFuncInfo { id:650 name:sample method:(FuncId(650), 0) args: 0 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @timer: <INVALID>[IvarId(0)]
 :00002 %4 = @rate: <INVALID>[IvarId(0)]
 :00003 %3 = %3 - %4                         [<INVALID>][<INVALID>]
 :00004 @timer: <INVALID>[IvarId(0)] = %3
 :00005 %3 = @active: <INVALID>[IvarId(0)]
 :00006 condnotbr %3 =>:00066
+:00007 %3 = @timer: <INVALID>[IvarId(0)]
 :00008 _%3 = %3 >= 0: i16                   [<INVALID>][<INVALID>]
 :00009 condnotbr _%3 =>:00021
+:00010 %3 = @bits: <INVALID>[IvarId(0)]
 :00011 %3 = %3.even?()                      [<INVALID>]
 :00013 condnotbr %3 =>:00019
+:00014 %3 = @envelope: <INVALID>[IvarId(0)]
 :00015 %3 = %3.output()                     [<INVALID>]
 :00017 %3 = %3 * 2: i16                     [<INVALID>][<INVALID>]
 :00018 ret %3
+:00019 %3 = 0: i32
 :00020 ret %3
+:00021 %3 = @bits: <INVALID>[IvarId(0)]
 :00022 %3 = %3.even?()                      [<INVALID>]
 :00024 condnotbr %3 =>:00029
+:00025 %3 = @timer: <INVALID>[IvarId(0)]
 :00026 %4 = @rate: <INVALID>[IvarId(0)]
 :00027 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00028 br =>:00030
+:00029 %3 = 0: i32
+:00030 %1 = %3
+:00031 loop_start counter=0 jit-addr=0000000000000000
 :00032 %3 = @shifter: <INVALID>[IvarId(0)]
 :00033 %4 = @bits: <INVALID>[IvarId(0)]
 :00034 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00035 @bits: <INVALID>[IvarId(0)] = %3
 :00036 %3 = @bits: <INVALID>[IvarId(0)]
 :00037 %3 = %3.even?()                      [<INVALID>]
 :00039 condnotbr %3 =>:00047
+:00040 %2 = @timer: <INVALID>[IvarId(0)]
 :00041 %2 = -%2                             [<INVALID>]
 :00042 %3 = @freq: <INVALID>[IvarId(0)]
 :00043 _%3 = %2 > %3                        [<INVALID>][<INVALID>]
 :00044 condnotbr _%3 =>:00046
+:00045 %2 = @freq: <INVALID>[IvarId(0)]
+:00046 %1 = %1 + %2                         [<INVALID>][<INVALID>]
+:00047 %3 = @timer: <INVALID>[IvarId(0)]
 :00048 %4 = @freq: <INVALID>[IvarId(0)]
 :00049 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00050 @timer: <INVALID>[IvarId(0)] = %3
 :00051 %3 = @timer: <INVALID>[IvarId(0)]
 :00052 _%3 = %3 < 0: i16                    [<INVALID>][<INVALID>]
 :00053 condbr _%3 =>:00031
+:00054 loop_end
+:00055 %3 = @envelope: <INVALID>[IvarId(0)]
 :00056 %3 = %3.output()                     [<INVALID>]
 :00058 %3 = %1 * %3                         [<INVALID>][<INVALID>]
 :00059 %4 = @rate: <INVALID>[IvarId(0)]
 :00060 %4 = %4 / 2: i16                     [<INVALID>][<INVALID>]
 :00061 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00062 %4 = @rate: <INVALID>[IvarId(0)]
 :00063 %3 = %3 / %4                         [<INVALID>][<INVALID>]
 :00064 %3 = %3 * 2: i16                     [<INVALID>][<INVALID>]
 :00065 ret %3
+:00066 loop_start counter=0 jit-addr=0000000000000000
 :00067 %3 = @timer: <INVALID>[IvarId(0)]
 :00068 _%3 = %3 < 0: i16                    [<INVALID>][<INVALID>]
 :00069 condnotbr _%3 =>:00079
+:00070 %3 = @shifter: <INVALID>[IvarId(0)]
 :00071 %4 = @bits: <INVALID>[IvarId(0)]
 :00072 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00073 @bits: <INVALID>[IvarId(0)] = %3
 :00074 %3 = @timer: <INVALID>[IvarId(0)]
 :00075 %4 = @freq: <INVALID>[IvarId(0)]
 :00076 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00077 @timer: <INVALID>[IvarId(0)] = %3
 :00078 br =>:00066
+:00079 loop_end
+:00080 %3 = 0: i32
 :00081 ret %3
------------------------------------
------------------------------------
<block in DMC> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:732
meta:on_stack:true kind:Ruby mode:method FuncId(651) regs:3 ISeq(RubyFuncInfo { id:651 name:<unnamed> method:(FuncId(601), 1) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[RP2A03_CC]                [<INVALID>]
 :00002 %2 = %1 * %2                         [<INVALID>][<INVALID>]
 :00003 ret %2
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:734
meta:on_stack:true kind:Ruby mode:method FuncId(652) regs:5 ISeq(RubyFuncInfo { id:652 name:initialize method:(FuncId(652), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 @apu: <INVALID>[IvarId(0)] = %2
 :00002 @cpu: <INVALID>[IvarId(0)] = %1
 :00003 %3 = const[LUT]                      [<INVALID>]
 :00004 %4 = 0: i32
 :00005 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00006 @freq: <INVALID>[IvarId(0)] = %3
 :00007 ret %3
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:740
meta:on_stack:true kind:Ruby mode:method FuncId(653) regs:3 ISeq(RubyFuncInfo { id:653 name:reset method:(FuncId(653), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = 0: i32
 :00002 @cur_sample: <INVALID>[IvarId(0)] = %1
 :00003 %1 = 0: i32
 :00004 @lin_sample: <INVALID>[IvarId(0)] = %1
 :00005 %1 = const[LUT]                      [<INVALID>]
 :00006 %2 = 0: i32
 :00007 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00008 @freq: <INVALID>[IvarId(0)] = %1
 :00009 %1 = literal[false]
 :00010 @loop: <INVALID>[IvarId(0)] = %1
 :00011 %1 = literal[false]
 :00012 @irq_enable: <INVALID>[IvarId(0)] = %1
 :00013 %1 = 1: i32
 :00014 @regs_length_counter: <INVALID>[IvarId(0)] = %1
 :00015 %1 = 49152: i32
 :00016 @regs_address: <INVALID>[IvarId(0)] = %1
 :00017 %1 = literal[false]
 :00018 @out_active: <INVALID>[IvarId(0)] = %1
 :00019 %1 = 0: i32
 :00020 @out_shifter: <INVALID>[IvarId(0)] = %1
 :00021 %1 = 0: i32
 :00022 @out_dac: <INVALID>[IvarId(0)] = %1
 :00023 %1 = 0: i32
 :00024 @out_buffer: <INVALID>[IvarId(0)] = %1
 :00025 %1 = 0: i32
 :00026 @dma_length_counter: <INVALID>[IvarId(0)] = %1
 :00027 %1 = literal[false]
 :00028 @dma_buffered: <INVALID>[IvarId(0)] = %1
 :00029 %1 = 49152: i32
 :00030 @dma_address: <INVALID>[IvarId(0)] = %1
 :00031 %1 = 0: i32
 :00032 @dma_buffer: <INVALID>[IvarId(0)] = %1
 :00033 ret %1
------------------------------------
------------------------------------
<enable> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:760
meta:on_stack:true kind:Ruby mode:method FuncId(654) regs:4 ISeq(RubyFuncInfo { id:654 name:enable method:(FuncId(654), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @cpu: <INVALID>[IvarId(0)]
 :00002 %3 = const[CPU::IRQ_DMC]             [<INVALID>]
 :00003 _ = %2.clear_irq(%3;1)               [<INVALID>]
 :00005 %2 = !%1                             [<INVALID>]
 :00006 condnotbr %2 =>:00010
+:00007 %2 = 0: i32
 :00008 @dma_length_counter: <INVALID>[IvarId(0)] = %2
 :00009 ret %2
+:00010 %2 = @dma_length_counter: <INVALID>[IvarId(0)]
 :00011 _%2 = %2 == 0: i16                   [<INVALID>][<INVALID>]
 :00012 condnotbr _%2 =>:00024
+:00013 %2 = @regs_length_counter: <INVALID>[IvarId(0)]
 :00014 @dma_length_counter: <INVALID>[IvarId(0)] = %2
 :00015 %2 = @regs_address: <INVALID>[IvarId(0)]
 :00016 @dma_address: <INVALID>[IvarId(0)] = %2
 :00017 %2 = @dma_buffered: <INVALID>[IvarId(0)]
 :00018 condnotbr %2 =>:00021
+:00019 %2 = nil
 :00020 ret %2
+:00021 %2 = %0.do_dma()                     [<INVALID>]
 :00023 ret %2
+:00024 %2 = nil
 :00025 ret %2
------------------------------------
------------------------------------
<sample> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:771
meta:on_stack:true kind:Ruby mode:method FuncId(655) regs:4 ISeq(RubyFuncInfo { id:655 name:sample method:(FuncId(655), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @cur_sample: <INVALID>[IvarId(0)]
 :00002 %3 = @lin_sample: <INVALID>[IvarId(0)]
 :00003 _%2 = %2 != %3                       [<INVALID>][<INVALID>]
 :00004 condnotbr _%2 =>:00027
+:00005 %2 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00006 %1 = %2 * 8: i16                     [<INVALID>][<INVALID>]
 :00007 %2 = @lin_sample: <INVALID>[IvarId(0)]
 :00008 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00009 %3 = @cur_sample: <INVALID>[IvarId(0)]
 :00010 _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00011 condnotbr _%2 =>:00016
+:00012 %2 = @lin_sample: <INVALID>[IvarId(0)]
 :00013 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00014 @lin_sample: <INVALID>[IvarId(0)] = %2
 :00015 br =>:00027
+:00016 %2 = @cur_sample: <INVALID>[IvarId(0)]
 :00017 %3 = @lin_sample: <INVALID>[IvarId(0)]
 :00018 %3 = %3 - %1                         [<INVALID>][<INVALID>]
 :00019 _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00020 condnotbr _%2 =>:00025
+:00021 %2 = @lin_sample: <INVALID>[IvarId(0)]
 :00022 %2 = %2 - %1                         [<INVALID>][<INVALID>]
 :00023 @lin_sample: <INVALID>[IvarId(0)] = %2
 :00024 br =>:00027
+:00025 %2 = @cur_sample: <INVALID>[IvarId(0)]
 :00026 @lin_sample: <INVALID>[IvarId(0)] = %2
+:00027 %2 = @lin_sample: <INVALID>[IvarId(0)]
 :00028 ret %2
------------------------------------
------------------------------------
<do_dma> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:785
meta:on_stack:true kind:Ruby mode:method FuncId(656) regs:5 ISeq(RubyFuncInfo { id:656 name:do_dma method:(FuncId(656), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @cpu: <INVALID>[IvarId(0)]
 :00002 %2 = @dma_address: <INVALID>[IvarId(0)]
 :00003 %1 = %1.dmc_dma(%2;1)                [<INVALID>]
 :00005 @dma_buffer: <INVALID>[IvarId(0)] = %1
 :00006 %1 = 32768: i32
 :00007 %2 = @dma_address: <INVALID>[IvarId(0)]
 :00008 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 %2 = %2 & 32767: i16                 [<INVALID>][<INVALID>]
 :00010 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00011 @dma_address: <INVALID>[IvarId(0)] = %1
 :00012 %1 = literal[true]
 :00013 @dma_buffered: <INVALID>[IvarId(0)] = %1
 :00014 %1 = @dma_length_counter: <INVALID>[IvarId(0)]
 :00015 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00016 @dma_length_counter: <INVALID>[IvarId(0)] = %1
 :00017 %1 = @dma_length_counter: <INVALID>[IvarId(0)]
 :00018 _%1 = %1 == 0: i16                   [<INVALID>][<INVALID>]
 :00019 condnotbr _%1 =>:00039
+:00020 %1 = @loop: <INVALID>[IvarId(0)]
 :00021 condnotbr %1 =>:00027
+:00022 %1 = @regs_address: <INVALID>[IvarId(0)]
 :00023 @dma_address: <INVALID>[IvarId(0)] = %1
 :00024 %1 = @regs_length_counter: <INVALID>[IvarId(0)]
 :00025 @dma_length_counter: <INVALID>[IvarId(0)] = %1
 :00026 ret %1
+:00027 %1 = @irq_enable: <INVALID>[IvarId(0)]
 :00028 condnotbr %1 =>:00037
+:00029 %1 = @cpu: <INVALID>[IvarId(0)]
 :00030 %2 = const[CPU::IRQ_DMC]             [<INVALID>]
 :00031 %3 = @cpu: <INVALID>[IvarId(0)]
 :00032 %3 = %3.current_clock()              [<INVALID>]
 :00034 %1 = %1.do_irq(%2;2)                 [<INVALID>]
 :00036 ret %1
+:00037 %1 = nil
 :00038 ret %1
+:00039 %1 = nil
 :00040 ret %1
------------------------------------
------------------------------------
<update> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:800
meta:on_stack:true kind:Ruby mode:method FuncId(657) regs:3 ISeq(RubyFuncInfo { id:657 name:update method:(FuncId(657), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @out_dac: <INVALID>[IvarId(0)]
 :00002 %2 = const[CHANNEL_OUTPUT_MUL]       [<INVALID>]
 :00003 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00004 @cur_sample: <INVALID>[IvarId(0)] = %1
 :00005 ret %1
------------------------------------
------------------------------------
<poke_0> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:804
meta:on_stack:true kind:Ruby mode:method FuncId(658) regs:5 ISeq(RubyFuncInfo { id:658 name:poke_0 method:(FuncId(658), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = 6: i32
 :00002 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00003 %3 = %3 != 0: i16                    [<INVALID>][<INVALID>]
 :00004 @loop: <INVALID>[IvarId(0)] = %3
 :00005 %3 = 7: i32
 :00006 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00007 %3 = %3 != 0: i16                    [<INVALID>][<INVALID>]
 :00008 @irq_enable: <INVALID>[IvarId(0)] = %3
 :00009 %3 = const[LUT]                      [<INVALID>]
 :00010 %4 = %2 & 15: i16                    [<INVALID>][<INVALID>]
 :00011 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00012 @freq: <INVALID>[IvarId(0)] = %3
 :00013 %3 = @irq_enable: <INVALID>[IvarId(0)]
 :00014 condnotbr %3 =>:00017
+:00015 %3 = nil
 :00016 ret %3
+:00017 %3 = @cpu: <INVALID>[IvarId(0)]
 :00018 %4 = const[CPU::IRQ_DMC]             [<INVALID>]
 :00019 %3 = %3.clear_irq(%4;1)              [<INVALID>]
 :00021 ret %3
------------------------------------
------------------------------------
<poke_1> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:811
meta:on_stack:true kind:Ruby mode:method FuncId(659) regs:5 ISeq(RubyFuncInfo { id:659 name:poke_1 method:(FuncId(659), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @apu: <INVALID>[IvarId(0)]
 :00002 _ = %3.update()                      [<INVALID>]
 :00004 %3 = %2 & 127: i16                   [<INVALID>][<INVALID>]
 :00005 @out_dac: <INVALID>[IvarId(0)] = %3
 :00006 %3 = %0.update()                     [<INVALID>]
 :00008 ret %3
------------------------------------
------------------------------------
<poke_2> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:817
meta:on_stack:true kind:Ruby mode:method FuncId(660) regs:5 ISeq(RubyFuncInfo { id:660 name:poke_2 method:(FuncId(660), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = 49152: i32
 :00002 %4 = %2 << 6: i16                    [<INVALID>][<INVALID>]
 :00003 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00004 @regs_address: <INVALID>[IvarId(0)] = %3
 :00005 ret %3
------------------------------------
------------------------------------
<poke_3> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:821
meta:on_stack:true kind:Ruby mode:method FuncId(661) regs:4 ISeq(RubyFuncInfo { id:661 name:poke_3 method:(FuncId(661), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 %3 = %2 << 4: i16                    [<INVALID>][<INVALID>]
 :00002 %3 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 @regs_length_counter: <INVALID>[IvarId(0)] = %3
 :00004 ret %3
------------------------------------
------------------------------------
<clock_dac> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:825
meta:on_stack:true kind:Ruby mode:method FuncId(662) regs:4 ISeq(RubyFuncInfo { id:662 name:clock_dac method:(FuncId(662), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @out_active: <INVALID>[IvarId(0)]
 :00002 condnotbr %2 =>:00023
+:00003 %2 = @out_dac: <INVALID>[IvarId(0)]
 :00004 %3 = @out_buffer: <INVALID>[IvarId(0)]
 :00005 %3 = %3 & 1: i16                     [<INVALID>][<INVALID>]
 :00006 %3 = %3 << 2: i16                    [<INVALID>][<INVALID>]
 :00007 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00008 %1 = %2 - 2: i16                     [<INVALID>][<INVALID>]
 :00009 %2 = @out_buffer: <INVALID>[IvarId(0)]
 :00010 %2 = %2 >> 1: i16                    [<INVALID>][<INVALID>]
 :00011 @out_buffer: <INVALID>[IvarId(0)] = %2
 :00012 %2 = 0: i32
 :00013 _%2 = %2 <= %1                       [<INVALID>][<INVALID>]
 :00014 condnotbr _%2 =>:00023
+:00015 _%2 = %1 <= 127: i16                 [<INVALID>][<INVALID>]
 :00016 condnotbr _%2 =>:00023
+:00017 %2 = @out_dac: <INVALID>[IvarId(0)]
 :00018 _%2 = %1 != %2                       [<INVALID>][<INVALID>]
 :00019 condnotbr _%2 =>:00023
+:00020 @out_dac: <INVALID>[IvarId(0)] = %1
 :00021 %2 = literal[true]
 :00022 ret %2
+:00023 %2 = literal[false]
 :00024 ret %2
------------------------------------
------------------------------------
<clock_dma> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:837
meta:on_stack:true kind:Ruby mode:method FuncId(663) regs:2 ISeq(RubyFuncInfo { id:663 name:clock_dma method:(FuncId(663), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @out_shifter: <INVALID>[IvarId(0)]
 :00002 _%1 = %1 == 0: i16                   [<INVALID>][<INVALID>]
 :00003 condnotbr _%1 =>:00024
+:00004 %1 = 7: i32
 :00005 @out_shifter: <INVALID>[IvarId(0)] = %1
 :00006 %1 = @dma_buffered: <INVALID>[IvarId(0)]
 :00007 @out_active: <INVALID>[IvarId(0)] = %1
 :00008 %1 = @out_active: <INVALID>[IvarId(0)]
 :00009 condnotbr %1 =>:00022
+:00010 %1 = literal[false]
 :00011 @dma_buffered: <INVALID>[IvarId(0)] = %1
 :00012 %1 = @dma_buffer: <INVALID>[IvarId(0)]
 :00013 @out_buffer: <INVALID>[IvarId(0)] = %1
 :00014 %1 = @dma_length_counter: <INVALID>[IvarId(0)]
 :00015 _%1 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00016 condnotbr _%1 =>:00020
+:00017 %1 = %0.do_dma()                     [<INVALID>]
 :00019 ret %1
+:00020 %1 = nil
 :00021 ret %1
+:00022 %1 = nil
 :00023 ret %1
+:00024 %1 = @out_shifter: <INVALID>[IvarId(0)]
 :00025 %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00026 @out_shifter: <INVALID>[IvarId(0)] = %1
 :00027 ret %1
------------------------------------
------------------------------------
<status> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:851
meta:on_stack:true kind:Ruby mode:method FuncId(664) regs:2 ISeq(RubyFuncInfo { id:664 name:status method:(FuncId(664), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @dma_length_counter: <INVALID>[IvarId(0)]
 :00002 %1 = %1 > 0: i16                     [<INVALID>][<INVALID>]
 :00003 ret %1
------------------------------------
------------------------------------
<block in Pulse> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:476
meta:on_stack:true kind:Ruby mode:method FuncId(665) regs:3 ISeq(RubyFuncInfo { id:665 name:<unnamed> method:(FuncId(598), 2) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = dynvar(1, %1)
 :00002 %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00003 %2 = %2 * 31: i16                    [<INVALID>][<INVALID>]
 :00004 ret %2
------------------------------------
------------------------------------
<block in Noise> /home/monochrome/optcarrot/lib/optcarrot/apu.rb:676
meta:on_stack:true kind:Ruby mode:method FuncId(666) regs:4 ISeq(RubyFuncInfo { id:666 name:<unnamed> method:(FuncId(600), 2) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = 0: i32
 :00002 %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00003 %3 = dynvar(1, %1)
 :00004 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
 :00005 _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00006 condnotbr _%2 =>:00009
+:00007 %2 = %1 / 2: i16                     [<INVALID>][<INVALID>]
 :00008 ret %2
+:00009 %2 = %1 / 2: i16                     [<INVALID>][<INVALID>]
 :00010 %2 = %2 + 16384: i16                 [<INVALID>][<INVALID>]
 :00011 ret %2
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(672) regs:2 ISeq(RubyFuncInfo { id:672 name:/main method:(FuncId(672), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal["opt"]
 :00002 _ = %0.require_relative(%1;1)        [<INVALID>]
 :00004 %1 = module_def Optcarrot: FuncId(673)
 :00005 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(673) regs:2 ISeq(RubyFuncInfo { id:673 name:Optcarrot method:(FuncId(673), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = class_def PPU < _: FuncId(674)
 :00002 ret %1
------------------------------------
------------------------------------
<PPU> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:5
meta:on_stack:true kind:Ruby mode:class_def FuncId(674) regs:12 ISeq(RubyFuncInfo { id:674 name:PPU method:(FuncId(674), 0) args: 0 non_temp: 0 temp: 11})
[]
+:00000 init_method reg:11 arg:0 req:0 opt:0 rest:false block:None stack_offset:9
 :00001 %1 = 4: i32
 :00002 const[RP2C02_CC] = %1
 :00003 %1 = const[RP2C02_CC]                [<INVALID>]
 :00004 %1 = %1 * 256: i16                   [<INVALID>][<INVALID>]
 :00005 const[RP2C02_HACTIVE] = %1
 :00006 %1 = const[RP2C02_CC]                [<INVALID>]
 :00007 %1 = %1 * 85: i16                    [<INVALID>][<INVALID>]
 :00008 const[RP2C02_HBLANK] = %1
 :00009 %1 = const[RP2C02_HACTIVE]           [<INVALID>]
 :00010 %2 = const[RP2C02_HBLANK]            [<INVALID>]
 :00011 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00012 const[RP2C02_HSYNC] = %1
 :00013 %1 = 240: i32
 :00014 const[RP2C02_VACTIVE] = %1
 :00015 %1 = 1: i32
 :00016 const[RP2C02_VSLEEP] = %1
 :00017 %1 = 20: i32
 :00018 const[RP2C02_VINT] = %1
 :00019 %1 = 1: i32
 :00020 const[RP2C02_VDUMMY] = %1
 :00021 %1 = const[RP2C02_VSLEEP]            [<INVALID>]
 :00022 %2 = const[RP2C02_VINT]              [<INVALID>]
 :00023 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00024 %2 = const[RP2C02_VDUMMY]            [<INVALID>]
 :00025 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00026 const[RP2C02_VBLANK] = %1
 :00027 %1 = const[RP2C02_VACTIVE]           [<INVALID>]
 :00028 %2 = const[RP2C02_VBLANK]            [<INVALID>]
 :00029 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00030 const[RP2C02_VSYNC] = %1
 :00031 %1 = const[RP2C02_VACTIVE]           [<INVALID>]
 :00032 %2 = const[RP2C02_HSYNC]             [<INVALID>]
 :00033 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00034 %2 = const[RP2C02_CC]                [<INVALID>]
 :00035 %2 = %2 * 312: i16                   [<INVALID>][<INVALID>]
 :00036 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00037 const[RP2C02_HVSYNCBOOT] = %1
 :00038 %1 = const[RP2C02_VINT]              [<INVALID>]
 :00039 %2 = const[RP2C02_HSYNC]             [<INVALID>]
 :00040 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00041 const[RP2C02_HVINT] = %1
 :00042 %1 = const[RP2C02_VSYNC]             [<INVALID>]
 :00043 %2 = const[RP2C02_HSYNC]             [<INVALID>]
 :00044 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00045 const[RP2C02_HVSYNC_0] = %1
 :00046 %1 = const[RP2C02_VSYNC]             [<INVALID>]
 :00047 %2 = const[RP2C02_HSYNC]             [<INVALID>]
 :00048 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00049 %2 = const[RP2C02_CC]                [<INVALID>]
 :00050 %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00051 const[RP2C02_HVSYNC_1] = %1
 :00052 %1 = -1: i32
 :00053 const[SCANLINE_HDUMMY] = %1
 :00054 %1 = 240: i32
 :00055 const[SCANLINE_VBLANK] = %1
 :00056 %1 = 341: i32
 :00057 const[HCLOCK_DUMMY] = %1
 :00058 %1 = 681: i32
 :00059 const[HCLOCK_VBLANK_0] = %1
 :00060 %1 = 682: i32
 :00061 const[HCLOCK_VBLANK_1] = %1
 :00062 %1 = 684: i32
 :00063 const[HCLOCK_VBLANK_2] = %1
 :00064 %1 = 685: i32
 :00065 const[HCLOCK_BOOT] = %1
 :00066 %2 = const[RP2C02_HVINT]             [<INVALID>]
 :00067 %3 = const[RP2C02_CC]                [<INVALID>]
 :00068 %2 = %2 / %3                         [<INVALID>][<INVALID>]
 :00069 %3 = const[HCLOCK_DUMMY]             [<INVALID>]
 :00070 %2 = %2 - %3                         [<INVALID>][<INVALID>]
 :00071 %3 = const[RP2C02_HVINT]             [<INVALID>]
 :00072 %4 = const[RP2C02_HVSYNC_0]          [<INVALID>]
 :00073 %1 = array[%2; 3]
 :00074 const[DUMMY_FRAME] = %1
 :00075 %2 = const[RP2C02_HVSYNCBOOT]        [<INVALID>]
 :00076 %3 = const[RP2C02_CC]                [<INVALID>]
 :00077 %2 = %2 / %3                         [<INVALID>][<INVALID>]
 :00078 %3 = const[HCLOCK_BOOT]              [<INVALID>]
 :00079 %2 = %2 - %3                         [<INVALID>][<INVALID>]
 :00080 %3 = const[RP2C02_HVSYNCBOOT]        [<INVALID>]
 :00081 %4 = const[RP2C02_HVSYNCBOOT]        [<INVALID>]
 :00082 %1 = array[%2; 3]
 :00083 const[BOOT_FRAME] = %1
 :00084 %2 = 0: i32
 :00085 %3 = literal[[3, 7, 2, 6, 1, 5, 0, 4]]
 :00086 %4 = 1: i32
 :00087 %5 = literal[[4, 0, 5, 1, 6, 2, 7, 3]]
 :00088 %1 = hash[%2; 2]
 :00089 const[SP_PIXEL_POSITIONS] = %1
 :00090 %1 = literal[[0, 4, 8, 12]]
 :00091 %2 = literal[44236801]
 :00092 %1 = %1.map( &%2)                    [<INVALID>]
 :00094 const[TILE_LUT] = %1
 :00095 method_def inspect: FuncId(676)
 :00096 method_def initialize: FuncId(677)
 :00097 method_def reset: FuncId(678)
 :00098 method_def update_output_color: FuncId(679)
 :00099 method_def setup_lut: FuncId(680)
 :00100 %1 = :output_pixels
 :00101 _ = %0.attr_reader(%1;1)             [<INVALID>]
 :00103 method_def set_chr_mem: FuncId(681)
 :00104 %2 = :horizontal
 :00105 %3 = literal[[0, 0, 1, 1]]
 :00106 %4 = :vertical
 :00107 %5 = literal[[0, 1, 0, 1]]
 :00108 %6 = :four_screen
 :00109 %7 = literal[[0, 1, 2, 3]]
 :00110 %8 = :first
 :00111 %9 = literal[[0, 0, 0, 0]]
 :00112 %10 = :second
 :00113 %11 = literal[[1, 1, 1, 1]]
 :00114 %1 = hash[%2; 5]
 :00115 const[NMT_TABLE] = %1
 :00116 method_def nametables=: FuncId(682)
 :00117 method_def update: FuncId(683)
 :00118 method_def setup_frame: FuncId(684)
 :00119 method_def vsync: FuncId(685)
 :00120 method_def monitor_a12_rising_edge: FuncId(686)
 :00121 method_def update_vram_addr: FuncId(687)
 :00122 method_def update_scroll_address_line: FuncId(688)
 :00123 method_def active?: FuncId(689)
 :00124 method_def sync: FuncId(690)
 :00125 method_def make_sure_invariants: FuncId(691)
 :00126 method_def io_latch_mask: FuncId(692)
 :00127 method_def poke_2000: FuncId(693)
 :00128 method_def poke_2001: FuncId(694)
 :00129 method_def peek_2002: FuncId(695)
 :00130 method_def poke_2003: FuncId(696)
 :00131 method_def poke_2004: FuncId(697)
 :00132 method_def peek_2004: FuncId(698)
 :00133 method_def poke_2005: FuncId(699)
 :00134 method_def poke_2006: FuncId(700)
 :00135 method_def poke_2007: FuncId(701)
 :00136 method_def peek_2007: FuncId(702)
 :00137 method_def poke_2xxx: FuncId(703)
 :00138 method_def peek_2xxx: FuncId(704)
 :00139 method_def peek_3000: FuncId(705)
 :00140 method_def poke_4014: FuncId(706)
 :00141 method_def peek_4014: FuncId(707)
 :00142 method_def open_pattern: FuncId(708)
 :00143 method_def open_sprite: FuncId(709)
 :00144 method_def load_sprite: FuncId(710)
 :00145 method_def update_address_line: FuncId(711)
 :00146 method_def open_name: FuncId(712)
 :00147 method_def fetch_name: FuncId(713)
 :00148 method_def open_attr: FuncId(714)
 :00149 method_def fetch_attr: FuncId(715)
 :00150 method_def fetch_bg_pattern_0: FuncId(716)
 :00151 method_def fetch_bg_pattern_1: FuncId(717)
 :00152 method_def scroll_clock_x: FuncId(718)
 :00153 method_def scroll_reset_x: FuncId(719)
 :00154 method_def scroll_clock_y: FuncId(720)
 :00155 method_def preload_tiles: FuncId(721)
 :00156 method_def load_tiles: FuncId(722)
 :00157 method_def evaluate_sprites_even: FuncId(723)
 :00158 method_def evaluate_sprites_odd: FuncId(724)
 :00159 method_def evaluate_sprites_odd_phase_1: FuncId(725)
 :00160 method_def evaluate_sprites_odd_phase_2: FuncId(726)
 :00161 method_def evaluate_sprites_odd_phase_3: FuncId(727)
 :00162 method_def evaluate_sprites_odd_phase_4: FuncId(728)
 :00163 method_def evaluate_sprites_odd_phase_5: FuncId(729)
 :00164 method_def evaluate_sprites_odd_phase_6: FuncId(730)
 :00165 method_def evaluate_sprites_odd_phase_7: FuncId(731)
 :00166 method_def evaluate_sprites_odd_phase_8: FuncId(732)
 :00167 method_def evaluate_sprites_odd_phase_9: FuncId(733)
 :00168 method_def load_extended_sprites: FuncId(734)
 :00169 method_def render_pixel: FuncId(735)
 :00170 method_def batch_render_eight_pixels: FuncId(736)
 :00171 method_def boot: FuncId(737)
 :00172 method_def vblank_0: FuncId(738)
 :00173 method_def vblank_1: FuncId(739)
 :00174 method_def vblank_2: FuncId(740)
 :00175 method_def update_enabled_flags: FuncId(741)
 :00176 method_def update_enabled_flags_edge: FuncId(742)
 :00177 method_def debug_logging: FuncId(743)
 :00178 method_def run: FuncId(744)
 :00179 method_def dispose: FuncId(745)
 :00180 method_def wait_frame: FuncId(746)
 :00181 method_def wait_zero_clocks: FuncId(747)
 :00182 method_def wait_one_clock: FuncId(748)
 :00183 method_def wait_two_clocks: FuncId(749)
 :00184 method_def main_loop: FuncId(750)
 :00185 %1 = class_def OptimizedCodeBuilder < _: FuncId(751)
 :00186 ret %1
------------------------------------
------------------------------------
<block in PPU> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:43
meta:on_stack:true kind:Ruby mode:method FuncId(675) regs:5 ISeq(RubyFuncInfo { id:675 name:<unnamed> method:(FuncId(674), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[0..7]
 :00002 %3 = literal[49283073]
 :00003 %2 = %2.map( &%3)                    [<INVALID>]
 :00005 %2 = %2.transpose()                  [<INVALID>]
 :00007 ret %2
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:54
meta:on_stack:true kind:Ruby mode:method FuncId(676) regs:4 ISeq(RubyFuncInfo { id:676 name:inspect method:(FuncId(676), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["#<"]
 :00002 %2 = %0.class()                      [<INVALID>]
 :00004 %3 = literal[">"]
 :00005 %1 = concat(%1; 3)
 :00006 ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:61
meta:on_stack:true kind:Ruby mode:method FuncId(677) regs:8 ISeq(RubyFuncInfo { id:677 name:initialize method:(FuncId(677), 0) args: 3 non_temp: 3 temp: 4})
[]
+:00000 init_method reg:7 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 @conf: <INVALID>[IvarId(0)] = %1
 :00002 @cpu: <INVALID>[IvarId(0)] = %2
 :00003 @palette: <INVALID>[IvarId(0)] = %3
 :00004 %4 = @conf: <INVALID>[IvarId(0)]
 :00005 %4 = %4.load_ppu()                   [<INVALID>]
 :00007 condnotbr %4 =>:00017
+:00008 %4 = const[File]                     [<INVALID>]
 :00009 %5 = @conf: <INVALID>[IvarId(0)]
 :00010 %5 = %5.load_ppu()                   [<INVALID>]
 :00012 %4 = %4.read(%5;1)                   [<INVALID>]
 :00014 _ = %0.eval(%4;1)                    [<INVALID>]
 :00016 br =>:00036
+:00017 %4 = @conf: <INVALID>[IvarId(0)]
 :00018 %4 = %4.opt_ppu()                    [<INVALID>]
 :00020 condnotbr %4 =>:00036
+:00021 %4 = const[OptimizedCodeBuilder]     [<INVALID>]
 :00022 %5 = @conf: <INVALID>[IvarId(0)]
 :00023 %5 = %5.loglevel()                   [<INVALID>]
 :00025 %6 = @conf: <INVALID>[IvarId(0)]
 :00026 %6 = %6.opt_ppu()                    [<INVALID>]
 :00028 %4 = %4.new(%5;2)                    [<INVALID>]
 :00030 %4 = %4.build()                      [<INVALID>]
 :00032 %5 = nil
 :00033 %6 = literal["(generated PPU core)"]
 :00034 _ = %0.eval(%4;3)                    [<INVALID>]
+:00036 %5 = literal[[255]]
 :00037 %5 = %5 * 1024: i16                  [<INVALID>][<INVALID>]
 :00038 %6 = literal[[255]]
 :00039 %6 = %6 * 1024: i16                  [<INVALID>][<INVALID>]
 :00040 %4 = array[%5; 2]
 :00041 @nmt_mem: <INVALID>[IvarId(0)] = %4
 :00042 %4 = literal[[0, 1, 0, 1]]
 :00043 %5 = literal[49348609]
 :00044 %4 = %4.map( &%5)                    [<INVALID>]
 :00046 @nmt_ref: <INVALID>[IvarId(0)] = %4
 :00047 %4 = literal[[]]
 :00048 @output_pixels: <INVALID>[IvarId(0)] = %4
 :00049 %5 = @palette: <INVALID>[IvarId(0)]
 :00050 %6 = 0: i32
 :00051 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00052 %4 = array[%5; 1]
 :00053 %4 = %4 * 32: i16                    [<INVALID>][<INVALID>]
 :00054 @output_color: <INVALID>[IvarId(0)] = %4
 :00055 %4 = literal[false]
 :00056 _ = %0.reset( kw:%4;1)               [<INVALID>]
 :00058 %4 = %0.setup_lut()                  [<INVALID>]
 :00060 ret %4
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:82
meta:on_stack:true kind:Ruby mode:method FuncId(678) regs:6 ISeq(RubyFuncInfo { id:678 name:reset method:(FuncId(678), 0) args: 1 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:1 req:0 opt:1 rest:false block:None stack_offset:6
 :00001 check_local(%1) =>:00003
+:00002 %1 = literal[{}]
+:00003 %2 = :mapping
 :00004 %3 = literal[true]
 :00005 %2 = %1.fetch(%2;2)                  [<INVALID>]
 :00007 condnotbr %2 =>:00140
+:00008 %2 = @cpu: <INVALID>[IvarId(0)]
 :00009 %3 = 8192: i32
 :00010 %4 = 16383: i32
 :00011 %5 = 8: i32
 :00012 %3 = %3.step(%4;2)                   [<INVALID>]
 :00014 %4 = :peek_2xxx
 :00015 %4 = %0.method(%4;1)                 [<INVALID>]
 :00017 %5 = :poke_2000
 :00018 %5 = %0.method(%5;1)                 [<INVALID>]
 :00020 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00022 %2 = @cpu: <INVALID>[IvarId(0)]
 :00023 %3 = 8193: i32
 :00024 %4 = 16383: i32
 :00025 %5 = 8: i32
 :00026 %3 = %3.step(%4;2)                   [<INVALID>]
 :00028 %4 = :peek_2xxx
 :00029 %4 = %0.method(%4;1)                 [<INVALID>]
 :00031 %5 = :poke_2001
 :00032 %5 = %0.method(%5;1)                 [<INVALID>]
 :00034 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00036 %2 = @cpu: <INVALID>[IvarId(0)]
 :00037 %3 = 8194: i32
 :00038 %4 = 16383: i32
 :00039 %5 = 8: i32
 :00040 %3 = %3.step(%4;2)                   [<INVALID>]
 :00042 %4 = :peek_2002
 :00043 %4 = %0.method(%4;1)                 [<INVALID>]
 :00045 %5 = :poke_2xxx
 :00046 %5 = %0.method(%5;1)                 [<INVALID>]
 :00048 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00050 %2 = @cpu: <INVALID>[IvarId(0)]
 :00051 %3 = 8195: i32
 :00052 %4 = 16383: i32
 :00053 %5 = 8: i32
 :00054 %3 = %3.step(%4;2)                   [<INVALID>]
 :00056 %4 = :peek_2xxx
 :00057 %4 = %0.method(%4;1)                 [<INVALID>]
 :00059 %5 = :poke_2003
 :00060 %5 = %0.method(%5;1)                 [<INVALID>]
 :00062 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00064 %2 = @cpu: <INVALID>[IvarId(0)]
 :00065 %3 = 8196: i32
 :00066 %4 = 16383: i32
 :00067 %5 = 8: i32
 :00068 %3 = %3.step(%4;2)                   [<INVALID>]
 :00070 %4 = :peek_2004
 :00071 %4 = %0.method(%4;1)                 [<INVALID>]
 :00073 %5 = :poke_2004
 :00074 %5 = %0.method(%5;1)                 [<INVALID>]
 :00076 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00078 %2 = @cpu: <INVALID>[IvarId(0)]
 :00079 %3 = 8197: i32
 :00080 %4 = 16383: i32
 :00081 %5 = 8: i32
 :00082 %3 = %3.step(%4;2)                   [<INVALID>]
 :00084 %4 = :peek_2xxx
 :00085 %4 = %0.method(%4;1)                 [<INVALID>]
 :00087 %5 = :poke_2005
 :00088 %5 = %0.method(%5;1)                 [<INVALID>]
 :00090 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00092 %2 = @cpu: <INVALID>[IvarId(0)]
 :00093 %3 = 8198: i32
 :00094 %4 = 16383: i32
 :00095 %5 = 8: i32
 :00096 %3 = %3.step(%4;2)                   [<INVALID>]
 :00098 %4 = :peek_2xxx
 :00099 %4 = %0.method(%4;1)                 [<INVALID>]
 :00101 %5 = :poke_2006
 :00102 %5 = %0.method(%5;1)                 [<INVALID>]
 :00104 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00106 %2 = @cpu: <INVALID>[IvarId(0)]
 :00107 %3 = 8199: i32
 :00108 %4 = 16383: i32
 :00109 %5 = 8: i32
 :00110 %3 = %3.step(%4;2)                   [<INVALID>]
 :00112 %4 = :peek_2007
 :00113 %4 = %0.method(%4;1)                 [<INVALID>]
 :00115 %5 = :poke_2007
 :00116 %5 = %0.method(%5;1)                 [<INVALID>]
 :00118 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00120 %2 = @cpu: <INVALID>[IvarId(0)]
 :00121 %3 = 12288: i32
 :00122 %4 = :peek_3000
 :00123 %4 = %0.method(%4;1)                 [<INVALID>]
 :00125 %5 = :poke_2000
 :00126 %5 = %0.method(%5;1)                 [<INVALID>]
 :00128 _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00130 %2 = @cpu: <INVALID>[IvarId(0)]
 :00131 %3 = 16404: i32
 :00132 %4 = :peek_4014
 :00133 %4 = %0.method(%4;1)                 [<INVALID>]
 :00135 %5 = :poke_4014
 :00136 %5 = %0.method(%5;1)                 [<INVALID>]
 :00138 _ = %2.add_mappings(%3;3)            [<INVALID>]
+:00140 %2 = literal[[63, 1, 0, 1, 0, 2, 2, 13, 8, 16, 8, 36, 0, 0, 4, 44, 9, 1, 52, 3, 0, 4, 0, 20, 8, 58, 0, 2, 0, 32, 44, 8]]
 :00141 @palette_ram: <INVALID>[IvarId(0)] = %2
 :00142 %2 = 63: i32
 :00143 @coloring: <INVALID>[IvarId(0)] = %2
 :00144 %2 = 0: i32
 :00145 @emphasis: <INVALID>[IvarId(0)] = %2
 :00146 _ = %0.update_output_color()         [<INVALID>]
 :00148 %2 = literal[true]
 :00149 @run: <INVALID>[IvarId(0)] = %2
 :00150 %2 = const[HCLOCK_BOOT]              [<INVALID>]
 :00151 @hclk: <INVALID>[IvarId(0)] = %2
 :00152 %2 = 0: i32
 :00153 @vclk: <INVALID>[IvarId(0)] = %2
 :00154 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00155 @hclk_target: <INVALID>[IvarId(0)] = %2
 :00156 %2 = 0: i32
 :00157 @io_latch: <INVALID>[IvarId(0)] = %2
 :00158 %2 = 232: i32
 :00159 @io_buffer: <INVALID>[IvarId(0)] = %2
 :00160 %2 = 0: i32
 :00161 @regs_oam: <INVALID>[IvarId(0)] = %2
 :00162 %2 = 1: i32
 :00163 @vram_addr_inc: <INVALID>[IvarId(0)] = %2
 :00164 %2 = literal[false]
 :00165 @need_nmi: <INVALID>[IvarId(0)] = %2
 :00166 %2 = 4080: i32
 :00167 @pattern_end: <INVALID>[IvarId(0)] = %2
 :00168 %2 = literal[false]
 :00169 @any_show: <INVALID>[IvarId(0)] = %2
 :00170 %2 = literal[false]
 :00171 @sp_overflow: <INVALID>[IvarId(0)] = %2
 :00172 %2 = literal[false]
 :00173 @sp_zero_hit: <INVALID>[IvarId(0)] = %2
 :00174 %2 = literal[false]
 :00175 @vblank: <INVALID>[IvarId(0)] = %2
 :00176 @vblanking: <INVALID>[IvarId(0)] = %2
 :00177 %2 = 0: i32
 :00178 @io_addr: <INVALID>[IvarId(0)] = %2
 :00179 %2 = 0: i32
 :00180 @io_pattern: <INVALID>[IvarId(0)] = %2
 :00181 %2 = nil
 :00182 @a12_monitor: <INVALID>[IvarId(0)] = %2
 :00183 %2 = nil
 :00184 @a12_state: <INVALID>[IvarId(0)] = %2
 :00185 %2 = literal[false]
 :00186 @odd_frame: <INVALID>[IvarId(0)] = %2
 :00187 %2 = const[SCANLINE_VBLANK]          [<INVALID>]
 :00188 @scanline: <INVALID>[IvarId(0)] = %2
 :00189 %2 = literal[false]
 :00190 @scroll_toggle: <INVALID>[IvarId(0)] = %2
 :00191 %2 = 0: i32
 :00192 @scroll_latch: <INVALID>[IvarId(0)] = %2
 :00193 %2 = 0: i32
 :00194 @scroll_xfine: <INVALID>[IvarId(0)] = %2
 :00195 %2 = 0: i32
 :00196 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %2
 :00197 @scroll_addr_0_4: <INVALID>[IvarId(0)] = %2
 :00198 %2 = 8192: i32
 :00199 @name_io_addr: <INVALID>[IvarId(0)] = %2
 :00200 %2 = literal[false]
 :00201 @bg_enabled: <INVALID>[IvarId(0)] = %2
 :00202 %2 = literal[false]
 :00203 @bg_show: <INVALID>[IvarId(0)] = %2
 :00204 %2 = literal[false]
 :00205 @bg_show_edge: <INVALID>[IvarId(0)] = %2
 :00206 %2 = literal[[0]]
 :00207 %2 = %2 * 16: i16                    [<INVALID>][<INVALID>]
 :00208 @bg_pixels: <INVALID>[IvarId(0)] = %2
 :00209 %2 = 0: i32
 :00210 @bg_pattern_base: <INVALID>[IvarId(0)] = %2
 :00211 %2 = 0: i32
 :00212 @bg_pattern_base_15: <INVALID>[IvarId(0)] = %2
 :00213 %2 = 0: i32
 :00214 @bg_pattern: <INVALID>[IvarId(0)] = %2
 :00215 %2 = const[TILE_LUT]                 [<INVALID>]
 :00216 %3 = 0: i32
 :00217 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00218 @bg_pattern_lut: <INVALID>[IvarId(0)] = %2
 :00219 %2 = const[TILE_LUT]                 [<INVALID>]
 :00220 %3 = 0: i32
 :00221 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00222 @bg_pattern_lut_fetched: <INVALID>[IvarId(0)] = %2
 :00223 %2 = literal[false]
 :00224 @sp_enabled: <INVALID>[IvarId(0)] = %2
 :00225 %2 = literal[false]
 :00226 @sp_active: <INVALID>[IvarId(0)] = %2
 :00227 %2 = literal[false]
 :00228 @sp_show: <INVALID>[IvarId(0)] = %2
 :00229 %2 = literal[false]
 :00230 @sp_show_edge: <INVALID>[IvarId(0)] = %2
 :00231 %2 = 0: i32
 :00232 @sp_base: <INVALID>[IvarId(0)] = %2
 :00233 %2 = 8: i32
 :00234 @sp_height: <INVALID>[IvarId(0)] = %2
 :00235 %2 = 0: i32
 :00236 @sp_phase: <INVALID>[IvarId(0)] = %2
 :00237 %2 = literal[[255]]
 :00238 %2 = %2 * 256: i16                   [<INVALID>][<INVALID>]
 :00239 @sp_ram: <INVALID>[IvarId(0)] = %2
 :00240 %2 = 0: i32
 :00241 @sp_index: <INVALID>[IvarId(0)] = %2
 :00242 %2 = 0: i32
 :00243 @sp_addr: <INVALID>[IvarId(0)] = %2
 :00244 %2 = 0: i32
 :00245 @sp_latch: <INVALID>[IvarId(0)] = %2
 :00246 %2 = @conf: <INVALID>[IvarId(0)]
 :00247 %2 = %2.sprite_limit()               [<INVALID>]
 :00249 condnotbr %2 =>:00252
+:00250 %2 = 8: i32
 :00251 br =>:00253
+:00252 %2 = 32: i32
+:00253 %2 = %2 * 4: i16                     [<INVALID>][<INVALID>]
 :00254 @sp_limit: <INVALID>[IvarId(0)] = %2
 :00255 %2 = literal[[0]]
 :00256 %3 = @sp_limit: <INVALID>[IvarId(0)]
 :00257 %2 = %2 * %3                         [<INVALID>][<INVALID>]
 :00258 @sp_buffer: <INVALID>[IvarId(0)] = %2
 :00259 %2 = 0: i32
 :00260 @sp_buffered: <INVALID>[IvarId(0)] = %2
 :00261 %2 = literal[false]
 :00262 @sp_visible: <INVALID>[IvarId(0)] = %2
 :00263 %2 = literal[[nil]]
 :00264 %2 = %2 * 264: i16                   [<INVALID>][<INVALID>]
 :00265 @sp_map: <INVALID>[IvarId(0)] = %2
 :00266 %2 = literal[0...264]
 :00267 %3 = literal[49414145]
 :00268 %2 = %2.map( &%3)                    [<INVALID>]
 :00270 @sp_map_buffer: <INVALID>[IvarId(0)] = %2
 :00271 %2 = literal[false]
 :00272 @sp_zero_in_line: <INVALID>[IvarId(0)] = %2
 :00273 ret %2
------------------------------------
------------------------------------
<update_output_color> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:191
meta:on_stack:true kind:Ruby mode:method FuncId(679) regs:4 ISeq(RubyFuncInfo { id:679 name:update_output_color method:(FuncId(679), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = 32: i32
 :00002 %2 = literal[49479681]
 :00003 %1 = %1.times( &%2)                  [<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<setup_lut> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:197
meta:on_stack:true kind:Ruby mode:method FuncId(680) regs:5 ISeq(RubyFuncInfo { id:680 name:setup_lut method:(FuncId(680), 0) args: 0 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[{}]
 :00002 %2 = %2.compare_by_identity()        [<INVALID>]
 :00004 @lut_update: <INVALID>[IvarId(0)] = %2
 :00005 %2 = literal[0..65535]
 :00006 %3 = literal[49545217]
 :00007 %2 = %2.map( &%3)                    [<INVALID>]
 :00009 @name_lut: <INVALID>[IvarId(0)] = %2
 :00010 %1 = literal[{}]
 :00011 %2 = literal[0..32767]
 :00012 %3 = literal[49610753]
 :00013 %2 = %2.map( &%3)                    [<INVALID>]
 :00015 %2 = %2.freeze()                     [<INVALID>]
 :00017 @attr_lut: <INVALID>[IvarId(0)] = %2
 :00018 %2 = literal[49676289]
 :00019 %2 = %1.each_value( &%2)             [<INVALID>]
 :00021 ret %2
------------------------------------
------------------------------------
<set_chr_mem> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:227
meta:on_stack:true kind:Ruby mode:method FuncId(681) regs:4 ISeq(RubyFuncInfo { id:681 name:set_chr_mem method:(FuncId(681), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 @chr_mem: <INVALID>[IvarId(0)] = %1
 :00002 @chr_mem_writable: <INVALID>[IvarId(0)] = %2
 :00003 ret %2
------------------------------------
------------------------------------
<nametables=> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:239
meta:on_stack:true kind:Ruby mode:method FuncId(682) regs:7 ISeq(RubyFuncInfo { id:682 name:nametables= method:(FuncId(682), 0) args: 1 non_temp: 2 temp: 4})
[]
+:00000 init_method reg:6 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 %3 = const[RP2C02_CC]                [<INVALID>]
 :00002 _ = %0.update(%3;1)                  [<INVALID>]
 :00004 %3 = const[NMT_TABLE]                [<INVALID>]
 :00005 %2 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00006 %3 = literal[0..3]
 :00007 %4 = literal[49741825]
 :00008 %3 = %3.all?( &%4)                   [<INVALID>]
 :00010 condnotbr %3 =>:00013
+:00011 %3 = nil
 :00012 ret %3
+:00013 %3 = @nmt_ref: <INVALID>[IvarId(0)]
 :00014 %4 = 0: i32
 :00015 %5 = @nmt_mem: <INVALID>[IvarId(0)]
 :00016 %6 = 0: i32
 :00017 %6 = %2.[%6]                         [<INVALID>][<INVALID>]
 :00018 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00019 %3:.[%4:] = %5
 :00020 %3 = @nmt_ref: <INVALID>[IvarId(0)]
 :00021 %4 = 1: i32
 :00022 %5 = @nmt_mem: <INVALID>[IvarId(0)]
 :00023 %6 = 1: i32
 :00024 %6 = %2.[%6]                         [<INVALID>][<INVALID>]
 :00025 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00026 %3:.[%4:] = %5
 :00027 %3 = @nmt_ref: <INVALID>[IvarId(0)]
 :00028 %4 = 2: i32
 :00029 %5 = @nmt_mem: <INVALID>[IvarId(0)]
 :00030 %6 = 2: i32
 :00031 %6 = %2.[%6]                         [<INVALID>][<INVALID>]
 :00032 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00033 %3:.[%4:] = %5
 :00034 %3 = @nmt_ref: <INVALID>[IvarId(0)]
 :00035 %4 = 3: i32
 :00036 %5 = @nmt_mem: <INVALID>[IvarId(0)]
 :00037 %6 = 3: i32
 :00038 %6 = %2.[%6]                         [<INVALID>][<INVALID>]
 :00039 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00040 %3:.[%4:] = %5
 :00041 %3 = %0.setup_lut()                  [<INVALID>]
 :00043 ret %3
------------------------------------
------------------------------------
<update> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:250
meta:on_stack:true kind:Ruby mode:method FuncId(683) regs:4 ISeq(RubyFuncInfo { id:683 name:update method:(FuncId(683), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @cpu: <INVALID>[IvarId(0)]
 :00002 %2 = %2.update()                     [<INVALID>]
 :00004 %2 = %1 + %2                         [<INVALID>][<INVALID>]
 :00005 %2 = %0.sync(%2;1)                   [<INVALID>]
 :00007 ret %2
------------------------------------
------------------------------------
<setup_frame> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:254
meta:on_stack:true kind:Ruby mode:method FuncId(684) regs:6 ISeq(RubyFuncInfo { id:684 name:setup_frame method:(FuncId(684), 0) args: 0 non_temp: 0 temp: 5})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @output_pixels: <INVALID>[IvarId(0)]
 :00002 _ = %1.clear()                       [<INVALID>]
 :00004 %1 = @odd_frame: <INVALID>[IvarId(0)]
 :00005 %1 = !%1                             [<INVALID>]
 :00006 @odd_frame: <INVALID>[IvarId(0)] = %1
 :00007 %1 = @cpu: <INVALID>[IvarId(0)]
 :00008 %2 = @hclk: <INVALID>[IvarId(0)]
 :00009 %3 = const[HCLOCK_DUMMY]             [<INVALID>]
 :00010 _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00011 condnotbr _%2 =>:00014
+:00012 %2 = const[DUMMY_FRAME]              [<INVALID>]
 :00013 br =>:00015
+:00014 %2 = const[BOOT_FRAME]               [<INVALID>]
+:00015 %3; 3 = expand(%2)
 :00016 @vclk: <INVALID>[IvarId(0)] = %3
 :00017 @hclk_target: <INVALID>[IvarId(0)] = %4
 :00018 _ = %1.next_frame_clock=(%5;1)       [<INVALID>]
 :00020 ret %1
------------------------------------
------------------------------------
<vsync> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:260
meta:on_stack:true kind:Ruby mode:method FuncId(685) regs:4 ISeq(RubyFuncInfo { id:685 name:vsync method:(FuncId(685), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @hclk_target: <INVALID>[IvarId(0)]
 :00002 %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00003 _%1 = %1 != %2                       [<INVALID>][<INVALID>]
 :00004 condnotbr _%1 =>:00009
+:00005 %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00006 @hclk_target: <INVALID>[IvarId(0)] = %1
 :00007 _ = %0.run()                         [<INVALID>]
+:00009 loop_start counter=0 jit-addr=0000000000000000
 :00010 %1 = @output_pixels: <INVALID>[IvarId(0)]
 :00011 %1 = %1.size()                       [<INVALID>]
 :00013 %2 = 256: i32
 :00014 %2 = %2 * 240: i16                   [<INVALID>][<INVALID>]
 :00015 _%1 = %1 < %2                        [<INVALID>][<INVALID>]
 :00016 condnotbr _%1 =>:00023
+:00017 %1 = @output_pixels: <INVALID>[IvarId(0)]
 :00018 %2 = @palette: <INVALID>[IvarId(0)]
 :00019 %3 = 15: i32
 :00020 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00021 %1 = %1 << %2                        [<INVALID>][<INVALID>]
 :00022 br =>:00009
+:00023 %1 = nil
 :00024 loop_end
+:00025 ret %1
------------------------------------
------------------------------------
<monitor_a12_rising_edge> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:268
meta:on_stack:true kind:Ruby mode:method FuncId(686) regs:3 ISeq(RubyFuncInfo { id:686 name:monitor_a12_rising_edge method:(FuncId(686), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 @a12_monitor: <INVALID>[IvarId(0)] = %1
 :00002 ret %1
------------------------------------
------------------------------------
<update_vram_addr> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:275
meta:on_stack:true kind:Ruby mode:method FuncId(687) regs:4 ISeq(RubyFuncInfo { id:687 name:update_vram_addr method:(FuncId(687), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @vram_addr_inc: <INVALID>[IvarId(0)]
 :00002 _%1 = %1 == 32: i16                  [<INVALID>][<INVALID>]
 :00003 condnotbr _%1 =>:00045
+:00004 %1 = %0.active?()                    [<INVALID>]
 :00006 condnotbr %1 =>:00041
+:00007 %1 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00008 %1 = %1 & 28672: i16                 [<INVALID>][<INVALID>]
 :00009 _%1 = %1 == 28672: i16               [<INVALID>][<INVALID>]
 :00010 condnotbr _%1 =>:00037
+:00011 %1 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00012 %1 = %1 & 4095: i16                  [<INVALID>][<INVALID>]
 :00013 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %1
 :00014 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00015 %2 = %2 & 992: i16                   [<INVALID>][<INVALID>]
 :00016 %3 = 928: i32
 :00017 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00018 condnotbr _%3 =>:00024
+:00019 %3 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00020 %3 = %3 ^ 2048: i16                  [<INVALID>][<INVALID>]
 :00021 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %3
 :00022 %1 = %3
 :00023 br =>:00036
+:00024 %3 = 992: i32
 :00025 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00026 condnotbr _%3 =>:00032
+:00027 %3 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00028 %3 = %3 & 31744: i16                 [<INVALID>][<INVALID>]
 :00029 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %3
 :00030 %1 = %3
 :00031 br =>:00036
+:00032 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00033 %2 = %2 + 32: i16                    [<INVALID>][<INVALID>]
 :00034 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %2
 :00035 %1 = %2
+:00036 br =>:00040
+:00037 %1 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00038 %1 = %1 + 4096: i16                  [<INVALID>][<INVALID>]
 :00039 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %1
+:00040 br =>:00044
+:00041 %1 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00042 %1 = %1 + 32: i16                    [<INVALID>][<INVALID>]
 :00043 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %1
+:00044 br =>:00057
+:00045 %1 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00046 _%1 = %1 < 31: i16                   [<INVALID>][<INVALID>]
 :00047 condnotbr _%1 =>:00052
+:00048 %1 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00049 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00050 @scroll_addr_0_4: <INVALID>[IvarId(0)] = %1
 :00051 br =>:00057
+:00052 %1 = 0: i32
 :00053 @scroll_addr_0_4: <INVALID>[IvarId(0)] = %1
 :00054 %1 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00055 %1 = %1 + 32: i16                    [<INVALID>][<INVALID>]
 :00056 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %1
+:00057 %1 = %0.update_scroll_address_line() [<INVALID>]
 :00059 ret %1
------------------------------------
------------------------------------
<update_scroll_address_line> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:300
meta:on_stack:true kind:Ruby mode:method FuncId(688) regs:5 ISeq(RubyFuncInfo { id:688 name:update_scroll_address_line method:(FuncId(688), 0) args: 0 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00002 %3 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00003 %2 = %2 | %3                         [<INVALID>][<INVALID>]
 :00004 %2 = %2 & 4095: i16                  [<INVALID>][<INVALID>]
 :00005 %2 = %2 | 8192: i16                  [<INVALID>][<INVALID>]
 :00006 @name_io_addr: <INVALID>[IvarId(0)] = %2
 :00007 %2 = @a12_monitor: <INVALID>[IvarId(0)]
 :00008 condnotbr %2 =>:00024
+:00009 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00010 %2 = %2 & 12288: i16                 [<INVALID>][<INVALID>]
 :00011 %1 = %2 == 4096: i16                 [<INVALID>][<INVALID>]
 :00012 %2 = @a12_state: <INVALID>[IvarId(0)]
 :00013 %2 = !%2                             [<INVALID>]
 :00014 condnotbr %2 =>:00022
+:00015 condnotbr %1 =>:00022
+:00016 %2 = @a12_monitor: <INVALID>[IvarId(0)]
 :00017 %3 = @cpu: <INVALID>[IvarId(0)]
 :00018 %3 = %3.current_clock()              [<INVALID>]
 :00020 _ = %2.a12_signaled(%3;1)            [<INVALID>]
+:00022 @a12_state: <INVALID>[IvarId(0)] = %1
 :00023 ret %1
+:00024 %2 = nil
 :00025 ret %2
------------------------------------
------------------------------------
<active?> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:309
meta:on_stack:true kind:Ruby mode:method FuncId(689) regs:4 ISeq(RubyFuncInfo { id:689 name:active? method:(FuncId(689), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @scanline: <INVALID>[IvarId(0)]
 :00002 %3 = const[SCANLINE_VBLANK]          [<INVALID>]
 :00003 %1 = %2 != %3                        [<INVALID>][<INVALID>]
 :00004 condnotbr %1 =>:00006
+:00005 %1 = @any_show: <INVALID>[IvarId(0)]
+:00006 ret %1
------------------------------------
------------------------------------
<sync> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:313
meta:on_stack:true kind:Ruby mode:method FuncId(690) regs:4 ISeq(RubyFuncInfo { id:690 name:sync method:(FuncId(690), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @hclk_target: <INVALID>[IvarId(0)]
 :00002 _%2 = %2 < %1                        [<INVALID>][<INVALID>]
 :00003 condnotbr _%2 =>:00005
+:00004 br =>:00007
+:00005 %2 = nil
 :00006 ret %2
+:00007 %2 = const[RP2C02_CC]                [<INVALID>]
 :00008 %2 = %1 / %2                         [<INVALID>][<INVALID>]
 :00009 %3 = @vclk: <INVALID>[IvarId(0)]
 :00010 %2 = %2 - %3                         [<INVALID>][<INVALID>]
 :00011 @hclk_target: <INVALID>[IvarId(0)] = %2
 :00012 %2 = %0.run()                        [<INVALID>]
 :00014 ret %2
------------------------------------
------------------------------------
<make_sure_invariants> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:319
meta:on_stack:true kind:Ruby mode:method FuncId(691) regs:6 ISeq(RubyFuncInfo { id:691 name:make_sure_invariants method:(FuncId(691), 0) args: 0 non_temp: 0 temp: 5})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00002 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00003 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00004 %1 = %1 & 4095: i16                  [<INVALID>][<INVALID>]
 :00005 %1 = %1 | 8192: i16                  [<INVALID>][<INVALID>]
 :00006 @name_io_addr: <INVALID>[IvarId(0)] = %1
 :00007 %1 = const[TILE_LUT]                 [<INVALID>]
 :00008 %2 = @nmt_ref: <INVALID>[IvarId(0)]
 :00009 %3 = @io_addr: <INVALID>[IvarId(0)]
 :00010 %3 = %3 >> 10: i16                   [<INVALID>][<INVALID>]
 :00011 %3 = %3 & 3: i16                     [<INVALID>][<INVALID>]
 :00012 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00013 %3 = @io_addr: <INVALID>[IvarId(0)]
 :00014 %3 = %3 & 1023: i16                  [<INVALID>][<INVALID>]
 :00015 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00016 %3 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00017 %3 = %3 & 2: i16                     [<INVALID>][<INVALID>]
 :00018 %4 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00019 %5 = 6: i32
 :00020 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00021 %4 = %4 * 4: i16                     [<INVALID>][<INVALID>]
 :00022 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00023 %2 = %2 >> %3                        [<INVALID>][<INVALID>]
 :00024 %2 = %2 & 3: i16                     [<INVALID>][<INVALID>]
 :00025 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00026 @bg_pattern_lut_fetched: <INVALID>[IvarId(0)] = %1
 :00027 ret %1
------------------------------------
------------------------------------
<io_latch_mask> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:326
meta:on_stack:true kind:Ruby mode:method FuncId(692) regs:3 ISeq(RubyFuncInfo { id:692 name:io_latch_mask method:(FuncId(692), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %0.active?()                    [<INVALID>]
 :00003 condnotbr %2 =>:00006
+:00004 %2 = 255: i32
 :00005 ret %2
+:00006 %2 = @regs_oam: <INVALID>[IvarId(0)]
 :00007 %2 = %2 & 3: i16                     [<INVALID>][<INVALID>]
 :00008 _%2 = %2 == 2: i16                   [<INVALID>][<INVALID>]
 :00009 condnotbr _%2 =>:00012
+:00010 %2 = %1 & 227: i16                   [<INVALID>][<INVALID>]
 :00011 ret %2
+:00012 ret %1
------------------------------------
------------------------------------
<poke_2000> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:340
meta:on_stack:true kind:Ruby mode:method FuncId(693) regs:7 ISeq(RubyFuncInfo { id:693 name:poke_2000 method:(FuncId(693), 0) args: 2 non_temp: 4 temp: 2})
[]
+:00000 init_method reg:6 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 %5 = const[RP2C02_CC]                [<INVALID>]
 :00002 _ = %0.update(%5;1)                  [<INVALID>]
 :00004 %3 = @need_nmi: <INVALID>[IvarId(0)]
 :00005 %5 = @scroll_latch: <INVALID>[IvarId(0)]
 :00006 %5 = %5 & 29695: i16                 [<INVALID>][<INVALID>]
 :00007 %6 = %2 & 3: i16                     [<INVALID>][<INVALID>]
 :00008 %6 = %6 << 10: i16                   [<INVALID>][<INVALID>]
 :00009 %5 = %5 | %6                         [<INVALID>][<INVALID>]
 :00010 @scroll_latch: <INVALID>[IvarId(0)] = %5
 :00011 %5 = 2: i32
 :00012 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00013 _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00014 condnotbr _%5 =>:00017
+:00015 %5 = 32: i32
 :00016 br =>:00018
+:00017 %5 = 1: i32
+:00018 @vram_addr_inc: <INVALID>[IvarId(0)] = %5
 :00019 %5 = 3: i32
 :00020 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00021 _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00022 condnotbr _%5 =>:00025
+:00023 %5 = 4096: i32
 :00024 br =>:00026
+:00025 %5 = 0: i32
+:00026 @sp_base: <INVALID>[IvarId(0)] = %5
 :00027 %5 = 4: i32
 :00028 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00029 _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00030 condnotbr _%5 =>:00033
+:00031 %5 = 4096: i32
 :00032 br =>:00034
+:00033 %5 = 0: i32
+:00034 @bg_pattern_base: <INVALID>[IvarId(0)] = %5
 :00035 %5 = 5: i32
 :00036 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00037 _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00038 condnotbr _%5 =>:00041
+:00039 %5 = 16: i32
 :00040 br =>:00042
+:00041 %5 = 8: i32
+:00042 @sp_height: <INVALID>[IvarId(0)] = %5
 :00043 %5 = 7: i32
 :00044 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00045 %5 = %5 == 1: i16                    [<INVALID>][<INVALID>]
 :00046 @need_nmi: <INVALID>[IvarId(0)] = %5
 :00047 @io_latch: <INVALID>[IvarId(0)] = %2
 :00048 %5 = @sp_base: <INVALID>[IvarId(0)]
 :00049 _%5 = %5 != 0: i16                   [<INVALID>][<INVALID>]
 :00050 condbr _%5 =>:00054
+:00051 %5 = @sp_height: <INVALID>[IvarId(0)]
 :00052 _%5 = %5 == 16: i16                  [<INVALID>][<INVALID>]
 :00053 condnotbr _%5 =>:00056
+:00054 %5 = 8176: i32
 :00055 br =>:00057
+:00056 %5 = 4080: i32
+:00057 @pattern_end: <INVALID>[IvarId(0)] = %5
 :00058 %5 = @bg_pattern_base: <INVALID>[IvarId(0)]
 :00059 %6 = 12: i32
 :00060 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00061 %5 = %5 << 15: i16                   [<INVALID>][<INVALID>]
 :00062 @bg_pattern_base_15: <INVALID>[IvarId(0)] = %5
 :00063 %5 = @need_nmi: <INVALID>[IvarId(0)]
 :00064 condnotbr %5 =>:00083
+:00065 %5 = @vblank: <INVALID>[IvarId(0)]
 :00066 condnotbr %5 =>:00083
+:00067 %5 = !%3                             [<INVALID>]
 :00068 condnotbr %5 =>:00083
+:00069 %5 = @cpu: <INVALID>[IvarId(0)]
 :00070 %5 = %5.current_clock()              [<INVALID>]
 :00072 %6 = const[RP2C02_CC]                [<INVALID>]
 :00073 %4 = %5 + %6                         [<INVALID>][<INVALID>]
 :00074 %5 = const[RP2C02_HVINT]             [<INVALID>]
 :00075 _%5 = %4 < %5                        [<INVALID>][<INVALID>]
 :00076 condnotbr _%5 =>:00081
+:00077 %5 = @cpu: <INVALID>[IvarId(0)]
 :00078 %5 = %5.do_nmi(%4;1)                 [<INVALID>]
 :00080 ret %5
+:00081 %5 = nil
 :00082 ret %5
+:00083 %5 = nil
 :00084 ret %5
------------------------------------
------------------------------------
<poke_2001> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:362
meta:on_stack:true kind:Ruby mode:method FuncId(694) regs:12 ISeq(RubyFuncInfo { id:694 name:poke_2001 method:(FuncId(694), 0) args: 2 non_temp: 9 temp: 2})
[]
+:00000 init_method reg:11 arg:2 req:2 opt:0 rest:false block:None stack_offset:9
 :00001 %10 = const[RP2C02_CC]               [<INVALID>]
 :00002 _ = %0.update(%10;1)                 [<INVALID>]
 :00004 %10 = @bg_show: <INVALID>[IvarId(0)]
 :00005 %11 = @bg_show_edge: <INVALID>[IvarId(0)]
 :00006 %3 = %10
 :00007 %4 = %11
 :00008 %10 = @sp_show: <INVALID>[IvarId(0)]
 :00009 %11 = @sp_show_edge: <INVALID>[IvarId(0)]
 :00010 %5 = %10
 :00011 %6 = %11
 :00012 %7 = @any_show: <INVALID>[IvarId(0)]
 :00013 %10 = @coloring: <INVALID>[IvarId(0)]
 :00014 %11 = @emphasis: <INVALID>[IvarId(0)]
 :00015 %8 = %10
 :00016 %9 = %11
 :00017 %10 = 3: i32
 :00018 %10 = %2.[%10]                       [<INVALID>][<INVALID>]
 :00019 %10 = %10 == 1: i16                  [<INVALID>][<INVALID>]
 :00020 @bg_show: <INVALID>[IvarId(0)] = %10
 :00021 %11 = 1: i32
 :00022 %11 = %2.[%11]                       [<INVALID>][<INVALID>]
 :00023 %10 = %11 == 1: i16                  [<INVALID>][<INVALID>]
 :00024 condnotbr %10 =>:00026
+:00025 %10 = @bg_show: <INVALID>[IvarId(0)]
+:00026 @bg_show_edge: <INVALID>[IvarId(0)] = %10
 :00027 %10 = 4: i32
 :00028 %10 = %2.[%10]                       [<INVALID>][<INVALID>]
 :00029 %10 = %10 == 1: i16                  [<INVALID>][<INVALID>]
 :00030 @sp_show: <INVALID>[IvarId(0)] = %10
 :00031 %11 = 2: i32
 :00032 %11 = %2.[%11]                       [<INVALID>][<INVALID>]
 :00033 %10 = %11 == 1: i16                  [<INVALID>][<INVALID>]
 :00034 condnotbr %10 =>:00036
+:00035 %10 = @sp_show: <INVALID>[IvarId(0)]
+:00036 @sp_show_edge: <INVALID>[IvarId(0)] = %10
 :00037 %10 = @bg_show: <INVALID>[IvarId(0)]
 :00038 condbr %10 =>:00040
+:00039 %10 = @sp_show: <INVALID>[IvarId(0)]
+:00040 @any_show: <INVALID>[IvarId(0)] = %10
 :00041 %10 = 0: i32
 :00042 %10 = %2.[%10]                       [<INVALID>][<INVALID>]
 :00043 _%10 = %10 == 1: i16                 [<INVALID>][<INVALID>]
 :00044 condnotbr _%10 =>:00047
+:00045 %10 = 48: i32
 :00046 br =>:00048
+:00047 %10 = 63: i32
+:00048 @coloring: <INVALID>[IvarId(0)] = %10
 :00049 %10 = %2 & 224: i16                  [<INVALID>][<INVALID>]
 :00050 %10 = %10 << 1: i16                  [<INVALID>][<INVALID>]
 :00051 @emphasis: <INVALID>[IvarId(0)] = %10
 :00052 @io_latch: <INVALID>[IvarId(0)] = %2
 :00053 %10 = @bg_show: <INVALID>[IvarId(0)]
 :00054 _%10 = %3 != %10                     [<INVALID>][<INVALID>]
 :00055 condbr _%10 =>:00065
+:00056 %10 = @bg_show_edge: <INVALID>[IvarId(0)]
 :00057 _%10 = %4 != %10                     [<INVALID>][<INVALID>]
 :00058 condbr _%10 =>:00065
+:00059 %10 = @sp_show: <INVALID>[IvarId(0)]
 :00060 _%10 = %5 != %10                     [<INVALID>][<INVALID>]
 :00061 condbr _%10 =>:00065
+:00062 %10 = @sp_show_edge: <INVALID>[IvarId(0)]
 :00063 _%10 = %6 != %10                     [<INVALID>][<INVALID>]
 :00064 condnotbr _%10 =>:00082
+:00065 %10 = @hclk: <INVALID>[IvarId(0)]
 :00066 _%10 = %10 < 8: i16                  [<INVALID>][<INVALID>]
 :00067 condbr _%10 =>:00071
+:00068 %10 = @hclk: <INVALID>[IvarId(0)]
 :00069 _%10 = %10 >= 248: i16               [<INVALID>][<INVALID>]
 :00070 condnotbr _%10 =>:00074
+:00071 _ = %0.update_enabled_flags_edge()   [<INVALID>]
 :00073 br =>:00076
+:00074 _ = %0.update_enabled_flags()        [<INVALID>]
+:00076 condnotbr %7 =>:00082
+:00077 %10 = @any_show: <INVALID>[IvarId(0)]
 :00078 %10 = !%10                           [<INVALID>]
 :00079 condnotbr %10 =>:00082
+:00080 _ = %0.update_scroll_address_line()  [<INVALID>]
+:00082 %10 = @coloring: <INVALID>[IvarId(0)]
 :00083 _%10 = %8 != %10                     [<INVALID>][<INVALID>]
 :00084 condbr _%10 =>:00088
+:00085 %10 = @emphasis: <INVALID>[IvarId(0)]
 :00086 _%10 = %9 != %10                     [<INVALID>][<INVALID>]
 :00087 condnotbr _%10 =>:00091
+:00088 %10 = %0.update_output_color()       [<INVALID>]
 :00090 ret %10
+:00091 %10 = nil
 :00092 ret %10
------------------------------------
------------------------------------
<peek_2002> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:394
meta:on_stack:true kind:Ruby mode:method FuncId(695) regs:4 ISeq(RubyFuncInfo { id:695 name:peek_2002 method:(FuncId(695), 0) args: 1 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %3 = const[RP2C02_CC]                [<INVALID>]
 :00002 _ = %0.update(%3;1)                  [<INVALID>]
 :00004 %3 = @io_latch: <INVALID>[IvarId(0)]
 :00005 %2 = %3 & 31: i16                    [<INVALID>][<INVALID>]
 :00006 %3 = @vblank: <INVALID>[IvarId(0)]
 :00007 condnotbr %3 =>:00009
+:00008 %2 = %2 | 128: i16                   [<INVALID>][<INVALID>]
+:00009 %3 = @sp_zero_hit: <INVALID>[IvarId(0)]
 :00010 condnotbr %3 =>:00012
+:00011 %2 = %2 | 64: i16                    [<INVALID>][<INVALID>]
+:00012 %3 = @sp_overflow: <INVALID>[IvarId(0)]
 :00013 condnotbr %3 =>:00015
+:00014 %2 = %2 | 32: i16                    [<INVALID>][<INVALID>]
+:00015 @io_latch: <INVALID>[IvarId(0)] = %2
 :00016 %3 = literal[false]
 :00017 @scroll_toggle: <INVALID>[IvarId(0)] = %3
 :00018 %3 = literal[false]
 :00019 @vblank: <INVALID>[IvarId(0)] = %3
 :00020 @vblanking: <INVALID>[IvarId(0)] = %3
 :00021 %3 = @io_latch: <INVALID>[IvarId(0)]
 :00022 ret %3
------------------------------------
------------------------------------
<poke_2003> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:407
meta:on_stack:true kind:Ruby mode:method FuncId(696) regs:4 ISeq(RubyFuncInfo { id:696 name:poke_2003 method:(FuncId(696), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 %3 = const[RP2C02_CC]                [<INVALID>]
 :00002 _ = %0.update(%3;1)                  [<INVALID>]
 :00004 @io_latch: <INVALID>[IvarId(0)] = %2
 :00005 %3 = %2
 :00006 @regs_oam: <INVALID>[IvarId(0)] = %3
 :00007 ret %3
------------------------------------
------------------------------------
<poke_2004> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:413
meta:on_stack:true kind:Ruby mode:method FuncId(697) regs:6 ISeq(RubyFuncInfo { id:697 name:poke_2004 method:(FuncId(697), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = const[RP2C02_CC]                [<INVALID>]
 :00002 _ = %0.update(%3;1)                  [<INVALID>]
 :00004 %3 = @sp_ram: <INVALID>[IvarId(0)]
 :00005 %4 = @regs_oam: <INVALID>[IvarId(0)]
 :00006 %5 = %0.io_latch_mask(%2;1)          [<INVALID>]
 :00008 %3:.[%4:] = %5
 :00009 %3 = %5
 :00010 @io_latch: <INVALID>[IvarId(0)] = %3
 :00011 %3 = @regs_oam: <INVALID>[IvarId(0)]
 :00012 %3 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00013 %3 = %3 & 255: i16                   [<INVALID>][<INVALID>]
 :00014 @regs_oam: <INVALID>[IvarId(0)] = %3
 :00015 ret %3
------------------------------------
------------------------------------
<peek_2004> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:420
meta:on_stack:true kind:Ruby mode:method FuncId(698) regs:6 ISeq(RubyFuncInfo { id:698 name:peek_2004 method:(FuncId(698), 0) args: 1 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @any_show: <INVALID>[IvarId(0)]
 :00002 %2 = !%2                             [<INVALID>]
 :00003 condbr %2 =>:00022
+:00004 %2 = @cpu: <INVALID>[IvarId(0)]
 :00005 %2 = %2.current_clock()              [<INVALID>]
 :00007 %3 = @cpu: <INVALID>[IvarId(0)]
 :00008 %3 = %3.next_frame_clock()           [<INVALID>]
 :00010 %4 = 341: i32
 :00011 %4 = %4 * 241: i16                   [<INVALID>][<INVALID>]
 :00012 %5 = const[RP2C02_CC]                [<INVALID>]
 :00013 %4 = %4 * %5                         [<INVALID>][<INVALID>]
 :00014 %3 = %3 - %4                         [<INVALID>][<INVALID>]
 :00015 %2 = %2 - %3                         [<INVALID>][<INVALID>]
 :00016 %3 = 341: i32
 :00017 %3 = %3 * 240: i16                   [<INVALID>][<INVALID>]
 :00018 %4 = const[RP2C02_CC]                [<INVALID>]
 :00019 %3 = %3 * %4                         [<INVALID>][<INVALID>]
 :00020 _%2 = %2 >= %3                       [<INVALID>][<INVALID>]
 :00021 condnotbr _%2 =>:00027
+:00022 %2 = @sp_ram: <INVALID>[IvarId(0)]
 :00023 %3 = @regs_oam: <INVALID>[IvarId(0)]
 :00024 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00025 @io_latch: <INVALID>[IvarId(0)] = %2
 :00026 ret %2
+:00027 %2 = const[RP2C02_CC]                [<INVALID>]
 :00028 _ = %0.update(%2;1)                  [<INVALID>]
 :00030 %2 = @sp_latch: <INVALID>[IvarId(0)]
 :00031 @io_latch: <INVALID>[IvarId(0)] = %2
 :00032 ret %2
------------------------------------
------------------------------------
<poke_2005> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:430
meta:on_stack:true kind:Ruby mode:method FuncId(699) regs:7 ISeq(RubyFuncInfo { id:699 name:poke_2005 method:(FuncId(699), 0) args: 2 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = const[RP2C02_CC]                [<INVALID>]
 :00002 _ = %0.update(%4;1)                  [<INVALID>]
 :00004 @io_latch: <INVALID>[IvarId(0)] = %2
 :00005 %4 = @scroll_toggle: <INVALID>[IvarId(0)]
 :00006 %4 = !%4                             [<INVALID>]
 :00007 @scroll_toggle: <INVALID>[IvarId(0)] = %4
 :00008 %4 = @scroll_toggle: <INVALID>[IvarId(0)]
 :00009 condnotbr %4 =>:00024
+:00010 %4 = @scroll_latch: <INVALID>[IvarId(0)]
 :00011 %4 = %4 & 32736: i16                 [<INVALID>][<INVALID>]
 :00012 %5 = %2 >> 3: i16                    [<INVALID>][<INVALID>]
 :00013 %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00014 @scroll_latch: <INVALID>[IvarId(0)] = %4
 :00015 %4 = %2 & 7: i16                     [<INVALID>][<INVALID>]
 :00016 %3 = 8: i16 - %4                     [<INVALID>][<INVALID>]
 :00017 %4 = @bg_pixels: <INVALID>[IvarId(0)]
 :00018 %5 = @scroll_xfine: <INVALID>[IvarId(0)]
 :00019 %5 = %5 - %3                         [<INVALID>][<INVALID>]
 :00020 _ = %4.rotate!(%5;1)                 [<INVALID>]
 :00022 @scroll_xfine: <INVALID>[IvarId(0)] = %3
 :00023 ret %3
+:00024 %4 = @scroll_latch: <INVALID>[IvarId(0)]
 :00025 %4 = %4 & 3103: i16                  [<INVALID>][<INVALID>]
 :00026 %5 = %2 << 2: i16                    [<INVALID>][<INVALID>]
 :00027 %6 = %2 << 12: i16                   [<INVALID>][<INVALID>]
 :00028 %5 = %5 | %6                         [<INVALID>][<INVALID>]
 :00029 %5 = %5 & 29664: i16                 [<INVALID>][<INVALID>]
 :00030 %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00031 @scroll_latch: <INVALID>[IvarId(0)] = %4
 :00032 ret %4
------------------------------------
------------------------------------
<poke_2006> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:445
meta:on_stack:true kind:Ruby mode:method FuncId(700) regs:5 ISeq(RubyFuncInfo { id:700 name:poke_2006 method:(FuncId(700), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = const[RP2C02_CC]                [<INVALID>]
 :00002 _ = %0.update(%3;1)                  [<INVALID>]
 :00004 @io_latch: <INVALID>[IvarId(0)] = %2
 :00005 %3 = @scroll_toggle: <INVALID>[IvarId(0)]
 :00006 %3 = !%3                             [<INVALID>]
 :00007 @scroll_toggle: <INVALID>[IvarId(0)] = %3
 :00008 %3 = @scroll_toggle: <INVALID>[IvarId(0)]
 :00009 condnotbr %3 =>:00017
+:00010 %3 = @scroll_latch: <INVALID>[IvarId(0)]
 :00011 %3 = %3 & 255: i16                   [<INVALID>][<INVALID>]
 :00012 %4 = %2 & 63: i16                    [<INVALID>][<INVALID>]
 :00013 %4 = %4 << 8: i16                    [<INVALID>][<INVALID>]
 :00014 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00015 @scroll_latch: <INVALID>[IvarId(0)] = %3
 :00016 ret %3
+:00017 %3 = @scroll_latch: <INVALID>[IvarId(0)]
 :00018 %3 = %3 & 32512: i16                 [<INVALID>][<INVALID>]
 :00019 %3 = %3 | %2                         [<INVALID>][<INVALID>]
 :00020 @scroll_latch: <INVALID>[IvarId(0)] = %3
 :00021 %3 = @scroll_latch: <INVALID>[IvarId(0)]
 :00022 %3 = %3 & 31: i16                    [<INVALID>][<INVALID>]
 :00023 @scroll_addr_0_4: <INVALID>[IvarId(0)] = %3
 :00024 %3 = @scroll_latch: <INVALID>[IvarId(0)]
 :00025 %3 = %3 & 32736: i16                 [<INVALID>][<INVALID>]
 :00026 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %3
 :00027 %3 = %0.update_scroll_address_line() [<INVALID>]
 :00029 ret %3
------------------------------------
------------------------------------
<poke_2007> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:460
meta:on_stack:true kind:Ruby mode:method FuncId(701) regs:12 ISeq(RubyFuncInfo { id:701 name:poke_2007 method:(FuncId(701), 0) args: 2 non_temp: 8 temp: 3})
[]
+:00000 init_method reg:11 arg:2 req:2 opt:0 rest:false block:None stack_offset:9
 :00001 %9 = const[RP2C02_CC]                [<INVALID>]
 :00002 %9 = %9 * 4: i16                     [<INVALID>][<INVALID>]
 :00003 _ = %0.update(%9;1)                  [<INVALID>]
 :00005 %9 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00006 %10 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00007 %3 = %9 | %10                        [<INVALID>][<INVALID>]
 :00008 _ = %0.update_vram_addr()            [<INVALID>]
 :00010 @io_latch: <INVALID>[IvarId(0)] = %2
 :00011 %9 = %3 & 16128: i16                 [<INVALID>][<INVALID>]
 :00012 _%9 = %9 == 16128: i16               [<INVALID>][<INVALID>]
 :00013 condnotbr _%9 =>:00040
+:00014 %3 = %3 & 31: i16                    [<INVALID>][<INVALID>]
 :00015 %9 = @palette: <INVALID>[IvarId(0)]
 :00016 %10 = @coloring: <INVALID>[IvarId(0)]
 :00017 %10 = %2 & %10                       [<INVALID>][<INVALID>]
 :00018 %11 = @emphasis: <INVALID>[IvarId(0)]
 :00019 %10 = %10 | %11                      [<INVALID>][<INVALID>]
 :00020 %4 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00021 %9 = @palette_ram: <INVALID>[IvarId(0)]
 :00022 %9:.[%3:] = %2
 :00023 %9 = @output_color: <INVALID>[IvarId(0)]
 :00024 %9:.[%3:] = %4
 :00025 %9 = %3 & 3: i16                     [<INVALID>][<INVALID>]
 :00026 _%9 = %9 == 0: i16                   [<INVALID>][<INVALID>]
 :00027 condnotbr _%9 =>:00034
+:00028 %9 = @palette_ram: <INVALID>[IvarId(0)]
 :00029 %10 = %3 ^ 16: i16                   [<INVALID>][<INVALID>]
 :00030 %9:.[%10:] = %2
 :00031 %9 = @output_color: <INVALID>[IvarId(0)]
 :00032 %10 = %3 ^ 16: i16                   [<INVALID>][<INVALID>]
 :00033 %9:.[%10:] = %4
+:00034 %9 = @palette_ram: <INVALID>[IvarId(0)]
 :00035 %10 = 0: i32
 :00036 %9 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00037 %9 = %9 & 63: i16                    [<INVALID>][<INVALID>]
 :00038 @output_bg_color: <INVALID>[IvarId(0)] = %9
 :00039 ret %9
+:00040 %3 = %3 & 16383: i16                 [<INVALID>][<INVALID>]
 :00041 _%9 = %3 >= 8192: i16                [<INVALID>][<INVALID>]
 :00042 condnotbr _%9 =>:00071
+:00043 %9 = @nmt_ref: <INVALID>[IvarId(0)]
 :00044 %10 = %3 >> 10: i16                  [<INVALID>][<INVALID>]
 :00045 %10 = %10 & 3: i16                   [<INVALID>][<INVALID>]
 :00046 %5 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00047 %6 = %3 & 1023: i16                  [<INVALID>][<INVALID>]
 :00048 %9 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00049 _%9 = %9 != %2                       [<INVALID>][<INVALID>]
 :00050 condnotbr _%9 =>:00069
+:00051 %5:.[%6:] = %2
 :00052 %9 = @lut_update: <INVALID>[IvarId(0)]
 :00053 %9 = %9.[%5]                         [<INVALID>][<INVALID>]
 :00054 %9 = %9.[%6]                         [<INVALID>][<INVALID>]
 :00055 %10; 2 = expand(%9)
 :00056 %7 = %10
 :00057 %8 = %11
 :00058 condnotbr %7 =>:00062
+:00059 %9 = literal[49807361]
 :00060 _ = %7.each( &%9)                    [<INVALID>]
+:00062 condnotbr %8 =>:00067
+:00063 %9 = literal[49872897]
 :00064 %9 = %8.each( &%9)                   [<INVALID>]
 :00066 ret %9
+:00067 %9 = nil
 :00068 ret %9
+:00069 %9 = nil
 :00070 ret %9
+:00071 %9 = @chr_mem_writable: <INVALID>[IvarId(0)]
 :00072 condnotbr %9 =>:00076
+:00073 %9 = @chr_mem: <INVALID>[IvarId(0)]
 :00074 %9:.[%3:] = %2
 :00075 ret %2
+:00076 %9 = nil
 :00077 ret %9
------------------------------------
------------------------------------
<peek_2007> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:494
meta:on_stack:true kind:Ruby mode:method FuncId(702) regs:5 ISeq(RubyFuncInfo { id:702 name:peek_2007 method:(FuncId(702), 0) args: 1 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = const[RP2C02_CC]                [<INVALID>]
 :00002 _ = %0.update(%3;1)                  [<INVALID>]
 :00004 %3 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00005 %4 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00006 %3 = %3 | %4                         [<INVALID>][<INVALID>]
 :00007 %2 = %3 & 16383: i16                 [<INVALID>][<INVALID>]
 :00008 _ = %0.update_vram_addr()            [<INVALID>]
 :00010 %3 = %2 & 16128: i16                 [<INVALID>][<INVALID>]
 :00011 _%3 = %3 != 16128: i16               [<INVALID>][<INVALID>]
 :00012 condnotbr _%3 =>:00015
+:00013 %3 = @io_buffer: <INVALID>[IvarId(0)]
 :00014 br =>:00020
+:00015 %3 = @palette_ram: <INVALID>[IvarId(0)]
 :00016 %4 = %2 & 31: i16                    [<INVALID>][<INVALID>]
 :00017 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00018 %4 = @coloring: <INVALID>[IvarId(0)]
 :00019 %3 = %3 & %4                         [<INVALID>][<INVALID>]
+:00020 @io_latch: <INVALID>[IvarId(0)] = %3
 :00021 _%3 = %2 >= 8192: i16                [<INVALID>][<INVALID>]
 :00022 condnotbr _%3 =>:00030
+:00023 %3 = @nmt_ref: <INVALID>[IvarId(0)]
 :00024 %4 = %2 >> 10: i16                   [<INVALID>][<INVALID>]
 :00025 %4 = %4 & 3: i16                     [<INVALID>][<INVALID>]
 :00026 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00027 %4 = %2 & 1023: i16                  [<INVALID>][<INVALID>]
 :00028 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00029 br =>:00032
+:00030 %3 = @chr_mem: <INVALID>[IvarId(0)]
 :00031 %3 = %3.[%2]                         [<INVALID>][<INVALID>]
+:00032 @io_buffer: <INVALID>[IvarId(0)] = %3
 :00033 %3 = @io_latch: <INVALID>[IvarId(0)]
 :00034 ret %3
------------------------------------
------------------------------------
<poke_2xxx> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:503
meta:on_stack:true kind:Ruby mode:method FuncId(703) regs:4 ISeq(RubyFuncInfo { id:703 name:poke_2xxx method:(FuncId(703), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 @io_latch: <INVALID>[IvarId(0)] = %2
 :00002 ret %2
------------------------------------
------------------------------------
<peek_2xxx> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:507
meta:on_stack:true kind:Ruby mode:method FuncId(704) regs:3 ISeq(RubyFuncInfo { id:704 name:peek_2xxx method:(FuncId(704), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @io_latch: <INVALID>[IvarId(0)]
 :00002 ret %2
------------------------------------
------------------------------------
<peek_3000> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:511
meta:on_stack:true kind:Ruby mode:method FuncId(705) regs:3 ISeq(RubyFuncInfo { id:705 name:peek_3000 method:(FuncId(705), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[RP2C02_CC]                [<INVALID>]
 :00002 _ = %0.update(%2;1)                  [<INVALID>]
 :00004 %2 = @io_latch: <INVALID>[IvarId(0)]
 :00005 ret %2
------------------------------------
------------------------------------
<poke_4014> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:517
meta:on_stack:true kind:Ruby mode:method FuncId(706) regs:6 ISeq(RubyFuncInfo { id:706 name:poke_4014 method:(FuncId(706), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @cpu: <INVALID>[IvarId(0)]
 :00002 %3 = %3.odd_clock?()                 [<INVALID>]
 :00004 condnotbr %3 =>:00009
+:00005 %3 = @cpu: <INVALID>[IvarId(0)]
 :00006 %4 = const[CPU::CLK_1]               [<INVALID>]
 :00007 _ = %3.steal_clocks(%4;1)            [<INVALID>]
+:00009 %3 = const[RP2C02_CC]                [<INVALID>]
 :00010 _ = %0.update(%3;1)                  [<INVALID>]
 :00012 %3 = @cpu: <INVALID>[IvarId(0)]
 :00013 %4 = const[CPU::CLK_1]               [<INVALID>]
 :00014 _ = %3.steal_clocks(%4;1)            [<INVALID>]
 :00016 %2 = %2 << 8: i16                    [<INVALID>][<INVALID>]
 :00017 %3 = @regs_oam: <INVALID>[IvarId(0)]
 :00018 _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00019 condnotbr _%3 =>:00049
+:00020 _%3 = %2 < 8192: i16                 [<INVALID>][<INVALID>]
 :00021 condnotbr _%3 =>:00049
+:00022 %3 = @any_show: <INVALID>[IvarId(0)]
 :00023 %3 = !%3                             [<INVALID>]
 :00024 condbr %3 =>:00034
+:00025 %3 = @cpu: <INVALID>[IvarId(0)]
 :00026 %3 = %3.current_clock()              [<INVALID>]
 :00028 %4 = const[RP2C02_HVINT]             [<INVALID>]
 :00029 %5 = const[CPU::CLK_1]               [<INVALID>]
 :00030 %5 = %5 * 512: i16                   [<INVALID>][<INVALID>]
 :00031 %4 = %4 - %5                         [<INVALID>][<INVALID>]
 :00032 _%3 = %3 <= %4                       [<INVALID>][<INVALID>]
 :00033 condnotbr _%3 =>:00049
+:00034 %3 = @cpu: <INVALID>[IvarId(0)]
 :00035 %4 = const[CPU::CLK_1]               [<INVALID>]
 :00036 %4 = %4 * 512: i16                   [<INVALID>][<INVALID>]
 :00037 _ = %3.steal_clocks(%4;1)            [<INVALID>]
 :00039 %3 = @cpu: <INVALID>[IvarId(0)]
 :00040 %4 = %2 & 2047: i16                  [<INVALID>][<INVALID>]
 :00041 %5 = @sp_ram: <INVALID>[IvarId(0)]
 :00042 _ = %3.sprite_dma(%4;2)              [<INVALID>]
 :00044 %3 = @sp_ram: <INVALID>[IvarId(0)]
 :00045 %4 = 255: i32
 :00046 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00047 @io_latch: <INVALID>[IvarId(0)] = %3
 :00048 ret %3
+:00049 loop_start counter=0 jit-addr=0000000000000000
 :00050 %3 = @cpu: <INVALID>[IvarId(0)]
 :00051 %3 = %3.fetch(%2;1)                  [<INVALID>]
 :00053 @io_latch: <INVALID>[IvarId(0)] = %3
 :00054 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00055 %3 = @cpu: <INVALID>[IvarId(0)]
 :00056 %4 = const[CPU::CLK_1]               [<INVALID>]
 :00057 _ = %3.steal_clocks(%4;1)            [<INVALID>]
 :00059 %3 = const[RP2C02_CC]                [<INVALID>]
 :00060 _ = %0.update(%3;1)                  [<INVALID>]
 :00062 %3 = @cpu: <INVALID>[IvarId(0)]
 :00063 %4 = const[CPU::CLK_1]               [<INVALID>]
 :00064 _ = %3.steal_clocks(%4;1)            [<INVALID>]
 :00066 %3 = @io_latch: <INVALID>[IvarId(0)]
 :00067 %3 = %0.io_latch_mask(%3;1)          [<INVALID>]
 :00069 @io_latch: <INVALID>[IvarId(0)] = %3
 :00070 %3 = @sp_ram: <INVALID>[IvarId(0)]
 :00071 %4 = @regs_oam: <INVALID>[IvarId(0)]
 :00072 %5 = @io_latch: <INVALID>[IvarId(0)]
 :00073 %3:.[%4:] = %5
 :00074 %3 = @regs_oam: <INVALID>[IvarId(0)]
 :00075 %3 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00076 %3 = %3 & 255: i16                   [<INVALID>][<INVALID>]
 :00077 @regs_oam: <INVALID>[IvarId(0)] = %3
 :00078 %3 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00079 _%3 = %3 != 0: i16                   [<INVALID>][<INVALID>]
 :00080 condbr _%3 =>:00049
+:00081 %3 = nil
 :00082 loop_end
+:00083 ret %3
------------------------------------
------------------------------------
<peek_4014> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:540
meta:on_stack:true kind:Ruby mode:method FuncId(707) regs:3 ISeq(RubyFuncInfo { id:707 name:peek_4014 method:(FuncId(707), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = 64: i32
 :00002 ret %2
------------------------------------
------------------------------------
<open_pattern> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:550
meta:on_stack:true kind:Ruby mode:method FuncId(708) regs:3 ISeq(RubyFuncInfo { id:708 name:open_pattern method:(FuncId(708), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %2 =>:00004
+:00003 br =>:00006
+:00004 %2 = nil
 :00005 ret %2
+:00006 @io_addr: <INVALID>[IvarId(0)] = %1
 :00007 %2 = %0.update_address_line()        [<INVALID>]
 :00009 ret %2
------------------------------------
------------------------------------
<open_sprite> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:556
meta:on_stack:true kind:Ruby mode:method FuncId(709) regs:8 ISeq(RubyFuncInfo { id:709 name:open_sprite method:(FuncId(709), 0) args: 1 non_temp: 5 temp: 2})
[]
+:00000 init_method reg:7 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 %6 = @sp_buffer: <INVALID>[IvarId(0)]
 :00002 %7 = %1 + 2: i16                     [<INVALID>][<INVALID>]
 :00003 %6 = %6.[%7]                         [<INVALID>][<INVALID>]
 :00004 %7 = 7: i32
 :00005 %2 = %6.[%7]                         [<INVALID>][<INVALID>]
 :00006 %6 = @scanline: <INVALID>[IvarId(0)]
 :00007 %7 = @sp_buffer: <INVALID>[IvarId(0)]
 :00008 %7 = %7.[%1]                         [<INVALID>][<INVALID>]
 :00009 %6 = %6 - %7                         [<INVALID>][<INVALID>]
 :00010 %7 = %2 * 15: i16                    [<INVALID>][<INVALID>]
 :00011 %3 = %6 ^ %7                         [<INVALID>][<INVALID>]
 :00012 %6 = @sp_buffer: <INVALID>[IvarId(0)]
 :00013 %7 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00014 %4 = %6.[%7]                         [<INVALID>][<INVALID>]
 :00015 %6 = @sp_height: <INVALID>[IvarId(0)]
 :00016 _%6 = %6 == 16: i16                  [<INVALID>][<INVALID>]
 :00017 condnotbr _%6 =>:00028
+:00018 %6 = %4 & 1: i16                     [<INVALID>][<INVALID>]
 :00019 %6 = %6 << 12: i16                   [<INVALID>][<INVALID>]
 :00020 %7 = %4 & 254: i16                   [<INVALID>][<INVALID>]
 :00021 %7 = %7 << 4: i16                    [<INVALID>][<INVALID>]
 :00022 %6 = %6 | %7                         [<INVALID>][<INVALID>]
 :00023 %7 = 3: i32
 :00024 %7 = %3.[%7]                         [<INVALID>][<INVALID>]
 :00025 %7 = %7 * 16: i16                    [<INVALID>][<INVALID>]
 :00026 %6 = %6 | %7                         [<INVALID>][<INVALID>]
 :00027 br =>:00031
+:00028 %6 = @sp_base: <INVALID>[IvarId(0)]
 :00029 %7 = %4 << 4: i16                    [<INVALID>][<INVALID>]
 :00030 %6 = %6 | %7                         [<INVALID>][<INVALID>]
+:00031 %5 = %6
 :00032 %6 = %3 & 7: i16                     [<INVALID>][<INVALID>]
 :00033 %6 = %5 | %6                         [<INVALID>][<INVALID>]
 :00034 ret %6
------------------------------------
------------------------------------
<load_sprite> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:564
meta:on_stack:true kind:Ruby mode:method FuncId(710) regs:12 ISeq(RubyFuncInfo { id:710 name:load_sprite method:(FuncId(710), 0) args: 3 non_temp: 8 temp: 3})
[]
+:00000 init_method reg:11 arg:3 req:3 opt:0 rest:false block:None stack_offset:9
 :00001 %9 = @sp_buffer: <INVALID>[IvarId(0)]
 :00002 %10 = %3 + 2: i16                    [<INVALID>][<INVALID>]
 :00003 %4 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00004 %9 = const[SP_PIXEL_POSITIONS]       [<INVALID>]
 :00005 %10 = 6: i32
 :00006 %10 = %4.[%10]                       [<INVALID>][<INVALID>]
 :00007 %5 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00008 %9 = %1 >> 1: i16                    [<INVALID>][<INVALID>]
 :00009 %9 = %9 & 85: i16                    [<INVALID>][<INVALID>]
 :00010 %10 = %2 & 170: i16                  [<INVALID>][<INVALID>]
 :00011 %9 = %9 | %10                        [<INVALID>][<INVALID>]
 :00012 %10 = %1 & 85: i16                   [<INVALID>][<INVALID>]
 :00013 %11 = %2 << 1: i16                   [<INVALID>][<INVALID>]
 :00014 %11 = %11 & 170: i16                 [<INVALID>][<INVALID>]
 :00015 %10 = %10 | %11                      [<INVALID>][<INVALID>]
 :00016 %10 = %10 << 8: i16                  [<INVALID>][<INVALID>]
 :00017 %6 = %9 | %10                        [<INVALID>][<INVALID>]
 :00018 %9 = @sp_buffer: <INVALID>[IvarId(0)]
 :00019 %10 = %3 + 3: i16                    [<INVALID>][<INVALID>]
 :00020 %7 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00021 %9 = %4 & 3: i16                     [<INVALID>][<INVALID>]
 :00022 %9 = %9 << 2: i16                    [<INVALID>][<INVALID>]
 :00023 %8 = 16: i16 + %9                    [<INVALID>][<INVALID>]
 :00024 %9 = @sp_visible: <INVALID>[IvarId(0)]
 :00025 condbr %9 =>:00030
+:00026 %10 = @sp_map: <INVALID>[IvarId(0)]
 :00027 %9 = %10.clear()                     [<INVALID>]
 :00029 @sp_visible: <INVALID>[IvarId(0)] = %9
+:00030 %9 = 8: i32
 :00031 %10 = literal[49938433]
 :00032 _ = %9.times( &%10)                  [<INVALID>]
 :00034 %9 = @sp_enabled: <INVALID>[IvarId(0)]
 :00035 @sp_active: <INVALID>[IvarId(0)] = %9
 :00036 ret %9
------------------------------------
------------------------------------
<update_address_line> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:584
meta:on_stack:true kind:Ruby mode:method FuncId(711) regs:5 ISeq(RubyFuncInfo { id:711 name:update_address_line method:(FuncId(711), 0) args: 0 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @a12_monitor: <INVALID>[IvarId(0)]
 :00002 condnotbr %2 =>:00021
+:00003 %2 = @io_addr: <INVALID>[IvarId(0)]
 :00004 %3 = 12: i32
 :00005 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00006 %1 = %2 == 1: i16                    [<INVALID>][<INVALID>]
 :00007 %2 = @a12_state: <INVALID>[IvarId(0)]
 :00008 %2 = !%2                             [<INVALID>]
 :00009 condnotbr %2 =>:00019
+:00010 condnotbr %1 =>:00019
+:00011 %2 = @a12_monitor: <INVALID>[IvarId(0)]
 :00012 %3 = @vclk: <INVALID>[IvarId(0)]
 :00013 %4 = @hclk: <INVALID>[IvarId(0)]
 :00014 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00015 %4 = const[RP2C02_CC]                [<INVALID>]
 :00016 %3 = %3 * %4                         [<INVALID>][<INVALID>]
 :00017 _ = %2.a12_signaled(%3;1)            [<INVALID>]
+:00019 @a12_state: <INVALID>[IvarId(0)] = %1
 :00020 ret %1
+:00021 %2 = nil
 :00022 ret %2
------------------------------------
------------------------------------
<open_name> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:595
meta:on_stack:true kind:Ruby mode:method FuncId(712) regs:2 ISeq(RubyFuncInfo { id:712 name:open_name method:(FuncId(712), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @name_io_addr: <INVALID>[IvarId(0)]
 :00007 @io_addr: <INVALID>[IvarId(0)] = %1
 :00008 %1 = %0.update_address_line()        [<INVALID>]
 :00010 ret %1
------------------------------------
------------------------------------
<fetch_name> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:601
meta:on_stack:true kind:Ruby mode:method FuncId(713) regs:4 ISeq(RubyFuncInfo { id:713 name:fetch_name method:(FuncId(713), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @name_lut: <INVALID>[IvarId(0)]
 :00007 %2 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00008 %3 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00009 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00010 %3 = @bg_pattern_base_15: <INVALID>[IvarId(0)]
 :00011 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00012 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00013 @io_pattern: <INVALID>[IvarId(0)] = %1
 :00014 ret %1
------------------------------------
------------------------------------
<open_attr> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:606
meta:on_stack:true kind:Ruby mode:method FuncId(714) regs:4 ISeq(RubyFuncInfo { id:714 name:open_attr method:(FuncId(714), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @attr_lut: <INVALID>[IvarId(0)]
 :00007 %2 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00008 %3 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00009 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00010 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00011 %2; 2 = expand(%1)
 :00012 @io_addr: <INVALID>[IvarId(0)] = %2
 :00013 @bg_pattern_lut_fetched: <INVALID>[IvarId(0)] = %3
 :00014 %1 = %0.update_address_line()        [<INVALID>]
 :00016 ret %1
------------------------------------
------------------------------------
<fetch_attr> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:612
meta:on_stack:true kind:Ruby mode:method FuncId(715) regs:2 ISeq(RubyFuncInfo { id:715 name:fetch_attr method:(FuncId(715), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @bg_pattern_lut_fetched: <INVALID>[IvarId(0)]
 :00007 @bg_pattern_lut: <INVALID>[IvarId(0)] = %1
 :00008 ret %1
------------------------------------
------------------------------------
<fetch_bg_pattern_0> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:620
meta:on_stack:true kind:Ruby mode:method FuncId(716) regs:3 ISeq(RubyFuncInfo { id:716 name:fetch_bg_pattern_0 method:(FuncId(716), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @chr_mem: <INVALID>[IvarId(0)]
 :00007 %2 = @io_addr: <INVALID>[IvarId(0)]
 :00008 %2 = %2 & 8191: i16                  [<INVALID>][<INVALID>]
 :00009 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00010 @bg_pattern: <INVALID>[IvarId(0)] = %1
 :00011 ret %1
------------------------------------
------------------------------------
<fetch_bg_pattern_1> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:625
meta:on_stack:true kind:Ruby mode:method FuncId(717) regs:4 ISeq(RubyFuncInfo { id:717 name:fetch_bg_pattern_1 method:(FuncId(717), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @bg_pattern: <INVALID>[IvarId(0)]
 :00007 %2 = @chr_mem: <INVALID>[IvarId(0)]
 :00008 %3 = @io_addr: <INVALID>[IvarId(0)]
 :00009 %3 = %3 & 8191: i16                  [<INVALID>][<INVALID>]
 :00010 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00011 %2 = %2 * 256: i16                   [<INVALID>][<INVALID>]
 :00012 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00013 @bg_pattern: <INVALID>[IvarId(0)] = %1
 :00014 ret %1
------------------------------------
------------------------------------
<scroll_clock_x> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:630
meta:on_stack:true kind:Ruby mode:method FuncId(718) regs:2 ISeq(RubyFuncInfo { id:718 name:scroll_clock_x method:(FuncId(718), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00007 _%1 = %1 < 31: i16                   [<INVALID>][<INVALID>]
 :00008 condnotbr _%1 =>:00016
+:00009 %1 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00010 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00011 @scroll_addr_0_4: <INVALID>[IvarId(0)] = %1
 :00012 %1 = @name_io_addr: <INVALID>[IvarId(0)]
 :00013 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00014 @name_io_addr: <INVALID>[IvarId(0)] = %1
 :00015 ret %1
+:00016 %1 = 0: i32
 :00017 @scroll_addr_0_4: <INVALID>[IvarId(0)] = %1
 :00018 %1 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00019 %1 = %1 ^ 1024: i16                  [<INVALID>][<INVALID>]
 :00020 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %1
 :00021 %1 = @name_io_addr: <INVALID>[IvarId(0)]
 :00022 %1 = %1 ^ 1055: i16                  [<INVALID>][<INVALID>]
 :00023 @name_io_addr: <INVALID>[IvarId(0)] = %1
 :00024 ret %1
------------------------------------
------------------------------------
<scroll_reset_x> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:642
meta:on_stack:true kind:Ruby mode:method FuncId(719) regs:3 ISeq(RubyFuncInfo { id:719 name:scroll_reset_x method:(FuncId(719), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @scroll_latch: <INVALID>[IvarId(0)]
 :00007 %1 = %1 & 31: i16                    [<INVALID>][<INVALID>]
 :00008 @scroll_addr_0_4: <INVALID>[IvarId(0)] = %1
 :00009 %1 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00010 %1 = %1 & 31712: i16                 [<INVALID>][<INVALID>]
 :00011 %2 = @scroll_latch: <INVALID>[IvarId(0)]
 :00012 %2 = %2 & 1024: i16                  [<INVALID>][<INVALID>]
 :00013 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00014 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %1
 :00015 %1 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00016 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00017 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00018 %1 = %1 & 4095: i16                  [<INVALID>][<INVALID>]
 :00019 %1 = %1 | 8192: i16                  [<INVALID>][<INVALID>]
 :00020 @name_io_addr: <INVALID>[IvarId(0)] = %1
 :00021 ret %1
------------------------------------
------------------------------------
<scroll_clock_y> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:649
meta:on_stack:true kind:Ruby mode:method FuncId(720) regs:4 ISeq(RubyFuncInfo { id:720 name:scroll_clock_y method:(FuncId(720), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %2 =>:00004
+:00003 br =>:00006
+:00004 %2 = nil
 :00005 ret %2
+:00006 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00007 %2 = %2 & 28672: i16                 [<INVALID>][<INVALID>]
 :00008 _%2 = %2 != 28672: i16               [<INVALID>][<INVALID>]
 :00009 condnotbr _%2 =>:00014
+:00010 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00011 %2 = %2 + 4096: i16                  [<INVALID>][<INVALID>]
 :00012 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %2
 :00013 br =>:00035
+:00014 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00015 %1 = %2 & 992: i16                   [<INVALID>][<INVALID>]
 :00016 _%2 = %1 == 928: i16                 [<INVALID>][<INVALID>]
 :00017 condnotbr _%2 =>:00025
+:00018 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00019 %2 = %2 ^ 2048: i16                  [<INVALID>][<INVALID>]
 :00020 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %2
 :00021 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00022 %2 = %2 & 3072: i16                  [<INVALID>][<INVALID>]
 :00023 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %2
 :00024 br =>:00035
+:00025 _%2 = %1 == 992: i16                 [<INVALID>][<INVALID>]
 :00026 condnotbr _%2 =>:00031
+:00027 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00028 %2 = %2 & 3072: i16                  [<INVALID>][<INVALID>]
 :00029 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %2
 :00030 br =>:00035
+:00031 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00032 %2 = %2 & 4064: i16                  [<INVALID>][<INVALID>]
 :00033 %2 = %2 + 32: i16                    [<INVALID>][<INVALID>]
 :00034 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %2
+:00035 %2 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00036 %3 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00037 %2 = %2 | %3                         [<INVALID>][<INVALID>]
 :00038 %2 = %2 & 4095: i16                  [<INVALID>][<INVALID>]
 :00039 %2 = %2 | 8192: i16                  [<INVALID>][<INVALID>]
 :00040 @name_io_addr: <INVALID>[IvarId(0)] = %2
 :00041 ret %2
------------------------------------
------------------------------------
<preload_tiles> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:670
meta:on_stack:true kind:Ruby mode:method FuncId(721) regs:7 ISeq(RubyFuncInfo { id:721 name:preload_tiles method:(FuncId(721), 0) args: 0 non_temp: 0 temp: 6})
[]
+:00000 init_method reg:6 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @bg_pixels: <INVALID>[IvarId(0)]
 :00007 %2 = @scroll_xfine: <INVALID>[IvarId(0)]
 :00008 %3 = 8: i32
 :00009 %5 = @bg_pattern_lut: <INVALID>[IvarId(0)]
 :00010 %6 = @bg_pattern: <INVALID>[IvarId(0)]
 :00011 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00012 %4 = %5
 :00013 _ = %1.[]=(%2;3)                     [<INVALID>]
 :00015 ret %5
------------------------------------
------------------------------------
<load_tiles> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:675
meta:on_stack:true kind:Ruby mode:method FuncId(722) regs:7 ISeq(RubyFuncInfo { id:722 name:load_tiles method:(FuncId(722), 0) args: 0 non_temp: 0 temp: 6})
[]
+:00000 init_method reg:6 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @bg_pixels: <INVALID>[IvarId(0)]
 :00007 %2 = 8: i32
 :00008 _ = %1.rotate!(%2;1)                 [<INVALID>]
 :00010 %1 = @bg_pixels: <INVALID>[IvarId(0)]
 :00011 %2 = @scroll_xfine: <INVALID>[IvarId(0)]
 :00012 %3 = 8: i32
 :00013 %5 = @bg_pattern_lut: <INVALID>[IvarId(0)]
 :00014 %6 = @bg_pattern: <INVALID>[IvarId(0)]
 :00015 %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00016 %4 = %5
 :00017 _ = %1.[]=(%2;3)                     [<INVALID>]
 :00019 ret %5
------------------------------------
------------------------------------
<evaluate_sprites_even> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:681
meta:on_stack:true kind:Ruby mode:method FuncId(723) regs:3 ISeq(RubyFuncInfo { id:723 name:evaluate_sprites_even method:(FuncId(723), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @sp_ram: <INVALID>[IvarId(0)]
 :00007 %2 = @sp_addr: <INVALID>[IvarId(0)]
 :00008 %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00009 @sp_latch: <INVALID>[IvarId(0)] = %1
 :00010 ret %1
------------------------------------
------------------------------------
<evaluate_sprites_odd> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:686
meta:on_stack:true kind:Ruby mode:method FuncId(724) regs:4 ISeq(RubyFuncInfo { id:724 name:evaluate_sprites_odd method:(FuncId(724), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @sp_phase: <INVALID>[IvarId(0)]
 :00007 condnotbr %1 =>:00066
+:00008 %1 = @sp_phase: <INVALID>[IvarId(0)]
 :00009 _%1 = %1 == 9: i16                   [<INVALID>][<INVALID>]
 :00010 condnotbr _%1 =>:00014
+:00011 %1 = %0.evaluate_sprites_odd_phase_9() [<INVALID>]
 :00013 ret %1
+:00014 %2 = @sp_phase: <INVALID>[IvarId(0)]
 :00015 %3 = 2: i32
 :00016 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00017 condnotbr _%3 =>:00022
+:00018 %3 = %0.evaluate_sprites_odd_phase_2() [<INVALID>]
 :00020 %1 = %3
 :00021 ret %1
+:00022 %3 = 3: i32
 :00023 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00024 condnotbr _%3 =>:00029
+:00025 %3 = %0.evaluate_sprites_odd_phase_3() [<INVALID>]
 :00027 %1 = %3
 :00028 ret %1
+:00029 %3 = 4: i32
 :00030 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00031 condnotbr _%3 =>:00036
+:00032 %3 = %0.evaluate_sprites_odd_phase_4() [<INVALID>]
 :00034 %1 = %3
 :00035 ret %1
+:00036 %3 = 5: i32
 :00037 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00038 condnotbr _%3 =>:00043
+:00039 %3 = %0.evaluate_sprites_odd_phase_5() [<INVALID>]
 :00041 %1 = %3
 :00042 ret %1
+:00043 %3 = 6: i32
 :00044 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00045 condnotbr _%3 =>:00050
+:00046 %3 = %0.evaluate_sprites_odd_phase_6() [<INVALID>]
 :00048 %1 = %3
 :00049 ret %1
+:00050 %3 = 7: i32
 :00051 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00052 condnotbr _%3 =>:00057
+:00053 %3 = %0.evaluate_sprites_odd_phase_7() [<INVALID>]
 :00055 %1 = %3
 :00056 ret %1
+:00057 %3 = 8: i32
 :00058 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00059 condnotbr _%3 =>:00064
+:00060 %3 = %0.evaluate_sprites_odd_phase_8() [<INVALID>]
 :00062 %1 = %3
 :00063 ret %1
+:00064 %1 = nil
 :00065 ret %1
+:00066 %1 = %0.evaluate_sprites_odd_phase_1() [<INVALID>]
 :00068 ret %1
------------------------------------
------------------------------------
<evaluate_sprites_odd_phase_1> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:713
meta:on_stack:true kind:Ruby mode:method FuncId(725) regs:4 ISeq(RubyFuncInfo { id:725 name:evaluate_sprites_odd_phase_1 method:(FuncId(725), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @sp_index: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 @sp_index: <INVALID>[IvarId(0)] = %1
 :00004 %1 = @sp_latch: <INVALID>[IvarId(0)]
 :00005 %2 = @scanline: <INVALID>[IvarId(0)]
 :00006 _%1 = %1 <= %2                       [<INVALID>][<INVALID>]
 :00007 condnotbr _%1 =>:00024
+:00008 %1 = @scanline: <INVALID>[IvarId(0)]
 :00009 %2 = @sp_latch: <INVALID>[IvarId(0)]
 :00010 %3 = @sp_height: <INVALID>[IvarId(0)]
 :00011 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00012 _%1 = %1 < %2                        [<INVALID>][<INVALID>]
 :00013 condnotbr _%1 =>:00024
+:00014 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00015 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00016 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00017 %1 = 2: i32
 :00018 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00019 %1 = @sp_buffer: <INVALID>[IvarId(0)]
 :00020 %2 = @sp_buffered: <INVALID>[IvarId(0)]
 :00021 %3 = @sp_latch: <INVALID>[IvarId(0)]
 :00022 %1:.[%2:] = %3
 :00023 ret %3
+:00024 %1 = @sp_index: <INVALID>[IvarId(0)]
 :00025 _%1 = %1 == 64: i16                  [<INVALID>][<INVALID>]
 :00026 condnotbr _%1 =>:00032
+:00027 %1 = 0: i32
 :00028 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00029 %1 = 9: i32
 :00030 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00031 ret %1
+:00032 %1 = @sp_index: <INVALID>[IvarId(0)]
 :00033 _%1 = %1 == 2: i16                   [<INVALID>][<INVALID>]
 :00034 condnotbr _%1 =>:00038
+:00035 %1 = 8: i32
 :00036 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00037 ret %1
+:00038 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00039 %1 = %1 + 4: i16                     [<INVALID>][<INVALID>]
 :00040 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00041 ret %1
------------------------------------
------------------------------------
<evaluate_sprites_odd_phase_2> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:729
meta:on_stack:true kind:Ruby mode:method FuncId(726) regs:4 ISeq(RubyFuncInfo { id:726 name:evaluate_sprites_odd_phase_2 method:(FuncId(726), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00004 %1 = 3: i32
 :00005 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00006 %1 = @sp_buffer: <INVALID>[IvarId(0)]
 :00007 %2 = @sp_buffered: <INVALID>[IvarId(0)]
 :00008 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 %3 = @sp_latch: <INVALID>[IvarId(0)]
 :00010 %1:.[%2:] = %3
 :00011 ret %3
------------------------------------
------------------------------------
<evaluate_sprites_odd_phase_3> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:735
meta:on_stack:true kind:Ruby mode:method FuncId(727) regs:4 ISeq(RubyFuncInfo { id:727 name:evaluate_sprites_odd_phase_3 method:(FuncId(727), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00004 %1 = 4: i32
 :00005 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00006 %1 = @sp_buffer: <INVALID>[IvarId(0)]
 :00007 %2 = @sp_buffered: <INVALID>[IvarId(0)]
 :00008 %2 = %2 + 2: i16                     [<INVALID>][<INVALID>]
 :00009 %3 = @sp_latch: <INVALID>[IvarId(0)]
 :00010 %1:.[%2:] = %3
 :00011 ret %3
------------------------------------
------------------------------------
<evaluate_sprites_odd_phase_4> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:741
meta:on_stack:true kind:Ruby mode:method FuncId(728) regs:4 ISeq(RubyFuncInfo { id:728 name:evaluate_sprites_odd_phase_4 method:(FuncId(728), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @sp_buffer: <INVALID>[IvarId(0)]
 :00002 %2 = @sp_buffered: <INVALID>[IvarId(0)]
 :00003 %2 = %2 + 3: i16                     [<INVALID>][<INVALID>]
 :00004 %3 = @sp_latch: <INVALID>[IvarId(0)]
 :00005 %1:.[%2:] = %3
 :00006 %1 = @sp_buffered: <INVALID>[IvarId(0)]
 :00007 %1 = %1 + 4: i16                     [<INVALID>][<INVALID>]
 :00008 @sp_buffered: <INVALID>[IvarId(0)] = %1
 :00009 %1 = @sp_index: <INVALID>[IvarId(0)]
 :00010 _%1 = %1 != 64: i16                  [<INVALID>][<INVALID>]
 :00011 condnotbr _%1 =>:00035
+:00012 %1 = @sp_buffered: <INVALID>[IvarId(0)]
 :00013 %2 = @sp_limit: <INVALID>[IvarId(0)]
 :00014 _%1 = %1 != %2                       [<INVALID>][<INVALID>]
 :00015 condnotbr _%1 =>:00018
+:00016 %1 = nil
 :00017 br =>:00019
+:00018 %1 = 5: i32
+:00019 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00020 %1 = @sp_index: <INVALID>[IvarId(0)]
 :00021 _%1 = %1 != 2: i16                   [<INVALID>][<INVALID>]
 :00022 condnotbr _%1 =>:00032
+:00023 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00024 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00025 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00026 %1 = @sp_zero_in_line: <INVALID>[IvarId(0)]
 :00027 condbr %1 =>:00031
+:00028 %2 = @sp_index: <INVALID>[IvarId(0)]
 :00029 %1 = %2 == 1: i16                    [<INVALID>][<INVALID>]
 :00030 @sp_zero_in_line: <INVALID>[IvarId(0)] = %1
+:00031 ret %1
+:00032 %1 = 8: i32
 :00033 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00034 ret %1
+:00035 %1 = 0: i32
 :00036 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00037 %1 = 9: i32
 :00038 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00039 ret %1
------------------------------------
------------------------------------
<evaluate_sprites_odd_phase_5> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:758
meta:on_stack:true kind:Ruby mode:method FuncId(729) regs:4 ISeq(RubyFuncInfo { id:729 name:evaluate_sprites_odd_phase_5 method:(FuncId(729), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @sp_latch: <INVALID>[IvarId(0)]
 :00002 %2 = @scanline: <INVALID>[IvarId(0)]
 :00003 _%1 = %1 <= %2                       [<INVALID>][<INVALID>]
 :00004 condnotbr _%1 =>:00020
+:00005 %1 = @scanline: <INVALID>[IvarId(0)]
 :00006 %2 = @sp_latch: <INVALID>[IvarId(0)]
 :00007 %3 = @sp_height: <INVALID>[IvarId(0)]
 :00008 %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00009 _%1 = %1 < %2                        [<INVALID>][<INVALID>]
 :00010 condnotbr _%1 =>:00020
+:00011 %1 = 6: i32
 :00012 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00013 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00014 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00015 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00016 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00017 %1 = literal[true]
 :00018 @sp_overflow: <INVALID>[IvarId(0)] = %1
 :00019 ret %1
+:00020 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00021 %1 = %1 + 4: i16                     [<INVALID>][<INVALID>]
 :00022 %1 = %1 & 252: i16                   [<INVALID>][<INVALID>]
 :00023 %2 = @sp_addr: <INVALID>[IvarId(0)]
 :00024 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00025 %2 = %2 & 3: i16                     [<INVALID>][<INVALID>]
 :00026 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00027 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00028 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00029 _%1 = %1 <= 5: i16                   [<INVALID>][<INVALID>]
 :00030 condnotbr _%1 =>:00037
+:00031 %1 = 9: i32
 :00032 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00033 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00034 %1 = %1 & 252: i16                   [<INVALID>][<INVALID>]
 :00035 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00036 ret %1
+:00037 %1 = nil
 :00038 ret %1
------------------------------------
------------------------------------
<evaluate_sprites_odd_phase_6> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:772
meta:on_stack:true kind:Ruby mode:method FuncId(730) regs:2 ISeq(RubyFuncInfo { id:730 name:evaluate_sprites_odd_phase_6 method:(FuncId(730), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = 7: i32
 :00002 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00003 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00004 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00005 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00006 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<evaluate_sprites_odd_phase_7> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:777
meta:on_stack:true kind:Ruby mode:method FuncId(731) regs:2 ISeq(RubyFuncInfo { id:731 name:evaluate_sprites_odd_phase_7 method:(FuncId(731), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = 8: i32
 :00002 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00003 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00004 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00005 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00006 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<evaluate_sprites_odd_phase_8> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:782
meta:on_stack:true kind:Ruby mode:method FuncId(732) regs:2 ISeq(RubyFuncInfo { id:732 name:evaluate_sprites_odd_phase_8 method:(FuncId(732), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = 9: i32
 :00002 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00003 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00004 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00005 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00006 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00007 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00008 %1 = %1 & 3: i16                     [<INVALID>][<INVALID>]
 :00009 _%1 = %1 == 3: i16                   [<INVALID>][<INVALID>]
 :00010 condnotbr _%1 =>:00014
+:00011 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00012 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00013 @sp_addr: <INVALID>[IvarId(0)] = %1
+:00014 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00015 %1 = %1 & 252: i16                   [<INVALID>][<INVALID>]
 :00016 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00017 ret %1
------------------------------------
------------------------------------
<evaluate_sprites_odd_phase_9> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:789
meta:on_stack:true kind:Ruby mode:method FuncId(733) regs:2 ISeq(RubyFuncInfo { id:733 name:evaluate_sprites_odd_phase_9 method:(FuncId(733), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @sp_addr: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 4: i16                     [<INVALID>][<INVALID>]
 :00003 %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00005 ret %1
------------------------------------
------------------------------------
<load_extended_sprites> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:793
meta:on_stack:true kind:Ruby mode:method FuncId(734) regs:8 ISeq(RubyFuncInfo { id:734 name:load_extended_sprites method:(FuncId(734), 0) args: 0 non_temp: 4 temp: 3})
[]
+:00000 init_method reg:7 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %5 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %5 =>:00004
+:00003 br =>:00006
+:00004 %5 = nil
 :00005 ret %5
+:00006 %5 = 32: i32
 :00007 %6 = @sp_buffered: <INVALID>[IvarId(0)]
 :00008 _%5 = %5 < %6                        [<INVALID>][<INVALID>]
 :00009 condnotbr _%5 =>:00035
+:00010 %1 = 32: i32
+:00011 loop_start counter=0 jit-addr=0000000000000000
 :00012 %2 = %0.open_sprite(%1;1)            [<INVALID>]
 :00014 %5 = @chr_mem: <INVALID>[IvarId(0)]
 :00015 %3 = %5.[%2]                         [<INVALID>][<INVALID>]
 :00016 %5 = @chr_mem: <INVALID>[IvarId(0)]
 :00017 %6 = %2 | 8: i16                     [<INVALID>][<INVALID>]
 :00018 %4 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00019 _%5 = %3 != 0: i16                   [<INVALID>][<INVALID>]
 :00020 condbr _%5 =>:00023
+:00021 _%5 = %4 != 0: i16                   [<INVALID>][<INVALID>]
 :00022 condnotbr _%5 =>:00028
+:00023 %5 = %3
 :00024 %6 = %4
 :00025 %7 = %1
 :00026 _ = %0.load_sprite(%5;3)             [<INVALID>]
+:00028 %1 = %1 + 4: i16                     [<INVALID>][<INVALID>]
 :00029 %5 = @sp_buffered: <INVALID>[IvarId(0)]
 :00030 _%5 = %1 != %5                       [<INVALID>][<INVALID>]
 :00031 condbr _%5 =>:00011
+:00032 %5 = nil
 :00033 loop_end
+:00034 ret %5
+:00035 %5 = nil
 :00036 ret %5
------------------------------------
------------------------------------
<render_pixel> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:807
meta:on_stack:true kind:Ruby mode:method FuncId(735) regs:6 ISeq(RubyFuncInfo { id:735 name:render_pixel method:(FuncId(735), 0) args: 0 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %3 =>:00042
+:00003 %3 = @bg_enabled: <INVALID>[IvarId(0)]
 :00004 condnotbr %3 =>:00011
+:00005 %3 = @bg_pixels: <INVALID>[IvarId(0)]
 :00006 %4 = @hclk: <INVALID>[IvarId(0)]
 :00007 %5 = 8: i32
 :00008 %4 = %4 % %5                         [<INVALID>][<INVALID>]
 :00009 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00010 br =>:00012
+:00011 %3 = 0: i32
+:00012 %1 = %3
 :00013 %3 = @sp_active: <INVALID>[IvarId(0)]
 :00014 condnotbr %3 =>:00041
+:00015 %3 = @sp_map: <INVALID>[IvarId(0)]
 :00016 %4 = @hclk: <INVALID>[IvarId(0)]
 :00017 %2 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00018 %3 = %2
 :00019 condnotbr %3 =>:00041
+:00020 %3 = 4: i32
 :00021 %3 = %1 % %3                         [<INVALID>][<INVALID>]
 :00022 _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00023 condnotbr _%3 =>:00027
+:00024 %3 = 2: i32
 :00025 %1 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00026 br =>:00041
+:00027 %3 = 1: i32
 :00028 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00029 condnotbr %3 =>:00035
+:00030 %3 = @hclk: <INVALID>[IvarId(0)]
 :00031 _%3 = %3 != 255: i16                 [<INVALID>][<INVALID>]
 :00032 condnotbr _%3 =>:00035
+:00033 %3 = literal[true]
 :00034 @sp_zero_hit: <INVALID>[IvarId(0)] = %3
+:00035 %3 = 0: i32
 :00036 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00037 condnotbr %3 =>:00039
+:00038 br =>:00041
+:00039 %3 = 2: i32
 :00040 %1 = %2.[%3]                         [<INVALID>][<INVALID>]
+:00041 br =>:00056
+:00042 %3 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00043 %3 = %3 & 16128: i16                 [<INVALID>][<INVALID>]
 :00044 _%3 = %3 == 16128: i16               [<INVALID>][<INVALID>]
 :00045 condnotbr _%3 =>:00048
+:00046 %3 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00047 br =>:00049
+:00048 %3 = 0: i32
+:00049 %1 = %3
 :00050 %3 = @bg_pixels: <INVALID>[IvarId(0)]
 :00051 %4 = @hclk: <INVALID>[IvarId(0)]
 :00052 %5 = 8: i32
 :00053 %4 = %4 % %5                         [<INVALID>][<INVALID>]
 :00054 %5 = 0: i32
 :00055 %3:.[%4:] = %5
+:00056 %3 = @output_pixels: <INVALID>[IvarId(0)]
 :00057 %4 = @output_color: <INVALID>[IvarId(0)]
 :00058 %4 = %4.[%1]                         [<INVALID>][<INVALID>]
 :00059 %3 = %3 << %4                        [<INVALID>][<INVALID>]
 :00060 ret %3
------------------------------------
------------------------------------
<batch_render_eight_pixels> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:826
meta:on_stack:true kind:Ruby mode:method FuncId(736) regs:2 ISeq(RubyFuncInfo { id:736 name:batch_render_eight_pixels method:(FuncId(736), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<boot> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:829
meta:on_stack:true kind:Ruby mode:method FuncId(737) regs:2 ISeq(RubyFuncInfo { id:737 name:boot method:(FuncId(737), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[true]
 :00002 @vblank: <INVALID>[IvarId(0)] = %1
 :00003 %1 = const[HCLOCK_DUMMY]             [<INVALID>]
 :00004 @hclk: <INVALID>[IvarId(0)] = %1
 :00005 %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00006 @hclk_target: <INVALID>[IvarId(0)] = %1
 :00007 ret %1
------------------------------------
------------------------------------
<vblank_0> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:835
meta:on_stack:true kind:Ruby mode:method FuncId(738) regs:2 ISeq(RubyFuncInfo { id:738 name:vblank_0 method:(FuncId(738), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[true]
 :00002 @vblanking: <INVALID>[IvarId(0)] = %1
 :00003 %1 = const[HCLOCK_VBLANK_1]          [<INVALID>]
 :00004 @hclk: <INVALID>[IvarId(0)] = %1
 :00005 ret %1
------------------------------------
------------------------------------
<vblank_1> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:840
meta:on_stack:true kind:Ruby mode:method FuncId(739) regs:2 ISeq(RubyFuncInfo { id:739 name:vblank_1 method:(FuncId(739), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @vblank: <INVALID>[IvarId(0)]
 :00002 condbr %1 =>:00005
+:00003 %1 = @vblanking: <INVALID>[IvarId(0)]
 :00004 @vblank: <INVALID>[IvarId(0)] = %1
+:00005 %1 = literal[false]
 :00006 @vblanking: <INVALID>[IvarId(0)] = %1
 :00007 %1 = literal[false]
 :00008 @sp_visible: <INVALID>[IvarId(0)] = %1
 :00009 %1 = literal[false]
 :00010 @sp_active: <INVALID>[IvarId(0)] = %1
 :00011 %1 = const[HCLOCK_VBLANK_2]          [<INVALID>]
 :00012 @hclk: <INVALID>[IvarId(0)] = %1
 :00013 ret %1
------------------------------------
------------------------------------
<vblank_2> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:848
meta:on_stack:true kind:Ruby mode:method FuncId(740) regs:4 ISeq(RubyFuncInfo { id:740 name:vblank_2 method:(FuncId(740), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @vblank: <INVALID>[IvarId(0)]
 :00002 condbr %1 =>:00005
+:00003 %1 = @vblanking: <INVALID>[IvarId(0)]
 :00004 @vblank: <INVALID>[IvarId(0)] = %1
+:00005 %1 = literal[false]
 :00006 @vblanking: <INVALID>[IvarId(0)] = %1
 :00007 %1 = const[HCLOCK_DUMMY]             [<INVALID>]
 :00008 @hclk: <INVALID>[IvarId(0)] = %1
 :00009 %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00010 @hclk_target: <INVALID>[IvarId(0)] = %1
 :00011 %1 = @need_nmi: <INVALID>[IvarId(0)]
 :00012 condnotbr %1 =>:00022
+:00013 %1 = @vblank: <INVALID>[IvarId(0)]
 :00014 condnotbr %1 =>:00022
+:00015 %1 = @cpu: <INVALID>[IvarId(0)]
 :00016 %2 = @cpu: <INVALID>[IvarId(0)]
 :00017 %2 = %2.next_frame_clock()           [<INVALID>]
 :00019 %1 = %1.do_nmi(%2;1)                 [<INVALID>]
 :00021 ret %1
+:00022 %1 = nil
 :00023 ret %1
------------------------------------
------------------------------------
<update_enabled_flags> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:856
meta:on_stack:true kind:Ruby mode:method FuncId(741) regs:2 ISeq(RubyFuncInfo { id:741 name:update_enabled_flags method:(FuncId(741), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00004
+:00003 br =>:00006
+:00004 %1 = nil
 :00005 ret %1
+:00006 %1 = @bg_show: <INVALID>[IvarId(0)]
 :00007 @bg_enabled: <INVALID>[IvarId(0)] = %1
 :00008 %1 = @sp_show: <INVALID>[IvarId(0)]
 :00009 @sp_enabled: <INVALID>[IvarId(0)] = %1
 :00010 %1 = @sp_enabled: <INVALID>[IvarId(0)]
 :00011 condnotbr %1 =>:00013
+:00012 %1 = @sp_visible: <INVALID>[IvarId(0)]
+:00013 @sp_active: <INVALID>[IvarId(0)] = %1
 :00014 ret %1
------------------------------------
------------------------------------
<update_enabled_flags_edge> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:863
meta:on_stack:true kind:Ruby mode:method FuncId(742) regs:2 ISeq(RubyFuncInfo { id:742 name:update_enabled_flags_edge method:(FuncId(742), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @bg_show_edge: <INVALID>[IvarId(0)]
 :00002 @bg_enabled: <INVALID>[IvarId(0)] = %1
 :00003 %1 = @sp_show_edge: <INVALID>[IvarId(0)]
 :00004 @sp_enabled: <INVALID>[IvarId(0)] = %1
 :00005 %1 = @sp_enabled: <INVALID>[IvarId(0)]
 :00006 condnotbr %1 =>:00008
+:00007 %1 = @sp_visible: <INVALID>[IvarId(0)]
+:00008 @sp_active: <INVALID>[IvarId(0)] = %1
 :00009 ret %1
------------------------------------
------------------------------------
<debug_logging> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:872
meta:on_stack:true kind:Ruby mode:method FuncId(743) regs:11 ISeq(RubyFuncInfo { id:743 name:debug_logging method:(FuncId(743), 0) args: 3 non_temp: 3 temp: 7})
[]
+:00000 init_method reg:10 arg:3 req:3 opt:0 rest:false block:None stack_offset:9
 :00001 %4 = const[FOREVER_CLOCK]            [<INVALID>]
 :00002 _%4 = %2 == %4                       [<INVALID>][<INVALID>]
 :00003 condnotbr _%4 =>:00005
+:00004 %2 = literal["forever"]
+:00005 %4 = const[FOREVER_CLOCK]            [<INVALID>]
 :00006 _%4 = %3 == %4                       [<INVALID>][<INVALID>]
 :00007 condnotbr _%4 =>:00009
+:00008 %3 = literal["forever"]
+:00009 %4 = @conf: <INVALID>[IvarId(0)]
 :00010 %5 = literal["ppu: scanline "]
 :00011 %6 = %1
 :00012 %7 = literal[", hclk "]
 :00013 %8 = %2
 :00014 %9 = literal["->"]
 :00015 %10 = %3
 :00016 %5 = concat(%5; 6)
 :00017 %4 = %4.debug(%5;1)                  [<INVALID>]
 :00019 ret %4
------------------------------------
------------------------------------
<run> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:879
meta:on_stack:true kind:Ruby mode:method FuncId(744) regs:5 ISeq(RubyFuncInfo { id:744 name:run method:(FuncId(744), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = @fiber: <INVALID>[IvarId(0)]
 :00002 condbr %1 =>:00008
+:00003 %2 = const[Fiber]                    [<INVALID>]
 :00004 %3 = literal[50003969]
 :00005 %1 = %2.new( &%3)                    [<INVALID>]
 :00007 @fiber: <INVALID>[IvarId(0)] = %1
+:00008 %1 = @conf: <INVALID>[IvarId(0)]
 :00009 %1 = %1.loglevel()                   [<INVALID>]
 :00011 _%1 = %1 >= 3: i16                   [<INVALID>][<INVALID>]
 :00012 condnotbr _%1 =>:00018
+:00013 %1 = @scanline: <INVALID>[IvarId(0)]
 :00014 %2 = @hclk: <INVALID>[IvarId(0)]
 :00015 %3 = @hclk_target: <INVALID>[IvarId(0)]
 :00016 _ = %0.debug_logging(%1;3)           [<INVALID>]
+:00018 _ = %0.make_sure_invariants()        [<INVALID>]
 :00020 %1 = @fiber: <INVALID>[IvarId(0)]
 :00021 %1 = %1.resume()                     [<INVALID>]
 :00023 condnotbr %1 =>:00026
+:00024 %1 = nil
 :00025 ret %1
+:00026 %1 = @vclk: <INVALID>[IvarId(0)]
 :00027 %2 = @hclk: <INVALID>[IvarId(0)]
 :00028 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00029 %2 = const[RP2C02_CC]                [<INVALID>]
 :00030 %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00031 @hclk_target: <INVALID>[IvarId(0)] = %1
 :00032 ret %1
------------------------------------
------------------------------------
<dispose> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:892
meta:on_stack:true kind:Ruby mode:method FuncId(745) regs:3 ISeq(RubyFuncInfo { id:745 name:dispose method:(FuncId(745), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal[false]
 :00002 @run: <INVALID>[IvarId(0)] = %1
 :00003 %1 = @fiber: <INVALID>[IvarId(0)]
 :00004 %1 = %1.nil?()                       [<INVALID>]
 :00006 condbr %1 =>:00013
+:00007 %1 = @fiber: <INVALID>[IvarId(0)]
 :00008 %1 = %1.resume()                     [<INVALID>]
 :00010 %2 = :done
 :00011 _%1 = %1 == %2                       [<INVALID>][<INVALID>]
 :00012 condnotbr _%1 =>:00014
+:00013 br =>:00017
+:00014 %1 = literal["PPU Fiber should have finished"]
 :00015 _ = %0.raise(%1;1)                   [<INVALID>]
+:00017 %1 = nil
 :00018 @fiber: <INVALID>[IvarId(0)] = %1
 :00019 ret %1
------------------------------------
------------------------------------
<wait_frame> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:898
meta:on_stack:true kind:Ruby mode:method FuncId(746) regs:3 ISeq(RubyFuncInfo { id:746 name:wait_frame method:(FuncId(746), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = const[Fiber]                    [<INVALID>]
 :00002 %2 = literal[true]
 :00003 %1 = %1.yield(%2;1)                  [<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<wait_zero_clocks> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:902
meta:on_stack:true kind:Ruby mode:method FuncId(747) regs:3 ISeq(RubyFuncInfo { id:747 name:wait_zero_clocks method:(FuncId(747), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @hclk_target: <INVALID>[IvarId(0)]
 :00002 %2 = @hclk: <INVALID>[IvarId(0)]
 :00003 _%1 = %1 <= %2                       [<INVALID>][<INVALID>]
 :00004 condnotbr _%1 =>:00009
+:00005 %1 = const[Fiber]                    [<INVALID>]
 :00006 %1 = %1.yield()                      [<INVALID>]
 :00008 ret %1
+:00009 %1 = nil
 :00010 ret %1
------------------------------------
------------------------------------
<wait_one_clock> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:906
meta:on_stack:true kind:Ruby mode:method FuncId(748) regs:3 ISeq(RubyFuncInfo { id:748 name:wait_one_clock method:(FuncId(748), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @hclk: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 @hclk: <INVALID>[IvarId(0)] = %1
 :00004 %1 = @hclk_target: <INVALID>[IvarId(0)]
 :00005 %2 = @hclk: <INVALID>[IvarId(0)]
 :00006 _%1 = %1 <= %2                       [<INVALID>][<INVALID>]
 :00007 condnotbr _%1 =>:00012
+:00008 %1 = const[Fiber]                    [<INVALID>]
 :00009 %1 = %1.yield()                      [<INVALID>]
 :00011 ret %1
+:00012 %1 = nil
 :00013 ret %1
------------------------------------
------------------------------------
<wait_two_clocks> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:911
meta:on_stack:true kind:Ruby mode:method FuncId(749) regs:3 ISeq(RubyFuncInfo { id:749 name:wait_two_clocks method:(FuncId(749), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @hclk: <INVALID>[IvarId(0)]
 :00002 %1 = %1 + 2: i16                     [<INVALID>][<INVALID>]
 :00003 @hclk: <INVALID>[IvarId(0)] = %1
 :00004 %1 = @hclk_target: <INVALID>[IvarId(0)]
 :00005 %2 = @hclk: <INVALID>[IvarId(0)]
 :00006 _%1 = %1 <= %2                       [<INVALID>][<INVALID>]
 :00007 condnotbr _%1 =>:00012
+:00008 %1 = const[Fiber]                    [<INVALID>]
 :00009 %1 = %1.yield()                      [<INVALID>]
 :00011 ret %1
+:00012 %1 = nil
 :00013 ret %1
------------------------------------
------------------------------------
<main_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:944
meta:on_stack:true kind:Ruby mode:method FuncId(750) regs:6 ISeq(RubyFuncInfo { id:750 name:main_loop method:(FuncId(750), 0) args: 0 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 _ = %0.boot()                        [<INVALID>]
 :00003 _ = %0.wait_frame()                  [<INVALID>]
+:00005 loop_start counter=0 jit-addr=0000000000000000
 :00006 %2 = @run: <INVALID>[IvarId(0)]
 :00007 condnotbr %2 =>:00208
+:00008 %2 = 341: i32
 :00009 %3 = literal[50069505]
 :00010 %4 = 589: i32
 :00011 %5 = 8: i32
 :00012 _ = %2.step(%4;2 &%3)                [<INVALID>]
 :00014 %2 = 597: i32
 :00015 %3 = literal[50135041]
 :00016 %4 = 653: i32
 :00017 %5 = 8: i32
 :00018 _ = %2.step(%4;2 &%3)                [<INVALID>]
+:00020 loop_start counter=0 jit-addr=0000000000000000
 :00021 %2 = literal[true]
 :00022 condnotbr %2 =>:00194
+:00023 _ = %0.load_extended_sprites()       [<INVALID>]
 :00025 _ = %0.open_name()                   [<INVALID>]
 :00027 %2 = @any_show: <INVALID>[IvarId(0)]
 :00028 condnotbr %2 =>:00033
+:00029 %2 = @sp_ram: <INVALID>[IvarId(0)]
 :00030 %3 = 0: i32
 :00031 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00032 @sp_latch: <INVALID>[IvarId(0)] = %2
+:00033 %2 = 0: i32
 :00034 @sp_buffered: <INVALID>[IvarId(0)] = %2
 :00035 %2 = literal[false]
 :00036 @sp_zero_in_line: <INVALID>[IvarId(0)] = %2
 :00037 %2 = 0: i32
 :00038 @sp_index: <INVALID>[IvarId(0)] = %2
 :00039 %2 = 0: i32
 :00040 @sp_phase: <INVALID>[IvarId(0)] = %2
 :00041 _ = %0.wait_one_clock()              [<INVALID>]
 :00043 _ = %0.fetch_name()                  [<INVALID>]
 :00045 _ = %0.wait_one_clock()              [<INVALID>]
 :00047 _ = %0.open_attr()                   [<INVALID>]
 :00049 _ = %0.wait_one_clock()              [<INVALID>]
 :00051 _ = %0.fetch_attr()                  [<INVALID>]
 :00053 _ = %0.scroll_clock_x()              [<INVALID>]
 :00055 _ = %0.wait_one_clock()              [<INVALID>]
 :00057 %2 = @io_pattern: <INVALID>[IvarId(0)]
 :00058 _ = %0.open_pattern(%2;1)            [<INVALID>]
 :00060 _ = %0.wait_one_clock()              [<INVALID>]
 :00062 _ = %0.fetch_bg_pattern_0()          [<INVALID>]
 :00064 _ = %0.wait_one_clock()              [<INVALID>]
 :00066 %2 = @io_pattern: <INVALID>[IvarId(0)]
 :00067 %2 = %2 | 8: i16                     [<INVALID>][<INVALID>]
 :00068 _ = %0.open_pattern(%2;1)            [<INVALID>]
 :00070 _ = %0.wait_one_clock()              [<INVALID>]
 :00072 _ = %0.fetch_bg_pattern_1()          [<INVALID>]
 :00074 _ = %0.wait_one_clock()              [<INVALID>]
 :00076 _ = %0.preload_tiles()               [<INVALID>]
 :00078 _ = %0.open_name()                   [<INVALID>]
 :00080 _ = %0.wait_one_clock()              [<INVALID>]
 :00082 _ = %0.fetch_name()                  [<INVALID>]
 :00084 _ = %0.wait_one_clock()              [<INVALID>]
 :00086 _ = %0.open_attr()                   [<INVALID>]
 :00088 _ = %0.wait_one_clock()              [<INVALID>]
 :00090 _ = %0.fetch_attr()                  [<INVALID>]
 :00092 _ = %0.scroll_clock_x()              [<INVALID>]
 :00094 _ = %0.wait_one_clock()              [<INVALID>]
 :00096 %2 = @io_pattern: <INVALID>[IvarId(0)]
 :00097 _ = %0.open_pattern(%2;1)            [<INVALID>]
 :00099 _ = %0.wait_one_clock()              [<INVALID>]
 :00101 _ = %0.fetch_bg_pattern_0()          [<INVALID>]
 :00103 _ = %0.wait_one_clock()              [<INVALID>]
 :00105 %2 = @io_pattern: <INVALID>[IvarId(0)]
 :00106 %2 = %2 | 8: i16                     [<INVALID>][<INVALID>]
 :00107 _ = %0.open_pattern(%2;1)            [<INVALID>]
 :00109 _ = %0.wait_one_clock()              [<INVALID>]
 :00111 _ = %0.fetch_bg_pattern_1()          [<INVALID>]
 :00113 _ = %0.wait_one_clock()              [<INVALID>]
 :00115 _ = %0.open_name()                   [<INVALID>]
 :00117 _ = %0.wait_one_clock()              [<INVALID>]
 :00119 %2 = @any_show: <INVALID>[IvarId(0)]
 :00120 condnotbr %2 =>:00133
+:00121 _ = %0.update_enabled_flags_edge()   [<INVALID>]
 :00123 %2 = @scanline: <INVALID>[IvarId(0)]
 :00124 %3 = const[SCANLINE_HDUMMY]          [<INVALID>]
 :00125 _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00126 condnotbr _%2 =>:00133
+:00127 %2 = @odd_frame: <INVALID>[IvarId(0)]
 :00128 condnotbr %2 =>:00133
+:00129 %2 = @cpu: <INVALID>[IvarId(0)]
 :00130 %3 = const[RP2C02_HVSYNC_1]          [<INVALID>]
 :00131 _ = %2.next_frame_clock=(%3;1)       [<INVALID>]
+:00133 _ = %0.wait_one_clock()              [<INVALID>]
 :00135 _ = %0.open_name()                   [<INVALID>]
 :00137 %2 = @scanline: <INVALID>[IvarId(0)]
 :00138 %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00139 @scanline: <INVALID>[IvarId(0)] = %2
 :00140 %2 = @scanline: <INVALID>[IvarId(0)]
 :00141 %3 = const[SCANLINE_VBLANK]          [<INVALID>]
 :00142 _%2 = %2 != %3                       [<INVALID>][<INVALID>]
 :00143 condnotbr _%2 =>:00174
+:00144 %2 = @any_show: <INVALID>[IvarId(0)]
 :00145 condnotbr %2 =>:00157
+:00146 %2 = @scanline: <INVALID>[IvarId(0)]
 :00147 _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00148 condbr _%2 =>:00152
+:00149 %2 = @odd_frame: <INVALID>[IvarId(0)]
 :00150 %2 = !%2                             [<INVALID>]
 :00151 condnotbr %2 =>:00154
+:00152 %2 = 341: i32
 :00153 br =>:00155
+:00154 %2 = 340: i32
+:00155 %1 = %2
 :00156 br =>:00160
+:00157 _ = %0.update_enabled_flags_edge()   [<INVALID>]
 :00159 %1 = 341: i32
+:00160 %2 = 0: i32
 :00161 @hclk: <INVALID>[IvarId(0)] = %2
 :00162 %2 = @vclk: <INVALID>[IvarId(0)]
 :00163 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00164 @vclk: <INVALID>[IvarId(0)] = %2
 :00165 %2 = @hclk_target: <INVALID>[IvarId(0)]
 :00166 _%2 = %2 <= %1                       [<INVALID>][<INVALID>]
 :00167 condnotbr _%2 =>:00170
+:00168 %2 = 0: i32
 :00169 br =>:00172
+:00170 %2 = @hclk_target: <INVALID>[IvarId(0)]
 :00171 %2 = %2 - %1                         [<INVALID>][<INVALID>]
+:00172 @hclk_target: <INVALID>[IvarId(0)] = %2
 :00173 br =>:00179
+:00174 %2 = const[HCLOCK_VBLANK_0]          [<INVALID>]
 :00175 @hclk: <INVALID>[IvarId(0)] = %2
 :00176 _ = %0.wait_zero_clocks()            [<INVALID>]
 :00178 br =>:00194
+:00179 _ = %0.wait_zero_clocks()            [<INVALID>]
 :00181 %2 = 0: i32
 :00182 %3 = literal[50200577]
 :00183 %4 = 248: i32
 :00184 %5 = 8: i32
 :00185 _ = %2.step(%4;2 &%3)                [<INVALID>]
 :00187 %2 = 256: i32
 :00188 %3 = literal[50266113]
 :00189 %4 = 312: i32
 :00190 %5 = 8: i32
 :00191 _ = %2.step(%4;2 &%3)                [<INVALID>]
 :00193 br =>:00020
+:00194 loop_end
+:00195 _ = %0.vblank_0()                    [<INVALID>]
 :00197 _ = %0.wait_zero_clocks()            [<INVALID>]
 :00199 _ = %0.vblank_1()                    [<INVALID>]
 :00201 _ = %0.wait_zero_clocks()            [<INVALID>]
 :00203 _ = %0.vblank_2()                    [<INVALID>]
 :00205 _ = %0.wait_frame()                  [<INVALID>]
 :00207 br =>:00005
+:00208 %2 = nil
 :00209 loop_end
+:00210 ret %2
------------------------------------
------------------------------------
<OptimizedCodeBuilder> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1272
meta:on_stack:true kind:Ruby mode:class_def FuncId(751) regs:2 ISeq(RubyFuncInfo { id:751 name:OptimizedCodeBuilder method:(FuncId(751), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = const[CodeOptimizationHelper]   [<INVALID>]
 :00002 _ = %0.include(%1;1)                 [<INVALID>]
 :00004 %1 = literal[[:method_inlining, :ivar_localization, :split_show_mode, :split_a12_checks, :clock_specialization, :fastpath, :batch_render_pixels, :oneline]]
 :00005 const[OPTIONS] = %1
 :00006 method_def build: FuncId(768)
 :00007 %1 = literal[{:wait_zero_clocks=>"", :wait_one_clock=>"@hclk += 1\n", :wait_two_clocks=>"@hclk += 2\n", :wait_frame=>"return\n"}]
 :00008 const[COMMANDS] = %1
 :00009 method_def parse_clock_handlers: FuncId(769)
 :00010 method_def specialize_clock_handlers: FuncId(770)
 :00011 method_def add_fastpath: FuncId(771)
 :00012 method_def batch_render_pixels: FuncId(772)
 :00013 method_def oneline: FuncId(773)
 :00014 method_def ppu_expand_methods: FuncId(774)
 :00015 method_def split_mode: FuncId(775)
 :00016 method_def build_loop: FuncId(776)
 :00017 method_def rebuild_loop: FuncId(777)
 :00018 %1 = :rebuild_loop
 :00019 ret %1
------------------------------------
------------------------------------
<block in PPU> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:44
meta:on_stack:true kind:Ruby mode:method FuncId(752) regs:5 ISeq(RubyFuncInfo { id:752 name:<unnamed> method:(FuncId(674), 2) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[0...65536]
 :00002 %3 = literal[50987009]
 :00003 %2 = %2.map( &%3)                    [<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:73
meta:on_stack:true kind:Ruby mode:method FuncId(753) regs:3 ISeq(RubyFuncInfo { id:753 name:<unnamed> method:(FuncId(677), 1) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @nmt_mem: <INVALID>[IvarId(0)]
 :00002 %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00003 ret %2
------------------------------------
------------------------------------
<block in reset> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:187
meta:on_stack:true kind:Ruby mode:method FuncId(754) regs:2 ISeq(RubyFuncInfo { id:754 name:<unnamed> method:(FuncId(678), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[[false, false, 0]]
 :00002 ret %1
------------------------------------
------------------------------------
<block in update_output_color> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:192
meta:on_stack:true kind:Ruby mode:method FuncId(755) regs:6 ISeq(RubyFuncInfo { id:755 name:<unnamed> method:(FuncId(679), 1) args: 1 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @output_color: <INVALID>[IvarId(0)]
 :00002 %3 = @palette: <INVALID>[IvarId(0)]
 :00003 %4 = @palette_ram: <INVALID>[IvarId(0)]
 :00004 %4 = %4.[%1]                         [<INVALID>][<INVALID>]
 :00005 %5 = @coloring: <INVALID>[IvarId(0)]
 :00006 %4 = %4 & %5                         [<INVALID>][<INVALID>]
 :00007 %5 = @emphasis: <INVALID>[IvarId(0)]
 :00008 %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00009 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00010 %2:.[%1:] = %3
 :00011 ret %3
------------------------------------
------------------------------------
<block in setup_lut> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:200
meta:on_stack:true kind:Ruby mode:method FuncId(756) regs:9 ISeq(RubyFuncInfo { id:756 name:<unnamed> method:(FuncId(680), 1) args: 1 non_temp: 4 temp: 4})
[]
+:00000 init_method reg:8 arg:1 req:1 opt:0 rest:false block:None stack_offset:8
 :00001 %5 = @nmt_ref: <INVALID>[IvarId(0)]
 :00002 %6 = %1 >> 10: i16                   [<INVALID>][<INVALID>]
 :00003 %6 = %6 & 3: i16                     [<INVALID>][<INVALID>]
 :00004 %2 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00005 %3 = %1 & 1023: i16                  [<INVALID>][<INVALID>]
 :00006 %5 = %1 >> 12: i16                   [<INVALID>][<INVALID>]
 :00007 %5 = %5 & 7: i16                     [<INVALID>][<INVALID>]
 :00008 %6 = 15: i32
 :00009 %6 = %1.[%6]                         [<INVALID>][<INVALID>]
 :00010 %6 = %6 << 12: i16                   [<INVALID>][<INVALID>]
 :00011 %4 = %5 | %6                         [<INVALID>][<INVALID>]
 :00012 %8 = @lut_update: <INVALID>[IvarId(0)]
 :00013 %7 = %8.[%2]                         [<INVALID>][<INVALID>]
 :00014 condbr %7 =>:00018
+:00015 %8 = @lut_update: <INVALID>[IvarId(0)]
 :00016 %7 = literal[[]]
 :00017 %8:.[%2:] = %7
+:00018 %6 = %7.[%3]                         [<INVALID>][<INVALID>]
 :00019 condbr %6 =>:00028
+:00020 %8 = @lut_update: <INVALID>[IvarId(0)]
 :00021 %7 = %8.[%2]                         [<INVALID>][<INVALID>]
 :00022 condbr %7 =>:00026
+:00023 %8 = @lut_update: <INVALID>[IvarId(0)]
 :00024 %7 = literal[[]]
 :00025 %8:.[%2:] = %7
+:00026 %6 = literal[[nil, nil]]
 :00027 %7:.[%3:] = %6
+:00028 %7 = 0: i32
 :00029 %5 = %6.[%7]                         [<INVALID>][<INVALID>]
 :00030 condbr %5 =>:00050
+:00031 %8 = @lut_update: <INVALID>[IvarId(0)]
 :00032 %7 = %8.[%2]                         [<INVALID>][<INVALID>]
 :00033 condbr %7 =>:00037
+:00034 %8 = @lut_update: <INVALID>[IvarId(0)]
 :00035 %7 = literal[[]]
 :00036 %8:.[%2:] = %7
+:00037 %6 = %7.[%3]                         [<INVALID>][<INVALID>]
 :00038 condbr %6 =>:00047
+:00039 %8 = @lut_update: <INVALID>[IvarId(0)]
 :00040 %7 = %8.[%2]                         [<INVALID>][<INVALID>]
 :00041 condbr %7 =>:00045
+:00042 %8 = @lut_update: <INVALID>[IvarId(0)]
 :00043 %7 = literal[[]]
 :00044 %8:.[%2:] = %7
+:00045 %6 = literal[[nil, nil]]
 :00046 %7:.[%3:] = %6
+:00047 %7 = 0: i32
 :00048 %5 = literal[[]]
 :00049 %6:.[%7:] = %5
+:00050 %7 = %1
 :00051 %8 = %4
 :00052 %6 = array[%7; 2]
 :00053 %5 = %5 << %6                        [<INVALID>][<INVALID>]
 :00054 %5 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00055 %5 = %5 << 4: i16                    [<INVALID>][<INVALID>]
 :00056 %5 = %5 | %4                         [<INVALID>][<INVALID>]
 :00057 ret %5
------------------------------------
------------------------------------
<block in setup_lut> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:209
meta:on_stack:true kind:Ruby mode:method FuncId(757) regs:12 ISeq(RubyFuncInfo { id:757 name:<unnamed> method:(FuncId(680), 1) args: 1 non_temp: 6 temp: 5})
[]
+:00000 init_method reg:11 arg:1 req:1 opt:0 rest:false block:None stack_offset:9
 :00001 %7 = %1 & 3072: i16                  [<INVALID>][<INVALID>]
 :00002 %7 = 9152: i16 | %7                  [<INVALID>][<INVALID>]
 :00003 %8 = %1 >> 4: i16                    [<INVALID>][<INVALID>]
 :00004 %8 = %8 & 56: i16                    [<INVALID>][<INVALID>]
 :00005 %7 = %7 | %8                         [<INVALID>][<INVALID>]
 :00006 %8 = %1 >> 2: i16                    [<INVALID>][<INVALID>]
 :00007 %8 = %8 & 7: i16                     [<INVALID>][<INVALID>]
 :00008 %2 = %7 | %8                         [<INVALID>][<INVALID>]
 :00009 %7 = @nmt_ref: <INVALID>[IvarId(0)]
 :00010 %8 = %2 >> 10: i16                   [<INVALID>][<INVALID>]
 :00011 %8 = %8 & 3: i16                     [<INVALID>][<INVALID>]
 :00012 %3 = %7.[%8]                         [<INVALID>][<INVALID>]
 :00013 %4 = %2 & 1023: i16                  [<INVALID>][<INVALID>]
 :00014 %7 = %1 & 2: i16                     [<INVALID>][<INVALID>]
 :00015 %8 = %1 >> 4: i16                    [<INVALID>][<INVALID>]
 :00016 %8 = %8 & 4: i16                     [<INVALID>][<INVALID>]
 :00017 %5 = %7 | %8                         [<INVALID>][<INVALID>]
 :00018 %7 = %2
 :00019 %8 = %5
 :00020 %6 = array[%7; 2]
 :00021 %8 = dynvar(1, %1)
 :00022 %7 = %8.[%6]                         [<INVALID>][<INVALID>]
 :00023 condbr %7 =>:00034
+:00024 %8 = dynvar(1, %1)
 :00025 %9 = %2
 :00026 %10 = const[TILE_LUT]                [<INVALID>]
 :00027 %11 = %3.[%4]                        [<INVALID>][<INVALID>]
 :00028 %11 = %11 >> %5                      [<INVALID>][<INVALID>]
 :00029 %11 = %11 & 3: i16                   [<INVALID>][<INVALID>]
 :00030 %10 = %10.[%11]                      [<INVALID>][<INVALID>]
 :00031 %11 = %5
 :00032 %7 = array[%9; 3]
 :00033 %8:.[%6:] = %7
+:00034 %10 = @lut_update: <INVALID>[IvarId(0)]
 :00035 %9 = %10.[%3]                        [<INVALID>][<INVALID>]
 :00036 condbr %9 =>:00040
+:00037 %10 = @lut_update: <INVALID>[IvarId(0)]
 :00038 %9 = literal[[]]
 :00039 %10:.[%3:] = %9
+:00040 %8 = %9.[%4]                         [<INVALID>][<INVALID>]
 :00041 condbr %8 =>:00050
+:00042 %10 = @lut_update: <INVALID>[IvarId(0)]
 :00043 %9 = %10.[%3]                        [<INVALID>][<INVALID>]
 :00044 condbr %9 =>:00048
+:00045 %10 = @lut_update: <INVALID>[IvarId(0)]
 :00046 %9 = literal[[]]
 :00047 %10:.[%3:] = %9
+:00048 %8 = literal[[nil, nil]]
 :00049 %9:.[%4:] = %8
+:00050 %9 = 1: i32
 :00051 %7 = %8.[%9]                         [<INVALID>][<INVALID>]
 :00052 condbr %7 =>:00072
+:00053 %10 = @lut_update: <INVALID>[IvarId(0)]
 :00054 %9 = %10.[%3]                        [<INVALID>][<INVALID>]
 :00055 condbr %9 =>:00059
+:00056 %10 = @lut_update: <INVALID>[IvarId(0)]
 :00057 %9 = literal[[]]
 :00058 %10:.[%3:] = %9
+:00059 %8 = %9.[%4]                         [<INVALID>][<INVALID>]
 :00060 condbr %8 =>:00069
+:00061 %10 = @lut_update: <INVALID>[IvarId(0)]
 :00062 %9 = %10.[%3]                        [<INVALID>][<INVALID>]
 :00063 condbr %9 =>:00067
+:00064 %10 = @lut_update: <INVALID>[IvarId(0)]
 :00065 %9 = literal[[]]
 :00066 %10:.[%3:] = %9
+:00067 %8 = literal[[nil, nil]]
 :00068 %9:.[%4:] = %8
+:00069 %9 = 1: i32
 :00070 %7 = literal[[]]
 :00071 %8:.[%9:] = %7
+:00072 %8 = dynvar(1, %1)
 :00073 %8 = %8.[%6]                         [<INVALID>][<INVALID>]
 :00074 %7 = %7 << %8                        [<INVALID>][<INVALID>]
 :00075 %7 = dynvar(1, %1)
 :00076 %7 = %7.[%6]                         [<INVALID>][<INVALID>]
 :00077 ret %7
------------------------------------
------------------------------------
<block in setup_lut> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:219
meta:on_stack:true kind:Ruby mode:method FuncId(758) regs:4 ISeq(RubyFuncInfo { id:758 name:<unnamed> method:(FuncId(680), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal[51052545]
 :00002 %2 = %1.uniq!( &%2)                  [<INVALID>]
 :00004 ret %2
------------------------------------
------------------------------------
<block in nametables=> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:242
meta:on_stack:true kind:Ruby mode:method FuncId(759) regs:5 ISeq(RubyFuncInfo { id:759 name:<unnamed> method:(FuncId(682), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @nmt_ref: <INVALID>[IvarId(0)]
 :00002 %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00003 %3 = @nmt_mem: <INVALID>[IvarId(0)]
 :00004 %4 = dynvar(1, %2)
 :00005 %4 = %4.[%1]                         [<INVALID>][<INVALID>]
 :00006 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00007 %2 = %2.equal?(%3;1)                 [<INVALID>]
 :00009 ret %2
------------------------------------
------------------------------------
<block in poke_2007> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:484
meta:on_stack:true kind:Ruby mode:method FuncId(760) regs:5 ISeq(RubyFuncInfo { id:760 name:<unnamed> method:(FuncId(701), 1) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @name_lut: <INVALID>[IvarId(0)]
 :00002 %4 = dynvar(1, %2)
 :00003 %4 = %4 << 4: i16                    [<INVALID>][<INVALID>]
 :00004 %4 = %4 | %2                         [<INVALID>][<INVALID>]
 :00005 %3:.[%1:] = %4
 :00006 ret %4
------------------------------------
------------------------------------
<block in poke_2007> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:485
meta:on_stack:true kind:Ruby mode:method FuncId(761) regs:6 ISeq(RubyFuncInfo { id:761 name:<unnamed> method:(FuncId(701), 1) args: 1 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = 1: i32
 :00002 %3 = const[TILE_LUT]                 [<INVALID>]
 :00003 %4 = dynvar(1, %2)
 :00004 %5 = 2: i32
 :00005 %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00006 %4 = %4 >> %5                        [<INVALID>][<INVALID>]
 :00007 %4 = %4 & 3: i16                     [<INVALID>][<INVALID>]
 :00008 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00009 %1:.[%2:] = %3
 :00010 ret %3
------------------------------------
------------------------------------
<block in load_sprite> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:571
meta:on_stack:true kind:Ruby mode:method FuncId(762) regs:8 ISeq(RubyFuncInfo { id:762 name:<unnamed> method:(FuncId(710), 1) args: 1 non_temp: 4 temp: 3})
[]
+:00000 init_method reg:7 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 %5 = dynvar(1, %7)
 :00002 %2 = %5 + %1                         [<INVALID>][<INVALID>]
 :00003 %5 = dynvar(1, %6)
 :00004 %6 = dynvar(1, %5)
 :00005 %6 = %6.[%1]                         [<INVALID>][<INVALID>]
 :00006 %6 = %6 * 2: i16                     [<INVALID>][<INVALID>]
 :00007 %5 = %5 >> %6                        [<INVALID>][<INVALID>]
 :00008 %3 = %5 & 3: i16                     [<INVALID>][<INVALID>]
 :00009 %5 = @sp_map: <INVALID>[IvarId(0)]
 :00010 %5 = %5.[%2]                         [<INVALID>][<INVALID>]
 :00011 condbr %5 =>:00014
+:00012 _%5 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00013 condnotbr _%5 =>:00016
+:00014 %5 = nil
 :00015 ret %5
+:00016 %5 = @sp_map: <INVALID>[IvarId(0)]
 :00017 %6 = @sp_map_buffer: <INVALID>[IvarId(0)]
 :00018 %4 = %6.[%2]                         [<INVALID>][<INVALID>]
 :00019 %6 = %4
 :00020 %5:.[%2:] = %6
 :00021 %5 = 0: i32
 :00022 %6 = dynvar(1, %4)
 :00023 %7 = 5: i32
 :00024 %6 = %6.[%7]                         [<INVALID>][<INVALID>]
 :00025 %6 = %6 == 1: i16                    [<INVALID>][<INVALID>]
 :00026 %4:.[%5:] = %6
 :00027 %5 = 1: i32
 :00028 %7 = dynvar(1, %3)
 :00029 %6 = %7 == 0: i16                    [<INVALID>][<INVALID>]
 :00030 condnotbr %6 =>:00032
+:00031 %6 = @sp_zero_in_line: <INVALID>[IvarId(0)]
+:00032 %4:.[%5:] = %6
 :00033 %5 = 2: i32
 :00034 %6 = dynvar(1, %8)
 :00035 %6 = %6 + %3                         [<INVALID>][<INVALID>]
 :00036 %4:.[%5:] = %6
 :00037 ret %6
------------------------------------
------------------------------------
<block in run> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:880
meta:on_stack:true kind:Ruby mode:method FuncId(763) regs:2 ISeq(RubyFuncInfo { id:763 name:<unnamed> method:(FuncId(744), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 _ = %0.main_loop()                   [<INVALID>]
 :00003 %1 = :done
 :00004 ret %1
------------------------------------
------------------------------------
<block in main_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:954
meta:on_stack:true kind:Ruby mode:method FuncId(764) regs:2 ISeq(RubyFuncInfo { id:764 name:<unnamed> method:(FuncId(750), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @hclk: <INVALID>[IvarId(0)]
 :00002 _%1 = %1 == 341: i16                 [<INVALID>][<INVALID>]
 :00003 condnotbr _%1 =>:00011
+:00004 %1 = literal[false]
 :00005 @vblank: <INVALID>[IvarId(0)] = %1
 :00006 @vblanking: <INVALID>[IvarId(0)] = %1
 :00007 @sp_zero_hit: <INVALID>[IvarId(0)] = %1
 :00008 @sp_overflow: <INVALID>[IvarId(0)] = %1
 :00009 %1 = const[SCANLINE_HDUMMY]          [<INVALID>]
 :00010 @scanline: <INVALID>[IvarId(0)] = %1
+:00011 _ = %0.open_name()                   [<INVALID>]
 :00013 _ = %0.wait_two_clocks()             [<INVALID>]
 :00015 _ = %0.open_attr()                   [<INVALID>]
 :00017 _ = %0.wait_two_clocks()             [<INVALID>]
 :00019 %1 = @bg_pattern_base: <INVALID>[IvarId(0)]
 :00020 _ = %0.open_pattern(%1;1)            [<INVALID>]
 :00022 _ = %0.wait_two_clocks()             [<INVALID>]
 :00024 %1 = @io_addr: <INVALID>[IvarId(0)]
 :00025 %1 = %1 | 8: i16                     [<INVALID>][<INVALID>]
 :00026 _ = %0.open_pattern(%1;1)            [<INVALID>]
 :00028 %1 = %0.wait_two_clocks()            [<INVALID>]
 :00030 ret %1
------------------------------------
------------------------------------
<block in main_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:976
meta:on_stack:true kind:Ruby mode:method FuncId(765) regs:3 ISeq(RubyFuncInfo { id:765 name:<unnamed> method:(FuncId(750), 1) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00018
+:00003 %1 = @hclk: <INVALID>[IvarId(0)]
 :00004 _%1 = %1 == 645: i16                 [<INVALID>][<INVALID>]
 :00005 condnotbr _%1 =>:00018
+:00006 %1 = @scroll_latch: <INVALID>[IvarId(0)]
 :00007 %1 = %1 & 31: i16                    [<INVALID>][<INVALID>]
 :00008 @scroll_addr_0_4: <INVALID>[IvarId(0)] = %1
 :00009 %1 = @scroll_latch: <INVALID>[IvarId(0)]
 :00010 %1 = %1 & 32736: i16                 [<INVALID>][<INVALID>]
 :00011 @scroll_addr_5_14: <INVALID>[IvarId(0)] = %1
 :00012 %1 = @scroll_addr_0_4: <INVALID>[IvarId(0)]
 :00013 %2 = @scroll_addr_5_14: <INVALID>[IvarId(0)]
 :00014 %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00015 %1 = %1 & 4095: i16                  [<INVALID>][<INVALID>]
 :00016 %1 = %1 | 8192: i16                  [<INVALID>][<INVALID>]
 :00017 @name_io_addr: <INVALID>[IvarId(0)] = %1
+:00018 _ = %0.open_name()                   [<INVALID>]
 :00020 _ = %0.wait_two_clocks()             [<INVALID>]
 :00022 _ = %0.open_attr()                   [<INVALID>]
 :00024 _ = %0.wait_two_clocks()             [<INVALID>]
 :00026 %1 = @pattern_end: <INVALID>[IvarId(0)]
 :00027 _ = %0.open_pattern(%1;1)            [<INVALID>]
 :00029 _ = %0.wait_two_clocks()             [<INVALID>]
 :00031 %1 = @io_addr: <INVALID>[IvarId(0)]
 :00032 %1 = %1 | 8: i16                     [<INVALID>][<INVALID>]
 :00033 _ = %0.open_pattern(%1;1)            [<INVALID>]
 :00035 %1 = @hclk: <INVALID>[IvarId(0)]
 :00036 _%1 = %1 == 659: i16                 [<INVALID>][<INVALID>]
 :00037 condnotbr _%1 =>:00049
+:00038 %1 = 320: i32
 :00039 @hclk: <INVALID>[IvarId(0)] = %1
 :00040 %1 = @vclk: <INVALID>[IvarId(0)]
 :00041 %2 = const[HCLOCK_DUMMY]             [<INVALID>]
 :00042 %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00043 @vclk: <INVALID>[IvarId(0)] = %1
 :00044 %1 = @hclk_target: <INVALID>[IvarId(0)]
 :00045 %2 = const[HCLOCK_DUMMY]             [<INVALID>]
 :00046 %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00047 @hclk_target: <INVALID>[IvarId(0)] = %1
 :00048 br =>:00051
+:00049 _ = %0.wait_two_clocks()             [<INVALID>]
+:00051 %1 = %0.wait_zero_clocks()           [<INVALID>]
 :00053 ret %1
------------------------------------
------------------------------------
<block in main_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1117
meta:on_stack:true kind:Ruby mode:method FuncId(766) regs:2 ISeq(RubyFuncInfo { id:766 name:<unnamed> method:(FuncId(750), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = @any_show: <INVALID>[IvarId(0)]
 :00002 condnotbr %1 =>:00024
+:00003 %1 = @hclk: <INVALID>[IvarId(0)]
 :00004 _%1 = %1 == 64: i16                  [<INVALID>][<INVALID>]
 :00005 condnotbr _%1 =>:00013
+:00006 %1 = @regs_oam: <INVALID>[IvarId(0)]
 :00007 %1 = %1 & 248: i16                   [<INVALID>][<INVALID>]
 :00008 @sp_addr: <INVALID>[IvarId(0)] = %1
 :00009 %1 = nil
 :00010 @sp_phase: <INVALID>[IvarId(0)] = %1
 :00011 %1 = 255: i32
 :00012 @sp_latch: <INVALID>[IvarId(0)] = %1
+:00013 _ = %0.load_tiles()                  [<INVALID>]
 :00015 _ = %0.batch_render_eight_pixels()   [<INVALID>]
 :00017 %1 = @hclk: <INVALID>[IvarId(0)]
 :00018 _%1 = %1 >= 64: i16                  [<INVALID>][<INVALID>]
 :00019 condnotbr _%1 =>:00022
+:00020 _ = %0.evaluate_sprites_even()       [<INVALID>]
+:00022 _ = %0.open_name()                   [<INVALID>]
+:00024 _ = %0.render_pixel()                [<INVALID>]
 :00026 _ = %0.wait_one_clock()              [<INVALID>]
 :00028 %1 = @any_show: <INVALID>[IvarId(0)]
 :00029 condnotbr %1 =>:00037
+:00030 _ = %0.fetch_name()                  [<INVALID>]
 :00032 %1 = @hclk: <INVALID>[IvarId(0)]
 :00033 _%1 = %1 >= 64: i16                  [<INVALID>][<INVALID>]
 :00034 condnotbr _%1 =>:00037
+:00035 _ = %0.evaluate_sprites_odd()        [<INVALID>]
+:00037 _ = %0.render_pixel()                [<INVALID>]
 :00039 _ = %0.wait_one_clock()              [<INVALID>]
 :00041 %1 = @any_show: <INVALID>[IvarId(0)]
 :00042 condnotbr %1 =>:00050
+:00043 %1 = @hclk: <INVALID>[IvarId(0)]
 :00044 _%1 = %1 >= 64: i16                  [<INVALID>][<INVALID>]
 :00045 condnotbr _%1 =>:00048
+:00046 _ = %0.evaluate_sprites_even()       [<INVALID>]
+:00048 _ = %0.open_attr()                   [<INVALID>]
+:00050 _ = %0.render_pixel()                [<INVALID>]
 :00052 _ = %0.wait_one_clock()              [<INVALID>]
 :00054 %1 = @any_show: <INVALID>[IvarId(0)]
 :00055 condnotbr %1 =>:00070
+:00056 _ = %0.fetch_attr()                  [<INVALID>]
 :00058 %1 = @hclk: <INVALID>[IvarId(0)]
 :00059 _%1 = %1 >= 64: i16                  [<INVALID>][<INVALID>]
 :00060 condnotbr _%1 =>:00063
+:00061 _ = %0.evaluate_sprites_odd()        [<INVALID>]
+:00063 %1 = @hclk: <INVALID>[IvarId(0)]
 :00064 _%1 = %1 == 251: i16                 [<INVALID>][<INVALID>]
 :00065 condnotbr _%1 =>:00068
+:00066 _ = %0.scroll_clock_y()              [<INVALID>]
+:00068 _ = %0.scroll_clock_x()              [<INVALID>]
+:00070 _ = %0.render_pixel()                [<INVALID>]
 :00072 _ = %0.wait_one_clock()              [<INVALID>]
 :00074 %1 = @any_show: <INVALID>[IvarId(0)]
 :00075 condnotbr %1 =>:00084
+:00076 %1 = @hclk: <INVALID>[IvarId(0)]
 :00077 _%1 = %1 >= 64: i16                  [<INVALID>][<INVALID>]
 :00078 condnotbr _%1 =>:00081
+:00079 _ = %0.evaluate_sprites_even()       [<INVALID>]
+:00081 %1 = @io_pattern: <INVALID>[IvarId(0)]
 :00082 _ = %0.open_pattern(%1;1)            [<INVALID>]
+:00084 _ = %0.render_pixel()                [<INVALID>]
 :00086 _ = %0.wait_one_clock()              [<INVALID>]
 :00088 %1 = @any_show: <INVALID>[IvarId(0)]
 :00089 condnotbr %1 =>:00097
+:00090 _ = %0.fetch_bg_pattern_0()          [<INVALID>]
 :00092 %1 = @hclk: <INVALID>[IvarId(0)]
 :00093 _%1 = %1 >= 64: i16                  [<INVALID>][<INVALID>]
 :00094 condnotbr _%1 =>:00097
+:00095 _ = %0.evaluate_sprites_odd()        [<INVALID>]
+:00097 _ = %0.render_pixel()                [<INVALID>]
 :00099 _ = %0.wait_one_clock()              [<INVALID>]
 :00101 %1 = @any_show: <INVALID>[IvarId(0)]
 :00102 condnotbr %1 =>:00112
+:00103 %1 = @hclk: <INVALID>[IvarId(0)]
 :00104 _%1 = %1 >= 64: i16                  [<INVALID>][<INVALID>]
 :00105 condnotbr _%1 =>:00108
+:00106 _ = %0.evaluate_sprites_even()       [<INVALID>]
+:00108 %1 = @io_pattern: <INVALID>[IvarId(0)]
 :00109 %1 = %1 | 8: i16                     [<INVALID>][<INVALID>]
 :00110 _ = %0.open_pattern(%1;1)            [<INVALID>]
+:00112 _ = %0.render_pixel()                [<INVALID>]
 :00114 _ = %0.wait_one_clock()              [<INVALID>]
 :00116 %1 = @any_show: <INVALID>[IvarId(0)]
 :00117 condnotbr %1 =>:00125
+:00118 _ = %0.fetch_bg_pattern_1()          [<INVALID>]
 :00120 %1 = @hclk: <INVALID>[IvarId(0)]
 :00121 _%1 = %1 >= 64: i16                  [<INVALID>][<INVALID>]
 :00122 condnotbr _%1 =>:00125
+:00123 _ = %0.evaluate_sprites_odd()        [<INVALID>]
+:00125 _ = %0.render_pixel()                [<INVALID>]
 :00127 %1 = @any_show: <INVALID>[IvarId(0)]
 :00128 condnotbr %1 =>:00134
+:00129 %1 = @hclk: <INVALID>[IvarId(0)]
 :00130 _%1 = %1 != 255: i16                 [<INVALID>][<INVALID>]
 :00131 condnotbr _%1 =>:00134
+:00132 _ = %0.update_enabled_flags()        [<INVALID>]
+:00134 %1 = %0.wait_one_clock()             [<INVALID>]
 :00136 ret %1
------------------------------------
------------------------------------
<block in main_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1195
meta:on_stack:true kind:Ruby mode:method FuncId(767) regs:7 ISeq(RubyFuncInfo { id:767 name:<unnamed> method:(FuncId(750), 1) args: 0 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = @hclk: <INVALID>[IvarId(0)]
 :00002 _%4 = %4 == 256: i16                 [<INVALID>][<INVALID>]
 :00003 condnotbr _%4 =>:00021
+:00004 _ = %0.open_name()                   [<INVALID>]
 :00006 %4 = @any_show: <INVALID>[IvarId(0)]
 :00007 condnotbr %4 =>:00010
+:00008 %4 = 255: i32
 :00009 @sp_latch: <INVALID>[IvarId(0)] = %4
+:00010 _ = %0.wait_one_clock()              [<INVALID>]
 :00012 _ = %0.scroll_reset_x()              [<INVALID>]
 :00014 %4 = literal[false]
 :00015 @sp_visible: <INVALID>[IvarId(0)] = %4
 :00016 %4 = literal[false]
 :00017 @sp_active: <INVALID>[IvarId(0)] = %4
 :00018 _ = %0.wait_one_clock()              [<INVALID>]
 :00020 br =>:00025
+:00021 _ = %0.open_name()                   [<INVALID>]
 :00023 _ = %0.wait_two_clocks()             [<INVALID>]
+:00025 _ = %0.open_attr()                   [<INVALID>]
 :00027 _ = %0.wait_two_clocks()             [<INVALID>]
 :00029 %4 = @any_show: <INVALID>[IvarId(0)]
 :00030 condnotbr %4 =>:00051
+:00031 %4 = @hclk: <INVALID>[IvarId(0)]
 :00032 %4 = %4 - 260: i16                   [<INVALID>][<INVALID>]
 :00033 %1 = %4 / 2: i16                     [<INVALID>][<INVALID>]
 :00034 %4 = @sp_buffered: <INVALID>[IvarId(0)]
 :00035 _%4 = %1 >= %4                       [<INVALID>][<INVALID>]
 :00036 condnotbr _%4 =>:00039
+:00037 %4 = @pattern_end: <INVALID>[IvarId(0)]
 :00038 br =>:00041
+:00039 %4 = %0.open_sprite(%1;1)            [<INVALID>]
+:00041 _ = %0.open_pattern(%4;1)            [<INVALID>]
 :00043 %4 = @hclk: <INVALID>[IvarId(0)]
 :00044 _%4 = %4 == 316: i16                 [<INVALID>][<INVALID>]
 :00045 condnotbr _%4 =>:00051
+:00046 %4 = @scanline: <INVALID>[IvarId(0)]
 :00047 _%4 = %4 == 238: i16                 [<INVALID>][<INVALID>]
 :00048 condnotbr _%4 =>:00051
+:00049 %4 = 0: i32
 :00050 @regs_oam: <INVALID>[IvarId(0)] = %4
+:00051 _ = %0.wait_one_clock()              [<INVALID>]
 :00053 %4 = @any_show: <INVALID>[IvarId(0)]
 :00054 condnotbr %4 =>:00066
+:00055 %4 = @hclk: <INVALID>[IvarId(0)]
 :00056 %4 = %4 - 261: i16                   [<INVALID>][<INVALID>]
 :00057 %4 = %4 / 2: i16                     [<INVALID>][<INVALID>]
 :00058 %5 = @sp_buffered: <INVALID>[IvarId(0)]
 :00059 _%4 = %4 < %5                        [<INVALID>][<INVALID>]
 :00060 condnotbr _%4 =>:00066
+:00061 %4 = @chr_mem: <INVALID>[IvarId(0)]
 :00062 %5 = @io_addr: <INVALID>[IvarId(0)]
 :00063 %5 = %5 & 8191: i16                  [<INVALID>][<INVALID>]
 :00064 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00065 @io_pattern: <INVALID>[IvarId(0)] = %4
+:00066 _ = %0.wait_one_clock()              [<INVALID>]
 :00068 %4 = @io_addr: <INVALID>[IvarId(0)]
 :00069 %4 = %4 | 8: i16                     [<INVALID>][<INVALID>]
 :00070 _ = %0.open_pattern(%4;1)            [<INVALID>]
 :00072 _ = %0.wait_one_clock()              [<INVALID>]
 :00074 %4 = @any_show: <INVALID>[IvarId(0)]
 :00075 condnotbr %4 =>:00096
+:00076 %4 = @hclk: <INVALID>[IvarId(0)]
 :00077 %4 = %4 - 263: i16                   [<INVALID>][<INVALID>]
 :00078 %1 = %4 / 2: i16                     [<INVALID>][<INVALID>]
 :00079 %4 = @sp_buffered: <INVALID>[IvarId(0)]
 :00080 _%4 = %1 < %4                        [<INVALID>][<INVALID>]
 :00081 condnotbr _%4 =>:00096
+:00082 %2 = @io_pattern: <INVALID>[IvarId(0)]
 :00083 %4 = @chr_mem: <INVALID>[IvarId(0)]
 :00084 %5 = @io_addr: <INVALID>[IvarId(0)]
 :00085 %5 = %5 & 8191: i16                  [<INVALID>][<INVALID>]
 :00086 %3 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00087 _%4 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00088 condbr _%4 =>:00091
+:00089 _%4 = %3 != 0: i16                   [<INVALID>][<INVALID>]
 :00090 condnotbr _%4 =>:00096
+:00091 %4 = %2
 :00092 %5 = %3
 :00093 %6 = %1
 :00094 _ = %0.load_sprite(%4;3)             [<INVALID>]
+:00096 %4 = %0.wait_one_clock()             [<INVALID>]
 :00098 ret %4
------------------------------------
------------------------------------
<build> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1281
meta:on_stack:true kind:Ruby mode:method FuncId(768) regs:10 ISeq(RubyFuncInfo { id:768 name:build method:(FuncId(768), 0) args: 0 non_temp: 5 temp: 4})
[]
+:00000 init_method reg:9 arg:0 req:0 opt:0 rest:false block:None stack_offset:8
 :00001 %6 = :ivar_localization
 :00002 %7 = :method_inlining
 :00003 _ = %0.depends(%6;2)                 [<INVALID>]
 :00005 %6 = :batch_render_pixels
 :00006 %7 = :fastpath
 :00007 _ = %0.depends(%6;2)                 [<INVALID>]
 :00009 %6 = literal["/home/monochrome/optcarrot/lib/optcarrot/ppu.rb"]
 :00010 %1 = %0.parse_method_definitions(%6;1) [<INVALID>]
 :00012 %6 = :main_loop
 :00013 %6 = %1.[%6]                         [<INVALID>][<INVALID>]
 :00014 %6 = %6.body()                       [<INVALID>]
 :00016 %2 = %0.parse_clock_handlers(%6;1)   [<INVALID>]
 :00018 %6 = @clock_specialization: <INVALID>[IvarId(0)]
 :00019 condnotbr %6 =>:00022
+:00020 %2 = %0.specialize_clock_handlers(%2;1) [<INVALID>]
+:00022 %6 = @fastpath: <INVALID>[IvarId(0)]
 :00023 condnotbr %6 =>:00028
+:00024 %6 = literal[51118081]
 :00025 %7 = %2
 :00026 %2 = %0.add_fastpath(%7;1 &%6)       [<INVALID>]
+:00028 %3 = %0.build_loop(%2;1)             [<INVALID>]
 :00030 %6 = @method_inlining: <INVALID>[IvarId(0)]
 :00031 condnotbr %6 =>:00036
+:00032 %6 = %3
 :00033 %7 = %1
 :00034 %3 = %0.ppu_expand_methods(%6;2)     [<INVALID>]
+:00036 %6 = @split_show_mode: <INVALID>[IvarId(0)]
 :00037 condnotbr %6 =>:00064
+:00038 %6 = %3
 :00039 %7 = literal["@any_show"]
 :00040 %6 = %0.split_mode(%6;2)             [<INVALID>]
 :00042 %7; 2 = expand(%6)
 :00043 %3 = %7
 :00044 %4 = %8
 :00045 %6 = @split_a12_checks: <INVALID>[IvarId(0)]
 :00046 condnotbr %6 =>:00059
+:00047 %6 = %3
 :00048 %7 = literal["@a12_monitor"]
 :00049 %6 = %0.split_mode(%6;2)             [<INVALID>]
 :00051 %7; 2 = expand(%6)
 :00052 %3 = %7
 :00053 %5 = %8
 :00054 %6 = literal["@a12_monitor"]
 :00055 %7 = %3
 :00056 %8 = %5
 :00057 %3 = %0.branch(%6;3)                 [<INVALID>]
+:00059 %6 = literal["@any_show"]
 :00060 %7 = %3
 :00061 %8 = %4
 :00062 %3 = %0.branch(%6;3)                 [<INVALID>]
+:00064 %6 = :make_sure_invariants
 :00065 %6 = %1.[%6]                         [<INVALID>][<INVALID>]
 :00066 %6 = %6.body()                       [<INVALID>]
 :00068 %7 = %3
 :00069 %8 = literal["@hclk_target = (@vclk + @hclk) * RP2C02_CC"]
 :00070 %3 = %0.gen(%6;3)                    [<INVALID>]
 :00072 %6 = @ivar_localization: <INVALID>[IvarId(0)]
 :00073 condnotbr %6 =>:00076
+:00074 %3 = %0.localize_instance_variables(%3;1) [<INVALID>]
+:00076 %6 = literal["def self.run"]
 :00077 %7 = @loglevel: <INVALID>[IvarId(0)]
 :00078 _%7 = %7 >= 3: i16                   [<INVALID>][<INVALID>]
 :00079 condnotbr _%7 =>:00082
+:00080 %7 = literal[["  debug_logging(@scanline, @hclk, @hclk_target)"]]
 :00081 br =>:00083
+:00082 %7 = literal[[]]
+:00083 %8 = 2: i32
 :00084 %9 = %3
 :00085 %8 = %0.indent(%8;2)                 [<INVALID>]
 :00087 %9 = literal["end"]
 :00088 %3 = %0.gen(%6;4)*                   [<INVALID>]
 :00090 %6 = @oneline: <INVALID>[IvarId(0)]
 :00091 condnotbr %6 =>:00094
+:00092 %3 = %0.oneline(%3;1)                [<INVALID>]
+:00094 ret %3
------------------------------------
------------------------------------
<parse_clock_handlers> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1334
meta:on_stack:true kind:Ruby mode:method FuncId(769) regs:5 ISeq(RubyFuncInfo { id:769 name:parse_clock_handlers method:(FuncId(769), 0) args: 1 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[{}]
 :00002 %3 = literal[51183617]
 :00003 %4 = literal[/(?m)^( *)# when (.*)\n((?:\1.*\n|\n)*?\1wait_.*\n)/]
 :00004 _ = %1.scan(%4;1 &%3)                [<INVALID>]
 :00006 ret %2
------------------------------------
------------------------------------
<specialize_clock_handlers> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1353
meta:on_stack:true kind:Ruby mode:method FuncId(770) regs:4 ISeq(RubyFuncInfo { id:770 name:specialize_clock_handlers method:(FuncId(770), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal[51249153]
 :00002 %2 = %1.each( &%2)                   [<INVALID>]
 :00004 ret %2
------------------------------------
------------------------------------
<add_fastpath> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1364
meta:on_stack:true kind:Ruby mode:method FuncId(771) regs:4 ISeq(RubyFuncInfo { id:771 name:add_fastpath method:(FuncId(771), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal[51314689]
 :00002 %2 = %1.each( &%2)                   [<INVALID>]
 :00004 ret %2
------------------------------------
------------------------------------
<batch_render_pixels> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1374
meta:on_stack:true kind:Ruby mode:method FuncId(772) regs:23 ISeq(RubyFuncInfo { id:772 name:batch_render_pixels method:(FuncId(772), 0) args: 2 non_temp: 2 temp: 20})
[]
+:00000 init_method reg:22 arg:2 req:2 opt:0 rest:false block:None stack_offset:15
 :00001 %3 = %1
 :00002 %4 = literal["unless @any_show"]
 :00003 %5 = literal["  @bg_pixels[@hclk % 8] = 0"]
 :00004 %6 = literal["  @output_pixels << @output_color[@scroll_addr_5_14 & 0x3f00 == 0x3f00 ? @scroll_addr_0_4 : 0]"]
 :00005 %7 = literal["end"]
 :00006 %4 = %0.gen(%4;4)                    [<INVALID>]
 :00008 %1 = %0.expand_methods(%3;1 kw:%4;1) [<INVALID>]
 :00010 %3 = %1
 :00011 %4 = literal["# batch-version of render_pixel"]
 :00012 %5 = literal["if @any_show"]
 :00013 %6 = literal["  if @sp_active"]
 :00014 %7 = literal["    if @bg_enabled"]
 :00015 %8 = literal[0..7]
 :00016 %9 = literal[51380225]
 :00017 %8 = %8.flat_map( &%9)               [<INVALID>]
 :00019 %9 = literal["      @output_pixels << "]
 :00020 %10 = literal[0..7]
 :00021 %11 = literal[51445761]
 :00022 %10 = %10.map( &%11)                 [<INVALID>]
 :00024 %11 = literal[" << "]
 :00025 %10 = %10 * %11                      [<INVALID>][<INVALID>]
 :00026 %9 = %9 + %10                        [<INVALID>][<INVALID>]
 :00027 %10 = literal["    else"]
 :00028 %11 = literal[0..7]
 :00029 %12 = literal[51511297]
 :00030 %11 = %11.map( &%12)                 [<INVALID>]
 :00032 %12 = literal["      @output_pixels << "]
 :00033 %13 = literal[0..7]
 :00034 %14 = literal[51576833]
 :00035 %13 = %13.map( &%14)                 [<INVALID>]
 :00037 %14 = literal[" << "]
 :00038 %13 = %13 * %14                      [<INVALID>][<INVALID>]
 :00039 %12 = %12 + %13                      [<INVALID>][<INVALID>]
 :00040 %13 = literal["    end"]
 :00041 %14 = literal["  else"]
 :00042 %15 = literal["    if @bg_enabled # this is the true hot-spot"]
 :00043 %16 = literal["      @output_pixels << "]
 :00044 %17 = literal[0..7]
 :00045 %18 = literal[51642369]
 :00046 %17 = %17.map( &%18)                 [<INVALID>]
 :00048 %18 = literal[" << "]
 :00049 %17 = %17 * %18                      [<INVALID>][<INVALID>]
 :00050 %16 = %16 + %17                      [<INVALID>][<INVALID>]
 :00051 %17 = literal["    else"]
 :00052 %18 = literal["      clr = @output_color[0]"]
 :00053 %19 = literal["      @output_pixels << "]
 :00054 %20 = literal[["clr"]]
 :00055 %20 = %20 * 8: i16                   [<INVALID>][<INVALID>]
 :00056 %21 = literal[" << "]
 :00057 %20 = %20 * %21                      [<INVALID>][<INVALID>]
 :00058 %19 = %19 + %20                      [<INVALID>][<INVALID>]
 :00059 %20 = literal["    end"]
 :00060 %21 = literal["  end"]
 :00061 %22 = literal["end"]
 :00062 %4 = %0.gen(%4;19)*                  [<INVALID>]
 :00064 %3 = %0.expand_methods(%3;1 kw:%4;1) [<INVALID>]
 :00066 ret %3
------------------------------------
------------------------------------
<oneline> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1419
meta:on_stack:true kind:Ruby mode:method FuncId(773) regs:5 ISeq(RubyFuncInfo { id:773 name:oneline method:(FuncId(773), 0) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[/(?m)^ *|#.*/]
 :00002 %3 = literal[""]
 :00003 %2 = %1.gsub(%2;2)                   [<INVALID>]
 :00005 %3 = literal["[\n"]
 :00006 %4 = literal["["]
 :00007 %2 = %2.gsub(%3;2)                   [<INVALID>]
 :00009 %3 = literal[/(?m)\n *\]/]
 :00010 %4 = literal["]"]
 :00011 %2 = %2.gsub(%3;2)                   [<INVALID>]
 :00013 %3 = literal["\n"]
 :00014 %4 = literal[";"]
 :00015 %2 = %2.tr(%3;2)                     [<INVALID>]
 :00017 ret %2
------------------------------------
------------------------------------
<ppu_expand_methods> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1424
meta:on_stack:true kind:Ruby mode:method FuncId(774) regs:6 ISeq(RubyFuncInfo { id:774 name:ppu_expand_methods method:(FuncId(774), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = %1
 :00002 %4 = :open_sprite
 :00003 %5 = :open_sprite
 :00004 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00005 %1 = %0.expand_inline_methods(%3;3)  [<INVALID>]
 :00007 %3 = %1
 :00008 %4 = %2
 :00009 %3 = %0.expand_methods(%3;2)         [<INVALID>]
 :00011 %4 = %2
 :00012 %3 = %0.expand_methods(%3;2)         [<INVALID>]
 :00014 ret %3
------------------------------------
------------------------------------
<split_mode> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1433
meta:on_stack:true kind:Ruby mode:method FuncId(775) regs:6 ISeq(RubyFuncInfo { id:775 name:split_mode method:(FuncId(775), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = literal[["true", "false"]]
 :00002 %4 = literal[51707905]
 :00003 %3 = %3.map( &%4)                    [<INVALID>]
 :00005 ret %3
------------------------------------
------------------------------------
<build_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1440
meta:on_stack:true kind:Ruby mode:method FuncId(776) regs:8 ISeq(RubyFuncInfo { id:776 name:build_loop method:(FuncId(776), 0) args: 1 non_temp: 2 temp: 5})
[]
+:00000 init_method reg:7 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 %2 = literal[{}]
 :00002 %3 = %1.sort()                       [<INVALID>]
 :00004 %4 = literal[51773441]
 :00005 _ = %3.each( &%4)                    [<INVALID>]
 :00007 %3 = literal["while @hclk_target > @hclk"]
 :00008 %4 = literal["  case @hclk"]
 :00009 %5 = %2.invert()                     [<INVALID>]
 :00011 %5 = %5.sort()                       [<INVALID>]
 :00013 %6 = literal[51838977]
 :00014 %5 = %5.map( &%6)                    [<INVALID>]
 :00016 %6 = literal["  end"]
 :00017 %7 = literal["end"]
 :00018 %3 = %0.gen(%3;5)*                   [<INVALID>]
 :00020 ret %3
------------------------------------
------------------------------------
<rebuild_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1458
meta:on_stack:true kind:Ruby mode:method FuncId(777) regs:5 ISeq(RubyFuncInfo { id:777 name:rebuild_loop method:(FuncId(777), 0) args: 1 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal[{}]
 :00002 %3 = literal[51904513]
 :00003 %4 = literal[/(?m)^  when ((?:\d+, )*\d+)\n((?:    .*\n|\n)*)/]
 :00004 _ = %1.scan(%4;1 &%3)                [<INVALID>]
 :00006 %3 = %0.build_loop(%2;1)             [<INVALID>]
 :00008 ret %3
------------------------------------
------------------------------------
<block in PPU> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:45
meta:on_stack:true kind:Ruby mode:method FuncId(778) regs:5 ISeq(RubyFuncInfo { id:778 name:<unnamed> method:(FuncId(674), 3) args: 1 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = dynvar(1, %1)
 :00002 %3 = 15: i16 - %3                    [<INVALID>][<INVALID>]
 :00003 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
 :00004 %3 = %3 * 2: i16                     [<INVALID>][<INVALID>]
 :00005 %4 = dynvar(1, %1)
 :00006 %4 = 7: i16 - %4                     [<INVALID>][<INVALID>]
 :00007 %4 = %1.[%4]                         [<INVALID>][<INVALID>]
 :00008 %2 = %3 + %4                         [<INVALID>][<INVALID>]
 :00009 _%3 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00010 condnotbr _%3 =>:00014
+:00011 %3 = dynvar(2, %1)
 :00012 %3 = %3 | %2                         [<INVALID>][<INVALID>]
 :00013 ret %3
+:00014 %3 = 0: i32
 :00015 ret %3
------------------------------------
------------------------------------
<block in setup_lut> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:219
meta:on_stack:true kind:Ruby mode:method FuncId(779) regs:3 ISeq(RubyFuncInfo { id:779 name:<unnamed> method:(FuncId(680), 2) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1.object_id()                  [<INVALID>]
 :00003 ret %2
------------------------------------
------------------------------------
<block in build> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1290
meta:on_stack:true kind:Ruby mode:method FuncId(780) regs:5 ISeq(RubyFuncInfo { id:780 name:<unnamed> method:(FuncId(768), 1) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = @batch_render_pixels: <INVALID>[IvarId(0)]
 :00002 condnotbr %3 =>:00008
+:00003 %3 = %1
 :00004 %4 = %2
 :00005 %3 = %0.batch_render_pixels(%3;2)    [<INVALID>]
 :00007 ret %3
+:00008 ret %1
------------------------------------
------------------------------------
<block in parse_clock_handlers> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1336
meta:on_stack:true kind:Ruby mode:method FuncId(781) regs:11 ISeq(RubyFuncInfo { id:781 name:<unnamed> method:(FuncId(769), 1) args: 3 non_temp: 6 temp: 4})
[]
+:00000 init_method reg:10 arg:3 req:3 opt:0 rest:false block:None stack_offset:9
 :00001 %7 = %1.size()                       [<INVALID>]
 :00003 %7 = -%7                             [<INVALID>]
 :00004 %8 = %3
 :00005 %3 = %0.indent(%7;2)                 [<INVALID>]
 :00007 %7 = literal[/(?m)^( *)break\n/]
 :00008 %8 = literal[""]
 :00009 %3 = %3.gsub(%7;2)                   [<INVALID>]
 :00011 %7 = %3
 :00012 %8 = const[COMMANDS]                 [<INVALID>]
 :00013 %3 = %0.expand_methods(%7;2)         [<INVALID>]
 :00015 %7 = literal[/(?m)^(\d+), (\d+), \.\.\., (\d+)$/]
 :00016 %7 = %2.=~(%7;1)                     [<INVALID>]
 :00018 condnotbr %7 =>:00037
+:00019 %7 = $1
 :00020 %7 = %7.to_i()                       [<INVALID>]
 :00022 %8 = $2
 :00023 %8 = %8.to_i()                       [<INVALID>]
 :00025 %9 = $3
 :00026 %9 = %9.to_i()                       [<INVALID>]
 :00028 %4 = %7
 :00029 %5 = %8
 :00030 %6 = %9
 :00031 %7 = literal[51970049]
 :00032 %8 = %6
 :00033 %9 = %5 - %4                         [<INVALID>][<INVALID>]
 :00034 %7 = %4.step(%8;2 &%7)               [<INVALID>]
 :00036 ret %7
+:00037 %7 = dynvar(1, %2)
 :00038 %8 = %2.to_i()                       [<INVALID>]
 :00040 %7:.[%8:] = %3
 :00041 ret %3
------------------------------------
------------------------------------
<block in specialize_clock_handlers> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1354
meta:on_stack:true kind:Ruby mode:method FuncId(782) regs:5 ISeq(RubyFuncInfo { id:782 name:<unnamed> method:(FuncId(770), 1) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = literal[52035585]
 :00002 %4 = literal[/(?m)@hclk (==|>=|!=) (\d+)/]
 :00003 %2 = %2.gsub(%4;1 &%3)               [<INVALID>]
 :00005 %3 = dynvar(1, %1)
 :00006 %4 = %0.remove_trivial_branches(%2;1) [<INVALID>]
 :00008 %3:.[%1:] = %4
 :00009 ret %4
------------------------------------
------------------------------------
<block in add_fastpath> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1365
meta:on_stack:true kind:Ruby mode:method FuncId(783) regs:8 ISeq(RubyFuncInfo { id:783 name:<unnamed> method:(FuncId(771), 1) args: 2 non_temp: 3 temp: 4})
[]
+:00000 init_method reg:7 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = 8: i32
 :00002 %4 = %1 % %4                         [<INVALID>][<INVALID>]
 :00003 _%4 = %4 == 0: i16                   [<INVALID>][<INVALID>]
 :00004 condnotbr _%4 =>:00008
+:00005 _%4 = %1 < 256: i16                  [<INVALID>][<INVALID>]
 :00006 condnotbr _%4 =>:00008
+:00007 br =>:00010
+:00008 %4 = nil
 :00009 ret %4
+:00010 %4 = literal[0..7]
 :00011 %5 = literal[52101121]
 :00012 %4 = %4.map( &%5)                    [<INVALID>]
 :00014 %3 = %0.gen(%4;1)*                   [<INVALID>]
 :00016 %5 = %3
 :00017 %6 = %1
 :00018 %4 = yield(%5; 2)
 :00019 %3 = %4
 :00020 %4 = dynvar(1, %1)
 :00021 %5 = literal["@hclk + 8 <= @hclk_target"]
 :00022 %6 = %3
 :00023 %7 = %2
 :00024 %5 = %0.branch(%5;3)                 [<INVALID>]
 :00026 %4:.[%1:] = %5
 :00027 ret %5
------------------------------------
------------------------------------
<block in batch_render_pixels> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1386
meta:on_stack:true kind:Ruby mode:method FuncId(784) regs:12 ISeq(RubyFuncInfo { id:784 name:<unnamed> method:(FuncId(772), 1) args: 1 non_temp: 1 temp: 10})
[]
+:00000 init_method reg:11 arg:1 req:1 opt:0 rest:false block:None stack_offset:9
 :00001 %3 = literal["      pixel"]
 :00002 %4 = %1
 :00003 %5 = literal[" = @bg_pixels["]
 :00004 %6 = %1
 :00005 %7 = literal["]"]
 :00006 %3 = concat(%3; 5)
 :00007 %4 = literal["      if sprite = @sp_map[@hclk"]
 :00008 _%5 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00009 condnotbr _%5 =>:00014
+:00010 %5 = literal[" + "]
 :00011 %6 = %1
 :00012 %5 = concat(%5; 2)
 :00013 br =>:00015
+:00014 %5 = literal[""]
+:00015 %6 = literal["]"]
 :00016 %4 = concat(%4; 3)
 :00017 %5 = literal["        if pixel"]
 :00018 %6 = %1
 :00019 %7 = literal[" % 4 == 0"]
 :00020 %5 = concat(%5; 3)
 :00021 %6 = literal["          pixel"]
 :00022 %7 = %1
 :00023 %8 = literal[" = sprite[2]"]
 :00024 %6 = concat(%6; 3)
 :00025 %7 = literal["        else"]
 :00026 %8 = dynvar(1, %2)
 :00027 %8 = %8 + %1                         [<INVALID>][<INVALID>]
 :00028 _%8 = %8 == 255: i16                 [<INVALID>][<INVALID>]
 :00029 condnotbr _%8 =>:00032
+:00030 %8 = literal[[]]
 :00031 br =>:00033
+:00032 %8 = literal[["          @sp_zero_hit = true if sprite[1]"]]
+:00033 %9 = literal["          pixel"]
 :00034 %10 = %1
 :00035 %11 = literal[" = sprite[2] unless sprite[0]"]
 :00036 %9 = concat(%9; 3)
 :00037 %10 = literal["        end"]
 :00038 %11 = literal["      end"]
 :00039 %2 = array[%3; 9]
 :00040 ret %2
------------------------------------
------------------------------------
<block in batch_render_pixels> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1399
meta:on_stack:true kind:Ruby mode:method FuncId(785) regs:5 ISeq(RubyFuncInfo { id:785 name:<unnamed> method:(FuncId(772), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal["@output_color[pixel"]
 :00002 %3 = %1
 :00003 %4 = literal["]"]
 :00004 %2 = concat(%2; 3)
 :00005 ret %2
------------------------------------
------------------------------------
<block in batch_render_pixels> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1401
meta:on_stack:true kind:Ruby mode:method FuncId(786) regs:7 ISeq(RubyFuncInfo { id:786 name:<unnamed> method:(FuncId(772), 1) args: 1 non_temp: 1 temp: 5})
[]
+:00000 init_method reg:6 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 %2 = literal["      pixel"]
 :00002 %3 = %1
 :00003 %4 = literal[" = (sprite = @sp_map[@hclk "]
 :00004 _%5 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00005 condnotbr _%5 =>:00010
+:00006 %5 = literal[" + "]
 :00007 %6 = %1
 :00008 %5 = concat(%5; 2)
 :00009 br =>:00011
+:00010 %5 = literal[""]
+:00011 %6 = literal["]) ? sprite[2] : 0"]
 :00012 %2 = concat(%2; 5)
 :00013 ret %2
------------------------------------
------------------------------------
<block in batch_render_pixels> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1404
meta:on_stack:true kind:Ruby mode:method FuncId(787) regs:5 ISeq(RubyFuncInfo { id:787 name:<unnamed> method:(FuncId(772), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal["@output_color[pixel"]
 :00002 %3 = %1
 :00003 %4 = literal["]"]
 :00004 %2 = concat(%2; 3)
 :00005 ret %2
------------------------------------
------------------------------------
<block in batch_render_pixels> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1408
meta:on_stack:true kind:Ruby mode:method FuncId(788) regs:5 ISeq(RubyFuncInfo { id:788 name:<unnamed> method:(FuncId(772), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = literal["@output_color[@bg_pixels["]
 :00002 %3 = %1
 :00003 %4 = literal["]]"]
 :00004 %2 = concat(%2; 3)
 :00005 ret %2
------------------------------------
------------------------------------
<block in split_mode> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1434
meta:on_stack:true kind:Ruby mode:method FuncId(789) regs:5 ISeq(RubyFuncInfo { id:789 name:<unnamed> method:(FuncId(775), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = dynvar(1, %1)
 :00002 %3 = dynvar(1, %2)
 :00003 %4 = %1
 :00004 %2 = %0.replace_cond_var(%2;3)       [<INVALID>]
 :00006 %2 = %0.remove_trivial_branches(%2;1) [<INVALID>]
 :00008 %2 = %0.rebuild_loop(%2;1)           [<INVALID>]
 :00010 ret %2
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1442
meta:on_stack:true kind:Ruby mode:method FuncId(790) regs:5 ISeq(RubyFuncInfo { id:790 name:<unnamed> method:(FuncId(776), 1) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %4 = dynvar(1, %2)
 :00002 %3 = %4.[%2]                         [<INVALID>][<INVALID>]
 :00003 condbr %3 =>:00007
+:00004 %4 = dynvar(1, %2)
 :00005 %3 = literal[[]]
 :00006 %4:.[%2:] = %3
+:00007 %3 = %3 << %1                        [<INVALID>][<INVALID>]
 :00008 ret %3
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1449
meta:on_stack:true kind:Ruby mode:method FuncId(791) regs:6 ISeq(RubyFuncInfo { id:791 name:<unnamed> method:(FuncId(776), 1) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = literal["  when "]
 :00002 %4 = literal[", "]
 :00003 %4 = %1 * %4                         [<INVALID>][<INVALID>]
 :00004 %5 = literal["\n"]
 :00005 %3 = concat(%3; 3)
 :00006 %4 = 4: i32
 :00007 %5 = %2
 :00008 %4 = %0.indent(%4;2)                 [<INVALID>]
 :00010 %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00011 ret %3
------------------------------------
------------------------------------
<block in rebuild_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1460
meta:on_stack:true kind:Ruby mode:method FuncId(792) regs:6 ISeq(RubyFuncInfo { id:792 name:<unnamed> method:(FuncId(777), 1) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = literal[", "]
 :00002 %3 = %1.split(%3;1)                  [<INVALID>]
 :00004 %4 = literal[52166657]
 :00005 %3 = %3.each( &%4)                   [<INVALID>]
 :00007 ret %3
------------------------------------
------------------------------------
<block in parse_clock_handlers> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1342
meta:on_stack:true kind:Ruby mode:method FuncId(793) regs:4 ISeq(RubyFuncInfo { id:793 name:<unnamed> method:(FuncId(769), 2) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = dynvar(2, %2)
 :00002 %3 = dynvar(1, %3)
 :00003 %2:.[%1:] = %3
 :00004 ret %3
------------------------------------
------------------------------------
<block in specialize_clock_handlers> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1356
meta:on_stack:true kind:Ruby mode:method FuncId(794) regs:5 ISeq(RubyFuncInfo { id:794 name:<unnamed> method:(FuncId(770), 2) args: 0 non_temp: 0 temp: 4})
[]
+:00000 init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = dynvar(1, %1)
 :00002 %2 = $1
 :00003 %2 = %2.to_sym()                     [<INVALID>]
 :00005 %3 = $2
 :00006 %3 = %3.to_i()                       [<INVALID>]
 :00008 %1 = %1.send(%2;2)                   [<INVALID>]
 :00010 ret %1
------------------------------------
------------------------------------
<block in add_fastpath> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1367
meta:on_stack:true kind:Ruby mode:method FuncId(795) regs:4 ISeq(RubyFuncInfo { id:795 name:<unnamed> method:(FuncId(771), 2) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = dynvar(2, %1)
 :00002 %3 = dynvar(1, %1)
 :00003 %3 = %3 + %1                         [<INVALID>][<INVALID>]
 :00004 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
<block in rebuild_loop> /home/monochrome/optcarrot/lib/optcarrot/ppu.rb:1461
meta:on_stack:true kind:Ruby mode:method FuncId(796) regs:6 ISeq(RubyFuncInfo { id:796 name:<unnamed> method:(FuncId(777), 2) args: 1 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = dynvar(2, %2)
 :00002 %3 = %1.to_i()                       [<INVALID>]
 :00004 %4 = -4: i32
 :00005 %5 = dynvar(1, %2)
 :00006 %4 = %0.indent(%4;2)                 [<INVALID>]
 :00008 %2:.[%3:] = %4
 :00009 ret %4
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/palette.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(798) regs:2 ISeq(RubyFuncInfo { id:798 name:/main method:(FuncId(798), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(799)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/palette.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(799) regs:2 ISeq(RubyFuncInfo { id:799 name:Optcarrot method:(FuncId(799), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Palette: FuncId(800)
 :00002 ret %1
------------------------------------
------------------------------------
<Palette> /home/monochrome/optcarrot/lib/optcarrot/palette.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(800) regs:2 ISeq(RubyFuncInfo { id:800 name:Palette method:(FuncId(800), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 _ = %0.module_function()             [<INVALID>]
 :00003 method_def defacto_palette: FuncId(801)
 :00004 method_def nestopia_palette: FuncId(802)
 :00005 %1 = :nestopia_palette
 :00006 ret %1
------------------------------------
------------------------------------
<defacto_palette> /home/monochrome/optcarrot/lib/optcarrot/palette.rb:7
meta:on_stack:true kind:Ruby mode:method FuncId(801) regs:10 ISeq(RubyFuncInfo { id:801 name:defacto_palette method:(FuncId(801), 0) args: 0 non_temp: 0 temp: 9})
[]
+:00000 init_method reg:9 arg:0 req:0 opt:0 rest:false block:None stack_offset:8
 :00001 %2 = literal[[1.0, 1.0, 1.0]]
 :00002 %3 = literal[[1.0, 0.8, 0.81]]
 :00003 %4 = literal[[0.78, 0.94, 0.66]]
 :00004 %5 = literal[[0.79, 0.77, 0.63]]
 :00005 %6 = literal[[0.82, 0.83, 1.12]]
 :00006 %7 = literal[[0.81, 0.71, 0.87]]
 :00007 %8 = literal[[0.68, 0.79, 0.79]]
 :00008 %9 = literal[[0.7, 0.7, 0.7]]
 :00009 %1 = array[%2; 8]
 :00010 %2 = literal[52625409]
 :00011 %1 = %1.flat_map( &%2)               [<INVALID>]
 :00013 ret %1
------------------------------------
------------------------------------
<nestopia_palette> /home/monochrome/optcarrot/lib/optcarrot/palette.rb:38
meta:on_stack:true kind:Ruby mode:method FuncId(802) regs:4 ISeq(RubyFuncInfo { id:802 name:nestopia_palette method:(FuncId(802), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal[0..511]
 :00002 %2 = literal[52690945]
 :00003 %1 = %1.map( &%2)                    [<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<block in defacto_palette> /home/monochrome/optcarrot/lib/optcarrot/palette.rb:17
meta:on_stack:true kind:Ruby mode:method FuncId(803) regs:7 ISeq(RubyFuncInfo { id:803 name:<unnamed> method:(FuncId(801), 1) args: 3 non_temp: 3 temp: 3})
[]
+:00000 init_method reg:6 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 %4 = literal[[6710886, 10888, 1315495, 3866788, 6029438, 7209024, 7079424, 5643520, 3355904, 739328, 20992, 20232, 16461, 0, 0, 0, 11382189, 1400793, 4342015, 7677950, 10492620, 12000891, 11874592, 10046976, 7040256, 3704576, 824064, 36658, 31885, 0, 0, 0, 16776959, 6598911, 9605375, 13006591, 15952639, 16674508, 16679280, 15375906, 12369408, 8968192, 6087728, 4579458, 4771294, 5197647, 0, 0, 16776959, 12640255, 13882111, 15255807, 16499455, 16696554, 16698565, 16242853, 15000980, 13627286, 12448939, 11793356, 11922418, 12105912, 0, 0]]
 :00002 %5 = literal[52756481]
 :00003 %4 = %4.map( &%5)                    [<INVALID>]
 :00005 ret %4
------------------------------------
------------------------------------
<block in nestopia_palette> /home/monochrome/optcarrot/lib/optcarrot/palette.rb:39
meta:on_stack:true kind:Ruby mode:method FuncId(804) regs:15 ISeq(RubyFuncInfo { id:804 name:<unnamed> method:(FuncId(802), 1) args: 1 non_temp: 9 temp: 5})
[]
+:00000 init_method reg:14 arg:1 req:1 opt:0 rest:false block:None stack_offset:11
 :00001 %10 = %1 >> 6: i16                   [<INVALID>][<INVALID>]
 :00002 %10 = %10 & 7: i16                   [<INVALID>][<INVALID>]
 :00003 %11 = %1 >> 4: i16                   [<INVALID>][<INVALID>]
 :00004 %11 = %11 & 3: i16                   [<INVALID>][<INVALID>]
 :00005 %12 = %1 & 15: i16                   [<INVALID>][<INVALID>]
 :00006 %2 = %10
 :00007 %3 = %11
 :00008 %4 = %12
 :00009 %11 = literal[[-0.12, 0.4]]
 :00010 %12 = literal[[0.0, 0.68]]
 :00011 %13 = literal[[0.31, 1.0]]
 :00012 %14 = literal[[0.72, 1.0]]
 :00013 %10 = array[%11; 4]
 :00014 %10 = %10.[%3]                       [<INVALID>][<INVALID>]
 :00015 %11; 2 = expand(%10)
 :00016 %5 = %11
 :00017 %6 = %12
 :00018 _%10 = %4 == 0: i16                  [<INVALID>][<INVALID>]
 :00019 condnotbr _%10 =>:00021
+:00020 %5 = %6
+:00021 _%10 = %4 == 13: i16                 [<INVALID>][<INVALID>]
 :00022 condnotbr _%10 =>:00024
+:00023 %6 = %5
+:00024 _%10 = %4 >= 14: i16                 [<INVALID>][<INVALID>]
 :00025 condnotbr _%10 =>:00028
+:00026 %6 = 0: i32
 :00027 %5 = %6
+:00028 %10 = %6 + %5                        [<INVALID>][<INVALID>]
 :00029 %11 = literal[0.5]
 :00030 %7 = %10 * %11                       [<INVALID>][<INVALID>]
 :00031 %10 = %6 - %5                        [<INVALID>][<INVALID>]
 :00032 %11 = literal[0.5]
 :00033 %8 = %10 * %11                       [<INVALID>][<INVALID>]
 :00034 %10 = const[Complex]                 [<INVALID>]
 :00035 %11 = %8
 :00036 %12 = const[Math::PI]                [<INVALID>]
 :00037 %12 = %12 / 6: i16                   [<INVALID>][<INVALID>]
 :00038 %13 = %4 - 3: i16                    [<INVALID>][<INVALID>]
 :00039 %12 = %12 * %13                      [<INVALID>][<INVALID>]
 :00040 %9 = %10.polar(%11;2)                [<INVALID>]
 :00042 _%10 = %2 != 0: i16                  [<INVALID>][<INVALID>]
 :00043 condnotbr _%10 =>:00085
+:00044 _%10 = %4 <= 13: i16                 [<INVALID>][<INVALID>]
 :00045 condnotbr _%10 =>:00085
+:00046 _%10 = %2 == 7: i16                  [<INVALID>][<INVALID>]
 :00047 condnotbr _%10 =>:00055
+:00048 %10 = literal[0.79399]
 :00049 %10 = %7 * %10                       [<INVALID>][<INVALID>]
 :00050 %11 = literal[0.0782838]
 :00051 %10 = %10 - %11                      [<INVALID>][<INVALID>]
 :00052 %11 = literal[1.13]
 :00053 %7 = %10 * %11                       [<INVALID>][<INVALID>]
 :00054 br =>:00085
+:00055 %10 = literal[0.79399]
 :00056 %10 = 1: i16 - %10                   [<INVALID>][<INVALID>]
 :00057 %10 = %6 * %10                       [<INVALID>][<INVALID>]
 :00058 %11 = literal[0.0782838]
 :00059 %10 = %10 + %11                      [<INVALID>][<INVALID>]
 :00060 %11 = literal[0.5]
 :00061 %6 = %10 * %11                       [<INVALID>][<INVALID>]
 :00062 %10 = literal[0.5]
 :00063 %10 = %6 * %10                       [<INVALID>][<INVALID>]
 :00064 %7 = %7 - %10                        [<INVALID>][<INVALID>]
 :00065 %10 = literal[[3, 5, 6]]
 :00066 %10 = %10.include?(%2;1)             [<INVALID>]
 :00068 condnotbr %10 =>:00073
+:00069 %10 = literal[0.6]
 :00070 %6 = %6 * %10                        [<INVALID>][<INVALID>]
 :00071 %10 = %6
 :00072 %7 = %7 - %10                        [<INVALID>][<INVALID>]
+:00073 %10 = const[Complex]                 [<INVALID>]
 :00074 %11 = %6
 :00075 %12 = const[Math::PI]                [<INVALID>]
 :00076 %12 = %12 / 12: i16                  [<INVALID>][<INVALID>]
 :00077 %13 = literal[[0, 6, 10, 8, 2, 4, 0, 0]]
 :00078 %13 = %13.[%2]                       [<INVALID>][<INVALID>]
 :00079 %13 = %13 * 2: i16                   [<INVALID>][<INVALID>]
 :00080 %13 = %13 - 7: i16                   [<INVALID>][<INVALID>]
 :00081 %12 = %12 * %13                      [<INVALID>][<INVALID>]
 :00082 %10 = %10.polar(%11;2)               [<INVALID>]
 :00084 %9 = %9 + %10                        [<INVALID>][<INVALID>]
+:00085 %11 = literal[[105, 0.57]]
 :00086 %12 = literal[[251, 0.351]]
 :00087 %13 = literal[[15, 1.015]]
 :00088 %10 = array[%11; 3]
 :00089 %11 = literal[52822017]
 :00090 %10 = %10.map( &%11)                 [<INVALID>]
 :00092 ret %10
------------------------------------
------------------------------------
<block in defacto_palette> /home/monochrome/optcarrot/lib/optcarrot/palette.rb:28
meta:on_stack:true kind:Ruby mode:method FuncId(805) regs:9 ISeq(RubyFuncInfo { id:805 name:<unnamed> method:(FuncId(801), 2) args: 1 non_temp: 4 temp: 4})
[]
+:00000 init_method reg:8 arg:1 req:1 opt:0 rest:false block:None stack_offset:8
 :00001 %6 = %1 >> 16: i16                   [<INVALID>][<INVALID>]
 :00002 %6 = %6 & 255: i16                   [<INVALID>][<INVALID>]
 :00003 %7 = dynvar(1, %1)
 :00004 %6 = %6 * %7                         [<INVALID>][<INVALID>]
 :00005 %6 = %6.floor()                      [<INVALID>]
 :00007 %7 = 255: i32
 :00008 %5 = array[%6; 2]
 :00009 %2 = %5.min()                        [<INVALID>]
 :00011 %6 = %1 >> 8: i16                    [<INVALID>][<INVALID>]
 :00012 %6 = %6 & 255: i16                   [<INVALID>][<INVALID>]
 :00013 %7 = dynvar(1, %2)
 :00014 %6 = %6 * %7                         [<INVALID>][<INVALID>]
 :00015 %6 = %6.floor()                      [<INVALID>]
 :00017 %7 = 255: i32
 :00018 %5 = array[%6; 2]
 :00019 %3 = %5.min()                        [<INVALID>]
 :00021 %6 = %1 >> 0: i16                    [<INVALID>][<INVALID>]
 :00022 %6 = %6 & 255: i16                   [<INVALID>][<INVALID>]
 :00023 %7 = dynvar(1, %3)
 :00024 %6 = %6 * %7                         [<INVALID>][<INVALID>]
 :00025 %6 = %6.floor()                      [<INVALID>]
 :00027 %7 = 255: i32
 :00028 %5 = array[%6; 2]
 :00029 %4 = %5.min()                        [<INVALID>]
 :00031 %6 = %2
 :00032 %7 = %3
 :00033 %8 = %4
 :00034 %5 = array[%6; 3]
 :00035 ret %5
------------------------------------
------------------------------------
<block in nestopia_palette> /home/monochrome/optcarrot/lib/optcarrot/palette.rb:58
meta:on_stack:true kind:Ruby mode:method FuncId(806) regs:9 ISeq(RubyFuncInfo { id:806 name:<unnamed> method:(FuncId(802), 2) args: 2 non_temp: 3 temp: 5})
[]
+:00000 init_method reg:8 arg:2 req:2 opt:0 rest:false block:None stack_offset:8
 :00001 %4 = dynvar(1, %7)
 :00002 %5 = const[Complex]                  [<INVALID>]
 :00003 %6 = %2 * 2: i16                     [<INVALID>][<INVALID>]
 :00004 %7 = %1 - 33: i16                    [<INVALID>][<INVALID>]
 :00005 %8 = const[Math::PI]                 [<INVALID>]
 :00006 %7 = %7 * %8                         [<INVALID>][<INVALID>]
 :00007 %7 = %7 / 180: i16                   [<INVALID>][<INVALID>]
 :00008 %5 = %5.polar(%6;2)                  [<INVALID>]
 :00010 %6 = dynvar(1, %9)
 :00011 %6 = %6.conjugate()                  [<INVALID>]
 :00013 %5 = %5 * %6                         [<INVALID>][<INVALID>]
 :00014 %5 = %5.real()                       [<INVALID>]
 :00016 %3 = %4 + %5                         [<INVALID>][<INVALID>]
 :00017 %5 = 0: i32
 :00018 %6 = %3 * 255: i16                   [<INVALID>][<INVALID>]
 :00019 %6 = %6.round()                      [<INVALID>]
 :00021 %7 = 255: i32
 :00022 %4 = array[%5; 3]
 :00023 %4 = %4.sort()                       [<INVALID>]
 :00025 %5 = 1: i32
 :00026 %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00027 ret %4
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(807) regs:2 ISeq(RubyFuncInfo { id:807 name:/main method:(FuncId(807), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(808)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(808) regs:2 ISeq(RubyFuncInfo { id:808 name:Optcarrot method:(FuncId(808), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 _ = module_def Driver: FuncId(809)
 :00002 _ = class_def Video < _: FuncId(810)
 :00003 _ = class_def Audio < _: FuncId(811)
 :00004 %1 = class_def Input < _: FuncId(812)
 :00005 ret %1
------------------------------------
------------------------------------
<Driver> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(809) regs:8 ISeq(RubyFuncInfo { id:809 name:Driver method:(FuncId(809), 0) args: 0 non_temp: 0 temp: 7})
[]
+:00000 init_method reg:7 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 %2 = :video
 :00002 %3 = literal[{:sdl2=>:SDL2Video, :sfml=>:SFMLVideo, :png=>:PNGVideo, :gif=>:GIFVideo, :sixel=>:SixelVideo, :mplayer=>:MPlayerVideo, :none=>:Video}]
 :00003 %4 = :audio
 :00004 %5 = literal[{:sdl2=>:SDL2Audio, :sfml=>:SFMLAudio, :ao=>:AoAudio, :wav=>:WAVAudio, :none=>:Audio}]
 :00005 %6 = :input
 :00006 %7 = literal[{:sdl2=>:SDL2Input, :sfml=>:SFMLInput, :term=>:TermInput, :log=>:LogInput, :none=>:Input}]
 :00007 %1 = hash[%2; 3]
 :00008 const[DRIVER_DB] = %1
 :00009 _ = %0.module_function()             [<INVALID>]
 :00011 method_def load: FuncId(813)
 :00012 method_def load_each: FuncId(814)
 :00013 %1 = :load_each
 :00014 ret %1
------------------------------------
------------------------------------
<Video> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:62
meta:on_stack:true kind:Ruby mode:class_def FuncId(810) regs:2 ISeq(RubyFuncInfo { id:810 name:Video method:(FuncId(810), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = 256: i32
 :00002 const[WIDTH] = %1
 :00003 %1 = 292: i32
 :00004 const[TV_WIDTH] = %1
 :00005 %1 = 224: i32
 :00006 const[HEIGHT] = %1
 :00007 method_def initialize: FuncId(815)
 :00008 %1 = :palette
 :00009 _ = %0.attr_reader(%1;1)             [<INVALID>]
 :00011 method_def init: FuncId(816)
 :00012 method_def dispose: FuncId(817)
 :00013 method_def tick: FuncId(818)
 :00014 method_def change_window_size: FuncId(819)
 :00015 method_def on_resize: FuncId(820)
 :00016 %1 = :on_resize
 :00017 ret %1
------------------------------------
------------------------------------
<Audio> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:97
meta:on_stack:true kind:Ruby mode:class_def FuncId(811) regs:2 ISeq(RubyFuncInfo { id:811 name:Audio method:(FuncId(811), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[{8=>"c*", 16=>"v*"}]
 :00002 const[PACK_FORMAT] = %1
 :00003 %1 = 3: i32
 :00004 const[BUFFER_IN_FRAME] = %1
 :00005 method_def initialize: FuncId(821)
 :00006 method_def spec: FuncId(822)
 :00007 method_def init: FuncId(823)
 :00008 method_def dispose: FuncId(824)
 :00009 method_def tick: FuncId(825)
 :00010 %1 = :tick
 :00011 ret %1
------------------------------------
------------------------------------
<Input> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:126
meta:on_stack:true kind:Ruby mode:class_def FuncId(812) regs:2 ISeq(RubyFuncInfo { id:812 name:Input method:(FuncId(812), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 method_def initialize: FuncId(826)
 :00002 method_def init: FuncId(827)
 :00003 method_def dispose: FuncId(828)
 :00004 method_def tick: FuncId(829)
 :00005 method_def event: FuncId(830)
 :00006 %1 = :event
 :00007 ret %1
------------------------------------
------------------------------------
<load> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:32
meta:on_stack:true kind:Ruby mode:method FuncId(813) regs:9 ISeq(RubyFuncInfo { id:813 name:load method:(FuncId(813), 0) args: 1 non_temp: 4 temp: 4})
[]
+:00000 init_method reg:8 arg:1 req:1 opt:0 rest:false block:None stack_offset:8
 :00001 %5 = %1
 :00002 %6 = :video
 :00003 %7 = %1.video()                      [<INVALID>]
 :00005 %5 = %0.load_each(%5;3)              [<INVALID>]
 :00007 %2 = %5.new(%1;1)                    [<INVALID>]
 :00009 %5 = %1
 :00010 %6 = :audio
 :00011 %7 = %1.audio()                      [<INVALID>]
 :00013 %5 = %0.load_each(%5;3)              [<INVALID>]
 :00015 %3 = %5.new(%1;1)                    [<INVALID>]
 :00017 %5 = %1
 :00018 %6 = :input
 :00019 %7 = %1.input()                      [<INVALID>]
 :00021 %5 = %0.load_each(%5;3)              [<INVALID>]
 :00023 %6 = %1
 :00024 %7 = %2
 :00025 %4 = %5.new(%6;2)                    [<INVALID>]
 :00027 %6 = %2
 :00028 %7 = %3
 :00029 %8 = %4
 :00030 %5 = array[%6; 3]
 :00031 ret %5
------------------------------------
------------------------------------
<load_each> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:39
meta:on_stack:true kind:Ruby mode:method FuncId(814) regs:11 ISeq(RubyFuncInfo { id:814 name:load_each method:(FuncId(814), 0) args: 3 non_temp: 5 temp: 5})
[]
+:00000 init_method reg:10 arg:3 req:3 opt:0 rest:false block:None stack_offset:9
 :00001 condnotbr %3 =>:00037
+:00002 %6 = const[DRIVER_DB]                [<INVALID>]
 :00003 %6 = %6.[%2]                         [<INVALID>][<INVALID>]
 :00004 %4 = %6.[%3]                         [<INVALID>][<INVALID>]
 :00005 condnotbr %4 =>:00007
+:00006 br =>:00014
+:00007 %6 = literal["unknown "]
 :00008 %7 = %2
 :00009 %8 = literal[" driver: "]
 :00010 %9 = %3
 :00011 %6 = concat(%6; 4)
 :00012 _ = %0.raise(%6;1)                   [<INVALID>]
+:00014 %6 = :none
 :00015 _%6 = %3 == %6                       [<INVALID>][<INVALID>]
 :00016 condnotbr _%6 =>:00018
+:00017 br =>:00025
+:00018 %6 = literal["driver/"]
 :00019 %7 = %3
 :00020 %8 = literal["_"]
 :00021 %9 = %2
 :00022 %6 = concat(%6; 4)
 :00023 _ = %0.require_relative(%6;1)        [<INVALID>]
+:00025 %6 = literal["`"]
 :00026 %7 = %3
 :00027 %8 = literal["' "]
 :00028 %9 = %2
 :00029 %10 = literal[" driver is selected"]
 :00030 %6 = concat(%6; 5)
 :00031 _ = %1.debug(%6;1)                   [<INVALID>]
 :00033 %6 = const[Optcarrot]                [<INVALID>]
 :00034 %6 = %6.const_get(%4;1)              [<INVALID>]
 :00036 ret %6
+:00037 %5 = nil
 :00038 %6 = const[DRIVER_DB]                [<INVALID>]
 :00039 %6 = %6.[%2]                         [<INVALID>][<INVALID>]
 :00040 %7 = literal[54460417]
 :00041 _ = %6.each_key( &%7)                [<INVALID>]
 :00043 ret %5
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:67
meta:on_stack:true kind:Ruby mode:method FuncId(815) regs:4 ISeq(RubyFuncInfo { id:815 name:initialize method:(FuncId(815), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 @conf: <INVALID>[IvarId(0)] = %1
 :00002 %2 = @conf: <INVALID>[IvarId(0)]
 :00003 %2 = %2.nestopia_palette()           [<INVALID>]
 :00005 condnotbr %2 =>:00010
+:00006 %2 = const[Palette]                  [<INVALID>]
 :00007 %2 = %2.nestopia_palette()           [<INVALID>]
 :00009 br =>:00013
+:00010 %2 = const[Palette]                  [<INVALID>]
 :00011 %2 = %2.defacto_palette()            [<INVALID>]
+:00013 @palette_rgb: <INVALID>[IvarId(0)] = %2
 :00014 %3 = literal[0..4096]
 :00015 %2 = array[%3; 1]
 :00016 @palette: <INVALID>[IvarId(0)] = %2
 :00017 %2 = %0.init()                       [<INVALID>]
 :00019 ret %2
------------------------------------
------------------------------------
<init> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:76
meta:on_stack:true kind:Ruby mode:method FuncId(816) regs:2 ISeq(RubyFuncInfo { id:816 name:init method:(FuncId(816), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = literal[[]]
 :00002 @times: <INVALID>[IvarId(0)] = %1
 :00003 ret %1
------------------------------------
------------------------------------
<dispose> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:80
meta:on_stack:true kind:Ruby mode:method FuncId(817) regs:2 ISeq(RubyFuncInfo { id:817 name:dispose method:(FuncId(817), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<tick> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:83
meta:on_stack:true kind:Ruby mode:method FuncId(818) regs:5 ISeq(RubyFuncInfo { id:818 name:tick method:(FuncId(818), 0) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = @times: <INVALID>[IvarId(0)]
 :00002 %3 = const[Process]                  [<INVALID>]
 :00003 %4 = const[Process::CLOCK_MONOTONIC] [<INVALID>]
 :00004 %3 = %3.clock_gettime(%4;1)          [<INVALID>]
 :00006 %2 = %2 << %3                        [<INVALID>][<INVALID>]
 :00007 %2 = @times: <INVALID>[IvarId(0)]
 :00008 %2 = %2.size()                       [<INVALID>]
 :00010 _%2 = %2 > 10: i16                   [<INVALID>][<INVALID>]
 :00011 condnotbr _%2 =>:00015
+:00012 %2 = @times: <INVALID>[IvarId(0)]
 :00013 _ = %2.shift()                       [<INVALID>]
+:00015 %2 = @times: <INVALID>[IvarId(0)]
 :00016 %2 = %2.size()                       [<INVALID>]
 :00018 _%2 = %2 < 2: i16                    [<INVALID>][<INVALID>]
 :00019 condnotbr _%2 =>:00022
+:00020 %2 = 0: i32
 :00021 ret %2
+:00022 %2 = @times: <INVALID>[IvarId(0)]
 :00023 %2 = %2.last()                       [<INVALID>]
 :00025 %3 = @times: <INVALID>[IvarId(0)]
 :00026 %3 = %3.first()                      [<INVALID>]
 :00028 %2 = %2 - %3                         [<INVALID>][<INVALID>]
 :00029 %3 = @times: <INVALID>[IvarId(0)]
 :00030 %3 = %3.size()                       [<INVALID>]
 :00032 %3 = %3 - 1: i16                     [<INVALID>][<INVALID>]
 :00033 %2 = %2 / %3                         [<INVALID>][<INVALID>]
 :00034 %2 = %2 ** -1: i16                   [<INVALID>][<INVALID>]
 :00035 ret %2
------------------------------------
------------------------------------
<change_window_size> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:89
meta:on_stack:true kind:Ruby mode:method FuncId(819) regs:3 ISeq(RubyFuncInfo { id:819 name:change_window_size method:(FuncId(819), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = nil
 :00002 ret %2
------------------------------------
------------------------------------
<on_resize> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:92
meta:on_stack:true kind:Ruby mode:method FuncId(820) regs:4 ISeq(RubyFuncInfo { id:820 name:on_resize method:(FuncId(820), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 %3 = nil
 :00002 ret %3
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:101
meta:on_stack:true kind:Ruby mode:method FuncId(821) regs:4 ISeq(RubyFuncInfo { id:821 name:initialize method:(FuncId(821), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 @conf: <INVALID>[IvarId(0)] = %1
 :00002 %2 = %1.audio_sample_rate()          [<INVALID>]
 :00004 @rate: <INVALID>[IvarId(0)] = %2
 :00005 %2 = %1.audio_bit_depth()            [<INVALID>]
 :00007 @bits: <INVALID>[IvarId(0)] = %2
 :00008 %2 = @bits: <INVALID>[IvarId(0)]
 :00009 _%2 = %2 == 8: i16                   [<INVALID>][<INVALID>]
 :00010 condbr _%2 =>:00014
+:00011 %2 = @bits: <INVALID>[IvarId(0)]
 :00012 _%2 = %2 == 16: i16                  [<INVALID>][<INVALID>]
 :00013 condnotbr _%2 =>:00015
+:00014 br =>:00018
+:00015 %2 = literal["sample bits must be 8 or 16"]
 :00016 _ = %0.raise(%2;1)                   [<INVALID>]
+:00018 %2 = const[PACK_FORMAT]              [<INVALID>]
 :00019 %3 = @bits: <INVALID>[IvarId(0)]
 :00020 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00021 @pack_format: <INVALID>[IvarId(0)] = %2
 :00022 %2 = %0.init()                       [<INVALID>]
 :00024 ret %2
------------------------------------
------------------------------------
<spec> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:111
meta:on_stack:true kind:Ruby mode:method FuncId(822) regs:4 ISeq(RubyFuncInfo { id:822 name:spec method:(FuncId(822), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @rate: <INVALID>[IvarId(0)]
 :00002 %3 = @bits: <INVALID>[IvarId(0)]
 :00003 %1 = array[%2; 2]
 :00004 ret %1
------------------------------------
------------------------------------
<init> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:115
meta:on_stack:true kind:Ruby mode:method FuncId(823) regs:2 ISeq(RubyFuncInfo { id:823 name:init method:(FuncId(823), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<dispose> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:118
meta:on_stack:true kind:Ruby mode:method FuncId(824) regs:2 ISeq(RubyFuncInfo { id:824 name:dispose method:(FuncId(824), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<tick> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:121
meta:on_stack:true kind:Ruby mode:method FuncId(825) regs:3 ISeq(RubyFuncInfo { id:825 name:tick method:(FuncId(825), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = nil
 :00002 ret %2
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:127
meta:on_stack:true kind:Ruby mode:method FuncId(826) regs:4 ISeq(RubyFuncInfo { id:826 name:initialize method:(FuncId(826), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 @conf: <INVALID>[IvarId(0)] = %1
 :00002 @video: <INVALID>[IvarId(0)] = %2
 :00003 %3 = %0.init()                       [<INVALID>]
 :00005 ret %3
------------------------------------
------------------------------------
<init> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:133
meta:on_stack:true kind:Ruby mode:method FuncId(827) regs:2 ISeq(RubyFuncInfo { id:827 name:init method:(FuncId(827), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<dispose> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:136
meta:on_stack:true kind:Ruby mode:method FuncId(828) regs:2 ISeq(RubyFuncInfo { id:828 name:dispose method:(FuncId(828), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<tick> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:139
meta:on_stack:true kind:Ruby mode:method FuncId(829) regs:4 ISeq(RubyFuncInfo { id:829 name:tick method:(FuncId(829), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 %3 = nil
 :00002 ret %3
------------------------------------
------------------------------------
<event> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:142
meta:on_stack:true kind:Ruby mode:method FuncId(830) regs:10 ISeq(RubyFuncInfo { id:830 name:event method:(FuncId(830), 0) args: 4 non_temp: 4 temp: 5})
[]
+:00000 init_method reg:9 arg:4 req:4 opt:0 rest:false block:None stack_offset:8
 :00001 %6 = %3
 :00002 %7 = :start
 :00003 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00004 condnotbr _%7 =>:00011
+:00005 %7 = %2
 :00006 %8 = %4
 :00007 %9 = const[Pad::START]               [<INVALID>]
 :00008 %5 = %1.send(%7;3)                   [<INVALID>]
 :00010 ret %5
+:00011 %7 = :select
 :00012 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00013 condnotbr _%7 =>:00020
+:00014 %7 = %2
 :00015 %8 = %4
 :00016 %9 = const[Pad::SELECT]              [<INVALID>]
 :00017 %5 = %1.send(%7;3)                   [<INVALID>]
 :00019 ret %5
+:00020 %7 = :a
 :00021 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00022 condnotbr _%7 =>:00029
+:00023 %7 = %2
 :00024 %8 = %4
 :00025 %9 = const[Pad::A]                   [<INVALID>]
 :00026 %5 = %1.send(%7;3)                   [<INVALID>]
 :00028 ret %5
+:00029 %7 = :b
 :00030 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00031 condnotbr _%7 =>:00038
+:00032 %7 = %2
 :00033 %8 = %4
 :00034 %9 = const[Pad::B]                   [<INVALID>]
 :00035 %5 = %1.send(%7;3)                   [<INVALID>]
 :00037 ret %5
+:00038 %7 = :right
 :00039 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00040 condnotbr _%7 =>:00047
+:00041 %7 = %2
 :00042 %8 = %4
 :00043 %9 = const[Pad::RIGHT]               [<INVALID>]
 :00044 %5 = %1.send(%7;3)                   [<INVALID>]
 :00046 ret %5
+:00047 %7 = :left
 :00048 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00049 condnotbr _%7 =>:00056
+:00050 %7 = %2
 :00051 %8 = %4
 :00052 %9 = const[Pad::LEFT]                [<INVALID>]
 :00053 %5 = %1.send(%7;3)                   [<INVALID>]
 :00055 ret %5
+:00056 %7 = :down
 :00057 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00058 condnotbr _%7 =>:00065
+:00059 %7 = %2
 :00060 %8 = %4
 :00061 %9 = const[Pad::DOWN]                [<INVALID>]
 :00062 %5 = %1.send(%7;3)                   [<INVALID>]
 :00064 ret %5
+:00065 %7 = :up
 :00066 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00067 condnotbr _%7 =>:00074
+:00068 %7 = %2
 :00069 %8 = %4
 :00070 %9 = const[Pad::UP]                  [<INVALID>]
 :00071 %5 = %1.send(%7;3)                   [<INVALID>]
 :00073 ret %5
+:00074 %6 = :keydown
 :00075 _%6 = %2 != %6                       [<INVALID>][<INVALID>]
 :00076 condnotbr _%6 =>:00079
+:00077 %6 = nil
 :00078 ret %6
+:00079 %7 = %3
 :00080 %8 = :screen_x1
 :00081 _%8 = %8 === %7                      [<INVALID>][<INVALID>]
 :00082 condnotbr _%8 =>:00088
+:00083 %8 = @video: <INVALID>[IvarId(0)]
 :00084 %9 = 1: i32
 :00085 %6 = %8.change_window_size(%9;1)     [<INVALID>]
 :00087 br =>:00120
+:00088 %8 = :screen_x2
 :00089 _%8 = %8 === %7                      [<INVALID>][<INVALID>]
 :00090 condnotbr _%8 =>:00096
+:00091 %8 = @video: <INVALID>[IvarId(0)]
 :00092 %9 = 2: i32
 :00093 %6 = %8.change_window_size(%9;1)     [<INVALID>]
 :00095 br =>:00120
+:00096 %8 = :screen_x3
 :00097 _%8 = %8 === %7                      [<INVALID>][<INVALID>]
 :00098 condnotbr _%8 =>:00104
+:00099 %8 = @video: <INVALID>[IvarId(0)]
 :00100 %9 = 3: i32
 :00101 %6 = %8.change_window_size(%9;1)     [<INVALID>]
 :00103 br =>:00120
+:00104 %8 = :screen_full
 :00105 _%8 = %8 === %7                      [<INVALID>][<INVALID>]
 :00106 condnotbr _%8 =>:00112
+:00107 %8 = @video: <INVALID>[IvarId(0)]
 :00108 %9 = nil
 :00109 %6 = %8.change_window_size(%9;1)     [<INVALID>]
 :00111 br =>:00120
+:00112 %8 = :quit
 :00113 _%8 = %8 === %7                      [<INVALID>][<INVALID>]
 :00114 condnotbr _%8 =>:00119
+:00115 %8 = %0.exit()                       [<INVALID>]
 :00117 %6 = %8
 :00118 br =>:00120
+:00119 %6 = nil
+:00120 %5 = %6
 :00121 ret %5
------------------------------------
------------------------------------
<block in load_each> /home/monochrome/optcarrot/lib/optcarrot/driver.rb:48
meta:on_stack:true kind:Ruby mode:method FuncId(831) regs:9 ISeq(RubyFuncInfo { id:831 name:<unnamed> method:(FuncId(814), 1) args: 1 non_temp: 1 temp: 7})
[(:00001..:00009, Some(:00009), None, Some(%2))]
+:00000 init_method reg:8 arg:1 req:1 opt:0 rest:false block:None stack_offset:8
 :00001 %2 = dynvar(1, %1)
 :00002 %3 = dynvar(1, %2)
 :00003 %4 = %1
 :00004 %2 = %0.load_each(%2;3)              [<INVALID>]
 :00006 dynvar(1, %5) = %2
 :00007 %2 = nil
 :00008 break %2
+:00009 %3 = const[LoadError]                [<INVALID>]
 :00010 _%3 = %3 === %2                      [<INVALID>][<INVALID>]
 :00011 condbr _%3 =>:00013
+:00012 br =>:00023
+:00013 %3 = dynvar(1, %1)
 :00014 %4 = literal["fail to use `"]
 :00015 %5 = %1
 :00016 %6 = literal["' "]
 :00017 %7 = dynvar(1, %2)
 :00018 %8 = literal[" driver"]
 :00019 %4 = concat(%4; 5)
 :00020 %3 = %3.debug(%4;1)                  [<INVALID>]
 :00022 ret %3
+:00023 raise %2
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/config.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(833) regs:2 ISeq(RubyFuncInfo { id:833 name:/main method:(FuncId(833), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = module_def Optcarrot: FuncId(834)
 :00002 ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/config.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(834) regs:2 ISeq(RubyFuncInfo { id:834 name:Optcarrot method:(FuncId(834), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = class_def Config < _: FuncId(835)
 :00002 ret %1
------------------------------------
------------------------------------
<Config> /home/monochrome/optcarrot/lib/optcarrot/config.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(835) regs:30 ISeq(RubyFuncInfo { id:835 name:Config method:(FuncId(835), 0) args: 0 non_temp: 0 temp: 29})
[]
+:00000 init_method reg:29 arg:0 req:0 opt:0 rest:false block:None stack_offset:18
 :00001 %2 = :optimization
 :00002 %4 = :opt_ppu
 :00003 %6 = :type
 :00004 %7 = :opts
 :00005 %8 = :desc
 :00006 %9 = literal["select PPU optimizations"]
 :00007 %10 = :candidates
 :00008 %11 = const[PPU::OptimizedCodeBuilder::OPTIONS] [<INVALID>]
 :00009 %12 = :default
 :00010 %13 = nil
 :00011 %5 = hash[%6; 4]
 :00012 %6 = :opt_cpu
 :00013 %8 = :type
 :00014 %9 = :opts
 :00015 %10 = :desc
 :00016 %11 = literal["select CPU optimizations"]
 :00017 %12 = :candidates
 :00018 %13 = const[CPU::OptimizedCodeBuilder::OPTIONS] [<INVALID>]
 :00019 %14 = :default
 :00020 %15 = nil
 :00021 %7 = hash[%8; 4]
 :00022 %8 = :opt
 :00023 %10 = :shortcut
 :00024 %11 = literal[["--opt-ppu=all", "--opt-cpu=all"]]
 :00025 %9 = hash[%10; 1]
 :00026 %10 = :list_opts
 :00027 %11 = literal[{:type=>:info, :desc=>"list available optimizations"}]
 :00028 %12 = :dump_ppu
 :00029 %13 = literal[{:type=>:info, :desc=>"print generated PPU source code"}]
 :00030 %14 = :dump_cpu
 :00031 %15 = literal[{:type=>:info, :desc=>"print generated CPU source code"}]
 :00032 %16 = :load_ppu
 :00033 %17 = literal[{:type=>"FILE", :desc=>"use generated PPU source code"}]
 :00034 %18 = :load_cpu
 :00035 %19 = literal[{:type=>"FILE", :desc=>"use generated CPU source code"}]
 :00036 %3 = hash[%4; 8]
 :00037 %4 = :emulation
 :00038 %6 = :sprite_limit
 :00039 %7 = literal[{:type=>:switch, :desc=>"enable/disable sprite limit", :default=>false}]
 :00040 %8 = :frames
 :00041 %10 = :type
 :00042 %11 = :int
 :00043 %12 = :desc
 :00044 %13 = literal["execute N frames (0 = no limit)"]
 :00045 %14 = :default
 :00046 %15 = 0: i32
 :00047 %16 = :aliases
 :00048 %17 = literal[[:f, :frame]]
 :00049 %9 = hash[%10; 4]
 :00050 %10 = :audio_sample_rate
 :00051 %11 = literal[{:type=>:int, :desc=>"set audio sample rate", :default=>44100}]
 :00052 %12 = :audio_bit_depth
 :00053 %13 = literal[{:type=>:int, :desc=>"set audio bit depth", :default=>16}]
 :00054 %14 = :nestopia_palette
 :00055 %15 = literal[{:type=>:switch, :desc=>"use Nestopia palette instead of de facto", :default=>false}]
 :00056 %5 = hash[%6; 5]
 :00057 %6 = :driver
 :00058 %8 = :video
 :00059 %10 = :type
 :00060 %11 = :driver
 :00061 %12 = :desc
 :00062 %13 = literal["select video driver"]
 :00063 %14 = :candidates
 :00064 %15 = const[Driver::DRIVER_DB]       [<INVALID>]
 :00065 %16 = :video
 :00066 %15 = %15.[%16]                      [<INVALID>][<INVALID>]
 :00067 %15 = %15.keys()                     [<INVALID>]
 :00069 %9 = hash[%10; 3]
 :00070 %10 = :audio
 :00071 %12 = :type
 :00072 %13 = :driver
 :00073 %14 = :desc
 :00074 %15 = literal["select audio driver"]
 :00075 %16 = :candidates
 :00076 %17 = const[Driver::DRIVER_DB]       [<INVALID>]
 :00077 %18 = :audio
 :00078 %17 = %17.[%18]                      [<INVALID>][<INVALID>]
 :00079 %17 = %17.keys()                     [<INVALID>]
 :00081 %11 = hash[%12; 3]
 :00082 %12 = :input
 :00083 %14 = :type
 :00084 %15 = :driver
 :00085 %16 = :desc
 :00086 %17 = literal["select input driver"]
 :00087 %18 = :candidates
 :00088 %19 = const[Driver::DRIVER_DB]       [<INVALID>]
 :00089 %20 = :input
 :00090 %19 = %19.[%20]                      [<INVALID>][<INVALID>]
 :00091 %19 = %19.keys()                     [<INVALID>]
 :00093 %13 = hash[%14; 3]
 :00094 %14 = :list_drivers
 :00095 %15 = literal[{:type=>:info, :desc=>"print available drivers"}]
 :00096 %16 = :sdl2
 :00097 %18 = :shortcut
 :00098 %19 = literal[["--video=sdl2", "--audio=sdl2", "--input=sdl2"]]
 :00099 %17 = hash[%18; 1]
 :00100 %18 = :sfml
 :00101 %20 = :shortcut
 :00102 %21 = literal[["--video=sfml", "--audio=sfml", "--input=sfml"]]
 :00103 %19 = hash[%20; 1]
 :00104 %20 = :headless
 :00105 %22 = :shortcut
 :00106 %23 = literal[["--video=none", "--audio=none", "--input=none"]]
 :00107 %21 = hash[%22; 1]
 :00108 %22 = :video_output
 :00109 %23 = literal[{:type=>"FILE", :desc=>"save video to file", :default=>"video.EXT"}]
 :00110 %24 = :audio_output
 :00111 %25 = literal[{:type=>"FILE", :desc=>"save audio to file", :default=>"audio.wav"}]
 :00112 %26 = :show_fps
 :00113 %27 = literal[{:type=>:switch, :desc=>"show fps in the right-bottom corner", :default=>true}]
 :00114 %28 = :key_log
 :00115 %29 = literal[{:type=>"FILE", :desc=>"use recorded input file"}]
 :00116 %7 = hash[%8; 11]
 :00117 %8 = :profiling
 :00118 %10 = :print_fps
 :00119 %11 = literal[{:type=>:switch, :desc=>"print fps of last 10 frames", :default=>false}]
 :00120 %12 = :print_p95fps
 :00121 %13 = literal[{:type=>:switch, :desc=>"print 95th percentile fps", :default=>false}]
 :00122 %14 = :print_fps_history
 :00123 %15 = literal[{:type=>:switch, :desc=>"print all fps values for each frame", :default=>false}]
 :00124 %16 = :print_video_checksum
 :00125 %17 = literal[{:type=>:switch, :desc=>"print checksum of the last video output", :default=>false}]
 :00126 %18 = :stackprof
 :00127 %19 = literal[{:shortcut=>"--stackprof-mode=cpu", :aliases=>:p}]
 :00128 %20 = :stackprof_mode
 :00129 %21 = literal[{:type=>"MODE", :desc=>"run under stackprof", :default=>nil}]
 :00130 %22 = :stackprof_output
 :00131 %23 = literal[{:type=>"FILE", :desc=>"stackprof output file", :default=>"stackprof-MODE.dump"}]
 :00132 %9 = hash[%10; 7]
 :00133 %10 = :misc
 :00134 %12 = :benchmark
 :00135 %14 = :shortcut
 :00136 %15 = literal[["--headless", "--print-fps", "--print-video-checksum", "--frames", "180"]]
 :00137 %16 = :aliases
 :00138 %17 = :b
 :00139 %13 = hash[%14; 2]
 :00140 %14 = :loglevel
 :00141 %15 = literal[{:type=>:int, :desc=>"set loglevel", :default=>1}]
 :00142 %16 = :quiet
 :00143 %17 = literal[{:shortcut=>"--loglevel=0", :aliases=>:q}]
 :00144 %18 = :verbose
 :00145 %19 = literal[{:shortcut=>"--loglevel=2", :aliases=>:v}]
 :00146 %20 = :debug
 :00147 %21 = literal[{:shortcut=>"--loglevel=3", :aliases=>:d}]
 :00148 %22 = :version
 :00149 %23 = literal[{:type=>:info, :desc=>"print version"}]
 :00150 %24 = :help
 :00151 %25 = literal[{:type=>:info, :desc=>"print this message", :aliases=>:h}]
 :00152 %11 = hash[%12; 7]
 :00153 %1 = hash[%2; 5]
 :00154 const[OPTIONS] = %1
 :00155 %1 = literal[{}]
 :00156 const[DEFAULT_OPTIONS] = %1
 :00157 %1 = const[OPTIONS]                  [<INVALID>]
 :00158 %2 = literal[54788097]
 :00159 _ = %1.each_value( &%2)              [<INVALID>]
 :00161 %1 = :romfile
 :00162 _ = %0.attr_reader(%1;1)             [<INVALID>]
 :00164 method_def initialize: FuncId(837)
 :00165 method_def debug: FuncId(838)
 :00166 method_def info: FuncId(839)
 :00167 method_def warn: FuncId(840)
 :00168 method_def error: FuncId(841)
 :00169 method_def fatal: FuncId(842)
 :00170 %1 = class_def Parser < _: FuncId(843)
 :00171 ret %1
------------------------------------
------------------------------------
<block in Config> /home/monochrome/optcarrot/lib/optcarrot/config.rb:67
meta:on_stack:true kind:Ruby mode:method FuncId(836) regs:4 ISeq(RubyFuncInfo { id:836 name:<unnamed> method:(FuncId(835), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal[55312385]
 :00002 %2 = %1.each( &%2)                   [<INVALID>]
 :00004 ret %2
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/config.rb:76
meta:on_stack:true kind:Ruby mode:method FuncId(837) regs:5 ISeq(RubyFuncInfo { id:837 name:initialize method:(FuncId(837), 0) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = const[Array]                    [<INVALID>]
 :00002 %2 = %1.is_a?(%2;1)                  [<INVALID>]
 :00004 condnotbr %2 =>:00010
+:00005 %2 = const[Parser]                   [<INVALID>]
 :00006 %2 = %2.new(%1;1)                    [<INVALID>]
 :00008 %1 = %2.options()                    [<INVALID>]
+:00010 %2 = const[DEFAULT_OPTIONS]          [<INVALID>]
 :00011 %2 = %2.merge(%1;1)                  [<INVALID>]
 :00013 %3 = literal[55377921]
 :00014 %2 = %2.each( &%3)                   [<INVALID>]
 :00016 ret %2
------------------------------------
------------------------------------
<debug> /home/monochrome/optcarrot/lib/optcarrot/config.rb:81
meta:on_stack:true kind:Ruby mode:method FuncId(838) regs:3 ISeq(RubyFuncInfo { id:838 name:debug method:(FuncId(838), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @loglevel: <INVALID>[IvarId(0)]
 :00002 _%2 = %2 >= 3: i16                   [<INVALID>][<INVALID>]
 :00003 condnotbr _%2 =>:00009
+:00004 %2 = literal["[DEBUG] "]
 :00005 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00006 %2 = %0.puts(%2;1)                   [<INVALID>]
 :00008 ret %2
+:00009 %2 = nil
 :00010 ret %2
------------------------------------
------------------------------------
<info> /home/monochrome/optcarrot/lib/optcarrot/config.rb:85
meta:on_stack:true kind:Ruby mode:method FuncId(839) regs:3 ISeq(RubyFuncInfo { id:839 name:info method:(FuncId(839), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @loglevel: <INVALID>[IvarId(0)]
 :00002 _%2 = %2 >= 2: i16                   [<INVALID>][<INVALID>]
 :00003 condnotbr _%2 =>:00009
+:00004 %2 = literal["[INFO] "]
 :00005 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00006 %2 = %0.puts(%2;1)                   [<INVALID>]
 :00008 ret %2
+:00009 %2 = nil
 :00010 ret %2
------------------------------------
------------------------------------
<warn> /home/monochrome/optcarrot/lib/optcarrot/config.rb:89
meta:on_stack:true kind:Ruby mode:method FuncId(840) regs:3 ISeq(RubyFuncInfo { id:840 name:warn method:(FuncId(840), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = @loglevel: <INVALID>[IvarId(0)]
 :00002 _%2 = %2 >= 1: i16                   [<INVALID>][<INVALID>]
 :00003 condnotbr _%2 =>:00009
+:00004 %2 = literal["[WARN] "]
 :00005 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00006 %2 = %0.puts(%2;1)                   [<INVALID>]
 :00008 ret %2
+:00009 %2 = nil
 :00010 ret %2
------------------------------------
------------------------------------
<error> /home/monochrome/optcarrot/lib/optcarrot/config.rb:93
meta:on_stack:true kind:Ruby mode:method FuncId(841) regs:3 ISeq(RubyFuncInfo { id:841 name:error method:(FuncId(841), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal["[ERROR] "]
 :00002 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00003 %2 = %0.puts(%2;1)                   [<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
<fatal> /home/monochrome/optcarrot/lib/optcarrot/config.rb:97
meta:on_stack:true kind:Ruby mode:method FuncId(842) regs:3 ISeq(RubyFuncInfo { id:842 name:fatal method:(FuncId(842), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal["[FATAL] "]
 :00002 %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00003 _ = %0.puts(%2;1)                    [<INVALID>]
 :00005 %2 = %0.abort()                      [<INVALID>]
 :00007 ret %2
------------------------------------
------------------------------------
<Parser> /home/monochrome/optcarrot/lib/optcarrot/config.rb:103
meta:on_stack:true kind:Ruby mode:class_def FuncId(843) regs:2 ISeq(RubyFuncInfo { id:843 name:Parser method:(FuncId(843), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 method_def initialize: FuncId(846)
 :00002 %1 = :options
 :00003 _ = %0.attr_reader(%1;1)             [<INVALID>]
 :00005 %1 = const[RuntimeError]             [<INVALID>]
 :00006 _ = class_def Invalid < %1: FuncId(847)
 :00007 method_def error: FuncId(848)
 :00008 method_def find_option: FuncId(849)
 :00009 method_def parse_option: FuncId(850)
 :00010 method_def parse_operand: FuncId(851)
 :00011 method_def help: FuncId(852)
 :00012 method_def version: FuncId(853)
 :00013 method_def list_drivers: FuncId(854)
 :00014 method_def list_opts: FuncId(855)
 :00015 method_def dump_ppu: FuncId(856)
 :00016 method_def dump_cpu: FuncId(857)
 :00017 %1 = :dump_cpu
 :00018 ret %1
------------------------------------
------------------------------------
<block in Config> /home/monochrome/optcarrot/lib/optcarrot/config.rb:68
meta:on_stack:true kind:Ruby mode:method FuncId(844) regs:5 ISeq(RubyFuncInfo { id:844 name:<unnamed> method:(FuncId(835), 2) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = :shortcut
 :00002 %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00003 condnotbr %3 =>:00006
+:00004 %3 = nil
 :00005 ret %3
+:00006 %3 = :default
 :00007 %3 = %2.key?(%3;1)                   [<INVALID>]
 :00009 condnotbr %3 =>:00014
+:00010 %3 = const[DEFAULT_OPTIONS]          [<INVALID>]
 :00011 %4 = :default
 :00012 %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00013 %3:.[%1:] = %4
+:00014 %3 = %0.attr_reader(%1;1)            [<INVALID>]
 :00016 ret %3
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/config.rb:78
meta:on_stack:true kind:Ruby mode:method FuncId(845) regs:5 ISeq(RubyFuncInfo { id:845 name:<unnamed> method:(FuncId(837), 1) args: 2 non_temp: 2 temp: 2})
[]
+:00000 init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = literal["@"]
 :00002 %4 = %1
 :00003 %3 = concat(%3; 2)
 :00004 %3 = %3.to_sym()                     [<INVALID>]
 :00006 %4 = %2
 :00007 %3 = %0.instance_variable_set(%3;2)  [<INVALID>]
 :00009 ret %3
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/config.rb:104
meta:on_stack:true kind:Ruby mode:method FuncId(846) regs:6 ISeq(RubyFuncInfo { id:846 name:initialize method:(FuncId(846), 0) args: 1 non_temp: 2 temp: 3})
[(:00001..:00027, Some(:00027), None, Some(%3))]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = %1.dup()                        [<INVALID>]
 :00003 @argv: <INVALID>[IvarId(0)] = %3
 :00004 %3 = const[DEFAULT_OPTIONS]          [<INVALID>]
 :00005 %3 = %3.dup()                        [<INVALID>]
 :00007 @options: <INVALID>[IvarId(0)] = %3
+:00008 loop_start counter=0 jit-addr=0000000000000000
 :00009 %3 = @argv: <INVALID>[IvarId(0)]
 :00010 %3 = %3.empty?()                     [<INVALID>]
 :00012 condbr %3 =>:00016
+:00013 _ = %0.parse_option()                [<INVALID>]
 :00015 br =>:00008
+:00016 loop_end
+:00017 %3 = @options: <INVALID>[IvarId(0)]
 :00018 %4 = :romfile
 :00019 %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00020 condnotbr %3 =>:00023
+:00021 %3 = nil
 :00022 ret %3
+:00023 %3 = literal["ROM file is not given"]
 :00024 %3 = %0.error(%3;1)                  [<INVALID>]
 :00026 ret %3
+:00027 %2 = %3
 :00028 %4 = const[Invalid]                  [<INVALID>]
 :00029 _%4 = %4 === %3                      [<INVALID>][<INVALID>]
 :00030 condbr _%4 =>:00032
+:00031 br =>:00041
+:00032 %4 = literal["[FATAL] "]
 :00033 %5 = %2
 :00034 %4 = concat(%4; 2)
 :00035 _ = %0.puts(%4;1)                    [<INVALID>]
 :00037 %4 = 1: i32
 :00038 %4 = %0.exit(%4;1)                   [<INVALID>]
 :00040 ret %4
+:00041 raise %3
------------------------------------
------------------------------------
<Invalid> /home/monochrome/optcarrot/lib/optcarrot/config.rb:116
meta:on_stack:true kind:Ruby mode:class_def FuncId(847) regs:2 ISeq(RubyFuncInfo { id:847 name:Invalid method:(FuncId(847), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 %1 = nil
 :00002 ret %1
------------------------------------
------------------------------------
<error> /home/monochrome/optcarrot/lib/optcarrot/config.rb:118
meta:on_stack:true kind:Ruby mode:method FuncId(848) regs:4 ISeq(RubyFuncInfo { id:848 name:error method:(FuncId(848), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = const[Invalid]                  [<INVALID>]
 :00002 %3 = %1
 :00003 %2 = %0.raise(%2;2)                  [<INVALID>]
 :00005 ret %2
------------------------------------
------------------------------------
<find_option> /home/monochrome/optcarrot/lib/optcarrot/config.rb:122
meta:on_stack:true kind:Ruby mode:method FuncId(849) regs:5 ISeq(RubyFuncInfo { id:849 name:find_option method:(FuncId(849), 0) args: 1 non_temp: 1 temp: 3})
[]
+:00000 init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = const[OPTIONS]                  [<INVALID>]
 :00002 %3 = literal[56229889]
 :00003 _ = %2.each_value( &%3)              [<INVALID>]
 :00005 %2 = nil
 :00006 ret %2
------------------------------------
------------------------------------
<parse_option> /home/monochrome/optcarrot/lib/optcarrot/config.rb:136
meta:on_stack:true kind:Ruby mode:method FuncId(850) regs:11 ISeq(RubyFuncInfo { id:850 name:parse_option method:(FuncId(850), 0) args: 0 non_temp: 6 temp: 4})
[]
+:00000 init_method reg:10 arg:0 req:0 opt:0 rest:false block:None stack_offset:9
 :00001 %7 = @argv: <INVALID>[IvarId(0)]
 :00002 %7 = %7.shift()                      [<INVALID>]
 :00004 %8 = literal["="]
 :00005 %9 = 2: i32
 :00006 %7 = %7.split(%8;2)                  [<INVALID>]
 :00008 %8; 2 = expand(%7)
 :00009 %1 = %8
 :00010 %2 = %9
 :00011 %7 = literal[/(?m)\A-(\w{2,})\z/]
 :00012 %7 = %1.=~(%7;1)                     [<INVALID>]
 :00014 condnotbr %7 =>:00032
+:00015 %7 = $1
 :00016 %7 = %7.chars()                      [<INVALID>]
 :00018 %8 = literal[56295425]
 :00019 %3 = %7.map( &%8)                    [<INVALID>]
 :00021 condnotbr %2 =>:00027
+:00022 %7 = %3.last()                       [<INVALID>]
 :00024 %8 = literal["="]
 :00025 %7 = %7 << %8                        [<INVALID>][<INVALID>]
 :00026 %7 = %7 << %2                        [<INVALID>][<INVALID>]
+:00027 %7 = @argv: <INVALID>[IvarId(0)]
 :00028 _ = %7.unshift(%3;1)*                [<INVALID>]
 :00030 %7 = nil
 :00031 ret %7
+:00032 %7 = %0.find_option(%1;1)            [<INVALID>]
 :00034 %8; 3 = expand(%7)
 :00035 %4 = %8
 :00036 %5 = %9
 :00037 %6 = %10
 :00038 condnotbr %4 =>:00083
+:00039 %7 = :shortcut
 :00040 %7 = %4.[%7]                         [<INVALID>][<INVALID>]
 :00041 condnotbr %7 =>:00049
+:00042 %7 = @argv: <INVALID>[IvarId(0)]
 :00043 %8 = :shortcut
 :00044 %8 = %4.[%8]                         [<INVALID>][<INVALID>]
 :00045 _ = %7.unshift(%8;1)*                [<INVALID>]
 :00047 %7 = nil
 :00048 ret %7
+:00049 %7 = :type
 :00050 %7 = %4.[%7]                         [<INVALID>][<INVALID>]
 :00051 %8 = :info
 :00052 _%7 = %7 == %8                       [<INVALID>][<INVALID>]
 :00053 condnotbr _%7 =>:00059
+:00054 _ = %0.send(%5;1)                    [<INVALID>]
 :00056 %7 = %0.exit()                       [<INVALID>]
 :00058 ret %7
+:00059 %7 = :type
 :00060 %7 = %4.[%7]                         [<INVALID>][<INVALID>]
 :00061 %8 = :switch
 :00062 _%7 = %7 == %8                       [<INVALID>][<INVALID>]
 :00063 condnotbr _%7 =>:00075
+:00064 condnotbr %2 =>:00071
+:00065 %7 = literal["option `"]
 :00066 %8 = %1
 :00067 %9 = literal["' doesn't allow an operand"]
 :00068 %7 = concat(%7; 3)
 :00069 _ = %0.error(%7;1)                   [<INVALID>]
+:00071 %7 = @options: <INVALID>[IvarId(0)]
 :00072 %8 = !%6                             [<INVALID>]
 :00073 %7:.[%5:] = %8
 :00074 ret %8
+:00075 %7 = @options: <INVALID>[IvarId(0)]
 :00076 %8 = %2
 :00077 %9 = %1
 :00078 %10 = %4
 :00079 %8 = %0.parse_operand(%8;3)          [<INVALID>]
 :00081 %7:.[%5:] = %8
 :00082 ret %8
+:00083 %7 = literal["--"]
 :00084 _%7 = %1 == %7                       [<INVALID>][<INVALID>]
 :00085 condnotbr _%7 =>:00089
+:00086 %7 = @argv: <INVALID>[IvarId(0)]
 :00087 %1 = %7.shift()                      [<INVALID>]
+:00089 condnotbr %1 =>:00100
+:00090 %7 = literal["-"]
 :00091 %7 = %1.start_with?(%7;1)            [<INVALID>]
 :00093 condnotbr %7 =>:00100
+:00094 %7 = literal["invalid option: `"]
 :00095 %8 = %1
 :00096 %9 = literal["'"]
 :00097 %7 = concat(%7; 3)
 :00098 _ = %0.error(%7;1)                   [<INVALID>]
+:00100 condnotbr %1 =>:00115
+:00101 %7 = @options: <INVALID>[IvarId(0)]
 :00102 %8 = :romfile
 :00103 %7 = %7.[%8]                         [<INVALID>][<INVALID>]
 :00104 condnotbr %7 =>:00111
+:00105 %7 = literal["extra argument: `"]
 :00106 %8 = %1
 :00107 %9 = literal["'"]
 :00108 %7 = concat(%7; 3)
 :00109 _ = %0.error(%7;1)                   [<INVALID>]
+:00111 %7 = @options: <INVALID>[IvarId(0)]
 :00112 %8 = :romfile
 :00113 %7:.[%8:] = %1
 :00114 ret %1
+:00115 %7 = nil
 :00116 ret %7
------------------------------------
------------------------------------
<parse_operand> /home/monochrome/optcarrot/lib/optcarrot/config.rb:168
meta:on_stack:true kind:Ruby mode:method FuncId(851) regs:12 ISeq(RubyFuncInfo { id:851 name:parse_operand method:(FuncId(851), 0) args: 3 non_temp: 4 temp: 7})
[(:00044..:00047, Some(:00048), None, Some(%8))]
+:00000 init_method reg:11 arg:3 req:3 opt:0 rest:false block:None stack_offset:9
 :00001 %5 = :type
 :00002 %4 = %3.[%5]                         [<INVALID>][<INVALID>]
 :00003 %5 = %1
 :00004 condbr %5 =>:00009
+:00005 %6 = @argv: <INVALID>[IvarId(0)]
 :00006 %1 = %6.shift()                      [<INVALID>]
 :00008 %5 = %1
+:00009 %6 = %4
 :00010 %7 = :opts
 :00011 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00012 condnotbr _%7 =>:00021
+:00013 %7 = literal[","]
 :00014 %7 = %1.split(%7;1)                  [<INVALID>]
 :00016 %8 = literal[56360961]
 :00017 %1 = %7.map( &%8)                    [<INVALID>]
 :00019 %5 = %1
 :00020 br =>:00059
+:00021 %7 = :driver
 :00022 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00023 condnotbr _%7 =>:00041
+:00024 %1 = %1.to_sym()                     [<INVALID>]
 :00026 %7 = :candidates
 :00027 %7 = %3.[%7]                         [<INVALID>][<INVALID>]
 :00028 %7 = %7.include?(%1;1)               [<INVALID>]
 :00030 condnotbr %7 =>:00033
+:00031 %7 = nil
 :00032 br =>:00039
+:00033 %7 = literal["unknown driver: `"]
 :00034 %8 = %1
 :00035 %9 = literal["'"]
 :00036 %7 = concat(%7; 3)
 :00037 %7 = %0.error(%7;1)                  [<INVALID>]
+:00039 %5 = %7
 :00040 br =>:00059
+:00041 %7 = :int
 :00042 _%7 = %7 === %6                      [<INVALID>][<INVALID>]
 :00043 condnotbr _%7 =>:00058
+:00044 %1 = %0.Integer(%1;1)                [<INVALID>]
 :00046 %7 = %1
 :00047 br =>:00056
+:00048 %9 = literal["option `"]
 :00049 %10 = %2
 :00050 %11 = literal["' requires numerical operand"]
 :00051 %9 = concat(%9; 3)
 :00052 %7 = %0.error(%9;1)                  [<INVALID>]
 :00054 br =>:00056
+:00055 raise %8
+:00056 %5 = %7
 :00057 br =>:00059
+:00058 %5 = nil
+:00059 ret %1
------------------------------------
------------------------------------
<help> /home/monochrome/optcarrot/lib/optcarrot/config.rb:187
meta:on_stack:true kind:Ruby mode:method FuncId(852) regs:6 ISeq(RubyFuncInfo { id:852 name:help method:(FuncId(852), 0) args: 0 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = literal["Usage: "]
 :00002 %4 = $PROGRAM_NAME
 :00003 %5 = literal[" [OPTION]... FILE"]
 :00004 %3 = concat(%3; 3)
 :00005 %1 = array[%3; 1]
 :00006 %2 = 0: i32
 :00007 %3 = const[OPTIONS]                  [<INVALID>]
 :00008 %4 = literal[56426497]
 :00009 _ = %3.each( &%4)                    [<INVALID>]
 :00011 %3 = literal[56492033]
 :00012 %3 = %1.each( &%3)                   [<INVALID>]
 :00014 ret %3
------------------------------------
------------------------------------
<version> /home/monochrome/optcarrot/lib/optcarrot/config.rb:224
meta:on_stack:true kind:Ruby mode:method FuncId(853) regs:3 ISeq(RubyFuncInfo { id:853 name:version method:(FuncId(853), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["optcarrot "]
 :00002 %2 = const[VERSION]                  [<INVALID>]
 :00003 %1 = concat(%1; 2)
 :00004 %1 = %0.puts(%1;1)                   [<INVALID>]
 :00006 ret %1
------------------------------------
------------------------------------
<list_drivers> /home/monochrome/optcarrot/lib/optcarrot/config.rb:228
meta:on_stack:true kind:Ruby mode:method FuncId(854) regs:4 ISeq(RubyFuncInfo { id:854 name:list_drivers method:(FuncId(854), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = const[Driver::DRIVER_DB]        [<INVALID>]
 :00002 %2 = literal[56557569]
 :00003 %1 = %1.each( &%2)                   [<INVALID>]
 :00005 ret %1
------------------------------------
------------------------------------
<list_opts> /home/monochrome/optcarrot/lib/optcarrot/config.rb:234
meta:on_stack:true kind:Ruby mode:method FuncId(855) regs:4 ISeq(RubyFuncInfo { id:855 name:list_opts method:(FuncId(855), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 %1 = literal["CPU core optimizations:"]
 :00002 _ = %0.puts(%1;1)                    [<INVALID>]
 :00004 %1 = const[CPU::OptimizedCodeBuilder::OPTIONS] [<INVALID>]
 :00005 %2 = literal[56623105]
 :00006 _ = %1.each( &%2)                    [<INVALID>]
 :00008 _ = %0.puts()                        [<INVALID>]
 :00010 %1 = literal["PPU core optimizations:"]
 :00011 _ = %0.puts(%1;1)                    [<INVALID>]
 :00013 %1 = const[PPU::OptimizedCodeBuilder::OPTIONS] [<INVALID>]
 :00014 %2 = literal[56688641]
 :00015 _ = %1.each( &%2)                    [<INVALID>]
 :00017 _ = %0.puts()                        [<INVALID>]
 :00019 %1 = literal["(See `doc/internal.md' in detail.)"]
 :00020 %1 = %0.puts(%1;1)                   [<INVALID>]
 :00022 ret %1
------------------------------------
------------------------------------
<dump_ppu> /home/monochrome/optcarrot/lib/optcarrot/config.rb:248
meta:on_stack:true kind:Ruby mode:method FuncId(856) regs:6 ISeq(RubyFuncInfo { id:856 name:dump_ppu method:(FuncId(856), 0) args: 0 non_temp: 0 temp: 5})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = const[PPU::OptimizedCodeBuilder] [<INVALID>]
 :00002 %2 = @options: <INVALID>[IvarId(0)]
 :00003 %3 = :loglevel
 :00004 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00005 %4 = @options: <INVALID>[IvarId(0)]
 :00006 %5 = :opt_ppu
 :00007 %3 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00008 condbr %3 =>:00010
+:00009 %3 = literal[[]]
+:00010 %1 = %1.new(%2;2)                    [<INVALID>]
 :00012 %1 = %1.build()                      [<INVALID>]
 :00014 %1 = %0.puts(%1;1)                   [<INVALID>]
 :00016 ret %1
------------------------------------
------------------------------------
<dump_cpu> /home/monochrome/optcarrot/lib/optcarrot/config.rb:252
meta:on_stack:true kind:Ruby mode:method FuncId(857) regs:6 ISeq(RubyFuncInfo { id:857 name:dump_cpu method:(FuncId(857), 0) args: 0 non_temp: 0 temp: 5})
[]
+:00000 init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 %1 = const[CPU::OptimizedCodeBuilder] [<INVALID>]
 :00002 %2 = @options: <INVALID>[IvarId(0)]
 :00003 %3 = :loglevel
 :00004 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00005 %4 = @options: <INVALID>[IvarId(0)]
 :00006 %5 = :opt_cpu
 :00007 %3 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00008 condbr %3 =>:00010
+:00009 %3 = literal[[]]
+:00010 %1 = %1.new(%2;2)                    [<INVALID>]
 :00012 %1 = %1.build()                      [<INVALID>]
 :00014 %1 = %0.puts(%1;1)                   [<INVALID>]
 :00016 ret %1
------------------------------------
------------------------------------
<block in find_option> /home/monochrome/optcarrot/lib/optcarrot/config.rb:123
meta:on_stack:true kind:Ruby mode:method FuncId(858) regs:4 ISeq(RubyFuncInfo { id:858 name:<unnamed> method:(FuncId(849), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal[56754177]
 :00002 %2 = %1.each( &%2)                   [<INVALID>]
 :00004 ret %2
------------------------------------
------------------------------------
<block in parse_option> /home/monochrome/optcarrot/lib/optcarrot/config.rb:139
meta:on_stack:true kind:Ruby mode:method FuncId(859) regs:4 ISeq(RubyFuncInfo { id:859 name:<unnamed> method:(FuncId(850), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal["-"]
 :00002 %3 = %1
 :00003 %2 = concat(%2; 2)
 :00004 ret %2
------------------------------------
------------------------------------
<block in parse_operand> /home/monochrome/optcarrot/lib/optcarrot/config.rb:173
meta:on_stack:true kind:Ruby mode:method FuncId(860) regs:3 ISeq(RubyFuncInfo { id:860 name:<unnamed> method:(FuncId(851), 1) args: 1 non_temp: 1 temp: 1})
[]
+:00000 init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = %1.to_sym()                     [<INVALID>]
 :00003 ret %2
------------------------------------
------------------------------------
<block in help> /home/monochrome/optcarrot/lib/optcarrot/config.rb:190
meta:on_stack:true kind:Ruby mode:method FuncId(861) regs:6 ISeq(RubyFuncInfo { id:861 name:<unnamed> method:(FuncId(852), 1) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %3 = dynvar(1, %1)
 :00002 %4 = literal[""]
 :00003 %3 = %3 << %4                        [<INVALID>][<INVALID>]
 :00004 %4 = %1
 :00005 %5 = literal[" options:"]
 :00006 %4 = concat(%4; 2)
 :00007 %3 = %3 << %4                        [<INVALID>][<INVALID>]
 :00008 %3 = literal[56819713]
 :00009 %3 = %2.each( &%3)                   [<INVALID>]
 :00011 ret %3
------------------------------------
------------------------------------
<block in help> /home/monochrome/optcarrot/lib/optcarrot/config.rb:214
meta:on_stack:true kind:Ruby mode:method FuncId(862) regs:11 ISeq(RubyFuncInfo { id:862 name:<unnamed> method:(FuncId(852), 1) args: 1 non_temp: 4 temp: 6})
[]
+:00000 init_method reg:10 arg:1 req:1 opt:0 rest:false block:None stack_offset:9
 :00001 %5 = const[String]                   [<INVALID>]
 :00002 %5 = %1.is_a?(%5;1)                  [<INVALID>]
 :00004 condnotbr %5 =>:00008
+:00005 %5 = %0.puts(%1;1)                   [<INVALID>]
 :00007 ret %5
+:00008 %5 = %1
 :00009 %6; 3 = expand(%5)
 :00010 %2 = %6
 :00011 %3 = %7
 :00012 %4 = %8
 :00013 %5 = literal["    %4s%-*s %s"]
 :00014 %7 = %2
 :00015 %8 = dynvar(1, %2)
 :00016 %9 = %3
 :00017 %10 = %4
 :00018 %6 = array[%7; 4]
 :00019 %5 = %5 % %6                         [<INVALID>][<INVALID>]
 :00020 %5 = %0.puts(%5;1)                   [<INVALID>]
 :00022 ret %5
------------------------------------
------------------------------------
<block in list_drivers> /home/monochrome/optcarrot/lib/optcarrot/config.rb:229
meta:on_stack:true kind:Ruby mode:method FuncId(863) regs:7 ISeq(RubyFuncInfo { id:863 name:<unnamed> method:(FuncId(854), 1) args: 2 non_temp: 2 temp: 4})
[]
+:00000 init_method reg:6 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 %3 = %1
 :00002 %4 = literal[" drivers: "]
 :00003 %5 = %2.keys()                       [<INVALID>]
 :00005 %6 = literal[" "]
 :00006 %5 = %5 * %6                         [<INVALID>][<INVALID>]
 :00007 %3 = concat(%3; 3)
 :00008 %3 = %0.puts(%3;1)                   [<INVALID>]
 :00010 ret %3
------------------------------------
------------------------------------
<block in list_opts> /home/monochrome/optcarrot/lib/optcarrot/config.rb:236
meta:on_stack:true kind:Ruby mode:method FuncId(864) regs:4 ISeq(RubyFuncInfo { id:864 name:<unnamed> method:(FuncId(855), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal["  * "]
 :00002 %3 = %1
 :00003 %2 = concat(%2; 2)
 :00004 %2 = %0.puts(%2;1)                   [<INVALID>]
 :00006 ret %2
------------------------------------
------------------------------------
<block in list_opts> /home/monochrome/optcarrot/lib/optcarrot/config.rb:241
meta:on_stack:true kind:Ruby mode:method FuncId(865) regs:4 ISeq(RubyFuncInfo { id:865 name:<unnamed> method:(FuncId(855), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 %2 = literal["  * "]
 :00002 %3 = %1
 :00003 %2 = concat(%2; 2)
 :00004 %2 = %0.puts(%2;1)                   [<INVALID>]
 :00006 ret %2
------------------------------------
------------------------------------
<block in find_option> /home/monochrome/optcarrot/lib/optcarrot/config.rb:124
meta:on_stack:true kind:Ruby mode:method FuncId(866) regs:6 ISeq(RubyFuncInfo { id:866 name:<unnamed> method:(FuncId(849), 2) args: 2 non_temp: 2 temp: 3})
[]
+:00000 init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 %4 = %1
 :00002 %5 = :aliases
 :00003 %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00004 %3 = array[%4; 2]
 :00005 %4 = literal[56885249]
 :00006 %3 = %3.each( &%4)                   [<INVALID>]
 :00008 ret %3
------------------------------------
------------------------------------
<block in help> /home/monochrome/optcarrot/lib/optcarrot/config.rb:192
meta:on_stack:true kind:Ruby mode:method FuncId(867) regs:13 ISeq(RubyFuncInfo { id:867 name:<unnamed> method:(FuncId(852), 2) args: 2 non_temp: 7 temp: 5})
[]
+:00000 init_method reg:12 arg:2 req:2 opt:0 rest:false block:None stack_offset:10
 :00001 %9 = :aliases
 :00002 %9 = %2.[%9]                         [<INVALID>][<INVALID>]
 :00003 %8 = array[%9; 1]
 :00004 %9 = 0: i32
 :00005 %3 = %8.[%9]                         [<INVALID>][<INVALID>]
 :00006 %5 = literal[""]
 :00007 %4 = %5
 :00008 %9 = :type
 :00009 %9 = %2.[%9]                         [<INVALID>][<INVALID>]
 :00010 %10 = :switch
 :00011 _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00012 condnotbr _%10 =>:00016
+:00013 %4 = literal["[no-]"]
 :00014 %8 = %4
 :00015 br =>:00044
+:00016 %10 = :opts
 :00017 _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00018 condnotbr _%10 =>:00022
+:00019 %5 = literal["=OPTS,..."]
 :00020 %8 = %5
 :00021 br =>:00044
+:00022 %10 = :driver
 :00023 _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00024 condnotbr _%10 =>:00028
+:00025 %5 = literal["=DRIVER"]
 :00026 %8 = %5
 :00027 br =>:00044
+:00028 %10 = :int
 :00029 _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00030 condnotbr _%10 =>:00034
+:00031 %5 = literal["=N"]
 :00032 %8 = %5
 :00033 br =>:00044
+:00034 %10 = const[String]                  [<INVALID>]
 :00035 _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00036 condnotbr _%10 =>:00043
+:00037 %10 = literal["="]
 :00038 %11 = :type
 :00039 %11 = %2.[%11]                       [<INVALID>][<INVALID>]
 :00040 %5 = %10 + %11                       [<INVALID>][<INVALID>]
 :00041 %8 = %5
 :00042 br =>:00044
+:00043 %8 = nil
+:00044 condnotbr %3 =>:00055
+:00045 %8 = %3.size()                       [<INVALID>]
 :00047 _%8 = %8 == 1: i16                   [<INVALID>][<INVALID>]
 :00048 condnotbr _%8 =>:00055
+:00049 %8 = literal["-"]
 :00050 %9 = %4
 :00051 %10 = %3
 :00052 %11 = literal[", "]
 :00053 %8 = concat(%8; 4)
 :00054 %3 = %8
+:00055 %8 = literal["--"]
 :00056 %8 = %8 + %4                         [<INVALID>][<INVALID>]
 :00057 %9 = %1.to_s()                       [<INVALID>]
 :00059 %10 = literal["_"]
 :00060 %11 = literal["-"]
 :00061 %9 = %9.tr(%10;2)                    [<INVALID>]
 :00063 %8 = %8 + %9                         [<INVALID>][<INVALID>]
 :00064 %6 = %8 + %5                         [<INVALID>][<INVALID>]
 :00065 %8 = :shortcut
 :00066 %8 = %2.[%8]                         [<INVALID>][<INVALID>]
 :00067 condnotbr %8 =>:00079
+:00068 %8 = literal["same as `"]
 :00069 %10 = :shortcut
 :00070 %10 = %2.[%10]                       [<INVALID>][<INVALID>]
 :00071 %9 = array[%10; 1]
 :00072 %10 = literal[" "]
 :00073 %9 = %9.join(%10;1)                  [<INVALID>]
 :00075 %10 = literal["'"]
 :00076 %8 = concat(%8; 3)
 :00077 %7 = %8
 :00078 br =>:00093
+:00079 %8 = :desc
 :00080 %7 = %2.[%8]                         [<INVALID>][<INVALID>]
 :00081 %8 = :default
 :00082 %8 = %2.key?(%8;1)                   [<INVALID>]
 :00084 condnotbr %8 =>:00093
+:00085 %8 = literal[" (default: "]
 :00086 %10 = :default
 :00087 %9 = %2.[%10]                        [<INVALID>][<INVALID>]
 :00088 condbr %9 =>:00090
+:00089 %9 = literal["none"]
+:00090 %10 = literal[")"]
 :00091 %8 = concat(%8; 3)
 :00092 %7 = %7 + %8                         [<INVALID>][<INVALID>]
+:00093 %9 = dynvar(2, %2)
 :00094 %10 = %6.size()                      [<INVALID>]
 :00096 %8 = array[%9; 2]
 :00097 %8 = %8.max()                        [<INVALID>]
 :00099 dynvar(2, %2) = %8
 :00100 %8 = dynvar(2, %1)
 :00101 %10 = %3
 :00102 %11 = %6
 :00103 %12 = %7
 :00104 %9 = array[%10; 3]
 :00105 %8 = %8 << %9                        [<INVALID>][<INVALID>]
 :00106 ret %8
------------------------------------
------------------------------------
<block in find_option> /home/monochrome/optcarrot/lib/optcarrot/config.rb:125
meta:on_stack:true kind:Ruby mode:method FuncId(868) regs:6 ISeq(RubyFuncInfo { id:868 name:<unnamed> method:(FuncId(849), 3) args: 1 non_temp: 1 temp: 4})
[]
+:00000 init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 %2 = %1.to_s()                       [<INVALID>]
 :00003 %3 = literal["_"]
 :00004 %4 = literal["-"]
 :00005 %1 = %2.tr(%3;2)                     [<INVALID>]
 :00007 %2 = %1.size()                       [<INVALID>]
 :00009 _%2 = %2 == 1: i16                   [<INVALID>][<INVALID>]
 :00010 condnotbr _%2 =>:00021
+:00011 %2 = dynvar(3, %1)
 :00012 %3 = literal["-"]
 :00013 %4 = %1
 :00014 %3 = concat(%3; 2)
 :00015 _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00016 condnotbr _%2 =>:00021
+:00017 %3 = dynvar(1, %2)
 :00018 %4 = dynvar(1, %1)
 :00019 %2 = array[%3; 2]
 :00020 method_ret %2
+:00021 %2 = dynvar(3, %1)
 :00022 %3 = literal["--"]
 :00023 %4 = %1
 :00024 %3 = concat(%3; 2)
 :00025 _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00026 condnotbr _%2 =>:00031
+:00027 %3 = dynvar(1, %2)
 :00028 %4 = dynvar(1, %1)
 :00029 %2 = array[%3; 2]
 :00030 method_ret %2
+:00031 %2 = dynvar(1, %2)
 :00032 %3 = :type
 :00033 %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00034 %3 = :switch
 :00035 _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00036 condnotbr _%2 =>:00048
+:00037 %2 = dynvar(3, %1)
 :00038 %3 = literal["--no-"]
 :00039 %4 = %1
 :00040 %3 = concat(%3; 2)
 :00041 _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00042 condnotbr _%2 =>:00048
+:00043 %3 = dynvar(1, %2)
 :00044 %4 = dynvar(1, %1)
 :00045 %5 = literal[true]
 :00046 %2 = array[%3; 3]
 :00047 method_ret %2
+:00048 %2 = nil
 :00049 ret %2
------------------------------------
