   Compiling monoruby v0.2.0 (/home/monochrome/monoruby/monoruby)
    Finished dev [optimized + debuginfo] target(s) in 6.43s
     Running `target/debug/monoruby ../optcarrot/bin/optcarrot -b ../optcarrot/examples/Lan_Master.nes`
------------------------------------
</main> /home/monochrome/optcarrot/bin/optcarrot:1
meta:on_stack:true kind:Ruby mode:method FuncId(271) regs:3 ISeq(RubyFuncInfo { id:271 name:/main method:(FuncId(271), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = literal["../lib/optcarrot"]
 :00002 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00004 [02] %1 = const[Optcarrot::NES]           [<INVALID>]
 :00005 [02] %1 = %1.new()                        [<INVALID>]
 :00007 [02] %1 = %1.run()                        [<INVALID>]
 :00009 [01] ret %1
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(272) regs:2 ISeq(RubyFuncInfo { id:272 name:/main method:(FuncId(272), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [01] _ = module_def Optcarrot: FuncId(273)
 :00002 [02] %1 = literal["optcarrot/nes"]
 :00003 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00005 [02] %1 = literal["optcarrot/rom"]
 :00006 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00008 [02] %1 = literal["optcarrot/pad"]
 :00009 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00011 [02] %1 = literal["optcarrot/cpu"]
 :00012 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00014 [02] %1 = literal["optcarrot/apu"]
 :00015 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00017 [02] %1 = literal["optcarrot/ppu"]
 :00018 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00020 [02] %1 = literal["optcarrot/palette"]
 :00021 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00023 [02] %1 = literal["optcarrot/driver"]
 :00024 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00026 [02] %1 = literal["optcarrot/config"]
 :00027 [02] %1 = %0.require_relative(%1;1)       [<INVALID>]
 :00029 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot.rb:2
meta:on_stack:true kind:Ruby mode:class_def FuncId(273) regs:2 ISeq(RubyFuncInfo { id:273 name:Optcarrot method:(FuncId(273), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = literal["0.9.0"]
 :00002 [01] const[VERSION] = %1
 :00003 [01] ret %1
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(274) regs:2 ISeq(RubyFuncInfo { id:274 name:/main method:(FuncId(274), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = module_def Optcarrot: FuncId(275)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(275) regs:2 ISeq(RubyFuncInfo { id:275 name:Optcarrot method:(FuncId(275), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = literal[4294967295]
 :00002 [01] const[FOREVER_CLOCK] = %1
 :00003 [02] %1 = 12: i32
 :00004 [01] const[RP2A03_CC] = %1
 :00005 [02] %1 = class_def NES < _: FuncId(276)
 :00006 [01] ret %1
------------------------------------
------------------------------------
<NES> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:6
meta:on_stack:true kind:Ruby mode:class_def FuncId(276) regs:8 ISeq(RubyFuncInfo { id:276 name:NES method:(FuncId(276), 0) args: 0 non_temp: 0 temp: 7})
[]
+:00000 [01] init_method reg:7 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 [02] %1 = 60: i32
 :00002 [01] const[FPS] = %1
 :00003 [01] method_def initialize: FuncId(277)
 :00004 [01] method_def inspect: FuncId(278)
 :00005 [02] %1 = :fps
 :00006 [03] %2 = :video
 :00007 [04] %3 = :audio
 :00008 [05] %4 = :input
 :00009 [06] %5 = :cpu
 :00010 [07] %6 = :ppu
 :00011 [08] %7 = :apu
 :00012 [01] _ = %0.attr_reader(%1;7)             [<INVALID>]
 :00014 [01] method_def reset: FuncId(279)
 :00015 [01] method_def step: FuncId(280)
 :00016 [01] method_def dispose: FuncId(281)
 :00017 [01] method_def run: FuncId(282)
 :00018 [01] _ = %0.private()                     [<INVALID>]
 :00020 [01] method_def save_fps_history?: FuncId(283)
 :00021 [02] %1 = :save_fps_history?
 :00022 [01] ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:9
meta:on_stack:true kind:Ruby mode:method FuncId(277) regs:8 ISeq(RubyFuncInfo { id:277 name:initialize method:(FuncId(277), 0) args: 1 non_temp: 1 temp: 6})
[]
+:00000 [02] init_method reg:7 arg:1 req:0 opt:1 rest:false block:None stack_offset:7
 :00001 [02] check_local(%1) =>:00003
+:00002 [02] %1 = const[ARGV]                     [<INVALID>]
+:00003 [03] %2 = const[Config]                   [<INVALID>]
 :00004 [03] %2 = %2.new(%1;1)                    [<INVALID>]
 :00006 [02] @conf: - = %2
 :00007 [03] %2 = const[Driver]                   [<INVALID>]
 :00008 [04] %3 = @conf: -
 :00009 [03] %2 = %2.load(%3;1)                   [<INVALID>]
 :00011 [03] %3; 3 = expand(%2)
 :00012 [03] @video: - = %3
 :00013 [03] @audio: - = %4
 :00014 [03] @input: - = %5
 :00015 [03] %2 = const[CPU]                      [<INVALID>]
 :00016 [04] %3 = @conf: -
 :00017 [03] %2 = %2.new(%3;1)                    [<INVALID>]
 :00019 [02] @cpu: - = %2
 :00020 [03] %2 = @cpu: -
 :00021 [04] %3 = const[APU]                      [<INVALID>]
 :00022 [05] %4 = @conf: -
 :00023 [06] %5 = @cpu: -
 :00024 [07] %6 = @audio: -
 :00025 [07] %6 = %6.spec()                       [<INVALID>]
 :00027 [04] %3 = %3.new(%4;3)*                   [<INVALID>]
 :00029 [02] _ = %2.apu=(%3;1)                    [<INVALID>]
 :00031 [03] %2 = %3
 :00032 [02] @apu: - = %2
 :00033 [03] %2 = @cpu: -
 :00034 [04] %3 = const[PPU]                      [<INVALID>]
 :00035 [05] %4 = @conf: -
 :00036 [06] %5 = @cpu: -
 :00037 [07] %6 = @video: -
 :00038 [07] %6 = %6.palette()                    [<INVALID>]
 :00040 [04] %3 = %3.new(%4;3)                    [<INVALID>]
 :00042 [02] _ = %2.ppu=(%3;1)                    [<INVALID>]
 :00044 [03] %2 = %3
 :00045 [02] @ppu: - = %2
 :00046 [03] %2 = const[ROM]                      [<INVALID>]
 :00047 [04] %3 = @conf: -
 :00048 [05] %4 = @cpu: -
 :00049 [06] %5 = @ppu: -
 :00050 [03] %2 = %2.load(%3;3)                   [<INVALID>]
 :00052 [02] @rom: - = %2
 :00053 [03] %2 = const[Pads]                     [<INVALID>]
 :00054 [04] %3 = @conf: -
 :00055 [05] %4 = @cpu: -
 :00056 [06] %5 = @apu: -
 :00057 [03] %2 = %2.new(%3;3)                    [<INVALID>]
 :00059 [02] @pads: - = %2
 :00060 [03] %2 = 0: i32
 :00061 [02] @frame: - = %2
 :00062 [03] %2 = @conf: -
 :00063 [03] %2 = %2.frames()                     [<INVALID>]
 :00065 [03] _%2 = %2 == 0: i16                   [<INVALID>][<INVALID>]
 :00066 [02] condnotbr _%2 =>:00069
+:00067 [03] %2 = nil
 :00068 [03] br =>:00072
+:00069 [03] %2 = @conf: -
 :00070 [03] %2 = %2.frames()                     [<INVALID>]
+:00072 [02] @frame_target: - = %2
 :00073 [03] %2 = %0.save_fps_history?()          [<INVALID>]
 :00075 [02] condnotbr %2 =>:00079
+:00076 [03] %2 = literal[[]]
 :00077 [02] @fps_history: - = %2
 :00078 [02] ret %2
+:00079 [03] %2 = nil
 :00080 [02] ret %2
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:25
meta:on_stack:true kind:Ruby mode:method FuncId(278) regs:4 ISeq(RubyFuncInfo { id:278 name:inspect method:(FuncId(278), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = literal["#<"]
 :00002 [03] %2 = %0.class()                      [<INVALID>]
 :00004 [04] %3 = literal[">"]
 :00005 [02] %1 = concat(%1; 3)
 :00006 [01] ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:31
meta:on_stack:true kind:Ruby mode:method FuncId(279) regs:3 ISeq(RubyFuncInfo { id:279 name:reset method:(FuncId(279), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @cpu: -
 :00002 [01] _ = %1.reset()                       [<INVALID>]
 :00004 [02] %1 = @apu: -
 :00005 [01] _ = %1.reset()                       [<INVALID>]
 :00007 [02] %1 = @ppu: -
 :00008 [01] _ = %1.reset()                       [<INVALID>]
 :00010 [02] %1 = @rom: -
 :00011 [01] _ = %1.reset()                       [<INVALID>]
 :00013 [02] %1 = @pads: -
 :00014 [01] _ = %1.reset()                       [<INVALID>]
 :00016 [02] %1 = @cpu: -
 :00017 [01] _ = %1.boot()                        [<INVALID>]
 :00019 [02] %1 = @rom: -
 :00020 [02] %1 = %1.load_battery()               [<INVALID>]
 :00022 [01] ret %1
------------------------------------
------------------------------------
<step> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:41
meta:on_stack:true kind:Ruby mode:method FuncId(280) regs:4 ISeq(RubyFuncInfo { id:280 name:step method:(FuncId(280), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @ppu: -
 :00002 [01] _ = %1.setup_frame()                 [<INVALID>]
 :00004 [02] %1 = @cpu: -
 :00005 [01] _ = %1.run()                         [<INVALID>]
 :00007 [02] %1 = @ppu: -
 :00008 [01] _ = %1.vsync()                       [<INVALID>]
 :00010 [02] %1 = @apu: -
 :00011 [01] _ = %1.vsync()                       [<INVALID>]
 :00013 [02] %1 = @cpu: -
 :00014 [01] _ = %1.vsync()                       [<INVALID>]
 :00016 [02] %1 = @rom: -
 :00017 [01] _ = %1.vsync()                       [<INVALID>]
 :00019 [02] %1 = @input: -
 :00020 [03] %2 = @frame: -
 :00021 [04] %3 = @pads: -
 :00022 [01] _ = %1.tick(%2;2)                    [<INVALID>]
 :00024 [02] %1 = @video: -
 :00025 [03] %2 = @ppu: -
 :00026 [03] %2 = %2.output_pixels()              [<INVALID>]
 :00028 [02] %1 = %1.tick(%2;1)                   [<INVALID>]
 :00030 [01] @fps: - = %1
 :00031 [02] %1 = %0.save_fps_history?()          [<INVALID>]
 :00033 [01] condnotbr %1 =>:00038
+:00034 [02] %1 = @fps_history: -
 :00035 [03] %2 = @fps: -
 :00036 [02] %1 = %1.<<(%2;1)                     [<INVALID>]
+:00038 [02] %1 = @audio: -
 :00039 [03] %2 = @apu: -
 :00040 [03] %2 = %2.output()                     [<INVALID>]
 :00042 [01] _ = %1.tick(%2;1)                    [<INVALID>]
 :00044 [02] %1 = @frame: -
 :00045 [02] %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00046 [01] @frame: - = %1
 :00047 [02] %1 = @conf: -
 :00048 [02] %1 = %1.loglevel()                   [<INVALID>]
 :00050 [02] _%1 = %1 >= 2: i16                   [<INVALID>][<INVALID>]
 :00051 [01] condnotbr _%1 =>:00059
+:00052 [02] %1 = @conf: -
 :00053 [03] %2 = literal["frame "]
 :00054 [04] %3 = @frame: -
 :00055 [03] %2 = concat(%2; 2)
 :00056 [02] %1 = %1.info(%2;1)                   [<INVALID>]
 :00058 [01] ret %1
+:00059 [02] %1 = nil
 :00060 [01] ret %1
------------------------------------
------------------------------------
<dispose> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:58
meta:on_stack:true kind:Ruby mode:method FuncId(281) regs:5 ISeq(RubyFuncInfo { id:281 name:dispose method:(FuncId(281), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 [01] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = @fps: -
 :00002 [01] condnotbr %1 =>:00048
+:00003 [02] %1 = @conf: -
 :00004 [03] %2 = literal["fps: %.2f (in the last 10 frames)"]
 :00005 [04] %3 = @fps: -
 :00006 [03] %2 = %2 % %3                         [<INVALID>][<INVALID>]
 :00007 [01] _ = %1.info(%2;1)                    [<INVALID>]
 :00009 [02] %1 = @conf: -
 :00010 [02] %1 = %1.print_fps_history()          [<INVALID>]
 :00012 [01] condnotbr %1 =>:00020
+:00013 [02] %1 = literal["frame,fps-history"]
 :00014 [01] _ = %0.puts(%1;1)                    [<INVALID>]
 :00016 [02] %1 = @fps_history: -
 :00017 [03] %2 = literal[18612225]
 :00018 [01] _ = %1.each_with_index( &%2)         [<INVALID>]
+:00020 [02] %1 = @conf: -
 :00021 [02] %1 = %1.print_p95fps()               [<INVALID>]
 :00023 [01] condnotbr %1 =>:00039
+:00024 [02] %1 = literal["p95 fps: "]
 :00025 [03] %2 = @fps_history: -
 :00026 [03] %2 = %2.sort()                       [<INVALID>]
 :00028 [04] %3 = @fps_history: -
 :00029 [04] %3 = %3.length()                     [<INVALID>]
 :00031 [05] %4 = literal[0.05]
 :00032 [04] %3 = %3 * %4                         [<INVALID>][<INVALID>]
 :00033 [04] %3 = %3.floor()                      [<INVALID>]
 :00035 [03] %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00036 [02] %1 = concat(%1; 2)
 :00037 [01] _ = %0.puts(%1;1)                    [<INVALID>]
+:00039 [02] %1 = @conf: -
 :00040 [02] %1 = %1.print_fps()                  [<INVALID>]
 :00042 [01] condnotbr %1 =>:00048
+:00043 [02] %1 = literal["fps: "]
 :00044 [03] %2 = @fps: -
 :00045 [02] %1 = concat(%1; 2)
 :00046 [01] _ = %0.puts(%1;1)                    [<INVALID>]
+:00048 [02] %1 = @conf: -
 :00049 [02] %1 = %1.print_video_checksum()       [<INVALID>]
 :00051 [01] condnotbr %1 =>:00069
+:00052 [02] %1 = @video: -
 :00053 [03] %2 = const[Video]                    [<INVALID>]
 :00054 [02] %1 = %1.instance_of?(%2;1)           [<INVALID>]
 :00056 [01] condnotbr %1 =>:00069
+:00057 [02] %1 = literal["checksum: "]
 :00058 [03] %2 = @ppu: -
 :00059 [03] %2 = %2.output_pixels()              [<INVALID>]
 :00061 [04] %3 = literal["C*"]
 :00062 [03] %2 = %2.pack(%3;1)                   [<INVALID>]
 :00064 [03] %2 = %2.sum()                        [<INVALID>]
 :00066 [02] %1 = concat(%1; 2)
 :00067 [01] _ = %0.puts(%1;1)                    [<INVALID>]
+:00069 [02] %1 = @video: -
 :00070 [01] _ = %1.dispose()                     [<INVALID>]
 :00072 [02] %1 = @audio: -
 :00073 [01] _ = %1.dispose()                     [<INVALID>]
 :00075 [02] %1 = @input: -
 :00076 [01] _ = %1.dispose()                     [<INVALID>]
 :00078 [02] %1 = @rom: -
 :00079 [01] _ = %1.save_battery()                [<INVALID>]
 :00081 [02] %1 = @ppu: -
 :00082 [02] %1 = %1.dispose()                    [<INVALID>]
 :00084 [01] ret %1
------------------------------------
------------------------------------
<run> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:80
meta:on_stack:true kind:Ruby mode:method FuncId(282) regs:6 ISeq(RubyFuncInfo { id:282 name:run method:(FuncId(282), 0) args: 0 non_temp: 1 temp: 4})
[(:00001..:00050, Some(:00051), Some(:00054), Some(%3))]
+:00000 [02] init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] _ = %0.reset()                       [<INVALID>]
 :00003 [03] %2 = @conf: -
 :00004 [03] %2 = %2.stackprof_mode()             [<INVALID>]
 :00006 [02] condnotbr %2 =>:00029
+:00007 [03] %2 = literal["stackprof"]
 :00008 [02] _ = %0.require(%2;1)                 [<INVALID>]
 :00010 [03] %2 = @conf: -
 :00011 [03] %2 = %2.stackprof_output()           [<INVALID>]
 :00013 [04] %3 = literal["MODE"]
 :00014 [05] %4 = @conf: -
 :00015 [05] %4 = %4.stackprof_mode()             [<INVALID>]
 :00017 [02] %1 = %2.sub(%3;2)                    [<INVALID>]
 :00019 [03] %2 = const[StackProf]                [<INVALID>]
 :00020 [04] %3 = @conf: -
 :00021 [04] %3 = %3.stackprof_mode()             [<INVALID>]
 :00023 [04] %3 = %3.to_sym()                     [<INVALID>]
 :00025 [05] %4 = %1
 :00026 [06] %5 = literal[true]
 :00027 [02] _ = %2.start( kw:%3;3)               [<INVALID>]
+:00029 [02] loop_start counter=0 jit-addr=0000000000000000
 :00030 [03] %2 = @frame: -
 :00031 [04] %3 = @frame_target: -
 :00032 [03] _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00033 [02] condbr _%2 =>:00037
+:00034 [02] _ = %0.step()                        [<INVALID>]
 :00036 [02] br =>:00029
+:00037 [02] loop_end
+:00038 [03] %2 = @conf: -
 :00039 [03] %2 = %2.stackprof_mode()             [<INVALID>]
 :00041 [02] condnotbr %2 =>:00049
+:00042 [03] %2 = const[StackProf]                [<INVALID>]
 :00043 [02] _ = %2.stop()                        [<INVALID>]
 :00045 [03] %2 = const[StackProf]                [<INVALID>]
 :00046 [03] %2 = %2.results()                    [<INVALID>]
 :00048 [03] br =>:00050
+:00049 [03] %2 = nil
+:00050 [03] br =>:00054
+:00051 [04] _ = %0.dispose()                     [<INVALID>]
 :00053 [04] raise %3
+:00054 [03] _ = %0.dispose()                     [<INVALID>]
 :00056 [03] ensure_end
 :00057 [02] ret %2
------------------------------------
------------------------------------
<save_fps_history?> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:101
meta:on_stack:true kind:Ruby mode:method FuncId(283) regs:4 ISeq(RubyFuncInfo { id:283 name:save_fps_history? method:(FuncId(283), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @conf: -
 :00002 [02] %1 = %2.print_fps_history()          [<INVALID>]
 :00004 [02] condbr %1 =>:00008
+:00005 [03] %2 = @conf: -
 :00006 [02] %1 = %2.print_p95fps()               [<INVALID>]
+:00008 [01] ret %1
------------------------------------
------------------------------------
<block in dispose> /home/monochrome/optcarrot/lib/optcarrot/nes.rb:63
meta:on_stack:true kind:Ruby mode:method FuncId(284) regs:6 ISeq(RubyFuncInfo { id:284 name:<unnamed> method:(FuncId(281), 1) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = %2
 :00002 [05] %4 = literal[","]
 :00003 [06] %5 = %1
 :00004 [04] %3 = concat(%3; 3)
 :00005 [04] %3 = %0.puts(%3;1)                   [<INVALID>]
 :00007 [03] ret %3
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(292) regs:2 ISeq(RubyFuncInfo { id:292 name:/main method:(FuncId(292), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = module_def Optcarrot: FuncId(293)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(293) regs:2 ISeq(RubyFuncInfo { id:293 name:Optcarrot method:(FuncId(293), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = class_def ROM < _: FuncId(294)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<ROM> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(294) regs:4 ISeq(RubyFuncInfo { id:294 name:ROM method:(FuncId(294), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = 0: i32
 :00002 [04] %3 = %0
 :00003 [02] %1 = hash[%2; 1]
 :00004 [01] const[MAPPER_DB] = %1
 :00005 [02] %1 = literal["mapper/mmc1"]
 :00006 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00008 [02] %1 = literal["mapper/uxrom"]
 :00009 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00011 [02] %1 = literal["mapper/cnrom"]
 :00012 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00014 [02] %1 = literal["mapper/mmc3"]
 :00015 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00017 [02] %1 = %0
 :00018 [01] singleton_method_def %1.zip_extract: FuncId(295)
 :00019 [02] %1 = %0
 :00020 [01] singleton_method_def %1.load: FuncId(296)
 :00021 [02] %1 = const[StandardError]            [<INVALID>]
 :00022 [01] _ = class_def InvalidROM < %1: FuncId(297)
 :00023 [01] method_def parse_header: FuncId(298)
 :00024 [01] method_def initialize: FuncId(299)
 :00025 [01] method_def init: FuncId(300)
 :00026 [01] method_def reset: FuncId(301)
 :00027 [01] method_def inspect: FuncId(302)
 :00028 [01] method_def peek_6000: FuncId(303)
 :00029 [01] method_def poke_6000: FuncId(304)
 :00030 [01] method_def vsync: FuncId(305)
 :00031 [01] method_def load_battery: FuncId(306)
 :00032 [01] method_def save_battery: FuncId(307)
 :00033 [02] %1 = :save_battery
 :00034 [01] ret %1
------------------------------------
------------------------------------
<zip_extract> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:12
meta:on_stack:true kind:Ruby mode:method FuncId(295) regs:6 ISeq(RubyFuncInfo { id:295 name:zip_extract method:(FuncId(295), 0) args: 1 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = literal["zlib"]
 :00002 [03] _ = %0.require(%3;1)                 [<INVALID>]
 :00004 [04] %3 = const[File]                     [<INVALID>]
 :00005 [03] %2 = %3.binread(%1;1)                [<INVALID>]
 :00007 [04] %3 = literal[20185089]
 :00008 [03] _ = %0.loop( &%3)                    [<INVALID>]
 :00010 [04] %3 = literal["failed to extract ROM file from `"]
 :00011 [05] %4 = %1
 :00012 [06] %5 = literal["'"]
 :00013 [04] %3 = concat(%3; 3)
 :00014 [04] %3 = %0.raise(%3;1)                  [<INVALID>]
 :00016 [03] ret %3
------------------------------------
------------------------------------
<load> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:35
meta:on_stack:true kind:Ruby mode:method FuncId(296) regs:14 ISeq(RubyFuncInfo { id:296 name:load method:(FuncId(296), 0) args: 3 non_temp: 8 temp: 5})
[]
+:00000 [09] init_method reg:13 arg:3 req:3 opt:0 rest:false block:None stack_offset:10
 :00001 [09] %4 = %1.romfile()                    [<INVALID>]
 :00003 [10] %9 = const[File]                     [<INVALID>]
 :00004 [09] %5 = %9.basename(%4;1)               [<INVALID>]
 :00006 [10] %9 = const[File]                     [<INVALID>]
 :00007 [10] %9 = %9.extname(%4;1)                [<INVALID>]
 :00009 [11] %10 = literal[".zip"]
 :00010 [10] _%9 = %9 == %10                      [<INVALID>][<INVALID>]
 :00011 [09] condnotbr _%9 =>:00015
+:00012 [10] %9 = %0.zip_extract(%4;1)            [<INVALID>]
 :00014 [10] br =>:00018
+:00015 [10] %9 = const[File]                     [<INVALID>]
 :00016 [10] %9 = %9.binread(%4;1)                [<INVALID>]
+:00018 [09] %6 = %9.bytes()                      [<INVALID>]
 :00020 [10] %9 = 6: i32
 :00021 [10] %9 = %6.[%9]                         [<INVALID>][<INVALID>]
 :00022 [11] %10 = 4: i32
 :00023 [10] %9 = %9.>>(%10;1)                    [<INVALID>]
 :00025 [11] %10 = 7: i32
 :00026 [11] %10 = %6.[%10]                       [<INVALID>][<INVALID>]
 :00027 [11] %10 = %10 & 240: i16                 [<INVALID>][<INVALID>]
 :00028 [09] %7 = %9 | %10                        [<INVALID>][<INVALID>]
 :00029 [10] %9 = const[MAPPER_DB]                [<INVALID>]
 :00030 [09] %8 = %9.[%7]                         [<INVALID>][<INVALID>]
 :00031 [09] condnotbr %8 =>:00033
+:00032 [09] br =>:00038
+:00033 [10] %9 = const[NotImplementedError]      [<INVALID>]
 :00034 [11] %10 = literal["Unsupported mapper type 0x%02x"]
 :00035 [11] %10 = %10 % %7                       [<INVALID>][<INVALID>]
 :00036 [09] _ = %0.raise(%9;2)                   [<INVALID>]
+:00038 [10] %9 = %1
 :00039 [11] %10 = %2
 :00040 [12] %11 = %3
 :00041 [13] %12 = %5
 :00042 [14] %13 = %6
 :00043 [10] %9 = %8.new(%9;5)                    [<INVALID>]
 :00045 [09] ret %9
------------------------------------
------------------------------------
<InvalidROM> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:49
meta:on_stack:true kind:Ruby mode:class_def FuncId(297) regs:2 ISeq(RubyFuncInfo { id:297 name:InvalidROM method:(FuncId(297), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = nil
 :00002 [01] ret %1
------------------------------------
------------------------------------
<parse_header> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:52
meta:on_stack:true kind:Ruby mode:method FuncId(298) regs:9 ISeq(RubyFuncInfo { id:298 name:parse_header method:(FuncId(298), 0) args: 1 non_temp: 4 temp: 4})
[]
+:00000 [05] init_method reg:8 arg:1 req:1 opt:0 rest:false block:None stack_offset:8
 :00001 [06] %5 = %1.size()                       [<INVALID>]
 :00003 [06] _%5 = %5 < 16: i16                   [<INVALID>][<INVALID>]
 :00004 [05] condnotbr _%5 =>:00009
+:00005 [06] %5 = const[InvalidROM]               [<INVALID>]
 :00006 [07] %6 = literal["Missing 16-byte header"]
 :00007 [05] _ = %0.raise(%5;2)                   [<INVALID>]
+:00009 [06] %5 = 0: i32
 :00010 [07] %6 = 4: i32
 :00011 [06] %5 = %1.[](%5;2)                     [<INVALID>]
 :00013 [07] %6 = literal["NES\u{1a}"]
 :00014 [07] %6 = %6.bytes()                      [<INVALID>]
 :00016 [06] _%5 = %5 != %6                       [<INVALID>][<INVALID>]
 :00017 [05] condnotbr _%5 =>:00022
+:00018 [06] %5 = const[InvalidROM]               [<INVALID>]
 :00019 [07] %6 = literal["Missing 'NES' constant in header"]
 :00020 [05] _ = %0.raise(%5;2)                   [<INVALID>]
+:00022 [06] %5 = 6: i32
 :00023 [06] %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00024 [07] %6 = 2: i32
 :00025 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00026 [06] _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00027 [05] condnotbr _%5 =>:00032
+:00028 [06] %5 = const[NotImplementedError]      [<INVALID>]
 :00029 [07] %6 = literal["trainer not supported"]
 :00030 [05] _ = %0.raise(%5;2)                   [<INVALID>]
+:00032 [06] %5 = 7: i32
 :00033 [06] %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00034 [07] %6 = 0: i32
 :00035 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00036 [06] _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00037 [05] condnotbr _%5 =>:00042
+:00038 [06] %5 = const[NotImplementedError]      [<INVALID>]
 :00039 [07] %6 = literal["VS cart not supported"]
 :00040 [05] _ = %0.raise(%5;2)                   [<INVALID>]
+:00042 [06] %5 = 9: i32
 :00043 [06] %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00044 [07] %6 = 0: i32
 :00045 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00046 [06] _%5 = %5 == 0: i16                   [<INVALID>][<INVALID>]
 :00047 [05] condnotbr _%5 =>:00049
+:00048 [05] br =>:00053
+:00049 [06] %5 = const[NotImplementedError]      [<INVALID>]
 :00050 [07] %6 = literal["PAL not supported"]
 :00051 [05] _ = %0.raise(%5;2)                   [<INVALID>]
+:00053 [06] %5 = 4: i32
 :00054 [05] %2 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00055 [06] %5 = 5: i32
 :00056 [05] %3 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00057 [06] %5 = 6: i32
 :00058 [06] %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00059 [07] %6 = 0: i32
 :00060 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00061 [06] _%5 = %5 == 0: i16                   [<INVALID>][<INVALID>]
 :00062 [05] condnotbr _%5 =>:00065
+:00063 [06] %5 = :horizontal
 :00064 [06] br =>:00066
+:00065 [06] %5 = :vertical
+:00066 [05] @mirroring: - = %5
 :00067 [06] %5 = 6: i32
 :00068 [06] %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00069 [07] %6 = 3: i32
 :00070 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00071 [06] _%5 = %5 == 1: i16                   [<INVALID>][<INVALID>]
 :00072 [05] condnotbr _%5 =>:00075
+:00073 [06] %5 = :four_screen
 :00074 [05] @mirroring: - = %5
+:00075 [06] %5 = 6: i32
 :00076 [06] %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00077 [07] %6 = 1: i32
 :00078 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00079 [06] %5 = %5 == 1: i16                    [<INVALID>][<INVALID>]
 :00080 [05] @battery: - = %5
 :00081 [06] %5 = 6: i32
 :00082 [06] %5 = %1.[%5]                         [<INVALID>][<INVALID>]
 :00083 [07] %6 = 4: i32
 :00084 [06] %5 = %5.>>(%6;1)                     [<INVALID>]
 :00086 [07] %6 = 7: i32
 :00087 [07] %6 = %1.[%6]                         [<INVALID>][<INVALID>]
 :00088 [07] %6 = %6 & 240: i16                   [<INVALID>][<INVALID>]
 :00089 [06] %5 = %5 | %6                         [<INVALID>][<INVALID>]
 :00090 [05] @mapper: - = %5
 :00091 [07] %6 = 1: i32
 :00092 [08] %7 = 8: i32
 :00093 [08] %7 = %1.[%7]                         [<INVALID>][<INVALID>]
 :00094 [06] %5 = array[%6; 2]
 :00095 [05] %4 = %5.max()                        [<INVALID>]
 :00097 [07] %6 = %2
 :00098 [08] %7 = %3
 :00099 [09] %8 = %4
 :00100 [06] %5 = array[%6; 3]
 :00101 [05] ret %5
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:70
meta:on_stack:true kind:Ruby mode:method FuncId(299) regs:15 ISeq(RubyFuncInfo { id:299 name:initialize method:(FuncId(299), 0) args: 5 non_temp: 8 temp: 6})
[]
+:00000 [09] init_method reg:14 arg:5 req:5 opt:0 rest:false block:None stack_offset:11
 :00001 [09] @conf: - = %1
 :00002 [09] @cpu: - = %2
 :00003 [09] @ppu: - = %3
 :00004 [09] @basename: - = %4
 :00005 [10] %9 = 0: i32
 :00006 [11] %10 = 16: i32
 :00007 [10] %9 = %5.slice!(%9;2)                 [<INVALID>]
 :00009 [10] %9 = %0.parse_header(%9;1)           [<INVALID>]
 :00011 [10] %10; 3 = expand(%9)
 :00012 [10] %6 = %10
 :00013 [10] %7 = %11
 :00014 [10] %8 = %12
 :00015 [10] %9 = %5.size()                       [<INVALID>]
 :00017 [11] %10 = 16384: i16 * %6                [<INVALID>][<INVALID>]
 :00018 [10] _%9 = %9 < %10                       [<INVALID>][<INVALID>]
 :00019 [09] condnotbr _%9 =>:00024
+:00020 [10] %9 = const[InvalidROM]               [<INVALID>]
 :00021 [11] %10 = literal["EOF in ROM bank data"]
 :00022 [09] _ = %0.raise(%9;2)                   [<INVALID>]
+:00024 [11] %10 = 0: i32
 :00025 [10] %9 = %10 ... %6
 :00026 [11] %10 = literal[20250625]
 :00027 [10] %9 = %9.map( &%10)                   [<INVALID>]
 :00029 [09] @prg_banks: - = %9
 :00030 [10] %9 = %5.size()                       [<INVALID>]
 :00032 [11] %10 = 8192: i16 * %7                 [<INVALID>][<INVALID>]
 :00033 [10] _%9 = %9 < %10                       [<INVALID>][<INVALID>]
 :00034 [09] condnotbr _%9 =>:00039
+:00035 [10] %9 = const[InvalidROM]               [<INVALID>]
 :00036 [11] %10 = literal["EOF in CHR bank data"]
 :00037 [09] _ = %0.raise(%9;2)                   [<INVALID>]
+:00039 [11] %10 = 0: i32
 :00040 [10] %9 = %10 ... %7
 :00041 [11] %10 = literal[20316161]
 :00042 [10] %9 = %9.map( &%10)                   [<INVALID>]
 :00044 [09] @chr_banks: - = %9
 :00045 [10] %9 = literal[[nil]]
 :00046 [11] %10 = 65536: i32
 :00047 [10] %9 = %9 * %10                        [<INVALID>][<INVALID>]
 :00048 [09] @prg_ref: - = %9
 :00049 [10] %9 = @prg_ref: -
 :00050 [11] %10 = 32768: i32
 :00051 [12] %11 = 16384: i32
 :00052 [14] %13 = @prg_banks: -
 :00053 [14] %13 = %13.first()                    [<INVALID>]
 :00055 [09] %12 = %13
 :00056 [09] _ = %9.[]=(%10;3)                    [<INVALID>]
 :00058 [10] %9 = @prg_ref: -
 :00059 [11] %10 = 49152: i32
 :00060 [12] %11 = 16384: i32
 :00061 [14] %13 = @prg_banks: -
 :00062 [14] %13 = %13.last()                     [<INVALID>]
 :00064 [09] %12 = %13
 :00065 [09] _ = %9.[]=(%10;3)                    [<INVALID>]
 :00067 [10] %9 = %7 == 0: i16                    [<INVALID>][<INVALID>]
 :00068 [09] @chr_ram: - = %9
 :00069 [10] %9 = @chr_ram: -
 :00070 [09] condnotbr %9 =>:00074
+:00071 [10] %9 = literal[[0]]
 :00072 [10] %9 = %9 * 8192: i16                  [<INVALID>][<INVALID>]
 :00073 [10] br =>:00079
+:00074 [10] %9 = @chr_banks: -
 :00075 [11] %10 = 0: i32
 :00076 [10] %9 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00077 [10] %9 = %9.dup()                        [<INVALID>]
+:00079 [09] @chr_ref: - = %9
 :00080 [10] %9 = %8 > 0: i16                     [<INVALID>][<INVALID>]
 :00081 [09] @wrk_readable: - = %9
 :00082 [10] %9 = literal[false]
 :00083 [09] @wrk_writable: - = %9
 :00084 [10] _%9 = %8 > 0: i16                    [<INVALID>][<INVALID>]
 :00085 [09] condnotbr _%9 =>:00091
+:00086 [10] %9 = literal[24576..32767]
 :00087 [11] %10 = literal[20381697]
 :00088 [10] %9 = %9.map( &%10)                   [<INVALID>]
 :00090 [10] br =>:00092
+:00091 [10] %9 = nil
+:00092 [09] @wrk: - = %9
 :00093 [09] _ = %0.init()                        [<INVALID>]
 :00095 [10] %9 = @ppu: -
 :00096 [11] %10 = @mirroring: -
 :00097 [09] _ = %9.nametables=(%10;1)            [<INVALID>]
 :00099 [10] %9 = @ppu: -
 :00100 [11] %10 = @chr_ref: -
 :00101 [12] %11 = @chr_ram: -
 :00102 [10] %9 = %9.set_chr_mem(%10;2)           [<INVALID>]
 :00104 [09] ret %9
------------------------------------
------------------------------------
<init> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:101
meta:on_stack:true kind:Ruby mode:method FuncId(300) regs:2 ISeq(RubyFuncInfo { id:300 name:init method:(FuncId(300), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = nil
 :00002 [01] ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:104
meta:on_stack:true kind:Ruby mode:method FuncId(301) regs:5 ISeq(RubyFuncInfo { id:301 name:reset method:(FuncId(301), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 [01] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = @cpu: -
 :00002 [03] %2 = literal[32768..65535]
 :00003 [04] %3 = @prg_ref: -
 :00004 [05] %4 = nil
 :00005 [02] %1 = %1.add_mappings(%2;3)           [<INVALID>]
 :00007 [01] ret %1
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:108
meta:on_stack:true kind:Ruby mode:method FuncId(302) regs:7 ISeq(RubyFuncInfo { id:302 name:inspect method:(FuncId(302), 0) args: 0 non_temp: 0 temp: 6})
[]
+:00000 [01] init_method reg:6 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 [03] %2 = literal["Mapper: "]
 :00002 [04] %3 = @mapper: -
 :00003 [05] %4 = literal[" ("]
 :00004 [06] %5 = %0.class()                      [<INVALID>]
 :00006 [06] %5 = %5.to_s()                       [<INVALID>]
 :00008 [07] %6 = literal["::"]
 :00009 [06] %5 = %5.split(%6;1)                  [<INVALID>]
 :00011 [06] %5 = %5.last()                       [<INVALID>]
 :00013 [07] %6 = literal[")"]
 :00014 [03] %2 = concat(%2; 5)
 :00015 [04] %3 = literal["PRG Banks: "]
 :00016 [05] %4 = @prg_banks: -
 :00017 [05] %4 = %4.size()                       [<INVALID>]
 :00019 [04] %3 = concat(%3; 2)
 :00020 [05] %4 = literal["CHR Banks: "]
 :00021 [06] %5 = @chr_banks: -
 :00022 [06] %5 = %5.size()                       [<INVALID>]
 :00024 [05] %4 = concat(%4; 2)
 :00025 [06] %5 = literal["Mirroring: "]
 :00026 [07] %6 = @mirroring: -
 :00027 [06] %5 = concat(%5; 2)
 :00028 [02] %1 = array[%2; 4]
 :00029 [03] %2 = literal["\n"]
 :00030 [02] %1 = %1.join(%2;1)                   [<INVALID>]
 :00032 [01] ret %1
------------------------------------
------------------------------------
<peek_6000> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:117
meta:on_stack:true kind:Ruby mode:method FuncId(303) regs:4 ISeq(RubyFuncInfo { id:303 name:peek_6000 method:(FuncId(303), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @wrk_readable: -
 :00002 [02] condnotbr %2 =>:00007
+:00003 [03] %2 = @wrk: -
 :00004 [04] %3 = %1 - 24576: i16                 [<INVALID>][<INVALID>]
 :00005 [03] %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00006 [02] ret %2
+:00007 [03] %2 = 8: i32
 :00008 [03] %2 = %1.>>(%2;1)                     [<INVALID>]
 :00010 [02] ret %2
------------------------------------
------------------------------------
<poke_6000> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:121
meta:on_stack:true kind:Ruby mode:method FuncId(304) regs:5 ISeq(RubyFuncInfo { id:304 name:poke_6000 method:(FuncId(304), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @wrk_writable: -
 :00002 [03] condnotbr %3 =>:00007
+:00003 [04] %3 = @wrk: -
 :00004 [05] %4 = %1 - 24576: i16                 [<INVALID>][<INVALID>]
 :00005 [03] %3:.[%4:] = %2
 :00006 [03] ret %2
+:00007 [04] %3 = nil
 :00008 [03] ret %3
------------------------------------
------------------------------------
<vsync> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:125
meta:on_stack:true kind:Ruby mode:method FuncId(305) regs:2 ISeq(RubyFuncInfo { id:305 name:vsync method:(FuncId(305), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = nil
 :00002 [01] ret %1
------------------------------------
------------------------------------
<load_battery> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:128
meta:on_stack:true kind:Ruby mode:method FuncId(306) regs:4 ISeq(RubyFuncInfo { id:306 name:load_battery method:(FuncId(306), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @battery: -
 :00002 [02] condnotbr %2 =>:00004
+:00003 [02] br =>:00006
+:00004 [03] %2 = nil
 :00005 [02] ret %2
+:00006 [03] %2 = @basename: -
 :00007 [04] %3 = literal[".sav"]
 :00008 [02] %1 = %2 + %3                         [<INVALID>][<INVALID>]
 :00009 [03] %2 = const[File]                     [<INVALID>]
 :00010 [03] %2 = %2.readable?(%1;1)              [<INVALID>]
 :00012 [02] condnotbr %2 =>:00014
+:00013 [02] br =>:00016
+:00014 [03] %2 = nil
 :00015 [02] ret %2
+:00016 [03] %2 = const[File]                     [<INVALID>]
 :00017 [02] %1 = %2.binread(%1;1)                [<INVALID>]
 :00019 [03] %2 = @wrk: -
 :00020 [04] %3 = %1.bytes()                      [<INVALID>]
 :00022 [03] %2 = %2.replace(%3;1)                [<INVALID>]
 :00024 [02] ret %2
------------------------------------
------------------------------------
<save_battery> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:136
meta:on_stack:true kind:Ruby mode:method FuncId(307) regs:6 ISeq(RubyFuncInfo { id:307 name:save_battery method:(FuncId(307), 0) args: 0 non_temp: 1 temp: 4})
[]
+:00000 [02] init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = @battery: -
 :00002 [02] condnotbr %2 =>:00004
+:00003 [02] br =>:00006
+:00004 [03] %2 = nil
 :00005 [02] ret %2
+:00006 [03] %2 = @basename: -
 :00007 [04] %3 = literal[".sav"]
 :00008 [02] %1 = %2 + %3                         [<INVALID>][<INVALID>]
 :00009 [03] %2 = literal["Saving: "]
 :00010 [03] %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00011 [02] _ = %0.puts(%2;1)                    [<INVALID>]
 :00013 [03] %2 = const[File]                     [<INVALID>]
 :00014 [04] %3 = %1
 :00015 [05] %4 = @wrk: -
 :00016 [06] %5 = literal["C*"]
 :00017 [05] %4 = %4.pack(%5;1)                   [<INVALID>]
 :00019 [03] %2 = %2.binwrite(%3;2)               [<INVALID>]
 :00021 [02] ret %2
------------------------------------
------------------------------------
<block in zip_extract> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:15
meta:on_stack:true kind:Ruby mode:method FuncId(308) regs:23 ISeq(RubyFuncInfo { id:308 name:<unnamed> method:(FuncId(295), 1) args: 0 non_temp: 10 temp: 12})
[]
+:00000 [11] init_method reg:22 arg:0 req:0 opt:0 rest:false block:None stack_offset:15
 :00001 [12] %11 = dynvar(1, %2)
 :00002 [13] %12 = 0: i32
 :00003 [14] %13 = 30: i32
 :00004 [12] %11 = %11.slice!(%12;2)              [<INVALID>]
 :00006 [13] %12 = literal["a4v5V3v2"]
 :00007 [12] %11 = %11.unpack(%12;1)              [<INVALID>]
 :00009 [12] %12; 11 = expand(%11)
 :00010 [12] %1 = %12
 :00011 [12] %2 = %13
 :00012 [12] %3 = %14
 :00013 [12] %4 = %15
 :00014 [12] %2 = %16
 :00015 [12] %2 = %17
 :00016 [12] %2 = %18
 :00017 [12] %5 = %19
 :00018 [12] %2 = %20
 :00019 [12] %6 = %21
 :00020 [12] %7 = %22
 :00021 [12] %11 = literal["PK\u{3}\u{4}"]
 :00022 [12] %11 = %11.b()                        [<INVALID>]
 :00024 [12] _%11 = %1 != %11                     [<INVALID>][<INVALID>]
 :00025 [11] condnotbr _%11 =>:00028
+:00026 [12] %11 = nil
 :00027 [11] break %11
+:00028 [12] %11 = dynvar(1, %2)
 :00029 [13] %12 = 0: i32
 :00030 [14] %13 = %6
 :00031 [11] %8 = %11.slice!(%12;2)               [<INVALID>]
 :00033 [12] %11 = dynvar(1, %2)
 :00034 [13] %12 = 0: i32
 :00035 [14] %13 = %7
 :00036 [11] _ = %11.slice!(%12;2)                [<INVALID>]
 :00038 [12] %11 = dynvar(1, %2)
 :00039 [13] %12 = 0: i32
 :00040 [14] %13 = %5
 :00041 [11] %9 = %11.slice!(%12;2)               [<INVALID>]
 :00043 [12] %11 = const[File]                    [<INVALID>]
 :00044 [12] %11 = %11.extname(%8;1)              [<INVALID>]
 :00046 [12] %11 = %11.downcase()                 [<INVALID>]
 :00048 [13] %12 = literal[".nes"]
 :00049 [12] _%11 = %11 != %12                    [<INVALID>][<INVALID>]
 :00050 [11] condnotbr _%11 =>:00053
+:00051 [12] %11 = nil
 :00052 [11] ret %11
+:00053 [12] %11 = %3 & 17: i16                   [<INVALID>][<INVALID>]
 :00054 [12] _%11 = %11 != 0: i16                 [<INVALID>][<INVALID>]
 :00055 [11] condnotbr _%11 =>:00058
+:00056 [12] %11 = nil
 :00057 [11] ret %11
+:00058 [12] _%11 = %4 != 0: i16                  [<INVALID>][<INVALID>]
 :00059 [11] condnotbr _%11 =>:00064
+:00060 [12] _%11 = %4 != 8: i16                  [<INVALID>][<INVALID>]
 :00061 [11] condnotbr _%11 =>:00064
+:00062 [12] %11 = nil
 :00063 [11] ret %11
+:00064 [12] _%11 = %4 == 8: i16                  [<INVALID>][<INVALID>]
 :00065 [11] condnotbr _%11 =>:00076
+:00066 [12] %11 = const[Zlib::Inflate]           [<INVALID>]
 :00067 [13] %12 = -15: i32
 :00068 [11] %10 = %11.new(%12;1)                 [<INVALID>]
 :00070 [11] %9 = %10.inflate(%9;1)               [<INVALID>]
 :00072 [11] _ = %10.finish()                     [<INVALID>]
 :00074 [11] _ = %10.close()                      [<INVALID>]
+:00076 [11] method_ret %9
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:79
meta:on_stack:true kind:Ruby mode:method FuncId(309) regs:4 ISeq(RubyFuncInfo { id:309 name:<unnamed> method:(FuncId(299), 1) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = dynvar(1, %5)
 :00002 [03] %2 = 0: i32
 :00003 [04] %3 = 16384: i32
 :00004 [02] %1 = %1.slice!(%2;2)                 [<INVALID>]
 :00006 [01] ret %1
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:82
meta:on_stack:true kind:Ruby mode:method FuncId(310) regs:4 ISeq(RubyFuncInfo { id:310 name:<unnamed> method:(FuncId(299), 1) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = dynvar(1, %5)
 :00002 [03] %2 = 0: i32
 :00003 [04] %3 = 8192: i32
 :00004 [02] %1 = %1.slice!(%2;2)                 [<INVALID>]
 :00006 [01] ret %1
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/rom.rb:93
meta:on_stack:true kind:Ruby mode:method FuncId(311) regs:3 ISeq(RubyFuncInfo { id:311 name:<unnamed> method:(FuncId(299), 1) args: 1 non_temp: 1 temp: 1})
[]
+:00000 [02] init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = 8: i32
 :00002 [03] %2 = %1.>>(%2;1)                     [<INVALID>]
 :00004 [02] ret %2
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(312) regs:2 ISeq(RubyFuncInfo { id:312 name:/main method:(FuncId(312), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = module_def Optcarrot: FuncId(313)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(313) regs:3 ISeq(RubyFuncInfo { id:313 name:Optcarrot method:(FuncId(313), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = const[ROM]                      [<INVALID>]
 :00002 [02] %1 = class_def MMC1 < %2: FuncId(314)
 :00003 [01] ret %1
------------------------------------
------------------------------------
<MMC1> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(314) regs:4 ISeq(RubyFuncInfo { id:314 name:MMC1 method:(FuncId(314), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = const[MAPPER_DB]                [<INVALID>]
 :00002 [03] %2 = 1: i32
 :00003 [04] %3 = %0
 :00004 [01] %1:.[%2:] = %3
 :00005 [02] %1 = literal[[:first, :second, :vertical, :horizontal]]
 :00006 [01] const[NMT_MODE] = %1
 :00007 [02] %1 = literal[[:conseq, :conseq, :fix_first, :fix_last]]
 :00008 [01] const[PRG_MODE] = %1
 :00009 [02] %1 = literal[[:conseq, :noconseq]]
 :00010 [01] const[CHR_MODE] = %1
 :00011 [01] method_def init: FuncId(315)
 :00012 [01] method_def reset: FuncId(316)
 :00013 [01] method_def poke_prg: FuncId(317)
 :00014 [01] method_def update_nmt: FuncId(318)
 :00015 [01] method_def update_prg: FuncId(319)
 :00016 [01] method_def update_chr: FuncId(320)
 :00017 [02] %1 = :update_chr
 :00018 [01] ret %1
------------------------------------
------------------------------------
<init> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:10
meta:on_stack:true kind:Ruby mode:method FuncId(315) regs:2 ISeq(RubyFuncInfo { id:315 name:init method:(FuncId(315), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = nil
 :00002 [01] @chr_mode: - = %1
 :00003 [01] @prg_mode: - = %1
 :00004 [01] @nmt_mode: - = %1
 :00005 [02] %1 = 0: i32
 :00006 [01] @chr_bank_1: - = %1
 :00007 [01] @chr_bank_0: - = %1
 :00008 [01] @prg_bank: - = %1
 :00009 [01] ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:15
meta:on_stack:true kind:Ruby mode:method FuncId(316) regs:5 ISeq(RubyFuncInfo { id:316 name:reset method:(FuncId(316), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 [01] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = 0: i32
 :00002 [01] @shift_count: - = %1
 :00003 [01] @shift: - = %1
 :00004 [02] %1 = @chr_banks: -
 :00005 [02] %1 = %1.flatten()                    [<INVALID>]
 :00007 [03] %2 = 4096: i32
 :00008 [02] %1 = %1.each_slice(%2;1)             [<INVALID>]
 :00010 [02] %1 = %1.to_a()                       [<INVALID>]
 :00012 [01] @chr_banks: - = %1
 :00013 [02] %1 = literal[true]
 :00014 [01] @wrk_writable: - = %1
 :00015 [01] @wrk_readable: - = %1
 :00016 [02] %1 = @cpu: -
 :00017 [03] %2 = literal[24576..32767]
 :00018 [04] %3 = :peek_6000
 :00019 [04] %3 = %0.method(%3;1)                 [<INVALID>]
 :00021 [05] %4 = :poke_6000
 :00022 [05] %4 = %0.method(%4;1)                 [<INVALID>]
 :00024 [01] _ = %1.add_mappings(%2;3)            [<INVALID>]
 :00026 [02] %1 = @cpu: -
 :00027 [03] %2 = literal[32768..65535]
 :00028 [04] %3 = @prg_ref: -
 :00029 [05] %4 = :poke_prg
 :00030 [05] %4 = %0.method(%4;1)                 [<INVALID>]
 :00032 [01] _ = %1.add_mappings(%2;3)            [<INVALID>]
 :00034 [02] %1 = :horizontal
 :00035 [01] _ = %0.update_nmt(%1;1)              [<INVALID>]
 :00037 [02] %1 = :fix_last
 :00038 [03] %2 = 0: i32
 :00039 [04] %3 = 0: i32
 :00040 [01] _ = %0.update_prg(%1;3)              [<INVALID>]
 :00042 [02] %1 = :conseq
 :00043 [03] %2 = 0: i32
 :00044 [04] %3 = 0: i32
 :00045 [02] %1 = %0.update_chr(%1;3)             [<INVALID>]
 :00047 [01] ret %1
------------------------------------
------------------------------------
<poke_prg> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:29
meta:on_stack:true kind:Ruby mode:method FuncId(317) regs:12 ISeq(RubyFuncInfo { id:317 name:poke_prg method:(FuncId(317), 0) args: 2 non_temp: 6 temp: 5})
[]
+:00000 [07] init_method reg:11 arg:2 req:2 opt:0 rest:false block:None stack_offset:9
 :00001 [08] %7 = 7: i32
 :00002 [08] %7 = %2.[%7]                         [<INVALID>][<INVALID>]
 :00003 [08] _%7 = %7 == 1: i16                   [<INVALID>][<INVALID>]
 :00004 [07] condnotbr _%7 =>:00009
+:00005 [08] %7 = 0: i32
 :00006 [07] @shift_count: - = %7
 :00007 [07] @shift: - = %7
 :00008 [07] ret %7
+:00009 [08] %7 = @shift: -
 :00010 [09] %8 = 0: i32
 :00011 [09] %8 = %2.[%8]                         [<INVALID>][<INVALID>]
 :00012 [10] %9 = @shift_count: -
 :00013 [09] %8 = %8.<<(%9;1)                     [<INVALID>]
 :00015 [08] %7 = %7 | %8                         [<INVALID>][<INVALID>]
 :00016 [07] @shift: - = %7
 :00017 [08] %7 = @shift_count: -
 :00018 [08] %7 = %7 + 1: i16                     [<INVALID>][<INVALID>]
 :00019 [07] @shift_count: - = %7
 :00020 [08] %7 = @shift_count: -
 :00021 [08] _%7 = %7 == 5: i16                   [<INVALID>][<INVALID>]
 :00022 [07] condnotbr _%7 =>:00100
+:00023 [09] %8 = 13: i32
 :00024 [09] %8 = %1.>>(%8;1)                     [<INVALID>]
 :00026 [09] %8 = %8 & 3: i16                     [<INVALID>][<INVALID>]
 :00027 [10] %9 = 0: i32
 :00028 [10] _%9 = %9 === %8                      [<INVALID>][<INVALID>]
 :00029 [09] condnotbr _%9 =>:00061
+:00030 [10] %9 = const[NMT_MODE]                 [<INVALID>]
 :00031 [11] %10 = @shift: -
 :00032 [11] %10 = %10 & 3: i16                   [<INVALID>][<INVALID>]
 :00033 [09] %3 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00034 [10] %9 = const[PRG_MODE]                 [<INVALID>]
 :00035 [11] %10 = @shift: -
 :00036 [12] %11 = 2: i32
 :00037 [11] %10 = %10.>>(%11;1)                  [<INVALID>]
 :00039 [11] %10 = %10 & 3: i16                   [<INVALID>][<INVALID>]
 :00040 [09] %4 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00041 [10] %9 = const[CHR_MODE]                 [<INVALID>]
 :00042 [11] %10 = @shift: -
 :00043 [12] %11 = 4: i32
 :00044 [11] %10 = %10.>>(%11;1)                  [<INVALID>]
 :00046 [11] %10 = %10 & 1: i16                   [<INVALID>][<INVALID>]
 :00047 [09] %5 = %9.[%10]                        [<INVALID>][<INVALID>]
 :00048 [09] _ = %0.update_nmt(%3;1)              [<INVALID>]
 :00050 [10] %9 = %4
 :00051 [11] %10 = @prg_bank: -
 :00052 [12] %11 = @chr_bank_0: -
 :00053 [09] _ = %0.update_prg(%9;3)              [<INVALID>]
 :00055 [10] %9 = %5
 :00056 [11] %10 = @chr_bank_0: -
 :00057 [12] %11 = @chr_bank_1: -
 :00058 [09] %7 = %0.update_chr(%9;3)             [<INVALID>]
 :00060 [08] br =>:00096
+:00061 [10] %9 = 1: i32
 :00062 [10] _%9 = %9 === %8                      [<INVALID>][<INVALID>]
 :00063 [09] condnotbr _%9 =>:00077
+:00064 [09] %6 = @chr_bank_0: -
 :00065 [10] %9 = @prg_mode: -
 :00066 [11] %10 = @prg_bank: -
 :00067 [12] %11 = @shift: -
 :00068 [09] _ = %0.update_prg(%9;3)              [<INVALID>]
 :00070 [09] @chr_bank_0: - = %6
 :00071 [10] %9 = @chr_mode: -
 :00072 [11] %10 = @shift: -
 :00073 [12] %11 = @chr_bank_1: -
 :00074 [09] %7 = %0.update_chr(%9;3)             [<INVALID>]
 :00076 [08] br =>:00096
+:00077 [10] %9 = 2: i32
 :00078 [10] _%9 = %9 === %8                      [<INVALID>][<INVALID>]
 :00079 [09] condnotbr _%9 =>:00086
+:00080 [10] %9 = @chr_mode: -
 :00081 [11] %10 = @chr_bank_0: -
 :00082 [12] %11 = @shift: -
 :00083 [09] %7 = %0.update_chr(%9;3)             [<INVALID>]
 :00085 [08] br =>:00096
+:00086 [10] %9 = 3: i32
 :00087 [10] _%9 = %9 === %8                      [<INVALID>][<INVALID>]
 :00088 [09] condnotbr _%9 =>:00095
+:00089 [10] %9 = @prg_mode: -
 :00090 [11] %10 = @shift: -
 :00091 [12] %11 = @chr_bank_0: -
 :00092 [09] %7 = %0.update_prg(%9;3)             [<INVALID>]
 :00094 [08] br =>:00096
+:00095 [08] %7 = nil
+:00096 [08] %7 = 0: i32
 :00097 [07] @shift_count: - = %7
 :00098 [07] @shift: - = %7
 :00099 [07] ret %7
+:00100 [08] %7 = nil
 :00101 [07] ret %7
------------------------------------
------------------------------------
<update_nmt> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:61
meta:on_stack:true kind:Ruby mode:method FuncId(318) regs:4 ISeq(RubyFuncInfo { id:318 name:update_nmt method:(FuncId(318), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @nmt_mode: -
 :00002 [03] _%2 = %2 == %1                       [<INVALID>][<INVALID>]
 :00003 [02] condnotbr _%2 =>:00006
+:00004 [03] %2 = nil
 :00005 [02] ret %2
+:00006 [02] @nmt_mode: - = %1
 :00007 [03] %2 = @ppu: -
 :00008 [04] %3 = @nmt_mode: -
 :00009 [02] _ = %2.nametables=(%3;1)             [<INVALID>]
 :00011 [02] ret %3
------------------------------------
------------------------------------
<update_prg> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:67
meta:on_stack:true kind:Ruby mode:method FuncId(319) regs:13 ISeq(RubyFuncInfo { id:319 name:update_prg method:(FuncId(319), 0) args: 3 non_temp: 7 temp: 5})
[]
+:00000 [08] init_method reg:12 arg:3 req:3 opt:0 rest:false block:None stack_offset:10
 :00001 [09] %8 = @prg_mode: -
 :00002 [09] _%8 = %1 == %8                       [<INVALID>][<INVALID>]
 :00003 [08] condnotbr _%8 =>:00012
+:00004 [09] %8 = @prg_bank: -
 :00005 [09] _%8 = %2 == %8                       [<INVALID>][<INVALID>]
 :00006 [08] condnotbr _%8 =>:00012
+:00007 [09] %8 = @chr_bank_0: -
 :00008 [09] _%8 = %3 == %8                       [<INVALID>][<INVALID>]
 :00009 [08] condnotbr _%8 =>:00012
+:00010 [09] %8 = nil
 :00011 [08] ret %8
+:00012 [09] %8 = %1
 :00013 [10] %9 = %2
 :00014 [11] %10 = %3
 :00015 [11] @prg_mode: - = %8
 :00016 [11] @prg_bank: - = %9
 :00017 [11] @chr_bank_0: - = %10
 :00018 [09] %8 = @prg_banks: -
 :00019 [09] %8 = %8.size()                       [<INVALID>]
 :00021 [09] %8 = %8 - 1: i16                     [<INVALID>][<INVALID>]
 :00022 [09] %8 = 16: i16 & %8                    [<INVALID>][<INVALID>]
 :00023 [08] %4 = %3 & %8                         [<INVALID>][<INVALID>]
 :00024 [09] %8 = @prg_bank: -
 :00025 [09] %8 = %8 & 15: i16                    [<INVALID>][<INVALID>]
 :00026 [09] %8 = %8 | %4                         [<INVALID>][<INVALID>]
 :00027 [10] %9 = @prg_banks: -
 :00028 [10] %9 = %9.size()                       [<INVALID>]
 :00030 [10] %9 = %9 - 1: i16                     [<INVALID>][<INVALID>]
 :00031 [08] %5 = %8 & %9                         [<INVALID>][<INVALID>]
 :00032 [10] %9 = @prg_mode: -
 :00033 [11] %10 = :conseq
 :00034 [11] _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00035 [10] condnotbr _%10 =>:00042
+:00036 [11] %10 = 1: i32
 :00037 [11] %10 = ~%10                           [<INVALID>]
 :00038 [10] %6 = %5 & %10                        [<INVALID>][<INVALID>]
 :00039 [10] %7 = %6 + 1: i16                     [<INVALID>][<INVALID>]
 :00040 [10] %8 = %7
 :00041 [09] br =>:00062
+:00042 [11] %10 = :fix_first
 :00043 [11] _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00044 [10] condnotbr _%10 =>:00049
+:00045 [10] %6 = 0: i32
 :00046 [10] %7 = %5
 :00047 [10] %8 = %7
 :00048 [09] br =>:00062
+:00049 [11] %10 = :fix_last
 :00050 [11] _%10 = %10 === %9                    [<INVALID>][<INVALID>]
 :00051 [10] condnotbr _%10 =>:00061
+:00052 [10] %6 = %5
 :00053 [11] %10 = @prg_banks: -
 :00054 [11] %10 = %10.size()                     [<INVALID>]
 :00056 [11] %10 = %10 - 1: i16                   [<INVALID>][<INVALID>]
 :00057 [11] %10 = %10 & 15: i16                  [<INVALID>][<INVALID>]
 :00058 [10] %7 = %10 | %4                        [<INVALID>][<INVALID>]
 :00059 [10] %8 = %7
 :00060 [09] br =>:00062
+:00061 [09] %8 = nil
+:00062 [09] %8 = @prg_ref: -
 :00063 [10] %9 = 32768: i32
 :00064 [11] %10 = 16384: i32
 :00065 [13] %12 = @prg_banks: -
 :00066 [13] %12 = %12.[%6]                       [<INVALID>][<INVALID>]
 :00067 [08] %11 = %12
 :00068 [08] _ = %8.[]=(%9;3)                     [<INVALID>]
 :00070 [09] %8 = @prg_ref: -
 :00071 [10] %9 = 49152: i32
 :00072 [11] %10 = 16384: i32
 :00073 [13] %12 = @prg_banks: -
 :00074 [13] %12 = %12.[%7]                       [<INVALID>][<INVALID>]
 :00075 [08] %11 = %12
 :00076 [08] _ = %8.[]=(%9;3)                     [<INVALID>]
 :00078 [08] ret %12
------------------------------------
------------------------------------
<update_chr> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc1.rb:88
meta:on_stack:true kind:Ruby mode:method FuncId(320) regs:11 ISeq(RubyFuncInfo { id:320 name:update_chr method:(FuncId(320), 0) args: 3 non_temp: 5 temp: 5})
[]
+:00000 [06] init_method reg:10 arg:3 req:3 opt:0 rest:false block:None stack_offset:9
 :00001 [07] %6 = @chr_mode: -
 :00002 [07] _%6 = %1 == %6                       [<INVALID>][<INVALID>]
 :00003 [06] condnotbr _%6 =>:00012
+:00004 [07] %6 = @chr_bank_0: -
 :00005 [07] _%6 = %2 == %6                       [<INVALID>][<INVALID>]
 :00006 [06] condnotbr _%6 =>:00012
+:00007 [07] %6 = @chr_bank_1: -
 :00008 [07] _%6 = %3 == %6                       [<INVALID>][<INVALID>]
 :00009 [06] condnotbr _%6 =>:00012
+:00010 [07] %6 = nil
 :00011 [06] ret %6
+:00012 [07] %6 = %1
 :00013 [08] %7 = %2
 :00014 [09] %8 = %3
 :00015 [09] @chr_mode: - = %6
 :00016 [09] @chr_bank_0: - = %7
 :00017 [09] @chr_bank_1: - = %8
 :00018 [07] %6 = @chr_ram: -
 :00019 [06] condnotbr %6 =>:00022
+:00020 [07] %6 = nil
 :00021 [06] ret %6
+:00022 [07] %6 = @ppu: -
 :00023 [08] %7 = 0: i32
 :00024 [06] _ = %6.update(%7;1)                  [<INVALID>]
 :00026 [07] %6 = @chr_mode: -
 :00027 [08] %7 = :conseq
 :00028 [07] _%6 = %6 == %7                       [<INVALID>][<INVALID>]
 :00029 [06] condnotbr _%6 =>:00034
+:00030 [07] %6 = @chr_bank_0: -
 :00031 [06] %4 = %6 & 30: i16                    [<INVALID>][<INVALID>]
 :00032 [06] %5 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00033 [06] br =>:00036
+:00034 [06] %4 = @chr_bank_0: -
 :00035 [06] %5 = @chr_bank_1: -
+:00036 [07] %6 = @chr_ref: -
 :00037 [08] %7 = 0: i32
 :00038 [09] %8 = 4096: i32
 :00039 [11] %10 = @chr_banks: -
 :00040 [11] %10 = %10.[%4]                       [<INVALID>][<INVALID>]
 :00041 [06] %9 = %10
 :00042 [06] _ = %6.[]=(%7;3)                     [<INVALID>]
 :00044 [07] %6 = @chr_ref: -
 :00045 [08] %7 = 4096: i32
 :00046 [09] %8 = 4096: i32
 :00047 [11] %10 = @chr_banks: -
 :00048 [11] %10 = %10.[%5]                       [<INVALID>][<INVALID>]
 :00049 [06] %9 = %10
 :00050 [06] _ = %6.[]=(%7;3)                     [<INVALID>]
 :00052 [06] ret %10
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(321) regs:2 ISeq(RubyFuncInfo { id:321 name:/main method:(FuncId(321), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = module_def Optcarrot: FuncId(322)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(322) regs:3 ISeq(RubyFuncInfo { id:322 name:Optcarrot method:(FuncId(322), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = const[ROM]                      [<INVALID>]
 :00002 [02] %1 = class_def UxROM < %2: FuncId(323)
 :00003 [01] ret %1
------------------------------------
------------------------------------
<UxROM> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(323) regs:4 ISeq(RubyFuncInfo { id:323 name:UxROM method:(FuncId(323), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = const[MAPPER_DB]                [<INVALID>]
 :00002 [03] %2 = 2: i32
 :00003 [04] %3 = %0
 :00004 [01] %1:.[%2:] = %3
 :00005 [01] method_def reset: FuncId(324)
 :00006 [01] method_def poke_8000: FuncId(325)
 :00007 [02] %1 = :poke_8000
 :00008 [01] ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:6
meta:on_stack:true kind:Ruby mode:method FuncId(324) regs:5 ISeq(RubyFuncInfo { id:324 name:reset method:(FuncId(324), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 [01] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = @cpu: -
 :00002 [03] %2 = literal[32768..65535]
 :00003 [04] %3 = @prg_ref: -
 :00004 [05] %4 = :poke_8000
 :00005 [05] %4 = %0.method(%4;1)                 [<INVALID>]
 :00007 [02] %1 = %1.add_mappings(%2;3)           [<INVALID>]
 :00009 [01] ret %1
------------------------------------
------------------------------------
<poke_8000> /home/monochrome/optcarrot/lib/optcarrot/mapper/uxrom.rb:10
meta:on_stack:true kind:Ruby mode:method FuncId(325) regs:9 ISeq(RubyFuncInfo { id:325 name:poke_8000 method:(FuncId(325), 0) args: 2 non_temp: 2 temp: 6})
[]
+:00000 [03] init_method reg:8 arg:2 req:2 opt:0 rest:false block:None stack_offset:8
 :00001 [04] %3 = @prg_ref: -
 :00002 [05] %4 = 32768: i32
 :00003 [06] %5 = 16384: i32
 :00004 [08] %7 = @prg_banks: -
 :00005 [09] %8 = %2 & 7: i16                     [<INVALID>][<INVALID>]
 :00006 [08] %7 = %7.[%8]                         [<INVALID>][<INVALID>]
 :00007 [03] %6 = %7
 :00008 [03] _ = %3.[]=(%4;3)                     [<INVALID>]
 :00010 [03] ret %7
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(326) regs:2 ISeq(RubyFuncInfo { id:326 name:/main method:(FuncId(326), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = module_def Optcarrot: FuncId(327)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(327) regs:3 ISeq(RubyFuncInfo { id:327 name:Optcarrot method:(FuncId(327), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = const[ROM]                      [<INVALID>]
 :00002 [02] %1 = class_def CNROM < %2: FuncId(328)
 :00003 [01] ret %1
------------------------------------
------------------------------------
<CNROM> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(328) regs:4 ISeq(RubyFuncInfo { id:328 name:CNROM method:(FuncId(328), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = const[MAPPER_DB]                [<INVALID>]
 :00002 [03] %2 = 3: i32
 :00003 [04] %3 = %0
 :00004 [01] %1:.[%2:] = %3
 :00005 [01] method_def reset: FuncId(329)
 :00006 [01] method_def poke_8000: FuncId(330)
 :00007 [02] %1 = :poke_8000
 :00008 [01] ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:6
meta:on_stack:true kind:Ruby mode:method FuncId(329) regs:5 ISeq(RubyFuncInfo { id:329 name:reset method:(FuncId(329), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 [01] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = @cpu: -
 :00002 [03] %2 = literal[32768..65535]
 :00003 [04] %3 = @prg_ref: -
 :00004 [05] %4 = @chr_ram: -
 :00005 [04] condnotbr %4 =>:00008
+:00006 [05] %4 = nil
 :00007 [05] br =>:00011
+:00008 [05] %4 = :poke_8000
 :00009 [05] %4 = %0.method(%4;1)                 [<INVALID>]
+:00011 [02] %1 = %1.add_mappings(%2;3)           [<INVALID>]
 :00013 [01] ret %1
------------------------------------
------------------------------------
<poke_8000> /home/monochrome/optcarrot/lib/optcarrot/mapper/cnrom.rb:10
meta:on_stack:true kind:Ruby mode:method FuncId(330) regs:6 ISeq(RubyFuncInfo { id:330 name:poke_8000 method:(FuncId(330), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @chr_ref: -
 :00002 [05] %4 = @chr_banks: -
 :00003 [06] %5 = %2 & 3: i16                     [<INVALID>][<INVALID>]
 :00004 [05] %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00005 [04] %3 = %3.replace(%4;1)                [<INVALID>]
 :00007 [03] ret %3
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(331) regs:2 ISeq(RubyFuncInfo { id:331 name:/main method:(FuncId(331), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = module_def Optcarrot: FuncId(332)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(332) regs:3 ISeq(RubyFuncInfo { id:332 name:Optcarrot method:(FuncId(332), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = const[ROM]                      [<INVALID>]
 :00002 [02] %1 = class_def MMC3 < %2: FuncId(333)
 :00003 [01] ret %1
------------------------------------
------------------------------------
<MMC3> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(333) regs:4 ISeq(RubyFuncInfo { id:333 name:MMC3 method:(FuncId(333), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = const[MAPPER_DB]                [<INVALID>]
 :00002 [03] %2 = 4: i32
 :00003 [04] %3 = %0
 :00004 [01] %1:.[%2:] = %3
 :00005 [01] method_def init: FuncId(334)
 :00006 [01] method_def reset: FuncId(335)
 :00007 [01] method_def update_prg: FuncId(336)
 :00008 [01] method_def update_chr: FuncId(337)
 :00009 [01] method_def poke_8000: FuncId(338)
 :00010 [01] method_def poke_8001: FuncId(339)
 :00011 [01] method_def poke_a000: FuncId(340)
 :00012 [01] method_def poke_a001: FuncId(341)
 :00013 [01] method_def poke_c000: FuncId(342)
 :00014 [01] method_def poke_c001: FuncId(343)
 :00015 [01] method_def poke_e000: FuncId(344)
 :00016 [01] method_def poke_e001: FuncId(345)
 :00017 [01] method_def vsync: FuncId(346)
 :00018 [01] method_def a12_signaled: FuncId(347)
 :00019 [02] %1 = :a12_signaled
 :00020 [01] ret %1
------------------------------------
------------------------------------
<init> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:6
meta:on_stack:true kind:Ruby mode:method FuncId(334) regs:4 ISeq(RubyFuncInfo { id:334 name:init method:(FuncId(334), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:0 opt:1 rest:false block:None stack_offset:5
 :00001 [02] check_local(%1) =>:00003
+:00002 [02] %1 = :B
+:00003 [03] %2 = :A
 :00004 [03] %2 = %1 != %2                        [<INVALID>][<INVALID>]
 :00005 [02] @persistant: - = %2
 :00006 [03] %2 = @prg_banks: -
 :00007 [03] %2 = %2.flatten()                    [<INVALID>]
 :00009 [04] %3 = 8192: i32
 :00010 [03] %2 = %2.each_slice(%3;1)             [<INVALID>]
 :00012 [03] %2 = %2.to_a()                       [<INVALID>]
 :00014 [02] @prg_banks: - = %2
 :00015 [03] %2 = literal[false]
 :00016 [02] @prg_bank_swap: - = %2
 :00017 [03] %2 = @chr_banks: -
 :00018 [03] %2 = %2.flatten()                    [<INVALID>]
 :00020 [04] %3 = 1024: i32
 :00021 [03] %2 = %2.each_slice(%3;1)             [<INVALID>]
 :00023 [03] %2 = %2.to_a()                       [<INVALID>]
 :00025 [02] @chr_banks: - = %2
 :00026 [03] %2 = literal[[nil]]
 :00027 [03] %2 = %2 * 8: i16                     [<INVALID>][<INVALID>]
 :00028 [02] @chr_bank_mapping: - = %2
 :00029 [03] %2 = literal[false]
 :00030 [02] @chr_bank_swap: - = %2
 :00031 [02] ret %2
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:17
meta:on_stack:true kind:Ruby mode:method FuncId(335) regs:6 ISeq(RubyFuncInfo { id:335 name:reset method:(FuncId(335), 0) args: 0 non_temp: 1 temp: 4})
[]
+:00000 [02] init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = literal[true]
 :00002 [02] @wrk_readable: - = %2
 :00003 [03] %2 = literal[false]
 :00004 [02] @wrk_writable: - = %2
 :00005 [03] %2 = @mirroring: -
 :00006 [04] %3 = :FourScreen
 :00007 [03] _%2 = %2 != %3                       [<INVALID>][<INVALID>]
 :00008 [02] condnotbr _%2 =>:00013
+:00009 [03] %2 = :poke_a000
 :00010 [03] %2 = %0.method(%2;1)                 [<INVALID>]
 :00012 [03] br =>:00014
+:00013 [03] %2 = nil
+:00014 [03] %1 = %2
 :00015 [03] %2 = @cpu: -
 :00016 [04] %3 = literal[24576..32767]
 :00017 [05] %4 = :peek_6000
 :00018 [05] %4 = %0.method(%4;1)                 [<INVALID>]
 :00020 [06] %5 = :poke_6000
 :00021 [06] %5 = %0.method(%5;1)                 [<INVALID>]
 :00023 [02] _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00025 [03] %2 = @cpu: -
 :00026 [04] %3 = 32768: i32
 :00027 [05] %4 = 40959: i32
 :00028 [06] %5 = 2: i32
 :00029 [04] %3 = %3.step(%4;2)                   [<INVALID>]
 :00031 [05] %4 = @prg_ref: -
 :00032 [06] %5 = :poke_8000
 :00033 [06] %5 = %0.method(%5;1)                 [<INVALID>]
 :00035 [02] _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00037 [03] %2 = @cpu: -
 :00038 [04] %3 = 32769: i32
 :00039 [05] %4 = 40959: i32
 :00040 [06] %5 = 2: i32
 :00041 [04] %3 = %3.step(%4;2)                   [<INVALID>]
 :00043 [05] %4 = @prg_ref: -
 :00044 [06] %5 = :poke_8001
 :00045 [06] %5 = %0.method(%5;1)                 [<INVALID>]
 :00047 [02] _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00049 [03] %2 = @cpu: -
 :00050 [04] %3 = 40960: i32
 :00051 [05] %4 = 49151: i32
 :00052 [06] %5 = 2: i32
 :00053 [04] %3 = %3.step(%4;2)                   [<INVALID>]
 :00055 [05] %4 = @prg_ref: -
 :00056 [06] %5 = %1
 :00057 [02] _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00059 [03] %2 = @cpu: -
 :00060 [04] %3 = 40961: i32
 :00061 [05] %4 = 49151: i32
 :00062 [06] %5 = 2: i32
 :00063 [04] %3 = %3.step(%4;2)                   [<INVALID>]
 :00065 [05] %4 = @prg_ref: -
 :00066 [06] %5 = :poke_a001
 :00067 [06] %5 = %0.method(%5;1)                 [<INVALID>]
 :00069 [02] _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00071 [03] %2 = @cpu: -
 :00072 [04] %3 = 49152: i32
 :00073 [05] %4 = 57343: i32
 :00074 [06] %5 = 2: i32
 :00075 [04] %3 = %3.step(%4;2)                   [<INVALID>]
 :00077 [05] %4 = @prg_ref: -
 :00078 [06] %5 = :poke_c000
 :00079 [06] %5 = %0.method(%5;1)                 [<INVALID>]
 :00081 [02] _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00083 [03] %2 = @cpu: -
 :00084 [04] %3 = 49153: i32
 :00085 [05] %4 = 57343: i32
 :00086 [06] %5 = 2: i32
 :00087 [04] %3 = %3.step(%4;2)                   [<INVALID>]
 :00089 [05] %4 = @prg_ref: -
 :00090 [06] %5 = :poke_c001
 :00091 [06] %5 = %0.method(%5;1)                 [<INVALID>]
 :00093 [02] _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00095 [03] %2 = @cpu: -
 :00096 [04] %3 = 57344: i32
 :00097 [05] %4 = 65535: i32
 :00098 [06] %5 = 2: i32
 :00099 [04] %3 = %3.step(%4;2)                   [<INVALID>]
 :00101 [05] %4 = @prg_ref: -
 :00102 [06] %5 = :poke_e000
 :00103 [06] %5 = %0.method(%5;1)                 [<INVALID>]
 :00105 [02] _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00107 [03] %2 = @cpu: -
 :00108 [04] %3 = 57345: i32
 :00109 [05] %4 = 65535: i32
 :00110 [06] %5 = 2: i32
 :00111 [04] %3 = %3.step(%4;2)                   [<INVALID>]
 :00113 [05] %4 = @prg_ref: -
 :00114 [06] %5 = :poke_e001
 :00115 [06] %5 = %0.method(%5;1)                 [<INVALID>]
 :00117 [02] _ = %2.add_mappings(%3;3)            [<INVALID>]
 :00119 [03] %2 = 32768: i32
 :00120 [04] %3 = 0: i32
 :00121 [02] _ = %0.update_prg(%2;2)              [<INVALID>]
 :00123 [03] %2 = 40960: i32
 :00124 [04] %3 = 1: i32
 :00125 [02] _ = %0.update_prg(%2;2)              [<INVALID>]
 :00127 [03] %2 = 49152: i32
 :00128 [04] %3 = -2: i32
 :00129 [02] _ = %0.update_prg(%2;2)              [<INVALID>]
 :00131 [03] %2 = 57344: i32
 :00132 [04] %3 = -1: i32
 :00133 [02] _ = %0.update_prg(%2;2)              [<INVALID>]
 :00135 [03] %2 = 8: i32
 :00136 [04] %3 = literal[22806529]
 :00137 [02] _ = %2.times( &%3)                   [<INVALID>]
 :00139 [03] %2 = 0: i32
 :00140 [02] @clock: - = %2
 :00141 [03] %2 = const[PPU::RP2C02_CC]           [<INVALID>]
 :00142 [03] %2 = %2 * 16: i16                    [<INVALID>][<INVALID>]
 :00143 [02] @hold: - = %2
 :00144 [03] %2 = @ppu: -
 :00145 [04] %3 = %0
 :00146 [02] _ = %2.monitor_a12_rising_edge(%3;1) [<INVALID>]
 :00148 [03] %2 = @cpu: -
 :00149 [04] %3 = literal[true]
 :00150 [02] _ = %2.ppu_sync=(%3;1)               [<INVALID>]
 :00152 [03] %2 = 0: i32
 :00153 [02] @count: - = %2
 :00154 [03] %2 = 0: i32
 :00155 [02] @latch: - = %2
 :00156 [03] %2 = literal[false]
 :00157 [02] @reload: - = %2
 :00158 [03] %2 = literal[false]
 :00159 [02] @enabled: - = %2
 :00160 [02] ret %2
------------------------------------
------------------------------------
<update_prg> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:54
meta:on_stack:true kind:Ruby mode:method FuncId(336) regs:8 ISeq(RubyFuncInfo { id:336 name:update_prg method:(FuncId(336), 0) args: 2 non_temp: 2 temp: 5})
[]
+:00000 [03] init_method reg:7 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 [04] %3 = @prg_banks: -
 :00002 [04] %3 = %3.size()                       [<INVALID>]
 :00004 [03] %2 = %2 % %3                         [<INVALID>][<INVALID>]
 :00005 [04] %3 = @prg_bank_swap: -
 :00006 [03] condnotbr %3 =>:00012
+:00007 [04] %3 = 13: i32
 :00008 [04] %3 = %1.[%3]                         [<INVALID>][<INVALID>]
 :00009 [04] _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00010 [03] condnotbr _%3 =>:00012
+:00011 [03] %1 = %1 ^ 16384: i16                 [<INVALID>][<INVALID>]
+:00012 [04] %3 = @prg_ref: -
 :00013 [05] %4 = %1
 :00014 [06] %5 = 8192: i32
 :00015 [08] %7 = @prg_banks: -
 :00016 [08] %7 = %7.[%2]                         [<INVALID>][<INVALID>]
 :00017 [03] %6 = %7
 :00018 [03] _ = %3.[]=(%4;3)                     [<INVALID>]
 :00020 [03] ret %7
------------------------------------
------------------------------------
<update_chr> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:60
meta:on_stack:true kind:Ruby mode:method FuncId(337) regs:9 ISeq(RubyFuncInfo { id:337 name:update_chr method:(FuncId(337), 0) args: 2 non_temp: 3 temp: 5})
[]
+:00000 [04] init_method reg:8 arg:2 req:2 opt:0 rest:false block:None stack_offset:8
 :00001 [05] %4 = @chr_ram: -
 :00002 [04] condnotbr %4 =>:00005
+:00003 [05] %4 = nil
 :00004 [04] ret %4
+:00005 [04] %3 = %1 / 1024: i16                  [<INVALID>][<INVALID>]
 :00006 [05] %4 = @chr_banks: -
 :00007 [05] %4 = %4.size()                       [<INVALID>]
 :00009 [04] %2 = %2 % %4                         [<INVALID>][<INVALID>]
 :00010 [05] %4 = @chr_bank_mapping: -
 :00011 [05] %4 = %4.[%3]                         [<INVALID>][<INVALID>]
 :00012 [05] _%4 = %4 == %2                       [<INVALID>][<INVALID>]
 :00013 [04] condnotbr _%4 =>:00016
+:00014 [05] %4 = nil
 :00015 [04] ret %4
+:00016 [05] %4 = @chr_bank_swap: -
 :00017 [04] condnotbr %4 =>:00019
+:00018 [04] %1 = %1 ^ 4096: i16                  [<INVALID>][<INVALID>]
+:00019 [05] %4 = @ppu: -
 :00020 [06] %5 = 0: i32
 :00021 [04] _ = %4.update(%5;1)                  [<INVALID>]
 :00023 [05] %4 = @chr_ref: -
 :00024 [06] %5 = %1
 :00025 [07] %6 = 1024: i32
 :00026 [09] %8 = @chr_banks: -
 :00027 [09] %8 = %8.[%2]                         [<INVALID>][<INVALID>]
 :00028 [04] %7 = %8
 :00029 [04] _ = %4.[]=(%5;3)                     [<INVALID>]
 :00031 [05] %4 = @chr_bank_mapping: -
 :00032 [04] %4:.[%3:] = %2
 :00033 [04] ret %2
------------------------------------
------------------------------------
<poke_8000> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:71
meta:on_stack:true kind:Ruby mode:method FuncId(338) regs:17 ISeq(RubyFuncInfo { id:338 name:poke_8000 method:(FuncId(338), 0) args: 2 non_temp: 4 temp: 12})
[]
+:00000 [05] init_method reg:16 arg:2 req:2 opt:0 rest:false block:None stack_offset:12
 :00001 [06] %5 = %2 & 7: i16                     [<INVALID>][<INVALID>]
 :00002 [05] @reg_select: - = %5
 :00003 [06] %5 = 6: i32
 :00004 [06] %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00005 [05] %3 = %5 == 1: i16                    [<INVALID>][<INVALID>]
 :00006 [06] %5 = 7: i32
 :00007 [06] %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00008 [05] %4 = %5 == 1: i16                    [<INVALID>][<INVALID>]
 :00009 [06] %5 = @prg_bank_swap: -
 :00010 [06] _%5 = %3 != %5                       [<INVALID>][<INVALID>]
 :00011 [05] condnotbr _%5 =>:00035
+:00012 [05] @prg_bank_swap: - = %3
 :00013 [06] %5 = @prg_ref: -
 :00014 [07] %6 = 32768: i32
 :00015 [08] %7 = 8192: i32
 :00016 [10] %9 = @prg_ref: -
 :00017 [11] %10 = 49152: i32
 :00018 [12] %11 = 8192: i32
 :00019 [14] %13 = @prg_ref: -
 :00020 [15] %14 = 49152: i32
 :00021 [16] %15 = 8192: i32
 :00022 [14] %13 = %13.[](%14;2)                  [<INVALID>]
 :00024 [15] %14 = @prg_ref: -
 :00025 [16] %15 = 32768: i32
 :00026 [17] %16 = 8192: i32
 :00027 [15] %14 = %14.[](%15;2)                  [<INVALID>]
 :00029 [15] %8 = %13
 :00030 [15] _ = %5.[]=(%6;3)                     [<INVALID>]
 :00032 [15] %12 = %14
 :00033 [15] _ = %9.[]=(%10;3)                    [<INVALID>]
+:00035 [06] %5 = @chr_bank_swap: -
 :00036 [06] _%5 = %4 != %5                       [<INVALID>][<INVALID>]
 :00037 [05] condnotbr _%5 =>:00056
+:00038 [05] @chr_bank_swap: - = %4
 :00039 [06] %5 = @chr_ram: -
 :00040 [05] condnotbr %5 =>:00043
+:00041 [06] %5 = nil
 :00042 [05] ret %5
+:00043 [06] %5 = @ppu: -
 :00044 [07] %6 = 0: i32
 :00045 [05] _ = %5.update(%6;1)                  [<INVALID>]
 :00047 [06] %5 = @chr_ref: -
 :00048 [07] %6 = 4096: i32
 :00049 [05] _ = %5.rotate!(%6;1)                 [<INVALID>]
 :00051 [06] %5 = @chr_bank_mapping: -
 :00052 [07] %6 = 4: i32
 :00053 [06] %5 = %5.rotate!(%6;1)                [<INVALID>]
 :00055 [05] ret %5
+:00056 [06] %5 = nil
 :00057 [05] ret %5
------------------------------------
------------------------------------
<poke_8001> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:91
meta:on_stack:true kind:Ruby mode:method FuncId(339) regs:5 ISeq(RubyFuncInfo { id:339 name:poke_8001 method:(FuncId(339), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @reg_select: -
 :00002 [04] _%3 = %3 < 6: i16                    [<INVALID>][<INVALID>]
 :00003 [03] condnotbr _%3 =>:00027
+:00004 [04] %3 = @reg_select: -
 :00005 [04] _%3 = %3 < 2: i16                    [<INVALID>][<INVALID>]
 :00006 [03] condnotbr _%3 =>:00019
+:00007 [04] %3 = @reg_select: -
 :00008 [04] %3 = %3 * 2048: i16                  [<INVALID>][<INVALID>]
 :00009 [05] %4 = %2 & 254: i16                   [<INVALID>][<INVALID>]
 :00010 [03] _ = %0.update_chr(%3;2)              [<INVALID>]
 :00012 [04] %3 = @reg_select: -
 :00013 [04] %3 = %3 * 2048: i16                  [<INVALID>][<INVALID>]
 :00014 [04] %3 = %3 + 1024: i16                  [<INVALID>][<INVALID>]
 :00015 [05] %4 = %2 | 1: i16                     [<INVALID>][<INVALID>]
 :00016 [04] %3 = %0.update_chr(%3;2)             [<INVALID>]
 :00018 [03] ret %3
+:00019 [04] %3 = @reg_select: -
 :00020 [04] %3 = %3 - 2: i16                     [<INVALID>][<INVALID>]
 :00021 [04] %3 = %3 * 1024: i16                  [<INVALID>][<INVALID>]
 :00022 [04] %3 = %3 + 4096: i16                  [<INVALID>][<INVALID>]
 :00023 [05] %4 = %2
 :00024 [04] %3 = %0.update_chr(%3;2)             [<INVALID>]
 :00026 [03] ret %3
+:00027 [04] %3 = @reg_select: -
 :00028 [04] %3 = %3 - 6: i16                     [<INVALID>][<INVALID>]
 :00029 [04] %3 = %3 * 8192: i16                  [<INVALID>][<INVALID>]
 :00030 [05] %4 = 32768: i32
 :00031 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00032 [05] %4 = %2 & 63: i16                    [<INVALID>][<INVALID>]
 :00033 [04] %3 = %0.update_prg(%3;2)             [<INVALID>]
 :00035 [03] ret %3
------------------------------------
------------------------------------
<poke_a000> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:104
meta:on_stack:true kind:Ruby mode:method FuncId(340) regs:5 ISeq(RubyFuncInfo { id:340 name:poke_a000 method:(FuncId(340), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @ppu: -
 :00002 [05] %4 = 0: i32
 :00003 [05] %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00004 [05] _%4 = %4 == 1: i16                   [<INVALID>][<INVALID>]
 :00005 [04] condnotbr _%4 =>:00008
+:00006 [05] %4 = :horizontal
 :00007 [05] br =>:00009
+:00008 [05] %4 = :vertical
+:00009 [03] _ = %3.nametables=(%4;1)             [<INVALID>]
 :00011 [03] ret %4
------------------------------------
------------------------------------
<poke_a001> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:108
meta:on_stack:true kind:Ruby mode:method FuncId(341) regs:5 ISeq(RubyFuncInfo { id:341 name:poke_a001 method:(FuncId(341), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = 7: i32
 :00002 [04] %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00003 [04] %3 = %3 == 1: i16                    [<INVALID>][<INVALID>]
 :00004 [03] @wrk_readable: - = %3
 :00005 [05] %4 = 6: i32
 :00006 [05] %4 = %2.[%4]                         [<INVALID>][<INVALID>]
 :00007 [04] %3 = %4 == 0: i16                    [<INVALID>][<INVALID>]
 :00008 [04] condnotbr %3 =>:00010
+:00009 [04] %3 = @wrk_readable: -
+:00010 [03] @wrk_writable: - = %3
 :00011 [03] ret %3
------------------------------------
------------------------------------
<poke_c000> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:113
meta:on_stack:true kind:Ruby mode:method FuncId(342) regs:5 ISeq(RubyFuncInfo { id:342 name:poke_c000 method:(FuncId(342), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @ppu: -
 :00002 [05] %4 = 0: i32
 :00003 [03] _ = %3.update(%4;1)                  [<INVALID>]
 :00005 [03] @latch: - = %2
 :00006 [03] ret %2
------------------------------------
------------------------------------
<poke_c001> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:118
meta:on_stack:true kind:Ruby mode:method FuncId(343) regs:5 ISeq(RubyFuncInfo { id:343 name:poke_c001 method:(FuncId(343), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @ppu: -
 :00002 [05] %4 = 0: i32
 :00003 [03] _ = %3.update(%4;1)                  [<INVALID>]
 :00005 [04] %3 = literal[true]
 :00006 [03] @reload: - = %3
 :00007 [03] ret %3
------------------------------------
------------------------------------
<poke_e000> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:123
meta:on_stack:true kind:Ruby mode:method FuncId(344) regs:5 ISeq(RubyFuncInfo { id:344 name:poke_e000 method:(FuncId(344), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @ppu: -
 :00002 [05] %4 = 0: i32
 :00003 [03] _ = %3.update(%4;1)                  [<INVALID>]
 :00005 [04] %3 = literal[false]
 :00006 [03] @enabled: - = %3
 :00007 [04] %3 = @cpu: -
 :00008 [05] %4 = const[CPU::IRQ_EXT]             [<INVALID>]
 :00009 [04] %3 = %3.clear_irq(%4;1)              [<INVALID>]
 :00011 [03] ret %3
------------------------------------
------------------------------------
<poke_e001> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:129
meta:on_stack:true kind:Ruby mode:method FuncId(345) regs:5 ISeq(RubyFuncInfo { id:345 name:poke_e001 method:(FuncId(345), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @ppu: -
 :00002 [05] %4 = 0: i32
 :00003 [03] _ = %3.update(%4;1)                  [<INVALID>]
 :00005 [04] %3 = literal[true]
 :00006 [03] @enabled: - = %3
 :00007 [03] ret %3
------------------------------------
------------------------------------
<vsync> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:134
meta:on_stack:true kind:Ruby mode:method FuncId(346) regs:4 ISeq(RubyFuncInfo { id:346 name:vsync method:(FuncId(346), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clock: -
 :00002 [03] %2 = @cpu: -
 :00003 [03] %2 = %2.next_frame_clock()           [<INVALID>]
 :00005 [02] _%1 = %1 > %2                        [<INVALID>][<INVALID>]
 :00006 [01] condnotbr _%1 =>:00013
+:00007 [02] %1 = @clock: -
 :00008 [03] %2 = @cpu: -
 :00009 [03] %2 = %2.next_frame_clock()           [<INVALID>]
 :00011 [02] %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00012 [02] br =>:00014
+:00013 [02] %1 = 0: i32
+:00014 [01] @clock: - = %1
 :00015 [01] ret %1
------------------------------------
------------------------------------
<a12_signaled> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:138
meta:on_stack:true kind:Ruby mode:method FuncId(347) regs:7 ISeq(RubyFuncInfo { id:347 name:a12_signaled method:(FuncId(347), 0) args: 1 non_temp: 3 temp: 3})
[]
+:00000 [04] init_method reg:6 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 [05] %4 = @clock: -
 :00002 [06] %5 = @hold: -
 :00003 [06] %5 = %1 + %5                         [<INVALID>][<INVALID>]
 :00004 [06] %2 = %4
 :00005 [06] @clock: - = %5
 :00006 [05] _%4 = %1 < %2                        [<INVALID>][<INVALID>]
 :00007 [04] condnotbr _%4 =>:00010
+:00008 [05] %4 = nil
 :00009 [04] ret %4
+:00010 [05] %4 = @persistant: -
 :00011 [05] condbr %4 =>:00014
+:00012 [06] %5 = @count: -
 :00013 [05] %4 = %5 > 0: i16                     [<INVALID>][<INVALID>]
+:00014 [04] %3 = %4
 :00015 [05] %4 = @reload: -
 :00016 [04] condnotbr %4 =>:00022
+:00017 [05] %4 = literal[false]
 :00018 [04] @reload: - = %4
 :00019 [05] %4 = @latch: -
 :00020 [04] @count: - = %4
 :00021 [04] br =>:00031
+:00022 [05] %4 = @count: -
 :00023 [05] _%4 = %4 == 0: i16                   [<INVALID>][<INVALID>]
 :00024 [04] condnotbr _%4 =>:00028
+:00025 [05] %4 = @latch: -
 :00026 [04] @count: - = %4
 :00027 [04] br =>:00031
+:00028 [05] %4 = @count: -
 :00029 [05] %4 = %4 - 1: i16                     [<INVALID>][<INVALID>]
 :00030 [04] @count: - = %4
+:00031 [04] condnotbr %3 =>:00043
+:00032 [05] %4 = @count: -
 :00033 [05] _%4 = %4 == 0: i16                   [<INVALID>][<INVALID>]
 :00034 [04] condnotbr _%4 =>:00043
+:00035 [05] %4 = @enabled: -
 :00036 [04] condnotbr %4 =>:00043
+:00037 [05] %4 = @cpu: -
 :00038 [06] %5 = const[CPU::IRQ_EXT]             [<INVALID>]
 :00039 [07] %6 = %1
 :00040 [05] %4 = %4.do_irq(%5;2)                 [<INVALID>]
 :00042 [04] ret %4
+:00043 [05] %4 = nil
 :00044 [04] ret %4
------------------------------------
------------------------------------
<block in reset> /home/monochrome/optcarrot/lib/optcarrot/mapper/mmc3.rb:36
meta:on_stack:true kind:Ruby mode:method FuncId(348) regs:4 ISeq(RubyFuncInfo { id:348 name:<unnamed> method:(FuncId(335), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = %1 * 1024: i16                  [<INVALID>][<INVALID>]
 :00002 [04] %3 = %1
 :00003 [03] %2 = %0.update_chr(%2;2)             [<INVALID>]
 :00005 [02] ret %2
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(349) regs:2 ISeq(RubyFuncInfo { id:349 name:/main method:(FuncId(349), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = module_def Optcarrot: FuncId(350)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(350) regs:2 ISeq(RubyFuncInfo { id:350 name:Optcarrot method:(FuncId(350), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [01] _ = class_def Pads < _: FuncId(351)
 :00002 [02] %1 = class_def Pad < _: FuncId(352)
 :00003 [01] ret %1
------------------------------------
------------------------------------
<Pads> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(351) regs:2 ISeq(RubyFuncInfo { id:351 name:Pads method:(FuncId(351), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [01] method_def inspect: FuncId(353)
 :00002 [01] method_def initialize: FuncId(354)
 :00003 [01] method_def reset: FuncId(355)
 :00004 [01] method_def peek_401x: FuncId(356)
 :00005 [01] method_def poke_4016: FuncId(357)
 :00006 [01] method_def keydown: FuncId(358)
 :00007 [01] method_def keyup: FuncId(359)
 :00008 [02] %1 = :keyup
 :00009 [01] ret %1
------------------------------------
------------------------------------
<Pad> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:49
meta:on_stack:true kind:Ruby mode:class_def FuncId(352) regs:2 ISeq(RubyFuncInfo { id:352 name:Pad method:(FuncId(352), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = 0: i32
 :00002 [01] const[A] = %1
 :00003 [02] %1 = 1: i32
 :00004 [01] const[B] = %1
 :00005 [02] %1 = 2: i32
 :00006 [01] const[SELECT] = %1
 :00007 [02] %1 = 3: i32
 :00008 [01] const[START] = %1
 :00009 [02] %1 = 4: i32
 :00010 [01] const[UP] = %1
 :00011 [02] %1 = 5: i32
 :00012 [01] const[DOWN] = %1
 :00013 [02] %1 = 6: i32
 :00014 [01] const[LEFT] = %1
 :00015 [02] %1 = 7: i32
 :00016 [01] const[RIGHT] = %1
 :00017 [01] method_def initialize: FuncId(360)
 :00018 [01] method_def reset: FuncId(361)
 :00019 [01] method_def poke: FuncId(362)
 :00020 [01] method_def peek: FuncId(363)
 :00021 [01] method_def poll_state: FuncId(364)
 :00022 [02] %1 = :buttons
 :00023 [02] %1 = %0.attr_accessor(%1;1)          [<INVALID>]
 :00025 [01] ret %1
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:4
meta:on_stack:true kind:Ruby mode:method FuncId(353) regs:4 ISeq(RubyFuncInfo { id:353 name:inspect method:(FuncId(353), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = literal["#<"]
 :00002 [03] %2 = %0.class()                      [<INVALID>]
 :00004 [04] %3 = literal[">"]
 :00005 [02] %1 = concat(%1; 3)
 :00006 [01] ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:11
meta:on_stack:true kind:Ruby mode:method FuncId(354) regs:8 ISeq(RubyFuncInfo { id:354 name:initialize method:(FuncId(354), 0) args: 3 non_temp: 3 temp: 4})
[]
+:00000 [04] init_method reg:7 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 [04] @conf: - = %1
 :00002 [04] @cpu: - = %2
 :00003 [04] @apu: - = %3
 :00004 [06] %5 = const[Pad]                      [<INVALID>]
 :00005 [06] %5 = %5.new()                        [<INVALID>]
 :00007 [07] %6 = const[Pad]                      [<INVALID>]
 :00008 [07] %6 = %6.new()                        [<INVALID>]
 :00010 [05] %4 = array[%5; 2]
 :00011 [04] @pads: - = %4
 :00012 [04] ret %4
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:18
meta:on_stack:true kind:Ruby mode:method FuncId(355) regs:6 ISeq(RubyFuncInfo { id:355 name:reset method:(FuncId(355), 0) args: 0 non_temp: 0 temp: 5})
[]
+:00000 [01] init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = @cpu: -
 :00002 [03] %2 = 16406: i32
 :00003 [04] %3 = :peek_401x
 :00004 [04] %3 = %0.method(%3;1)                 [<INVALID>]
 :00006 [05] %4 = :poke_4016
 :00007 [05] %4 = %0.method(%4;1)                 [<INVALID>]
 :00009 [01] _ = %1.add_mappings(%2;3)            [<INVALID>]
 :00011 [02] %1 = @cpu: -
 :00012 [03] %2 = 16407: i32
 :00013 [04] %3 = :peek_401x
 :00014 [04] %3 = %0.method(%3;1)                 [<INVALID>]
 :00016 [05] %4 = @apu: -
 :00017 [06] %5 = :poke_4017
 :00018 [05] %4 = %4.method(%5;1)                 [<INVALID>]
 :00020 [01] _ = %1.add_mappings(%2;3)            [<INVALID>]
 :00022 [02] %1 = @pads: -
 :00023 [03] %2 = 0: i32
 :00024 [02] %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00025 [01] _ = %1.reset()                       [<INVALID>]
 :00027 [02] %1 = @pads: -
 :00028 [03] %2 = 1: i32
 :00029 [02] %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00030 [02] %1 = %1.reset()                      [<INVALID>]
 :00032 [01] ret %1
------------------------------------
------------------------------------
<peek_401x> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:25
meta:on_stack:true kind:Ruby mode:method FuncId(356) regs:4 ISeq(RubyFuncInfo { id:356 name:peek_401x method:(FuncId(356), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @cpu: -
 :00002 [02] _ = %2.update()                      [<INVALID>]
 :00004 [03] %2 = @pads: -
 :00005 [04] %3 = %1 - 16406: i16                 [<INVALID>][<INVALID>]
 :00006 [03] %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00007 [03] %2 = %2.peek()                       [<INVALID>]
 :00009 [03] %2 = %2 | 64: i16                    [<INVALID>][<INVALID>]
 :00010 [02] ret %2
------------------------------------
------------------------------------
<poke_4016> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:30
meta:on_stack:true kind:Ruby mode:method FuncId(357) regs:5 ISeq(RubyFuncInfo { id:357 name:poke_4016 method:(FuncId(357), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @pads: -
 :00002 [05] %4 = 0: i32
 :00003 [04] %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00004 [03] _ = %3.poke(%2;1)                    [<INVALID>]
 :00006 [04] %3 = @pads: -
 :00007 [05] %4 = 1: i32
 :00008 [04] %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00009 [04] %3 = %3.poke(%2;1)                   [<INVALID>]
 :00011 [03] ret %3
------------------------------------
------------------------------------
<keydown> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:38
meta:on_stack:true kind:Ruby mode:method FuncId(358) regs:6 ISeq(RubyFuncInfo { id:358 name:keydown method:(FuncId(358), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @pads: -
 :00002 [04] %3 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00003 [05] %4 = @pads: -
 :00004 [05] %4 = %4.[%1]                         [<INVALID>][<INVALID>]
 :00005 [05] %4 = %4.buttons()                    [<INVALID>]
 :00007 [06] %5 = 1: i32
 :00008 [06] %5 = %5.<<(%2;1)                     [<INVALID>]
 :00010 [05] %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00011 [03] _ = %3.buttons=(%4;1)                [<INVALID>]
 :00013 [03] ret %4
------------------------------------
------------------------------------
<keyup> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:42
meta:on_stack:true kind:Ruby mode:method FuncId(359) regs:7 ISeq(RubyFuncInfo { id:359 name:keyup method:(FuncId(359), 0) args: 2 non_temp: 2 temp: 4})
[]
+:00000 [03] init_method reg:6 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 [04] %3 = @pads: -
 :00002 [04] %3 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00003 [05] %4 = @pads: -
 :00004 [05] %4 = %4.[%1]                         [<INVALID>][<INVALID>]
 :00005 [05] %4 = %4.buttons()                    [<INVALID>]
 :00007 [07] %6 = 1: i32
 :00008 [06] %5 = %6.<<(%2;1)                     [<INVALID>]
 :00010 [06] %5 = ~%5                             [<INVALID>]
 :00011 [05] %4 = %4 & %5                         [<INVALID>][<INVALID>]
 :00012 [03] _ = %3.buttons=(%4;1)                [<INVALID>]
 :00014 [03] ret %4
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:59
meta:on_stack:true kind:Ruby mode:method FuncId(360) regs:2 ISeq(RubyFuncInfo { id:360 name:initialize method:(FuncId(360), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = %0.reset()                      [<INVALID>]
 :00003 [01] ret %1
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:63
meta:on_stack:true kind:Ruby mode:method FuncId(361) regs:2 ISeq(RubyFuncInfo { id:361 name:reset method:(FuncId(361), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = literal[false]
 :00002 [01] @strobe: - = %1
 :00003 [02] %1 = 0: i32
 :00004 [01] @stream: - = %1
 :00005 [01] @buttons: - = %1
 :00006 [01] ret %1
------------------------------------
------------------------------------
<poke> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:68
meta:on_stack:true kind:Ruby mode:method FuncId(362) regs:5 ISeq(RubyFuncInfo { id:362 name:poke method:(FuncId(362), 0) args: 1 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = @strobe: -
 :00002 [04] %3 = 0: i32
 :00003 [04] %3 = %1.[%3]                         [<INVALID>][<INVALID>]
 :00004 [04] %3 = %3 == 1: i16                    [<INVALID>][<INVALID>]
 :00005 [03] @strobe: - = %3
 :00006 [03] condnotbr %2 =>:00018
+:00007 [04] %3 = @strobe: -
 :00008 [04] %3 = !%3                             [<INVALID>]
 :00009 [03] condnotbr %3 =>:00018
+:00010 [04] %3 = %0.poll_state()                 [<INVALID>]
 :00012 [05] %4 = 1: i32
 :00013 [04] %3 = %3.<<(%4;1)                     [<INVALID>]
 :00015 [04] %3 = %3 ^ -512: i16                  [<INVALID>][<INVALID>]
 :00016 [03] @stream: - = %3
 :00017 [03] ret %3
+:00018 [04] %3 = nil
 :00019 [03] ret %3
------------------------------------
------------------------------------
<peek> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:74
meta:on_stack:true kind:Ruby mode:method FuncId(363) regs:3 ISeq(RubyFuncInfo { id:363 name:peek method:(FuncId(363), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @strobe: -
 :00002 [01] condnotbr %1 =>:00007
+:00003 [02] %1 = %0.poll_state()                 [<INVALID>]
 :00005 [02] %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00006 [01] ret %1
+:00007 [02] %1 = @stream: -
 :00008 [03] %2 = 1: i32
 :00009 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00011 [01] @stream: - = %1
 :00012 [02] %1 = @stream: -
 :00013 [03] %2 = 0: i32
 :00014 [02] %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00015 [01] ret %1
------------------------------------
------------------------------------
<poll_state> /home/monochrome/optcarrot/lib/optcarrot/pad.rb:80
meta:on_stack:true kind:Ruby mode:method FuncId(364) regs:3 ISeq(RubyFuncInfo { id:364 name:poll_state method:(FuncId(364), 0) args: 0 non_temp: 1 temp: 1})
[]
+:00000 [02] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @buttons: -
 :00002 [03] %2 = %1 & 48: i16                    [<INVALID>][<INVALID>]
 :00003 [03] _%2 = %2 == 48: i16                  [<INVALID>][<INVALID>]
 :00004 [02] condnotbr _%2 =>:00006
+:00005 [02] %1 = %1 & 207: i16                   [<INVALID>][<INVALID>]
+:00006 [03] %2 = %1 & 192: i16                   [<INVALID>][<INVALID>]
 :00007 [03] _%2 = %2 == 192: i16                 [<INVALID>][<INVALID>]
 :00008 [02] condnotbr _%2 =>:00010
+:00009 [02] %1 = %1 & 63: i16                    [<INVALID>][<INVALID>]
+:00010 [02] ret %1
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(367) regs:2 ISeq(RubyFuncInfo { id:367 name:/main method:(FuncId(367), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = literal["opt"]
 :00002 [01] _ = %0.require_relative(%1;1)        [<INVALID>]
 :00004 [02] %1 = module_def Optcarrot: FuncId(368)
 :00005 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(368) regs:2 ISeq(RubyFuncInfo { id:368 name:Optcarrot method:(FuncId(368), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = class_def CPU < _: FuncId(369)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<CPU> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:5
meta:on_stack:true kind:Ruby mode:class_def FuncId(369) regs:10 ISeq(RubyFuncInfo { id:369 name:CPU method:(FuncId(369), 0) args: 0 non_temp: 0 temp: 9})
[]
+:00000 [01] init_method reg:9 arg:0 req:0 opt:0 rest:false block:None stack_offset:8
 :00001 [02] %1 = 65530: i32
 :00002 [01] const[NMI_VECTOR] = %1
 :00003 [02] %1 = 65532: i32
 :00004 [01] const[RESET_VECTOR] = %1
 :00005 [02] %1 = 65534: i32
 :00006 [01] const[IRQ_VECTOR] = %1
 :00007 [02] %1 = 1: i32
 :00008 [01] const[IRQ_EXT] = %1
 :00009 [02] %1 = 64: i32
 :00010 [01] const[IRQ_FRAME] = %1
 :00011 [02] %1 = 128: i32
 :00012 [01] const[IRQ_DMC] = %1
 :00013 [02] %1 = literal[1..8]
 :00014 [03] %2 = literal[24248321]
 :00015 [02] %1 = %1.map( &%2)                    [<INVALID>]
 :00017 [02] %2; 8 = expand(%1)
 :00018 [02] const[CLK_1] = %2
 :00019 [02] const[CLK_2] = %3
 :00020 [02] const[CLK_3] = %4
 :00021 [02] const[CLK_4] = %5
 :00022 [02] const[CLK_5] = %6
 :00023 [02] const[CLK_6] = %7
 :00024 [02] const[CLK_7] = %8
 :00025 [02] const[CLK_8] = %9
 :00026 [01] method_def inspect: FuncId(371)
 :00027 [01] method_def initialize: FuncId(372)
 :00028 [01] method_def reset: FuncId(373)
 :00029 [01] method_def peek_ram: FuncId(374)
 :00030 [01] method_def poke_ram: FuncId(375)
 :00031 [01] method_def peek_nop: FuncId(376)
 :00032 [01] method_def peek_jam_1: FuncId(377)
 :00033 [01] method_def peek_jam_2: FuncId(378)
 :00034 [01] method_def add_mappings: FuncId(379)
 :00035 [02] %1 = %0
 :00036 [01] singleton_method_def %1.poke_nop: FuncId(380)
 :00037 [01] method_def fetch: FuncId(381)
 :00038 [01] method_def store: FuncId(382)
 :00039 [01] method_def peek16: FuncId(383)
 :00040 [02] %1 = :ram
 :00041 [01] _ = %0.attr_reader(%1;1)             [<INVALID>]
 :00043 [02] %1 = :apu
 :00044 [03] %2 = :ppu
 :00045 [04] %3 = :ppu_sync
 :00046 [01] _ = %0.attr_writer(%1;3)             [<INVALID>]
 :00048 [01] method_def current_clock: FuncId(384)
 :00049 [01] method_def next_frame_clock: FuncId(385)
 :00050 [01] method_def next_frame_clock=: FuncId(386)
 :00051 [01] method_def steal_clocks: FuncId(387)
 :00052 [01] method_def odd_clock?: FuncId(388)
 :00053 [01] method_def update: FuncId(389)
 :00054 [01] method_def dmc_dma: FuncId(390)
 :00055 [01] method_def sprite_dma: FuncId(391)
 :00056 [01] method_def boot: FuncId(392)
 :00057 [01] method_def vsync: FuncId(393)
 :00058 [01] method_def clear_irq: FuncId(394)
 :00059 [01] method_def next_interrupt_clock: FuncId(395)
 :00060 [01] method_def do_irq: FuncId(396)
 :00061 [01] method_def do_nmi: FuncId(397)
 :00062 [01] method_def do_isr: FuncId(398)
 :00063 [01] method_def fetch_irq_isr_vector: FuncId(399)
 :00064 [01] method_def flags_pack: FuncId(400)
 :00065 [01] method_def flags_unpack: FuncId(401)
 :00066 [01] method_def branch: FuncId(402)
 :00067 [01] method_def store_mem: FuncId(403)
 :00068 [01] method_def store_zpg: FuncId(404)
 :00069 [01] method_def push8: FuncId(405)
 :00070 [01] method_def push16: FuncId(406)
 :00071 [01] method_def pull8: FuncId(407)
 :00072 [01] method_def pull16: FuncId(408)
 :00073 [01] method_def imm: FuncId(409)
 :00074 [01] method_def zpg: FuncId(410)
 :00075 [01] method_def zpg_reg: FuncId(411)
 :00076 [01] method_def zpg_x: FuncId(412)
 :00077 [01] method_def zpg_y: FuncId(413)
 :00078 [01] method_def abs: FuncId(414)
 :00079 [01] method_def abs_reg: FuncId(415)
 :00080 [01] method_def abs_x: FuncId(416)
 :00081 [01] method_def abs_y: FuncId(417)
 :00082 [01] method_def ind_x: FuncId(418)
 :00083 [01] method_def ind_y: FuncId(419)
 :00084 [01] method_def read_write: FuncId(420)
 :00085 [01] method_def _lda: FuncId(421)
 :00086 [01] method_def _ldx: FuncId(422)
 :00087 [01] method_def _ldy: FuncId(423)
 :00088 [01] method_def _sta: FuncId(424)
 :00089 [01] method_def _stx: FuncId(425)
 :00090 [01] method_def _sty: FuncId(426)
 :00091 [01] method_def _tax: FuncId(427)
 :00092 [01] method_def _tay: FuncId(428)
 :00093 [01] method_def _txa: FuncId(429)
 :00094 [01] method_def _tya: FuncId(430)
 :00095 [01] method_def _jmp_a: FuncId(431)
 :00096 [01] method_def _jmp_i: FuncId(432)
 :00097 [01] method_def _jsr: FuncId(433)
 :00098 [01] method_def _rts: FuncId(434)
 :00099 [01] method_def _rti: FuncId(435)
 :00100 [01] method_def _bne: FuncId(436)
 :00101 [01] method_def _beq: FuncId(437)
 :00102 [01] method_def _bmi: FuncId(438)
 :00103 [01] method_def _bpl: FuncId(439)
 :00104 [01] method_def _bcs: FuncId(440)
 :00105 [01] method_def _bcc: FuncId(441)
 :00106 [01] method_def _bvs: FuncId(442)
 :00107 [01] method_def _bvc: FuncId(443)
 :00108 [01] method_def _adc: FuncId(444)
 :00109 [01] method_def _sbc: FuncId(445)
 :00110 [01] method_def _and: FuncId(446)
 :00111 [01] method_def _ora: FuncId(447)
 :00112 [01] method_def _eor: FuncId(448)
 :00113 [01] method_def _bit: FuncId(449)
 :00114 [01] method_def _cmp: FuncId(450)
 :00115 [01] method_def _cpx: FuncId(451)
 :00116 [01] method_def _cpy: FuncId(452)
 :00117 [01] method_def _asl: FuncId(453)
 :00118 [01] method_def _lsr: FuncId(454)
 :00119 [01] method_def _rol: FuncId(455)
 :00120 [01] method_def _ror: FuncId(456)
 :00121 [01] method_def _dec: FuncId(457)
 :00122 [01] method_def _inc: FuncId(458)
 :00123 [01] method_def _dex: FuncId(459)
 :00124 [01] method_def _dey: FuncId(460)
 :00125 [01] method_def _inx: FuncId(461)
 :00126 [01] method_def _iny: FuncId(462)
 :00127 [01] method_def _clc: FuncId(463)
 :00128 [01] method_def _sec: FuncId(464)
 :00129 [01] method_def _cld: FuncId(465)
 :00130 [01] method_def _sed: FuncId(466)
 :00131 [01] method_def _clv: FuncId(467)
 :00132 [01] method_def _sei: FuncId(468)
 :00133 [01] method_def _cli: FuncId(469)
 :00134 [01] method_def _pha: FuncId(470)
 :00135 [01] method_def _php: FuncId(471)
 :00136 [01] method_def _pla: FuncId(472)
 :00137 [01] method_def _plp: FuncId(473)
 :00138 [01] method_def _tsx: FuncId(474)
 :00139 [01] method_def _txs: FuncId(475)
 :00140 [01] method_def _anc: FuncId(476)
 :00141 [01] method_def _ane: FuncId(477)
 :00142 [01] method_def _arr: FuncId(478)
 :00143 [01] method_def _asr: FuncId(479)
 :00144 [01] method_def _dcp: FuncId(480)
 :00145 [01] method_def _isb: FuncId(481)
 :00146 [01] method_def _las: FuncId(482)
 :00147 [01] method_def _lax: FuncId(483)
 :00148 [01] method_def _lxa: FuncId(484)
 :00149 [01] method_def _rla: FuncId(485)
 :00150 [01] method_def _rra: FuncId(486)
 :00151 [01] method_def _sax: FuncId(487)
 :00152 [01] method_def _sbx: FuncId(488)
 :00153 [01] method_def _sha: FuncId(489)
 :00154 [01] method_def _shs: FuncId(490)
 :00155 [01] method_def _shx: FuncId(491)
 :00156 [01] method_def _shy: FuncId(492)
 :00157 [01] method_def _slo: FuncId(493)
 :00158 [01] method_def _sre: FuncId(494)
 :00159 [01] method_def _nop: FuncId(495)
 :00160 [01] method_def _brk: FuncId(496)
 :00161 [01] method_def _jam: FuncId(497)
 :00162 [01] method_def r_op: FuncId(498)
 :00163 [01] method_def w_op: FuncId(499)
 :00164 [01] method_def rw_op: FuncId(500)
 :00165 [01] method_def a_op: FuncId(501)
 :00166 [01] method_def no_op: FuncId(502)
 :00167 [01] method_def do_clock: FuncId(503)
 :00168 [01] method_def run: FuncId(504)
 :00169 [03] %2 = :ctl
 :00170 [04] %3 = literal[[:imm, :zpg, :imm, :abs, nil, :zpg_x, nil, :abs_x]]
 :00171 [05] %4 = :rmw
 :00172 [06] %5 = literal[[:imm, :zpg, :imm, :abs, nil, :zpg_y, nil, :abs_y]]
 :00173 [07] %6 = :alu
 :00174 [08] %7 = literal[[:ind_x, :zpg, :imm, :abs, :ind_y, :zpg_x, :abs_y, :abs_x]]
 :00175 [09] %8 = :uno
 :00176 [10] %9 = literal[[:ind_x, :zpg, :imm, :abs, :ind_y, :zpg_y, :abs_y, :abs_y]]
 :00177 [02] %1 = hash[%2; 4]
 :00178 [01] const[ADDRESSING_MODES] = %1
 :00179 [02] %1 = literal[[]]
 :00180 [01] const[DISPATCH] = %1
 :00181 [02] %1 = %0
 :00182 [01] singleton_method_def %1.op: FuncId(505)
 :00183 [02] %1 = literal[[169, 165, 181, 173, 189, 185, 161, 177]]
 :00184 [03] %2 = literal[[:r_op, :_lda, :alu]]
 :00185 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00187 [02] %1 = literal[[162, 166, 182, 174, 190]]
 :00188 [03] %2 = literal[[:r_op, :_ldx, :rmw]]
 :00189 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00191 [02] %1 = literal[[160, 164, 180, 172, 188]]
 :00192 [03] %2 = literal[[:r_op, :_ldy, :ctl]]
 :00193 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00195 [02] %1 = literal[[133, 149, 141, 157, 153, 129, 145]]
 :00196 [03] %2 = literal[[:w_op, :_sta, :alu]]
 :00197 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00199 [02] %1 = literal[[134, 150, 142]]
 :00200 [03] %2 = literal[[:w_op, :_stx, :rmw]]
 :00201 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00203 [02] %1 = literal[[132, 148, 140]]
 :00204 [03] %2 = literal[[:w_op, :_sty, :ctl]]
 :00205 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00207 [02] %1 = literal[[170]]
 :00208 [03] %2 = :_tax
 :00209 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00211 [02] %1 = literal[[168]]
 :00212 [03] %2 = :_tay
 :00213 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00215 [02] %1 = literal[[138]]
 :00216 [03] %2 = :_txa
 :00217 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00219 [02] %1 = literal[[152]]
 :00220 [03] %2 = :_tya
 :00221 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00223 [02] %1 = literal[[76]]
 :00224 [03] %2 = :_jmp_a
 :00225 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00227 [02] %1 = literal[[108]]
 :00228 [03] %2 = :_jmp_i
 :00229 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00231 [02] %1 = literal[[32]]
 :00232 [03] %2 = :_jsr
 :00233 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00235 [02] %1 = literal[[96]]
 :00236 [03] %2 = :_rts
 :00237 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00239 [02] %1 = literal[[64]]
 :00240 [03] %2 = :_rti
 :00241 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00243 [02] %1 = literal[[208]]
 :00244 [03] %2 = :_bne
 :00245 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00247 [02] %1 = literal[[240]]
 :00248 [03] %2 = :_beq
 :00249 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00251 [02] %1 = literal[[48]]
 :00252 [03] %2 = :_bmi
 :00253 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00255 [02] %1 = literal[[16]]
 :00256 [03] %2 = :_bpl
 :00257 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00259 [02] %1 = literal[[176]]
 :00260 [03] %2 = :_bcs
 :00261 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00263 [02] %1 = literal[[144]]
 :00264 [03] %2 = :_bcc
 :00265 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00267 [02] %1 = literal[[112]]
 :00268 [03] %2 = :_bvs
 :00269 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00271 [02] %1 = literal[[80]]
 :00272 [03] %2 = :_bvc
 :00273 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00275 [02] %1 = literal[[105, 101, 117, 109, 125, 121, 97, 113]]
 :00276 [03] %2 = literal[[:r_op, :_adc, :alu]]
 :00277 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00279 [02] %1 = literal[[233, 235, 229, 245, 237, 253, 249, 225, 241]]
 :00280 [03] %2 = literal[[:r_op, :_sbc, :alu]]
 :00281 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00283 [02] %1 = literal[[41, 37, 53, 45, 61, 57, 33, 49]]
 :00284 [03] %2 = literal[[:r_op, :_and, :alu]]
 :00285 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00287 [02] %1 = literal[[9, 5, 21, 13, 29, 25, 1, 17]]
 :00288 [03] %2 = literal[[:r_op, :_ora, :alu]]
 :00289 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00291 [02] %1 = literal[[73, 69, 85, 77, 93, 89, 65, 81]]
 :00292 [03] %2 = literal[[:r_op, :_eor, :alu]]
 :00293 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00295 [02] %1 = literal[[36, 44]]
 :00296 [03] %2 = literal[[:r_op, :_bit, :alu]]
 :00297 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00299 [02] %1 = literal[[201, 197, 213, 205, 221, 217, 193, 209]]
 :00300 [03] %2 = literal[[:r_op, :_cmp, :alu]]
 :00301 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00303 [02] %1 = literal[[224, 228, 236]]
 :00304 [03] %2 = literal[[:r_op, :_cpx, :rmw]]
 :00305 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00307 [02] %1 = literal[[192, 196, 204]]
 :00308 [03] %2 = literal[[:r_op, :_cpy, :rmw]]
 :00309 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00311 [02] %1 = literal[[10]]
 :00312 [03] %2 = literal[[:a_op, :_asl]]
 :00313 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00315 [02] %1 = literal[[6, 22, 14, 30]]
 :00316 [03] %2 = literal[[:rw_op, :_asl, :alu]]
 :00317 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00319 [02] %1 = literal[[74]]
 :00320 [03] %2 = literal[[:a_op, :_lsr]]
 :00321 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00323 [02] %1 = literal[[70, 86, 78, 94]]
 :00324 [03] %2 = literal[[:rw_op, :_lsr, :alu]]
 :00325 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00327 [02] %1 = literal[[42]]
 :00328 [03] %2 = literal[[:a_op, :_rol]]
 :00329 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00331 [02] %1 = literal[[38, 54, 46, 62]]
 :00332 [03] %2 = literal[[:rw_op, :_rol, :alu]]
 :00333 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00335 [02] %1 = literal[[106]]
 :00336 [03] %2 = literal[[:a_op, :_ror]]
 :00337 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00339 [02] %1 = literal[[102, 118, 110, 126]]
 :00340 [03] %2 = literal[[:rw_op, :_ror, :alu]]
 :00341 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00343 [02] %1 = literal[[198, 214, 206, 222]]
 :00344 [03] %2 = literal[[:rw_op, :_dec, :alu]]
 :00345 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00347 [02] %1 = literal[[230, 246, 238, 254]]
 :00348 [03] %2 = literal[[:rw_op, :_inc, :alu]]
 :00349 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00351 [02] %1 = literal[[202]]
 :00352 [03] %2 = :_dex
 :00353 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00355 [02] %1 = literal[[136]]
 :00356 [03] %2 = :_dey
 :00357 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00359 [02] %1 = literal[[232]]
 :00360 [03] %2 = :_inx
 :00361 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00363 [02] %1 = literal[[200]]
 :00364 [03] %2 = :_iny
 :00365 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00367 [02] %1 = literal[[24]]
 :00368 [03] %2 = :_clc
 :00369 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00371 [02] %1 = literal[[56]]
 :00372 [03] %2 = :_sec
 :00373 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00375 [02] %1 = literal[[216]]
 :00376 [03] %2 = :_cld
 :00377 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00379 [02] %1 = literal[[248]]
 :00380 [03] %2 = :_sed
 :00381 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00383 [02] %1 = literal[[88]]
 :00384 [03] %2 = :_cli
 :00385 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00387 [02] %1 = literal[[120]]
 :00388 [03] %2 = :_sei
 :00389 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00391 [02] %1 = literal[[184]]
 :00392 [03] %2 = :_clv
 :00393 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00395 [02] %1 = literal[[72]]
 :00396 [03] %2 = :_pha
 :00397 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00399 [02] %1 = literal[[8]]
 :00400 [03] %2 = :_php
 :00401 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00403 [02] %1 = literal[[104]]
 :00404 [03] %2 = :_pla
 :00405 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00407 [02] %1 = literal[[40]]
 :00408 [03] %2 = :_plp
 :00409 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00411 [02] %1 = literal[[186]]
 :00412 [03] %2 = :_tsx
 :00413 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00415 [02] %1 = literal[[154]]
 :00416 [03] %2 = :_txs
 :00417 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00419 [02] %1 = literal[[11, 43]]
 :00420 [03] %2 = literal[[:r_op, :_anc, :uno]]
 :00421 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00423 [02] %1 = literal[[139]]
 :00424 [03] %2 = literal[[:r_op, :_ane, :uno]]
 :00425 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00427 [02] %1 = literal[[107]]
 :00428 [03] %2 = literal[[:r_op, :_arr, :uno]]
 :00429 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00431 [02] %1 = literal[[75]]
 :00432 [03] %2 = literal[[:r_op, :_asr, :uno]]
 :00433 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00435 [02] %1 = literal[[199, 215, 195, 211, 207, 223, 219]]
 :00436 [03] %2 = literal[[:rw_op, :_dcp, :alu]]
 :00437 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00439 [02] %1 = literal[[231, 247, 239, 255, 251, 227, 243]]
 :00440 [03] %2 = literal[[:rw_op, :_isb, :alu]]
 :00441 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00443 [02] %1 = literal[[187]]
 :00444 [03] %2 = literal[[:r_op, :_las, :uno]]
 :00445 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00447 [02] %1 = literal[[167, 183, 175, 191, 163, 179]]
 :00448 [03] %2 = literal[[:r_op, :_lax, :uno]]
 :00449 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00451 [02] %1 = literal[[171]]
 :00452 [03] %2 = literal[[:r_op, :_lxa, :uno]]
 :00453 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00455 [02] %1 = literal[[39, 55, 47, 63, 59, 35, 51]]
 :00456 [03] %2 = literal[[:rw_op, :_rla, :alu]]
 :00457 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00459 [02] %1 = literal[[103, 119, 111, 127, 123, 99, 115]]
 :00460 [03] %2 = literal[[:rw_op, :_rra, :alu]]
 :00461 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00463 [02] %1 = literal[[135, 151, 143, 131]]
 :00464 [03] %2 = literal[[:w_op, :_sax, :uno]]
 :00465 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00467 [02] %1 = literal[[203]]
 :00468 [03] %2 = literal[[:r_op, :_sbx, :uno]]
 :00469 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00471 [02] %1 = literal[[159, 147]]
 :00472 [03] %2 = literal[[:w_op, :_sha, :uno]]
 :00473 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00475 [02] %1 = literal[[155]]
 :00476 [03] %2 = literal[[:w_op, :_shs, :uno]]
 :00477 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00479 [02] %1 = literal[[158]]
 :00480 [03] %2 = literal[[:w_op, :_shx, :rmw]]
 :00481 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00483 [02] %1 = literal[[156]]
 :00484 [03] %2 = literal[[:w_op, :_shy, :ctl]]
 :00485 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00487 [02] %1 = literal[[7, 23, 15, 31, 27, 3, 19]]
 :00488 [03] %2 = literal[[:rw_op, :_slo, :alu]]
 :00489 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00491 [02] %1 = literal[[71, 87, 79, 95, 91, 67, 83]]
 :00492 [03] %2 = literal[[:rw_op, :_sre, :alu]]
 :00493 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00495 [02] %1 = literal[[26, 58, 90, 122, 218, 234, 250]]
 :00496 [03] %2 = literal[[:no_op, :_nop, 0, 2]]
 :00497 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00499 [02] %1 = literal[[128, 130, 137, 194, 226]]
 :00500 [03] %2 = literal[[:no_op, :_nop, 1, 2]]
 :00501 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00503 [02] %1 = literal[[4, 68, 100]]
 :00504 [03] %2 = literal[[:no_op, :_nop, 1, 3]]
 :00505 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00507 [02] %1 = literal[[20, 52, 84, 116, 212, 244]]
 :00508 [03] %2 = literal[[:no_op, :_nop, 1, 4]]
 :00509 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00511 [02] %1 = literal[[12]]
 :00512 [03] %2 = literal[[:no_op, :_nop, 2, 4]]
 :00513 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00515 [02] %1 = literal[[28, 60, 92, 124, 220, 252]]
 :00516 [03] %2 = literal[[:r_op, :_nop, :ctl]]
 :00517 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00519 [02] %1 = literal[[0]]
 :00520 [03] %2 = :_brk
 :00521 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00523 [02] %1 = literal[[2, 18, 34, 50, 66, 82, 98, 114, 146, 178, 210, 242]]
 :00524 [03] %2 = :_jam
 :00525 [01] _ = %0.op(%1;2)                      [<INVALID>]
 :00527 [02] %1 = class_def OptimizedCodeBuilder < _: FuncId(506)
 :00528 [01] ret %1
------------------------------------
------------------------------------
<block in CPU> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:14
meta:on_stack:true kind:Ruby mode:method FuncId(370) regs:3 ISeq(RubyFuncInfo { id:370 name:<unnamed> method:(FuncId(369), 1) args: 1 non_temp: 1 temp: 1})
[]
+:00000 [02] init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = const[RP2A03_CC]                [<INVALID>]
 :00002 [03] %2 = %1 * %2                         [<INVALID>][<INVALID>]
 :00003 [02] ret %2
------------------------------------
------------------------------------
<inspect> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:16
meta:on_stack:true kind:Ruby mode:method FuncId(371) regs:4 ISeq(RubyFuncInfo { id:371 name:inspect method:(FuncId(371), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = literal["#<"]
 :00002 [03] %2 = %0.class()                      [<INVALID>]
 :00004 [04] %3 = literal[">"]
 :00005 [02] %1 = concat(%1; 3)
 :00006 [01] ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:23
meta:on_stack:true kind:Ruby mode:method FuncId(372) regs:6 ISeq(RubyFuncInfo { id:372 name:initialize method:(FuncId(372), 0) args: 1 non_temp: 1 temp: 4})
[]
+:00000 [02] init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [02] @conf: - = %1
 :00002 [03] %2 = @conf: -
 :00003 [03] %2 = %2.load_cpu()                   [<INVALID>]
 :00005 [02] condnotbr %2 =>:00015
+:00006 [03] %2 = const[File]                     [<INVALID>]
 :00007 [04] %3 = @conf: -
 :00008 [04] %3 = %3.load_cpu()                   [<INVALID>]
 :00010 [03] %2 = %2.read(%3;1)                   [<INVALID>]
 :00012 [02] _ = %0.eval(%2;1)                    [<INVALID>]
 :00014 [02] br =>:00034
+:00015 [03] %2 = @conf: -
 :00016 [03] %2 = %2.opt_cpu()                    [<INVALID>]
 :00018 [02] condnotbr %2 =>:00034
+:00019 [03] %2 = const[OptimizedCodeBuilder]     [<INVALID>]
 :00020 [04] %3 = @conf: -
 :00021 [04] %3 = %3.loglevel()                   [<INVALID>]
 :00023 [05] %4 = @conf: -
 :00024 [05] %4 = %4.opt_cpu()                    [<INVALID>]
 :00026 [03] %2 = %2.new(%3;2)                    [<INVALID>]
 :00028 [03] %2 = %2.build()                      [<INVALID>]
 :00030 [04] %3 = nil
 :00031 [05] %4 = literal["(generated CPU core)"]
 :00032 [02] _ = %0.eval(%2;3)                    [<INVALID>]
+:00034 [03] %2 = literal[[nil]]
 :00035 [04] %3 = 65536: i32
 :00036 [03] %2 = %2 * %3                         [<INVALID>][<INVALID>]
 :00037 [02] @fetch: - = %2
 :00038 [03] %2 = literal[[nil]]
 :00039 [04] %3 = 65536: i32
 :00040 [03] %2 = %2 * %3                         [<INVALID>][<INVALID>]
 :00041 [02] @store: - = %2
 :00042 [03] %2 = literal[{}]
 :00043 [02] @peeks: - = %2
 :00044 [03] %2 = literal[{}]
 :00045 [02] @pokes: - = %2
 :00046 [03] %2 = literal[[0]]
 :00047 [03] %2 = %2 * 2048: i16                  [<INVALID>][<INVALID>]
 :00048 [02] @ram: - = %2
 :00049 [03] %2 = 0: i32
 :00050 [02] @clk: - = %2
 :00051 [03] %2 = 0: i32
 :00052 [02] @clk_frame: - = %2
 :00053 [03] %2 = 0: i32
 :00054 [02] @clk_target: - = %2
 :00055 [03] %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00056 [02] @clk_nmi: - = %2
 :00057 [03] %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00058 [02] @clk_irq: - = %2
 :00059 [03] %2 = 0: i32
 :00060 [02] @clk_total: - = %2
 :00061 [03] %2 = 0: i32
 :00062 [02] @irq_flags: - = %2
 :00063 [03] %2 = literal[false]
 :00064 [02] @jammed: - = %2
 :00065 [03] %2 = const[CPU]                      [<INVALID>]
 :00066 [04] %3 = :poke_nop
 :00067 [03] %2 = %2.method(%3;1)                 [<INVALID>]
 :00069 [02] @poke_nop: - = %2
 :00070 [02] _ = %0.reset()                       [<INVALID>]
 :00072 [03] %2 = 0: i32
 :00073 [02] @data: - = %2
 :00074 [02] @addr: - = %2
 :00075 [03] %2 = nil
 :00076 [02] @opcode: - = %2
 :00077 [03] %2 = literal[false]
 :00078 [02] @ppu_sync: - = %2
 :00079 [02] ret %2
------------------------------------
------------------------------------
<reset> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:63
meta:on_stack:true kind:Ruby mode:method FuncId(373) regs:5 ISeq(RubyFuncInfo { id:373 name:reset method:(FuncId(373), 0) args: 0 non_temp: 0 temp: 4})
[]
+:00000 [01] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = 0: i32
 :00002 [01] @_y: - = %1
 :00003 [01] @_x: - = %1
 :00004 [01] @_a: - = %1
 :00005 [02] %1 = 253: i32
 :00006 [01] @_sp: - = %1
 :00007 [02] %1 = 65532: i32
 :00008 [01] @_pc: - = %1
 :00009 [02] %1 = 1: i32
 :00010 [01] @_p_nz: - = %1
 :00011 [02] %1 = 0: i32
 :00012 [01] @_p_c: - = %1
 :00013 [02] %1 = 0: i32
 :00014 [01] @_p_v: - = %1
 :00015 [02] %1 = 4: i32
 :00016 [01] @_p_i: - = %1
 :00017 [02] %1 = 0: i32
 :00018 [01] @_p_d: - = %1
 :00019 [02] %1 = 0: i32
 :00020 [01] @clk_total: - = %1
 :00021 [01] @clk: - = %1
 :00022 [02] %1 = @ram: -
 :00023 [03] %2 = 255: i32
 :00024 [01] _ = %1.fill(%2;1)                    [<INVALID>]
 :00026 [02] %1 = literal[0..2047]
 :00027 [03] %2 = @ram: -
 :00028 [04] %3 = @ram: -
 :00029 [05] %4 = :[]=
 :00030 [04] %3 = %3.method(%4;1)                 [<INVALID>]
 :00032 [01] _ = %0.add_mappings(%1;3)            [<INVALID>]
 :00034 [02] %1 = literal[2048..8191]
 :00035 [03] %2 = :peek_ram
 :00036 [03] %2 = %0.method(%2;1)                 [<INVALID>]
 :00038 [04] %3 = :poke_ram
 :00039 [04] %3 = %0.method(%3;1)                 [<INVALID>]
 :00041 [01] _ = %0.add_mappings(%1;3)            [<INVALID>]
 :00043 [02] %1 = literal[8192..65535]
 :00044 [03] %2 = :peek_nop
 :00045 [03] %2 = %0.method(%2;1)                 [<INVALID>]
 :00047 [04] %3 = nil
 :00048 [01] _ = %0.add_mappings(%1;3)            [<INVALID>]
 :00050 [02] %1 = 65532: i32
 :00051 [03] %2 = :peek_jam_1
 :00052 [03] %2 = %0.method(%2;1)                 [<INVALID>]
 :00054 [04] %3 = nil
 :00055 [01] _ = %0.add_mappings(%1;3)            [<INVALID>]
 :00057 [02] %1 = 65533: i32
 :00058 [03] %2 = :peek_jam_2
 :00059 [03] %2 = %0.method(%2;1)                 [<INVALID>]
 :00061 [04] %3 = nil
 :00062 [02] %1 = %0.add_mappings(%1;3)           [<INVALID>]
 :00064 [01] ret %1
------------------------------------
------------------------------------
<peek_ram> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:90
meta:on_stack:true kind:Ruby mode:method FuncId(374) regs:4 ISeq(RubyFuncInfo { id:374 name:peek_ram method:(FuncId(374), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @ram: -
 :00002 [04] %3 = %1 % 2048: i16                  [<INVALID>][<INVALID>]
 :00003 [03] %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00004 [02] ret %2
------------------------------------
------------------------------------
<poke_ram> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:94
meta:on_stack:true kind:Ruby mode:method FuncId(375) regs:5 ISeq(RubyFuncInfo { id:375 name:poke_ram method:(FuncId(375), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @ram: -
 :00002 [05] %4 = %1 % 2048: i16                  [<INVALID>][<INVALID>]
 :00003 [03] %3:.[%4:] = %2
 :00004 [03] ret %2
------------------------------------
------------------------------------
<peek_nop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:98
meta:on_stack:true kind:Ruby mode:method FuncId(376) regs:3 ISeq(RubyFuncInfo { id:376 name:peek_nop method:(FuncId(376), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 [02] init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = 8: i32
 :00002 [03] %2 = %1.>>(%2;1)                     [<INVALID>]
 :00004 [02] ret %2
------------------------------------
------------------------------------
<peek_jam_1> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:102
meta:on_stack:true kind:Ruby mode:method FuncId(377) regs:4 ISeq(RubyFuncInfo { id:377 name:peek_jam_1 method:(FuncId(377), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @_pc: -
 :00002 [03] %2 = %2 - 1: i16                     [<INVALID>][<INVALID>]
 :00003 [04] %3 = 65535: i32
 :00004 [03] %2 = %2 & %3                         [<INVALID>][<INVALID>]
 :00005 [02] @_pc: - = %2
 :00006 [03] %2 = 252: i32
 :00007 [02] ret %2
------------------------------------
------------------------------------
<peek_jam_2> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:107
meta:on_stack:true kind:Ruby mode:method FuncId(378) regs:3 ISeq(RubyFuncInfo { id:378 name:peek_jam_2 method:(FuncId(378), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 [02] init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = 255: i32
 :00002 [02] ret %2
------------------------------------
------------------------------------
<add_mappings> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:114
meta:on_stack:true kind:Ruby mode:method FuncId(379) regs:7 ISeq(RubyFuncInfo { id:379 name:add_mappings method:(FuncId(379), 0) args: 3 non_temp: 3 temp: 3})
[]
+:00000 [04] init_method reg:6 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 [06] %5 = @peeks: -
 :00002 [05] %4 = %5.[%2]                         [<INVALID>][<INVALID>]
 :00003 [05] condbr %4 =>:00007
+:00004 [06] %5 = @peeks: -
 :00005 [06] %4 = %2
 :00006 [05] %5:.[%2:] = %4
+:00007 [04] %2 = %4
 :00008 [06] %5 = @pokes: -
 :00009 [05] %4 = %5.[%3]                         [<INVALID>][<INVALID>]
 :00010 [05] condbr %4 =>:00014
+:00011 [06] %5 = @pokes: -
 :00012 [06] %4 = %3
 :00013 [05] %5:.[%3:] = %4
+:00014 [04] %3 = %4
 :00015 [05] %4 = const[Integer]                  [<INVALID>]
 :00016 [05] %4 = %1.is_a?(%4;1)                  [<INVALID>]
 :00018 [04] condnotbr %4 =>:00022
+:00019 [06] %5 = %1
 :00020 [05] %4 = array[%5; 1]
 :00021 [05] br =>:00023
+:00022 [05] %4 = %1
+:00023 [06] %5 = literal[33226753]
 :00024 [05] %4 = %4.each( &%5)                   [<INVALID>]
 :00026 [04] ret %4
------------------------------------
------------------------------------
<poke_nop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:125
meta:on_stack:true kind:Ruby mode:method FuncId(380) regs:4 ISeq(RubyFuncInfo { id:380 name:poke_nop method:(FuncId(380), 0) args: 2 non_temp: 2 temp: 1})
[]
+:00000 [03] init_method reg:3 arg:2 req:2 opt:0 rest:false block:None stack_offset:5
 :00001 [04] %3 = nil
 :00002 [03] ret %3
------------------------------------
------------------------------------
<fetch> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:128
meta:on_stack:true kind:Ruby mode:method FuncId(381) regs:3 ISeq(RubyFuncInfo { id:381 name:fetch method:(FuncId(381), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 [02] init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @fetch: -
 :00002 [03] %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00003 [03] %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00004 [02] ret %2
------------------------------------
------------------------------------
<store> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:132
meta:on_stack:true kind:Ruby mode:method FuncId(382) regs:6 ISeq(RubyFuncInfo { id:382 name:store method:(FuncId(382), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @store: -
 :00002 [04] %3 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00003 [05] %4 = %1
 :00004 [06] %5 = %2
 :00005 [04] %3 = %3.[](%4;2)                     [<INVALID>]
 :00007 [03] ret %3
------------------------------------
------------------------------------
<peek16> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:136
meta:on_stack:true kind:Ruby mode:method FuncId(383) regs:5 ISeq(RubyFuncInfo { id:383 name:peek16 method:(FuncId(383), 0) args: 1 non_temp: 1 temp: 3})
[]
+:00000 [02] init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = @fetch: -
 :00002 [03] %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00003 [03] %2 = %2.[%1]                         [<INVALID>][<INVALID>]
 :00004 [04] %3 = @fetch: -
 :00005 [05] %4 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00006 [04] %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00007 [05] %4 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00008 [04] %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00009 [05] %4 = 8: i32
 :00010 [04] %3 = %3.<<(%4;1)                     [<INVALID>]
 :00012 [03] %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00013 [02] ret %2
------------------------------------
------------------------------------
<current_clock> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:146
meta:on_stack:true kind:Ruby mode:method FuncId(384) regs:2 ISeq(RubyFuncInfo { id:384 name:current_clock method:(FuncId(384), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @clk: -
 :00002 [01] ret %1
------------------------------------
------------------------------------
<next_frame_clock> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:150
meta:on_stack:true kind:Ruby mode:method FuncId(385) regs:2 ISeq(RubyFuncInfo { id:385 name:next_frame_clock method:(FuncId(385), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @clk_frame: -
 :00002 [01] ret %1
------------------------------------
------------------------------------
<next_frame_clock=> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:154
meta:on_stack:true kind:Ruby mode:method FuncId(386) regs:3 ISeq(RubyFuncInfo { id:386 name:next_frame_clock= method:(FuncId(386), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 [02] init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [02] @clk_frame: - = %1
 :00002 [03] %2 = @clk_target: -
 :00003 [03] _%2 = %1 < %2                        [<INVALID>][<INVALID>]
 :00004 [02] condnotbr _%2 =>:00007
+:00005 [02] @clk_target: - = %1
 :00006 [02] ret %1
+:00007 [03] %2 = nil
 :00008 [02] ret %2
------------------------------------
------------------------------------
<steal_clocks> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:159
meta:on_stack:true kind:Ruby mode:method FuncId(387) regs:3 ISeq(RubyFuncInfo { id:387 name:steal_clocks method:(FuncId(387), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 [02] init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @clk: -
 :00002 [03] %2 = %2 + %1                         [<INVALID>][<INVALID>]
 :00003 [02] @clk: - = %2
 :00004 [02] ret %2
------------------------------------
------------------------------------
<odd_clock?> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:163
meta:on_stack:true kind:Ruby mode:method FuncId(388) regs:3 ISeq(RubyFuncInfo { id:388 name:odd_clock? method:(FuncId(388), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk_total: -
 :00002 [03] %2 = @clk: -
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00005 [02] %1 = %1 % %2                         [<INVALID>][<INVALID>]
 :00006 [02] %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00007 [01] ret %1
------------------------------------
------------------------------------
<update> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:167
meta:on_stack:true kind:Ruby mode:method FuncId(389) regs:3 ISeq(RubyFuncInfo { id:389 name:update method:(FuncId(389), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @apu: -
 :00002 [03] %2 = @clk: -
 :00003 [01] _ = %1.clock_dma(%2;1)               [<INVALID>]
 :00005 [02] %1 = @clk: -
 :00006 [01] ret %1
------------------------------------
------------------------------------
<dmc_dma> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:172
meta:on_stack:true kind:Ruby mode:method FuncId(390) regs:5 ISeq(RubyFuncInfo { id:390 name:dmc_dma method:(FuncId(390), 0) args: 1 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @clk: -
 :00002 [05] %4 = const[CLK_3]                    [<INVALID>]
 :00003 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00004 [03] @clk: - = %3
 :00005 [03] %2 = %0.fetch(%1;1)                  [<INVALID>]
 :00007 [04] %3 = @clk: -
 :00008 [05] %4 = const[CLK_1]                    [<INVALID>]
 :00009 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00010 [03] @clk: - = %3
 :00011 [03] ret %2
------------------------------------
------------------------------------
<sprite_dma> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:181
meta:on_stack:true kind:Ruby mode:method FuncId(391) regs:6 ISeq(RubyFuncInfo { id:391 name:sprite_dma method:(FuncId(391), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = 256: i32
 :00002 [05] %4 = literal[33292289]
 :00003 [03] _ = %3.times( &%4)                   [<INVALID>]
 :00005 [04] %3 = 64: i32
 :00006 [05] %4 = literal[33357825]
 :00007 [04] %3 = %3.times( &%4)                  [<INVALID>]
 :00009 [03] ret %3
------------------------------------
------------------------------------
<boot> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:186
meta:on_stack:true kind:Ruby mode:method FuncId(392) regs:2 ISeq(RubyFuncInfo { id:392 name:boot method:(FuncId(392), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = const[CLK_7]                    [<INVALID>]
 :00002 [01] @clk: - = %1
 :00003 [02] %1 = const[RESET_VECTOR]             [<INVALID>]
 :00004 [02] %1 = %0.peek16(%1;1)                 [<INVALID>]
 :00006 [01] @_pc: - = %1
 :00007 [01] ret %1
------------------------------------
------------------------------------
<vsync> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:191
meta:on_stack:true kind:Ruby mode:method FuncId(393) regs:3 ISeq(RubyFuncInfo { id:393 name:vsync method:(FuncId(393), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @ppu_sync: -
 :00002 [01] condnotbr %1 =>:00007
+:00003 [02] %1 = @ppu: -
 :00004 [03] %2 = @clk: -
 :00005 [01] _ = %1.sync(%2;1)                    [<INVALID>]
+:00007 [02] %1 = @clk: -
 :00008 [03] %2 = @clk_frame: -
 :00009 [02] %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00010 [01] @clk: - = %1
 :00011 [02] %1 = @clk_total: -
 :00012 [03] %2 = @clk_frame: -
 :00013 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00014 [01] @clk_total: - = %1
 :00015 [02] %1 = @clk_nmi: -
 :00016 [03] %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00017 [02] _%1 = %1 != %2                       [<INVALID>][<INVALID>]
 :00018 [01] condnotbr _%1 =>:00023
+:00019 [02] %1 = @clk_nmi: -
 :00020 [03] %2 = @clk_frame: -
 :00021 [02] %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00022 [01] @clk_nmi: - = %1
+:00023 [02] %1 = @clk_irq: -
 :00024 [03] %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00025 [02] _%1 = %1 != %2                       [<INVALID>][<INVALID>]
 :00026 [01] condnotbr _%1 =>:00031
+:00027 [02] %1 = @clk_irq: -
 :00028 [03] %2 = @clk_frame: -
 :00029 [02] %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00030 [01] @clk_irq: - = %1
+:00031 [02] %1 = @clk_irq: -
 :00032 [02] _%1 = %1 < 0: i16                    [<INVALID>][<INVALID>]
 :00033 [01] condnotbr _%1 =>:00037
+:00034 [02] %1 = 0: i32
 :00035 [01] @clk_irq: - = %1
 :00036 [01] ret %1
+:00037 [02] %1 = nil
 :00038 [01] ret %1
------------------------------------
------------------------------------
<clear_irq> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:205
meta:on_stack:true kind:Ruby mode:method FuncId(394) regs:6 ISeq(RubyFuncInfo { id:394 name:clear_irq method:(FuncId(394), 0) args: 1 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @irq_flags: -
 :00002 [05] %4 = const[IRQ_FRAME]                [<INVALID>]
 :00003 [06] %5 = const[IRQ_DMC]                  [<INVALID>]
 :00004 [05] %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00005 [03] %2 = %3 & %4                         [<INVALID>][<INVALID>]
 :00006 [04] %3 = @irq_flags: -
 :00007 [05] %4 = const[IRQ_EXT]                  [<INVALID>]
 :00008 [06] %5 = const[IRQ_FRAME]                [<INVALID>]
 :00009 [05] %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00010 [06] %5 = const[IRQ_DMC]                  [<INVALID>]
 :00011 [05] %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00012 [05] %4 = %1 ^ %4                         [<INVALID>][<INVALID>]
 :00013 [04] %3 = %3 & %4                         [<INVALID>][<INVALID>]
 :00014 [03] @irq_flags: - = %3
 :00015 [04] %3 = @irq_flags: -
 :00016 [04] _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00017 [03] condnotbr _%3 =>:00020
+:00018 [04] %3 = const[FOREVER_CLOCK]            [<INVALID>]
 :00019 [03] @clk_irq: - = %3
+:00020 [03] ret %2
------------------------------------
------------------------------------
<next_interrupt_clock> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:212
meta:on_stack:true kind:Ruby mode:method FuncId(395) regs:4 ISeq(RubyFuncInfo { id:395 name:next_interrupt_clock method:(FuncId(395), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = const[CLK_1]                    [<INVALID>]
 :00002 [04] %3 = const[CLK_1]                    [<INVALID>]
 :00003 [04] %3 = %3 / 2: i16                     [<INVALID>][<INVALID>]
 :00004 [03] %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00005 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00006 [03] %2 = @clk_target: -
 :00007 [03] _%2 = %2 > %1                        [<INVALID>][<INVALID>]
 :00008 [02] condnotbr _%2 =>:00010
+:00009 [02] @clk_target: - = %1
+:00010 [02] ret %1
------------------------------------
------------------------------------
<do_irq> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:218
meta:on_stack:true kind:Ruby mode:method FuncId(396) regs:5 ISeq(RubyFuncInfo { id:396 name:do_irq method:(FuncId(396), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @irq_flags: -
 :00002 [04] %3 = %3 | %1                         [<INVALID>][<INVALID>]
 :00003 [03] @irq_flags: - = %3
 :00004 [04] %3 = @clk_irq: -
 :00005 [05] %4 = const[FOREVER_CLOCK]            [<INVALID>]
 :00006 [04] _%3 = %3 == %4                       [<INVALID>][<INVALID>]
 :00007 [03] condnotbr _%3 =>:00015
+:00008 [04] %3 = @_p_i: -
 :00009 [04] _%3 = %3 == 0: i16                   [<INVALID>][<INVALID>]
 :00010 [03] condnotbr _%3 =>:00015
+:00011 [04] %3 = %0.next_interrupt_clock(%2;1)   [<INVALID>]
 :00013 [03] @clk_irq: - = %3
 :00014 [03] ret %3
+:00015 [04] %3 = nil
 :00016 [03] ret %3
------------------------------------
------------------------------------
<do_nmi> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:223
meta:on_stack:true kind:Ruby mode:method FuncId(397) regs:4 ISeq(RubyFuncInfo { id:397 name:do_nmi method:(FuncId(397), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @clk_nmi: -
 :00002 [04] %3 = const[FOREVER_CLOCK]            [<INVALID>]
 :00003 [03] _%2 = %2 == %3                       [<INVALID>][<INVALID>]
 :00004 [02] condnotbr _%2 =>:00009
+:00005 [03] %2 = %0.next_interrupt_clock(%1;1)   [<INVALID>]
 :00007 [02] @clk_nmi: - = %2
 :00008 [02] ret %2
+:00009 [03] %2 = nil
 :00010 [02] ret %2
------------------------------------
------------------------------------
<do_isr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:227
meta:on_stack:true kind:Ruby mode:method FuncId(398) regs:5 ISeq(RubyFuncInfo { id:398 name:do_isr method:(FuncId(398), 0) args: 1 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @jammed: -
 :00002 [03] condnotbr %3 =>:00005
+:00003 [04] %3 = nil
 :00004 [03] ret %3
+:00005 [04] %3 = @_pc: -
 :00006 [03] _ = %0.push16(%3;1)                  [<INVALID>]
 :00008 [04] %3 = %0.flags_pack()                 [<INVALID>]
 :00010 [03] _ = %0.push8(%3;1)                   [<INVALID>]
 :00012 [04] %3 = 4: i32
 :00013 [03] @_p_i: - = %3
 :00014 [04] %3 = @clk: -
 :00015 [05] %4 = const[CLK_7]                    [<INVALID>]
 :00016 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00017 [03] @clk: - = %3
 :00018 [04] %3 = const[NMI_VECTOR]               [<INVALID>]
 :00019 [04] _%3 = %1 == %3                       [<INVALID>][<INVALID>]
 :00020 [03] condnotbr _%3 =>:00023
+:00021 [04] %3 = const[NMI_VECTOR]               [<INVALID>]
 :00022 [04] br =>:00025
+:00023 [04] %3 = %0.fetch_irq_isr_vector()       [<INVALID>]
+:00025 [04] %2 = %3
 :00026 [04] %3 = %0.peek16(%2;1)                 [<INVALID>]
 :00028 [03] @_pc: - = %3
 :00029 [03] ret %3
------------------------------------
------------------------------------
<fetch_irq_isr_vector> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:237
meta:on_stack:true kind:Ruby mode:method FuncId(399) regs:3 ISeq(RubyFuncInfo { id:399 name:fetch_irq_isr_vector method:(FuncId(399), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = @clk_frame: -
 :00003 [02] _%1 = %1 >= %2                       [<INVALID>][<INVALID>]
 :00004 [01] condnotbr _%1 =>:00008
+:00005 [02] %1 = 12288: i32
 :00006 [01] _ = %0.fetch(%1;1)                   [<INVALID>]
+:00008 [02] %1 = @clk_nmi: -
 :00009 [03] %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00010 [02] _%1 = %1 != %2                       [<INVALID>][<INVALID>]
 :00011 [01] condnotbr _%1 =>:00025
+:00012 [02] %1 = @clk_nmi: -
 :00013 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00014 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00015 [03] %2 = @clk: -
 :00016 [02] _%1 = %1 <= %2                       [<INVALID>][<INVALID>]
 :00017 [01] condnotbr _%1 =>:00022
+:00018 [02] %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00019 [01] @clk_nmi: - = %1
 :00020 [02] %1 = const[NMI_VECTOR]               [<INVALID>]
 :00021 [01] ret %1
+:00022 [02] %1 = @clk: -
 :00023 [02] %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00024 [01] @clk_nmi: - = %1
+:00025 [02] %1 = const[IRQ_VECTOR]               [<INVALID>]
 :00026 [01] ret %1
------------------------------------
------------------------------------
<flags_pack> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:254
meta:on_stack:true kind:Ruby mode:method FuncId(400) regs:4 ISeq(RubyFuncInfo { id:400 name:flags_pack method:(FuncId(400), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_p_nz: -
 :00002 [03] %2 = @_p_nz: -
 :00003 [04] %3 = 1: i32
 :00004 [03] %2 = %2.>>(%3;1)                     [<INVALID>]
 :00006 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00007 [02] %1 = %1 & 128: i16                   [<INVALID>][<INVALID>]
 :00008 [03] %2 = @_p_nz: -
 :00009 [03] %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00010 [03] _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00011 [02] condnotbr _%2 =>:00014
+:00012 [03] %2 = 0: i32
 :00013 [03] br =>:00015
+:00014 [03] %2 = 2: i32
+:00015 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00016 [03] %2 = @_p_c: -
 :00017 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00018 [03] %2 = @_p_v: -
 :00019 [03] _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00020 [02] condnotbr _%2 =>:00023
+:00021 [03] %2 = 64: i32
 :00022 [03] br =>:00024
+:00023 [03] %2 = 0: i32
+:00024 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00025 [03] %2 = @_p_i: -
 :00026 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00027 [03] %2 = @_p_d: -
 :00028 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00029 [02] %1 = %1 | 32: i16                    [<INVALID>][<INVALID>]
 :00030 [01] ret %1
------------------------------------
------------------------------------
<flags_unpack> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:265
meta:on_stack:true kind:Ruby mode:method FuncId(401) regs:5 ISeq(RubyFuncInfo { id:401 name:flags_unpack method:(FuncId(401), 0) args: 1 non_temp: 1 temp: 3})
[]
+:00000 [02] init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = ~%1                             [<INVALID>]
 :00002 [03] %2 = %2 & 2: i16                     [<INVALID>][<INVALID>]
 :00003 [04] %3 = %1 & 128: i16                   [<INVALID>][<INVALID>]
 :00004 [05] %4 = 1: i32
 :00005 [04] %3 = %3.<<(%4;1)                     [<INVALID>]
 :00007 [03] %2 = %2 | %3                         [<INVALID>][<INVALID>]
 :00008 [02] @_p_nz: - = %2
 :00009 [03] %2 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00010 [02] @_p_c: - = %2
 :00011 [03] %2 = %1 & 64: i16                    [<INVALID>][<INVALID>]
 :00012 [02] @_p_v: - = %2
 :00013 [03] %2 = %1 & 4: i16                     [<INVALID>][<INVALID>]
 :00014 [02] @_p_i: - = %2
 :00015 [03] %2 = %1 & 8: i16                     [<INVALID>][<INVALID>]
 :00016 [02] @_p_d: - = %2
 :00017 [02] ret %2
------------------------------------
------------------------------------
<branch> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:274
meta:on_stack:true kind:Ruby mode:method FuncId(402) regs:8 ISeq(RubyFuncInfo { id:402 name:branch method:(FuncId(402), 0) args: 1 non_temp: 3 temp: 4})
[]
+:00000 [04] init_method reg:7 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 [04] condnotbr %1 =>:00031
+:00002 [05] %4 = @_pc: -
 :00003 [04] %2 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00004 [05] %4 = @_pc: -
 :00005 [04] %3 = %0.fetch(%4;1)                  [<INVALID>]
 :00007 [05] _%4 = %3 < 128: i16                  [<INVALID>][<INVALID>]
 :00008 [04] condnotbr _%4 =>:00011
+:00009 [05] %4 = %3
 :00010 [05] br =>:00013
+:00011 [05] %4 = 65280: i32
 :00012 [05] %4 = %3 | %4                         [<INVALID>][<INVALID>]
+:00013 [05] %4 = %2 + %4                         [<INVALID>][<INVALID>]
 :00014 [06] %5 = 65535: i32
 :00015 [05] %4 = %4 & %5                         [<INVALID>][<INVALID>]
 :00016 [04] @_pc: - = %4
 :00017 [05] %4 = @clk: -
 :00018 [06] %5 = 8: i32
 :00019 [06] %5 = %2.[%5]                         [<INVALID>][<INVALID>]
 :00020 [07] %6 = @_pc: -
 :00021 [08] %7 = 8: i32
 :00022 [07] %6 = %6.[%7]                         [<INVALID>][<INVALID>]
 :00023 [06] _%5 = %5 == %6                       [<INVALID>][<INVALID>]
 :00024 [05] condnotbr _%5 =>:00027
+:00025 [06] %5 = const[CLK_3]                    [<INVALID>]
 :00026 [06] br =>:00028
+:00027 [06] %5 = const[CLK_4]                    [<INVALID>]
+:00028 [05] %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00029 [04] @clk: - = %4
 :00030 [04] ret %4
+:00031 [05] %4 = @_pc: -
 :00032 [05] %4 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00033 [04] @_pc: - = %4
 :00034 [05] %4 = @clk: -
 :00035 [06] %5 = const[CLK_2]                    [<INVALID>]
 :00036 [05] %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00037 [04] @clk: - = %4
 :00038 [04] ret %4
------------------------------------
------------------------------------
<store_mem> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:287
meta:on_stack:true kind:Ruby mode:method FuncId(403) regs:3 ISeq(RubyFuncInfo { id:403 name:store_mem method:(FuncId(403), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @addr: -
 :00002 [03] %2 = @data: -
 :00003 [01] _ = %0.store(%1;2)                   [<INVALID>]
 :00005 [02] %1 = @clk: -
 :00006 [03] %2 = const[CLK_1]                    [<INVALID>]
 :00007 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00008 [01] @clk: - = %1
 :00009 [01] ret %1
------------------------------------
------------------------------------
<store_zpg> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:292
meta:on_stack:true kind:Ruby mode:method FuncId(404) regs:4 ISeq(RubyFuncInfo { id:404 name:store_zpg method:(FuncId(404), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @ram: -
 :00002 [03] %2 = @addr: -
 :00003 [04] %3 = @data: -
 :00004 [01] %1:.[%2:] = %3
 :00005 [01] ret %3
------------------------------------
------------------------------------
<push8> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:297
meta:on_stack:true kind:Ruby mode:method FuncId(405) regs:4 ISeq(RubyFuncInfo { id:405 name:push8 method:(FuncId(405), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @ram: -
 :00002 [04] %3 = @_sp: -
 :00003 [04] %3 = 256: i16 + %3                   [<INVALID>][<INVALID>]
 :00004 [02] %2:.[%3:] = %1
 :00005 [03] %2 = @_sp: -
 :00006 [03] %2 = %2 - 1: i16                     [<INVALID>][<INVALID>]
 :00007 [03] %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 [02] @_sp: - = %2
 :00009 [02] ret %2
------------------------------------
------------------------------------
<push16> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:302
meta:on_stack:true kind:Ruby mode:method FuncId(406) regs:3 ISeq(RubyFuncInfo { id:406 name:push16 method:(FuncId(406), 0) args: 1 non_temp: 1 temp: 1})
[]
+:00000 [02] init_method reg:2 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = 8: i32
 :00002 [03] %2 = %1.>>(%2;1)                     [<INVALID>]
 :00004 [02] _ = %0.push8(%2;1)                   [<INVALID>]
 :00006 [03] %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00007 [03] %2 = %0.push8(%2;1)                  [<INVALID>]
 :00009 [02] ret %2
------------------------------------
------------------------------------
<pull8> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:307
meta:on_stack:true kind:Ruby mode:method FuncId(407) regs:3 ISeq(RubyFuncInfo { id:407 name:pull8 method:(FuncId(407), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_sp: -
 :00002 [02] %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 [01] @_sp: - = %1
 :00005 [02] %1 = @ram: -
 :00006 [03] %2 = @_sp: -
 :00007 [03] %2 = 256: i16 + %2                   [<INVALID>][<INVALID>]
 :00008 [02] %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00009 [01] ret %1
------------------------------------
------------------------------------
<pull16> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:312
meta:on_stack:true kind:Ruby mode:method FuncId(408) regs:3 ISeq(RubyFuncInfo { id:408 name:pull16 method:(FuncId(408), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = %0.pull8()                      [<INVALID>]
 :00003 [03] %2 = %0.pull8()                      [<INVALID>]
 :00005 [03] %2 = 256: i16 * %2                   [<INVALID>][<INVALID>]
 :00006 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00007 [01] ret %1
------------------------------------
------------------------------------
<imm> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:320
meta:on_stack:true kind:Ruby mode:method FuncId(409) regs:5 ISeq(RubyFuncInfo { id:409 name:imm method:(FuncId(409), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @_pc: -
 :00002 [04] %3 = %0.fetch(%3;1)                  [<INVALID>]
 :00004 [03] @data: - = %3
 :00005 [04] %3 = @_pc: -
 :00006 [04] %3 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 [03] @_pc: - = %3
 :00008 [04] %3 = @clk: -
 :00009 [05] %4 = const[CLK_2]                    [<INVALID>]
 :00010 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00011 [03] @clk: - = %3
 :00012 [03] ret %3
------------------------------------
------------------------------------
<zpg> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:327
meta:on_stack:true kind:Ruby mode:method FuncId(410) regs:5 ISeq(RubyFuncInfo { id:410 name:zpg method:(FuncId(410), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @_pc: -
 :00002 [04] %3 = %0.fetch(%3;1)                  [<INVALID>]
 :00004 [03] @addr: - = %3
 :00005 [04] %3 = @_pc: -
 :00006 [04] %3 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 [03] @_pc: - = %3
 :00008 [04] %3 = @clk: -
 :00009 [05] %4 = const[CLK_3]                    [<INVALID>]
 :00010 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00011 [03] @clk: - = %3
 :00012 [03] condnotbr %1 =>:00025
+:00013 [04] %3 = @ram: -
 :00014 [05] %4 = @addr: -
 :00015 [04] %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00016 [03] @data: - = %3
 :00017 [03] condnotbr %2 =>:00023
+:00018 [04] %3 = @clk: -
 :00019 [05] %4 = const[CLK_2]                    [<INVALID>]
 :00020 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00021 [03] @clk: - = %3
 :00022 [03] ret %3
+:00023 [04] %3 = nil
 :00024 [03] ret %3
+:00025 [04] %3 = nil
 :00026 [03] ret %3
------------------------------------
------------------------------------
<zpg_reg> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:338
meta:on_stack:true kind:Ruby mode:method FuncId(411) regs:6 ISeq(RubyFuncInfo { id:411 name:zpg_reg method:(FuncId(411), 0) args: 3 non_temp: 3 temp: 2})
[]
+:00000 [04] init_method reg:5 arg:3 req:3 opt:0 rest:false block:None stack_offset:6
 :00001 [05] %4 = @_pc: -
 :00002 [05] %4 = %0.fetch(%4;1)                  [<INVALID>]
 :00004 [05] %4 = %1 + %4                         [<INVALID>][<INVALID>]
 :00005 [05] %4 = %4 & 255: i16                   [<INVALID>][<INVALID>]
 :00006 [04] @addr: - = %4
 :00007 [05] %4 = @_pc: -
 :00008 [05] %4 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 [04] @_pc: - = %4
 :00010 [05] %4 = @clk: -
 :00011 [06] %5 = const[CLK_4]                    [<INVALID>]
 :00012 [05] %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00013 [04] @clk: - = %4
 :00014 [04] condnotbr %2 =>:00027
+:00015 [05] %4 = @ram: -
 :00016 [06] %5 = @addr: -
 :00017 [05] %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00018 [04] @data: - = %4
 :00019 [04] condnotbr %3 =>:00025
+:00020 [05] %4 = @clk: -
 :00021 [06] %5 = const[CLK_2]                    [<INVALID>]
 :00022 [05] %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00023 [04] @clk: - = %4
 :00024 [04] ret %4
+:00025 [05] %4 = nil
 :00026 [04] ret %4
+:00027 [05] %4 = nil
 :00028 [04] ret %4
------------------------------------
------------------------------------
<zpg_x> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:348
meta:on_stack:true kind:Ruby mode:method FuncId(412) regs:6 ISeq(RubyFuncInfo { id:412 name:zpg_x method:(FuncId(412), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @_x: -
 :00002 [05] %4 = %1
 :00003 [06] %5 = %2
 :00004 [04] %3 = %0.zpg_reg(%3;3)                [<INVALID>]
 :00006 [03] ret %3
------------------------------------
------------------------------------
<zpg_y> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:352
meta:on_stack:true kind:Ruby mode:method FuncId(413) regs:6 ISeq(RubyFuncInfo { id:413 name:zpg_y method:(FuncId(413), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @_y: -
 :00002 [05] %4 = %1
 :00003 [06] %5 = %2
 :00004 [04] %3 = %0.zpg_reg(%3;3)                [<INVALID>]
 :00006 [03] ret %3
------------------------------------
------------------------------------
<abs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:357
meta:on_stack:true kind:Ruby mode:method FuncId(414) regs:5 ISeq(RubyFuncInfo { id:414 name:abs method:(FuncId(414), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @_pc: -
 :00002 [04] %3 = %0.peek16(%3;1)                 [<INVALID>]
 :00004 [03] @addr: - = %3
 :00005 [04] %3 = @_pc: -
 :00006 [04] %3 = %3 + 2: i16                     [<INVALID>][<INVALID>]
 :00007 [03] @_pc: - = %3
 :00008 [04] %3 = @clk: -
 :00009 [05] %4 = const[CLK_3]                    [<INVALID>]
 :00010 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00011 [03] @clk: - = %3
 :00012 [04] %3 = %1
 :00013 [05] %4 = %2
 :00014 [04] %3 = %0.read_write(%3;2)             [<INVALID>]
 :00016 [03] ret %3
------------------------------------
------------------------------------
<abs_reg> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:365
meta:on_stack:true kind:Ruby mode:method FuncId(415) regs:8 ISeq(RubyFuncInfo { id:415 name:abs_reg method:(FuncId(415), 0) args: 3 non_temp: 5 temp: 2})
[]
+:00000 [06] init_method reg:7 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 [07] %6 = @_pc: -
 :00002 [06] %4 = %6 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 [07] %6 = @_pc: -
 :00004 [07] %6 = %0.fetch(%6;1)                  [<INVALID>]
 :00006 [06] %5 = %1 + %6                         [<INVALID>][<INVALID>]
 :00007 [07] %6 = %0.fetch(%4;1)                  [<INVALID>]
 :00009 [08] %7 = 8: i32
 :00010 [07] %6 = %6.<<(%7;1)                     [<INVALID>]
 :00012 [07] %6 = %6 + %5                         [<INVALID>][<INVALID>]
 :00013 [08] %7 = 65535: i32
 :00014 [07] %6 = %6 & %7                         [<INVALID>][<INVALID>]
 :00015 [06] @addr: - = %6
 :00016 [06] condnotbr %3 =>:00029
+:00017 [07] %6 = @addr: -
 :00018 [08] %7 = %5 & 256: i16                   [<INVALID>][<INVALID>]
 :00019 [07] %6 = %6 - %7                         [<INVALID>][<INVALID>]
 :00020 [08] %7 = 65535: i32
 :00021 [06] %4 = %6 & %7                         [<INVALID>][<INVALID>]
 :00022 [06] _ = %0.fetch(%4;1)                   [<INVALID>]
 :00024 [07] %6 = @clk: -
 :00025 [08] %7 = const[CLK_4]                    [<INVALID>]
 :00026 [07] %6 = %6 + %7                         [<INVALID>][<INVALID>]
 :00027 [06] @clk: - = %6
 :00028 [06] br =>:00046
+:00029 [07] %6 = @clk: -
 :00030 [08] %7 = const[CLK_3]                    [<INVALID>]
 :00031 [07] %6 = %6 + %7                         [<INVALID>][<INVALID>]
 :00032 [06] @clk: - = %6
 :00033 [07] %6 = %5 & 256: i16                   [<INVALID>][<INVALID>]
 :00034 [07] _%6 = %6 != 0: i16                   [<INVALID>][<INVALID>]
 :00035 [06] condnotbr _%6 =>:00046
+:00036 [07] %6 = @addr: -
 :00037 [07] %6 = %6 - 256: i16                   [<INVALID>][<INVALID>]
 :00038 [08] %7 = 65535: i32
 :00039 [06] %4 = %6 & %7                         [<INVALID>][<INVALID>]
 :00040 [06] _ = %0.fetch(%4;1)                   [<INVALID>]
 :00042 [07] %6 = @clk: -
 :00043 [08] %7 = const[CLK_1]                    [<INVALID>]
 :00044 [07] %6 = %6 + %7                         [<INVALID>][<INVALID>]
 :00045 [06] @clk: - = %6
+:00046 [07] %6 = %2
 :00047 [08] %7 = %3
 :00048 [06] _ = %0.read_write(%6;2)              [<INVALID>]
 :00050 [07] %6 = @_pc: -
 :00051 [07] %6 = %6 + 2: i16                     [<INVALID>][<INVALID>]
 :00052 [06] @_pc: - = %6
 :00053 [06] ret %6
------------------------------------
------------------------------------
<abs_x> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:385
meta:on_stack:true kind:Ruby mode:method FuncId(416) regs:6 ISeq(RubyFuncInfo { id:416 name:abs_x method:(FuncId(416), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @_x: -
 :00002 [05] %4 = %1
 :00003 [06] %5 = %2
 :00004 [04] %3 = %0.abs_reg(%3;3)                [<INVALID>]
 :00006 [03] ret %3
------------------------------------
------------------------------------
<abs_y> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:389
meta:on_stack:true kind:Ruby mode:method FuncId(417) regs:6 ISeq(RubyFuncInfo { id:417 name:abs_y method:(FuncId(417), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @_y: -
 :00002 [05] %4 = %1
 :00003 [06] %5 = %2
 :00004 [04] %3 = %0.abs_reg(%3;3)                [<INVALID>]
 :00006 [03] ret %3
------------------------------------
------------------------------------
<ind_x> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:394
meta:on_stack:true kind:Ruby mode:method FuncId(418) regs:7 ISeq(RubyFuncInfo { id:418 name:ind_x method:(FuncId(418), 0) args: 2 non_temp: 3 temp: 3})
[]
+:00000 [04] init_method reg:6 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 [05] %4 = @_pc: -
 :00002 [05] %4 = %0.fetch(%4;1)                  [<INVALID>]
 :00004 [06] %5 = @_x: -
 :00005 [04] %3 = %4 + %5                         [<INVALID>][<INVALID>]
 :00006 [05] %4 = @_pc: -
 :00007 [05] %4 = %4 + 1: i16                     [<INVALID>][<INVALID>]
 :00008 [04] @_pc: - = %4
 :00009 [05] %4 = @clk: -
 :00010 [06] %5 = const[CLK_5]                    [<INVALID>]
 :00011 [05] %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00012 [04] @clk: - = %4
 :00013 [05] %4 = @ram: -
 :00014 [06] %5 = %3 & 255: i16                   [<INVALID>][<INVALID>]
 :00015 [05] %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00016 [06] %5 = @ram: -
 :00017 [07] %6 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00018 [07] %6 = %6 & 255: i16                   [<INVALID>][<INVALID>]
 :00019 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00020 [07] %6 = 8: i32
 :00021 [06] %5 = %5.<<(%6;1)                     [<INVALID>]
 :00023 [05] %4 = %4 | %5                         [<INVALID>][<INVALID>]
 :00024 [04] @addr: - = %4
 :00025 [05] %4 = %1
 :00026 [06] %5 = %2
 :00027 [05] %4 = %0.read_write(%4;2)             [<INVALID>]
 :00029 [04] ret %4
------------------------------------
------------------------------------
<ind_y> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:403
meta:on_stack:true kind:Ruby mode:method FuncId(419) regs:7 ISeq(RubyFuncInfo { id:419 name:ind_y method:(FuncId(419), 0) args: 2 non_temp: 4 temp: 2})
[]
+:00000 [05] init_method reg:6 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 [06] %5 = @_pc: -
 :00002 [05] %3 = %0.fetch(%5;1)                  [<INVALID>]
 :00004 [06] %5 = @_pc: -
 :00005 [06] %5 = %5 + 1: i16                     [<INVALID>][<INVALID>]
 :00006 [05] @_pc: - = %5
 :00007 [06] %5 = @ram: -
 :00008 [06] %5 = %5.[%3]                         [<INVALID>][<INVALID>]
 :00009 [07] %6 = @_y: -
 :00010 [05] %4 = %5 + %6                         [<INVALID>][<INVALID>]
 :00011 [06] %5 = @clk: -
 :00012 [07] %6 = const[CLK_4]                    [<INVALID>]
 :00013 [06] %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00014 [05] @clk: - = %5
 :00015 [05] condnotbr %2 =>:00035
+:00016 [06] %5 = @clk: -
 :00017 [07] %6 = const[CLK_1]                    [<INVALID>]
 :00018 [06] %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00019 [05] @clk: - = %5
 :00020 [06] %5 = @ram: -
 :00021 [07] %6 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00022 [07] %6 = %6 & 255: i16                   [<INVALID>][<INVALID>]
 :00023 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00024 [07] %6 = 8: i32
 :00025 [06] %5 = %5.<<(%6;1)                     [<INVALID>]
 :00027 [06] %5 = %5 + %4                         [<INVALID>][<INVALID>]
 :00028 [05] @addr: - = %5
 :00029 [06] %5 = @addr: -
 :00030 [07] %6 = %4 & 256: i16                   [<INVALID>][<INVALID>]
 :00031 [05] %3 = %5 - %6                         [<INVALID>][<INVALID>]
 :00032 [05] _ = %0.fetch(%3;1)                   [<INVALID>]
 :00034 [05] br =>:00059
+:00035 [06] %5 = @ram: -
 :00036 [07] %6 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00037 [07] %6 = %6 & 255: i16                   [<INVALID>][<INVALID>]
 :00038 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00039 [07] %6 = 8: i32
 :00040 [06] %5 = %5.<<(%6;1)                     [<INVALID>]
 :00042 [06] %5 = %5 + %4                         [<INVALID>][<INVALID>]
 :00043 [07] %6 = 65535: i32
 :00044 [06] %5 = %5 & %6                         [<INVALID>][<INVALID>]
 :00045 [05] @addr: - = %5
 :00046 [06] %5 = %4 & 256: i16                   [<INVALID>][<INVALID>]
 :00047 [06] _%5 = %5 != 0: i16                   [<INVALID>][<INVALID>]
 :00048 [05] condnotbr _%5 =>:00059
+:00049 [06] %5 = @addr: -
 :00050 [06] %5 = %5 - 256: i16                   [<INVALID>][<INVALID>]
 :00051 [07] %6 = 65535: i32
 :00052 [05] %3 = %5 & %6                         [<INVALID>][<INVALID>]
 :00053 [05] _ = %0.fetch(%3;1)                   [<INVALID>]
 :00055 [06] %5 = @clk: -
 :00056 [07] %6 = const[CLK_1]                    [<INVALID>]
 :00057 [06] %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00058 [05] @clk: - = %5
+:00059 [06] %5 = %1
 :00060 [07] %6 = %2
 :00061 [06] %5 = %0.read_write(%5;2)             [<INVALID>]
 :00063 [05] ret %5
------------------------------------
------------------------------------
<read_write> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:424
meta:on_stack:true kind:Ruby mode:method FuncId(420) regs:5 ISeq(RubyFuncInfo { id:420 name:read_write method:(FuncId(420), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [03] condnotbr %1 =>:00022
+:00002 [04] %3 = @addr: -
 :00003 [04] %3 = %0.fetch(%3;1)                  [<INVALID>]
 :00005 [03] @data: - = %3
 :00006 [04] %3 = @clk: -
 :00007 [05] %4 = const[CLK_1]                    [<INVALID>]
 :00008 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00009 [03] @clk: - = %3
 :00010 [03] condnotbr %2 =>:00020
+:00011 [04] %3 = @addr: -
 :00012 [05] %4 = @data: -
 :00013 [03] _ = %0.store(%3;2)                   [<INVALID>]
 :00015 [04] %3 = @clk: -
 :00016 [05] %4 = const[CLK_1]                    [<INVALID>]
 :00017 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00018 [03] @clk: - = %3
 :00019 [03] ret %3
+:00020 [04] %3 = nil
 :00021 [03] ret %3
+:00022 [04] %3 = nil
 :00023 [03] ret %3
------------------------------------
------------------------------------
<_lda> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:439
meta:on_stack:true kind:Ruby mode:method FuncId(421) regs:2 ISeq(RubyFuncInfo { id:421 name:_lda method:(FuncId(421), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @data: -
 :00002 [01] @_a: - = %1
 :00003 [01] @_p_nz: - = %1
 :00004 [01] ret %1
------------------------------------
------------------------------------
<_ldx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:443
meta:on_stack:true kind:Ruby mode:method FuncId(422) regs:2 ISeq(RubyFuncInfo { id:422 name:_ldx method:(FuncId(422), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @data: -
 :00002 [01] @_x: - = %1
 :00003 [01] @_p_nz: - = %1
 :00004 [01] ret %1
------------------------------------
------------------------------------
<_ldy> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:447
meta:on_stack:true kind:Ruby mode:method FuncId(423) regs:2 ISeq(RubyFuncInfo { id:423 name:_ldy method:(FuncId(423), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @data: -
 :00002 [01] @_y: - = %1
 :00003 [01] @_p_nz: - = %1
 :00004 [01] ret %1
------------------------------------
------------------------------------
<_sta> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:452
meta:on_stack:true kind:Ruby mode:method FuncId(424) regs:2 ISeq(RubyFuncInfo { id:424 name:_sta method:(FuncId(424), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_a: -
 :00002 [01] @data: - = %1
 :00003 [01] ret %1
------------------------------------
------------------------------------
<_stx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:456
meta:on_stack:true kind:Ruby mode:method FuncId(425) regs:2 ISeq(RubyFuncInfo { id:425 name:_stx method:(FuncId(425), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_x: -
 :00002 [01] @data: - = %1
 :00003 [01] ret %1
------------------------------------
------------------------------------
<_sty> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:460
meta:on_stack:true kind:Ruby mode:method FuncId(426) regs:2 ISeq(RubyFuncInfo { id:426 name:_sty method:(FuncId(426), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_y: -
 :00002 [01] @data: - = %1
 :00003 [01] ret %1
------------------------------------
------------------------------------
<_tax> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:465
meta:on_stack:true kind:Ruby mode:method FuncId(427) regs:3 ISeq(RubyFuncInfo { id:427 name:_tax method:(FuncId(427), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_a: -
 :00006 [01] @_x: - = %1
 :00007 [01] @_p_nz: - = %1
 :00008 [01] ret %1
------------------------------------
------------------------------------
<_tay> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:470
meta:on_stack:true kind:Ruby mode:method FuncId(428) regs:3 ISeq(RubyFuncInfo { id:428 name:_tay method:(FuncId(428), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_a: -
 :00006 [01] @_y: - = %1
 :00007 [01] @_p_nz: - = %1
 :00008 [01] ret %1
------------------------------------
------------------------------------
<_txa> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:475
meta:on_stack:true kind:Ruby mode:method FuncId(429) regs:3 ISeq(RubyFuncInfo { id:429 name:_txa method:(FuncId(429), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_x: -
 :00006 [01] @_a: - = %1
 :00007 [01] @_p_nz: - = %1
 :00008 [01] ret %1
------------------------------------
------------------------------------
<_tya> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:480
meta:on_stack:true kind:Ruby mode:method FuncId(430) regs:3 ISeq(RubyFuncInfo { id:430 name:_tya method:(FuncId(430), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_y: -
 :00006 [01] @_a: - = %1
 :00007 [01] @_p_nz: - = %1
 :00008 [01] ret %1
------------------------------------
------------------------------------
<_jmp_a> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:486
meta:on_stack:true kind:Ruby mode:method FuncId(431) regs:3 ISeq(RubyFuncInfo { id:431 name:_jmp_a method:(FuncId(431), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_pc: -
 :00002 [02] %1 = %0.peek16(%1;1)                 [<INVALID>]
 :00004 [01] @_pc: - = %1
 :00005 [02] %1 = @clk: -
 :00006 [03] %2 = const[CLK_3]                    [<INVALID>]
 :00007 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00008 [01] @clk: - = %1
 :00009 [01] ret %1
------------------------------------
------------------------------------
<_jmp_i> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:491
meta:on_stack:true kind:Ruby mode:method FuncId(432) regs:6 ISeq(RubyFuncInfo { id:432 name:_jmp_i method:(FuncId(432), 0) args: 0 non_temp: 3 temp: 2})
[]
+:00000 [04] init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [05] %4 = @_pc: -
 :00002 [04] %1 = %0.peek16(%4;1)                 [<INVALID>]
 :00004 [04] %2 = %0.fetch(%1;1)                  [<INVALID>]
 :00006 [05] %4 = 65280: i32
 :00007 [05] %4 = %1 & %4                         [<INVALID>][<INVALID>]
 :00008 [06] %5 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 [06] %5 = %5 & 255: i16                   [<INVALID>][<INVALID>]
 :00010 [04] %1 = %4 | %5                         [<INVALID>][<INVALID>]
 :00011 [04] %3 = %0.fetch(%1;1)                  [<INVALID>]
 :00013 [05] %4 = %3 * 256: i16                   [<INVALID>][<INVALID>]
 :00014 [05] %4 = %4 + %2                         [<INVALID>][<INVALID>]
 :00015 [04] @_pc: - = %4
 :00016 [05] %4 = @clk: -
 :00017 [06] %5 = const[CLK_5]                    [<INVALID>]
 :00018 [05] %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00019 [04] @clk: - = %4
 :00020 [04] ret %4
------------------------------------
------------------------------------
<_jsr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:500
meta:on_stack:true kind:Ruby mode:method FuncId(433) regs:4 ISeq(RubyFuncInfo { id:433 name:_jsr method:(FuncId(433), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @_pc: -
 :00002 [02] %1 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 [02] _ = %0.push16(%1;1)                  [<INVALID>]
 :00005 [03] %2 = @_pc: -
 :00006 [03] %2 = %0.peek16(%2;1)                 [<INVALID>]
 :00008 [02] @_pc: - = %2
 :00009 [03] %2 = @clk: -
 :00010 [04] %3 = const[CLK_6]                    [<INVALID>]
 :00011 [03] %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00012 [02] @clk: - = %2
 :00013 [02] ret %2
------------------------------------
------------------------------------
<_rts> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:507
meta:on_stack:true kind:Ruby mode:method FuncId(434) regs:3 ISeq(RubyFuncInfo { id:434 name:_rts method:(FuncId(434), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = %0.pull16()                     [<INVALID>]
 :00003 [02] %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00004 [03] %2 = 65535: i32
 :00005 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00006 [01] @_pc: - = %1
 :00007 [02] %1 = @clk: -
 :00008 [03] %2 = const[CLK_6]                    [<INVALID>]
 :00009 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00010 [01] @clk: - = %1
 :00011 [01] ret %1
------------------------------------
------------------------------------
<_rti> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:512
meta:on_stack:true kind:Ruby mode:method FuncId(435) regs:4 ISeq(RubyFuncInfo { id:435 name:_rti method:(FuncId(435), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @clk: -
 :00002 [04] %3 = const[CLK_6]                    [<INVALID>]
 :00003 [03] %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 [02] @clk: - = %2
 :00005 [03] %2 = %0.pull8()                      [<INVALID>]
 :00007 [03] %1 = %2
 :00008 [03] %2 = %0.pull16()                     [<INVALID>]
 :00010 [02] @_pc: - = %2
 :00011 [02] _ = %0.flags_unpack(%1;1)            [<INVALID>]
 :00013 [03] %2 = @irq_flags: -
 :00014 [03] _%2 = %2 == 0: i16                   [<INVALID>][<INVALID>]
 :00015 [02] condbr _%2 =>:00019
+:00016 [03] %2 = @_p_i: -
 :00017 [03] _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00018 [02] condnotbr _%2 =>:00021
+:00019 [03] %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00020 [03] br =>:00023
+:00021 [03] %2 = 0: i32
 :00022 [02] @clk_target: - = %2
+:00023 [02] @clk_irq: - = %2
 :00024 [02] ret %2
------------------------------------
------------------------------------
<_bne> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:520
meta:on_stack:true kind:Ruby mode:method FuncId(436) regs:2 ISeq(RubyFuncInfo { id:436 name:_bne method:(FuncId(436), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_p_nz: -
 :00002 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00003 [02] %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00004 [02] %1 = %0.branch(%1;1)                 [<INVALID>]
 :00006 [01] ret %1
------------------------------------
------------------------------------
<_beq> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:524
meta:on_stack:true kind:Ruby mode:method FuncId(437) regs:2 ISeq(RubyFuncInfo { id:437 name:_beq method:(FuncId(437), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_p_nz: -
 :00002 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00003 [02] %1 = %1 == 0: i16                    [<INVALID>][<INVALID>]
 :00004 [02] %1 = %0.branch(%1;1)                 [<INVALID>]
 :00006 [01] ret %1
------------------------------------
------------------------------------
<_bmi> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:528
meta:on_stack:true kind:Ruby mode:method FuncId(438) regs:2 ISeq(RubyFuncInfo { id:438 name:_bmi method:(FuncId(438), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_p_nz: -
 :00002 [02] %1 = %1 & 384: i16                   [<INVALID>][<INVALID>]
 :00003 [02] %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00004 [02] %1 = %0.branch(%1;1)                 [<INVALID>]
 :00006 [01] ret %1
------------------------------------
------------------------------------
<_bpl> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:532
meta:on_stack:true kind:Ruby mode:method FuncId(439) regs:2 ISeq(RubyFuncInfo { id:439 name:_bpl method:(FuncId(439), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_p_nz: -
 :00002 [02] %1 = %1 & 384: i16                   [<INVALID>][<INVALID>]
 :00003 [02] %1 = %1 == 0: i16                    [<INVALID>][<INVALID>]
 :00004 [02] %1 = %0.branch(%1;1)                 [<INVALID>]
 :00006 [01] ret %1
------------------------------------
------------------------------------
<_bcs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:536
meta:on_stack:true kind:Ruby mode:method FuncId(440) regs:2 ISeq(RubyFuncInfo { id:440 name:_bcs method:(FuncId(440), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_p_c: -
 :00002 [02] %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00003 [02] %1 = %0.branch(%1;1)                 [<INVALID>]
 :00005 [01] ret %1
------------------------------------
------------------------------------
<_bcc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:540
meta:on_stack:true kind:Ruby mode:method FuncId(441) regs:2 ISeq(RubyFuncInfo { id:441 name:_bcc method:(FuncId(441), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_p_c: -
 :00002 [02] %1 = %1 == 0: i16                    [<INVALID>][<INVALID>]
 :00003 [02] %1 = %0.branch(%1;1)                 [<INVALID>]
 :00005 [01] ret %1
------------------------------------
------------------------------------
<_bvs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:544
meta:on_stack:true kind:Ruby mode:method FuncId(442) regs:2 ISeq(RubyFuncInfo { id:442 name:_bvs method:(FuncId(442), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_p_v: -
 :00002 [02] %1 = %1 != 0: i16                    [<INVALID>][<INVALID>]
 :00003 [02] %1 = %0.branch(%1;1)                 [<INVALID>]
 :00005 [01] ret %1
------------------------------------
------------------------------------
<_bvc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:548
meta:on_stack:true kind:Ruby mode:method FuncId(443) regs:2 ISeq(RubyFuncInfo { id:443 name:_bvc method:(FuncId(443), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @_p_v: -
 :00002 [02] %1 = %1 == 0: i16                    [<INVALID>][<INVALID>]
 :00003 [02] %1 = %0.branch(%1;1)                 [<INVALID>]
 :00005 [01] ret %1
------------------------------------
------------------------------------
<_adc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:553
meta:on_stack:true kind:Ruby mode:method FuncId(444) regs:5 ISeq(RubyFuncInfo { id:444 name:_adc method:(FuncId(444), 0) args: 0 non_temp: 1 temp: 3})
[]
+:00000 [02] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = @_a: -
 :00002 [04] %3 = @data: -
 :00003 [03] %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 [04] %3 = @_p_c: -
 :00005 [02] %1 = %2 + %3                         [<INVALID>][<INVALID>]
 :00006 [04] %3 = @_a: -
 :00007 [05] %4 = @data: -
 :00008 [03] %2 = %3 ^ %4                         [<INVALID>][<INVALID>]
 :00009 [03] %2 = ~%2                             [<INVALID>]
 :00010 [04] %3 = @_a: -
 :00011 [04] %3 = %3 ^ %1                         [<INVALID>][<INVALID>]
 :00012 [03] %2 = %2 & %3                         [<INVALID>][<INVALID>]
 :00013 [03] %2 = %2 & 128: i16                   [<INVALID>][<INVALID>]
 :00014 [02] @_p_v: - = %2
 :00015 [03] %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00016 [02] @_a: - = %2
 :00017 [02] @_p_nz: - = %2
 :00018 [03] %2 = 8: i32
 :00019 [03] %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00020 [02] @_p_c: - = %2
 :00021 [02] ret %2
------------------------------------
------------------------------------
<_sbc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:560
meta:on_stack:true kind:Ruby mode:method FuncId(445) regs:5 ISeq(RubyFuncInfo { id:445 name:_sbc method:(FuncId(445), 0) args: 0 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @data: -
 :00002 [03] %1 = %3 ^ 255: i16                   [<INVALID>][<INVALID>]
 :00003 [04] %3 = @_a: -
 :00004 [04] %3 = %3 + %1                         [<INVALID>][<INVALID>]
 :00005 [05] %4 = @_p_c: -
 :00006 [03] %2 = %3 + %4                         [<INVALID>][<INVALID>]
 :00007 [05] %4 = @_a: -
 :00008 [04] %3 = %4 ^ %1                         [<INVALID>][<INVALID>]
 :00009 [04] %3 = ~%3                             [<INVALID>]
 :00010 [05] %4 = @_a: -
 :00011 [05] %4 = %4 ^ %2                         [<INVALID>][<INVALID>]
 :00012 [04] %3 = %3 & %4                         [<INVALID>][<INVALID>]
 :00013 [04] %3 = %3 & 128: i16                   [<INVALID>][<INVALID>]
 :00014 [03] @_p_v: - = %3
 :00015 [04] %3 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00016 [03] @_a: - = %3
 :00017 [03] @_p_nz: - = %3
 :00018 [04] %3 = 8: i32
 :00019 [04] %3 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00020 [03] @_p_c: - = %3
 :00021 [03] ret %3
------------------------------------
------------------------------------
<_and> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:569
meta:on_stack:true kind:Ruby mode:method FuncId(446) regs:3 ISeq(RubyFuncInfo { id:446 name:_and method:(FuncId(446), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_a: -
 :00002 [03] %2 = @data: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [01] @_a: - = %1
 :00005 [01] @_p_nz: - = %1
 :00006 [01] ret %1
------------------------------------
------------------------------------
<_ora> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:573
meta:on_stack:true kind:Ruby mode:method FuncId(447) regs:3 ISeq(RubyFuncInfo { id:447 name:_ora method:(FuncId(447), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_a: -
 :00002 [03] %2 = @data: -
 :00003 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00004 [01] @_a: - = %1
 :00005 [01] @_p_nz: - = %1
 :00006 [01] ret %1
------------------------------------
------------------------------------
<_eor> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:577
meta:on_stack:true kind:Ruby mode:method FuncId(448) regs:3 ISeq(RubyFuncInfo { id:448 name:_eor method:(FuncId(448), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_a: -
 :00002 [03] %2 = @data: -
 :00003 [02] %1 = %1 ^ %2                         [<INVALID>][<INVALID>]
 :00004 [01] @_a: - = %1
 :00005 [01] @_p_nz: - = %1
 :00006 [01] ret %1
------------------------------------
------------------------------------
<_bit> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:581
meta:on_stack:true kind:Ruby mode:method FuncId(449) regs:4 ISeq(RubyFuncInfo { id:449 name:_bit method:(FuncId(449), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @data: -
 :00002 [03] %2 = @_a: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [02] _%1 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00005 [01] condnotbr _%1 =>:00008
+:00006 [02] %1 = 1: i32
 :00007 [02] br =>:00009
+:00008 [02] %1 = 0: i32
+:00009 [03] %2 = @data: -
 :00010 [03] %2 = %2 & 128: i16                   [<INVALID>][<INVALID>]
 :00011 [04] %3 = 1: i32
 :00012 [03] %2 = %2.<<(%3;1)                     [<INVALID>]
 :00014 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00015 [01] @_p_nz: - = %1
 :00016 [02] %1 = @data: -
 :00017 [02] %1 = %1 & 64: i16                    [<INVALID>][<INVALID>]
 :00018 [01] @_p_v: - = %1
 :00019 [01] ret %1
------------------------------------
------------------------------------
<_cmp> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:586
meta:on_stack:true kind:Ruby mode:method FuncId(450) regs:4 ISeq(RubyFuncInfo { id:450 name:_cmp method:(FuncId(450), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @_a: -
 :00002 [04] %3 = @data: -
 :00003 [02] %1 = %2 - %3                         [<INVALID>][<INVALID>]
 :00004 [03] %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00005 [02] @_p_nz: - = %2
 :00006 [03] %2 = 8: i32
 :00007 [03] %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00008 [03] %2 = 1: i16 - %2                     [<INVALID>][<INVALID>]
 :00009 [02] @_p_c: - = %2
 :00010 [02] ret %2
------------------------------------
------------------------------------
<_cpx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:592
meta:on_stack:true kind:Ruby mode:method FuncId(451) regs:4 ISeq(RubyFuncInfo { id:451 name:_cpx method:(FuncId(451), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @_x: -
 :00002 [04] %3 = @data: -
 :00003 [02] %1 = %2 - %3                         [<INVALID>][<INVALID>]
 :00004 [03] %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00005 [02] @_p_nz: - = %2
 :00006 [03] %2 = 8: i32
 :00007 [03] %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00008 [03] %2 = 1: i16 - %2                     [<INVALID>][<INVALID>]
 :00009 [02] @_p_c: - = %2
 :00010 [02] ret %2
------------------------------------
------------------------------------
<_cpy> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:598
meta:on_stack:true kind:Ruby mode:method FuncId(452) regs:4 ISeq(RubyFuncInfo { id:452 name:_cpy method:(FuncId(452), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @_y: -
 :00002 [04] %3 = @data: -
 :00003 [02] %1 = %2 - %3                         [<INVALID>][<INVALID>]
 :00004 [03] %2 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00005 [02] @_p_nz: - = %2
 :00006 [03] %2 = 8: i32
 :00007 [03] %2 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00008 [03] %2 = 1: i16 - %2                     [<INVALID>][<INVALID>]
 :00009 [02] @_p_c: - = %2
 :00010 [02] ret %2
------------------------------------
------------------------------------
<_asl> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:605
meta:on_stack:true kind:Ruby mode:method FuncId(453) regs:3 ISeq(RubyFuncInfo { id:453 name:_asl method:(FuncId(453), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @data: -
 :00002 [03] %2 = 7: i32
 :00003 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00005 [01] @_p_c: - = %1
 :00006 [02] %1 = @data: -
 :00007 [03] %2 = 1: i32
 :00008 [02] %1 = %1.<<(%2;1)                     [<INVALID>]
 :00010 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00011 [01] @_p_nz: - = %1
 :00012 [01] @data: - = %1
 :00013 [01] ret %1
------------------------------------
------------------------------------
<_lsr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:610
meta:on_stack:true kind:Ruby mode:method FuncId(454) regs:3 ISeq(RubyFuncInfo { id:454 name:_lsr method:(FuncId(454), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @data: -
 :00002 [02] %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00003 [01] @_p_c: - = %1
 :00004 [02] %1 = @data: -
 :00005 [03] %2 = 1: i32
 :00006 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00008 [01] @_p_nz: - = %1
 :00009 [01] @data: - = %1
 :00010 [01] ret %1
------------------------------------
------------------------------------
<_rol> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:615
meta:on_stack:true kind:Ruby mode:method FuncId(455) regs:3 ISeq(RubyFuncInfo { id:455 name:_rol method:(FuncId(455), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @data: -
 :00002 [03] %2 = 1: i32
 :00003 [02] %1 = %1.<<(%2;1)                     [<INVALID>]
 :00005 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00006 [03] %2 = @_p_c: -
 :00007 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00008 [01] @_p_nz: - = %1
 :00009 [02] %1 = @data: -
 :00010 [03] %2 = 7: i32
 :00011 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00013 [01] @_p_c: - = %1
 :00014 [02] %1 = @_p_nz: -
 :00015 [01] @data: - = %1
 :00016 [01] ret %1
------------------------------------
------------------------------------
<_ror> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:621
meta:on_stack:true kind:Ruby mode:method FuncId(456) regs:4 ISeq(RubyFuncInfo { id:456 name:_ror method:(FuncId(456), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @data: -
 :00002 [03] %2 = 1: i32
 :00003 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00005 [03] %2 = @_p_c: -
 :00006 [04] %3 = 7: i32
 :00007 [03] %2 = %2.<<(%3;1)                     [<INVALID>]
 :00009 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00010 [01] @_p_nz: - = %1
 :00011 [02] %1 = @data: -
 :00012 [02] %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00013 [01] @_p_c: - = %1
 :00014 [02] %1 = @_p_nz: -
 :00015 [01] @data: - = %1
 :00016 [01] ret %1
------------------------------------
------------------------------------
<_dec> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:628
meta:on_stack:true kind:Ruby mode:method FuncId(457) regs:2 ISeq(RubyFuncInfo { id:457 name:_dec method:(FuncId(457), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @data: -
 :00002 [02] %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00003 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 [01] @_p_nz: - = %1
 :00005 [01] @data: - = %1
 :00006 [01] ret %1
------------------------------------
------------------------------------
<_inc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:632
meta:on_stack:true kind:Ruby mode:method FuncId(458) regs:2 ISeq(RubyFuncInfo { id:458 name:_inc method:(FuncId(458), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @data: -
 :00002 [02] %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 [01] @_p_nz: - = %1
 :00005 [01] @data: - = %1
 :00006 [01] ret %1
------------------------------------
------------------------------------
<_dex> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:636
meta:on_stack:true kind:Ruby mode:method FuncId(459) regs:3 ISeq(RubyFuncInfo { id:459 name:_dex method:(FuncId(459), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_x: -
 :00006 [02] %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00007 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 [01] @_x: - = %1
 :00009 [01] @_p_nz: - = %1
 :00010 [01] @data: - = %1
 :00011 [01] ret %1
------------------------------------
------------------------------------
<_dey> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:641
meta:on_stack:true kind:Ruby mode:method FuncId(460) regs:3 ISeq(RubyFuncInfo { id:460 name:_dey method:(FuncId(460), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_y: -
 :00006 [02] %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00007 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 [01] @_y: - = %1
 :00009 [01] @_p_nz: - = %1
 :00010 [01] @data: - = %1
 :00011 [01] ret %1
------------------------------------
------------------------------------
<_inx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:646
meta:on_stack:true kind:Ruby mode:method FuncId(461) regs:3 ISeq(RubyFuncInfo { id:461 name:_inx method:(FuncId(461), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_x: -
 :00006 [02] %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 [01] @_x: - = %1
 :00009 [01] @_p_nz: - = %1
 :00010 [01] @data: - = %1
 :00011 [01] ret %1
------------------------------------
------------------------------------
<_iny> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:651
meta:on_stack:true kind:Ruby mode:method FuncId(462) regs:3 ISeq(RubyFuncInfo { id:462 name:_iny method:(FuncId(462), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_y: -
 :00006 [02] %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00008 [01] @_y: - = %1
 :00009 [01] @_p_nz: - = %1
 :00010 [01] @data: - = %1
 :00011 [01] ret %1
------------------------------------
------------------------------------
<_clc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:657
meta:on_stack:true kind:Ruby mode:method FuncId(463) regs:3 ISeq(RubyFuncInfo { id:463 name:_clc method:(FuncId(463), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = 0: i32
 :00006 [01] @_p_c: - = %1
 :00007 [01] ret %1
------------------------------------
------------------------------------
<_sec> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:662
meta:on_stack:true kind:Ruby mode:method FuncId(464) regs:3 ISeq(RubyFuncInfo { id:464 name:_sec method:(FuncId(464), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = 1: i32
 :00006 [01] @_p_c: - = %1
 :00007 [01] ret %1
------------------------------------
------------------------------------
<_cld> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:667
meta:on_stack:true kind:Ruby mode:method FuncId(465) regs:3 ISeq(RubyFuncInfo { id:465 name:_cld method:(FuncId(465), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = 0: i32
 :00006 [01] @_p_d: - = %1
 :00007 [01] ret %1
------------------------------------
------------------------------------
<_sed> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:672
meta:on_stack:true kind:Ruby mode:method FuncId(466) regs:3 ISeq(RubyFuncInfo { id:466 name:_sed method:(FuncId(466), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = 8: i32
 :00006 [01] @_p_d: - = %1
 :00007 [01] ret %1
------------------------------------
------------------------------------
<_clv> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:677
meta:on_stack:true kind:Ruby mode:method FuncId(467) regs:3 ISeq(RubyFuncInfo { id:467 name:_clv method:(FuncId(467), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = 0: i32
 :00006 [01] @_p_v: - = %1
 :00007 [01] ret %1
------------------------------------
------------------------------------
<_sei> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:682
meta:on_stack:true kind:Ruby mode:method FuncId(468) regs:3 ISeq(RubyFuncInfo { id:468 name:_sei method:(FuncId(468), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_p_i: -
 :00006 [02] _%1 = %1 == 0: i16                   [<INVALID>][<INVALID>]
 :00007 [01] condnotbr _%1 =>:00021
+:00008 [02] %1 = 4: i32
 :00009 [01] @_p_i: - = %1
 :00010 [02] %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00011 [01] @clk_irq: - = %1
 :00012 [02] %1 = @irq_flags: -
 :00013 [02] _%1 = %1 != 0: i16                   [<INVALID>][<INVALID>]
 :00014 [01] condnotbr _%1 =>:00019
+:00015 [02] %1 = const[IRQ_VECTOR]               [<INVALID>]
 :00016 [02] %1 = %0.do_isr(%1;1)                 [<INVALID>]
 :00018 [01] ret %1
+:00019 [02] %1 = nil
 :00020 [01] ret %1
+:00021 [02] %1 = nil
 :00022 [01] ret %1
------------------------------------
------------------------------------
<_cli> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:691
meta:on_stack:true kind:Ruby mode:method FuncId(469) regs:4 ISeq(RubyFuncInfo { id:469 name:_cli method:(FuncId(469), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @clk: -
 :00002 [04] %3 = const[CLK_2]                    [<INVALID>]
 :00003 [03] %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 [02] @clk: - = %2
 :00005 [03] %2 = @_p_i: -
 :00006 [03] _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00007 [02] condnotbr _%2 =>:00025
+:00008 [03] %2 = 0: i32
 :00009 [02] @_p_i: - = %2
 :00010 [03] %2 = @irq_flags: -
 :00011 [03] _%2 = %2 != 0: i16                   [<INVALID>][<INVALID>]
 :00012 [02] condnotbr _%2 =>:00023
+:00013 [03] %2 = @clk: -
 :00014 [02] %1 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00015 [02] @clk_irq: - = %1
 :00016 [03] %2 = @clk_target: -
 :00017 [03] _%2 = %2 > %1                        [<INVALID>][<INVALID>]
 :00018 [02] condnotbr _%2 =>:00021
+:00019 [02] @clk_target: - = %1
 :00020 [02] ret %1
+:00021 [03] %2 = nil
 :00022 [02] ret %2
+:00023 [03] %2 = nil
 :00024 [02] ret %2
+:00025 [03] %2 = nil
 :00026 [02] ret %2
------------------------------------
------------------------------------
<_pha> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:703
meta:on_stack:true kind:Ruby mode:method FuncId(470) regs:3 ISeq(RubyFuncInfo { id:470 name:_pha method:(FuncId(470), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_3]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_a: -
 :00006 [02] %1 = %0.push8(%1;1)                  [<INVALID>]
 :00008 [01] ret %1
------------------------------------
------------------------------------
<_php> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:708
meta:on_stack:true kind:Ruby mode:method FuncId(471) regs:4 ISeq(RubyFuncInfo { id:471 name:_php method:(FuncId(471), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @clk: -
 :00002 [04] %3 = const[CLK_3]                    [<INVALID>]
 :00003 [03] %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 [02] @clk: - = %2
 :00005 [03] %2 = %0.flags_pack()                 [<INVALID>]
 :00007 [02] %1 = %2 | 16: i16                    [<INVALID>][<INVALID>]
 :00008 [03] %2 = %0.push8(%1;1)                  [<INVALID>]
 :00010 [02] ret %2
------------------------------------
------------------------------------
<_pla> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:714
meta:on_stack:true kind:Ruby mode:method FuncId(472) regs:3 ISeq(RubyFuncInfo { id:472 name:_pla method:(FuncId(472), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_4]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = %0.pull8()                      [<INVALID>]
 :00007 [01] @_a: - = %1
 :00008 [01] @_p_nz: - = %1
 :00009 [01] ret %1
------------------------------------
------------------------------------
<_plp> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:719
meta:on_stack:true kind:Ruby mode:method FuncId(473) regs:5 ISeq(RubyFuncInfo { id:473 name:_plp method:(FuncId(473), 0) args: 0 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @clk: -
 :00002 [05] %4 = const[CLK_4]                    [<INVALID>]
 :00003 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00004 [03] @clk: - = %3
 :00005 [03] %1 = @_p_i: -
 :00006 [04] %3 = %0.pull8()                      [<INVALID>]
 :00008 [03] _ = %0.flags_unpack(%3;1)            [<INVALID>]
 :00010 [04] %3 = @irq_flags: -
 :00011 [04] _%3 = %3 != 0: i16                   [<INVALID>][<INVALID>]
 :00012 [03] condnotbr _%3 =>:00037
+:00013 [04] %3 = @_p_i: -
 :00014 [04] _%3 = %1 > %3                        [<INVALID>][<INVALID>]
 :00015 [03] condnotbr _%3 =>:00026
+:00016 [04] %3 = @clk: -
 :00017 [03] %2 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00018 [03] @clk_irq: - = %2
 :00019 [04] %3 = @clk_target: -
 :00020 [04] _%3 = %3 > %2                        [<INVALID>][<INVALID>]
 :00021 [03] condnotbr _%3 =>:00024
+:00022 [03] @clk_target: - = %2
 :00023 [03] ret %2
+:00024 [04] %3 = nil
 :00025 [03] ret %3
+:00026 [04] %3 = @_p_i: -
 :00027 [04] _%3 = %1 < %3                        [<INVALID>][<INVALID>]
 :00028 [03] condnotbr _%3 =>:00035
+:00029 [04] %3 = const[FOREVER_CLOCK]            [<INVALID>]
 :00030 [03] @clk_irq: - = %3
 :00031 [04] %3 = const[IRQ_VECTOR]               [<INVALID>]
 :00032 [04] %3 = %0.do_isr(%3;1)                 [<INVALID>]
 :00034 [03] ret %3
+:00035 [04] %3 = nil
 :00036 [03] ret %3
+:00037 [04] %3 = nil
 :00038 [03] ret %3
------------------------------------
------------------------------------
<_tsx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:734
meta:on_stack:true kind:Ruby mode:method FuncId(474) regs:3 ISeq(RubyFuncInfo { id:474 name:_tsx method:(FuncId(474), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_sp: -
 :00006 [01] @_x: - = %1
 :00007 [01] @_p_nz: - = %1
 :00008 [01] ret %1
------------------------------------
------------------------------------
<_txs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:739
meta:on_stack:true kind:Ruby mode:method FuncId(475) regs:3 ISeq(RubyFuncInfo { id:475 name:_txs method:(FuncId(475), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @clk: -
 :00002 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [01] @clk: - = %1
 :00005 [02] %1 = @_x: -
 :00006 [01] @_sp: - = %1
 :00007 [01] ret %1
------------------------------------
------------------------------------
<_anc> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:745
meta:on_stack:true kind:Ruby mode:method FuncId(476) regs:3 ISeq(RubyFuncInfo { id:476 name:_anc method:(FuncId(476), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_a: -
 :00002 [03] %2 = @data: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [01] @_a: - = %1
 :00005 [01] @_p_nz: - = %1
 :00006 [02] %1 = @_p_nz: -
 :00007 [03] %2 = 7: i32
 :00008 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00010 [01] @_p_c: - = %1
 :00011 [01] ret %1
------------------------------------
------------------------------------
<_ane> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:750
meta:on_stack:true kind:Ruby mode:method FuncId(477) regs:3 ISeq(RubyFuncInfo { id:477 name:_ane method:(FuncId(477), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_a: -
 :00002 [02] %1 = %1 | 238: i16                   [<INVALID>][<INVALID>]
 :00003 [03] %2 = @_x: -
 :00004 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00005 [03] %2 = @data: -
 :00006 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00007 [01] @_a: - = %1
 :00008 [02] %1 = @_a: -
 :00009 [01] @_p_nz: - = %1
 :00010 [01] ret %1
------------------------------------
------------------------------------
<_arr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:755
meta:on_stack:true kind:Ruby mode:method FuncId(478) regs:4 ISeq(RubyFuncInfo { id:478 name:_arr method:(FuncId(478), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @data: -
 :00002 [03] %2 = @_a: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [03] %2 = 1: i32
 :00005 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00007 [03] %2 = @_p_c: -
 :00008 [04] %3 = 7: i32
 :00009 [03] %2 = %2.<<(%3;1)                     [<INVALID>]
 :00011 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00012 [01] @_a: - = %1
 :00013 [02] %1 = @_a: -
 :00014 [01] @_p_nz: - = %1
 :00015 [02] %1 = @_a: -
 :00016 [03] %2 = 6: i32
 :00017 [02] %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00018 [01] @_p_c: - = %1
 :00019 [02] %1 = @_a: -
 :00020 [03] %2 = 6: i32
 :00021 [02] %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00022 [03] %2 = @_a: -
 :00023 [04] %3 = 5: i32
 :00024 [03] %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00025 [02] %1 = %1 ^ %2                         [<INVALID>][<INVALID>]
 :00026 [01] @_p_v: - = %1
 :00027 [01] ret %1
------------------------------------
------------------------------------
<_asr> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:762
meta:on_stack:true kind:Ruby mode:method FuncId(479) regs:3 ISeq(RubyFuncInfo { id:479 name:_asr method:(FuncId(479), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @data: -
 :00002 [03] %2 = @_a: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [02] %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00005 [01] @_p_c: - = %1
 :00006 [02] %1 = @data: -
 :00007 [03] %2 = @_a: -
 :00008 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00009 [03] %2 = 1: i32
 :00010 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00012 [01] @_a: - = %1
 :00013 [01] @_p_nz: - = %1
 :00014 [01] ret %1
------------------------------------
------------------------------------
<_dcp> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:767
meta:on_stack:true kind:Ruby mode:method FuncId(480) regs:2 ISeq(RubyFuncInfo { id:480 name:_dcp method:(FuncId(480), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @data: -
 :00002 [02] %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00003 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 [01] @data: - = %1
 :00005 [02] %1 = %0._cmp()                       [<INVALID>]
 :00007 [01] ret %1
------------------------------------
------------------------------------
<_isb> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:772
meta:on_stack:true kind:Ruby mode:method FuncId(481) regs:2 ISeq(RubyFuncInfo { id:481 name:_isb method:(FuncId(481), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @data: -
 :00002 [02] %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00004 [01] @data: - = %1
 :00005 [02] %1 = %0._sbc()                       [<INVALID>]
 :00007 [01] ret %1
------------------------------------
------------------------------------
<_las> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:777
meta:on_stack:true kind:Ruby mode:method FuncId(482) regs:3 ISeq(RubyFuncInfo { id:482 name:_las method:(FuncId(482), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_sp: -
 :00002 [03] %2 = @data: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [01] @_sp: - = %1
 :00005 [02] %1 = @_sp: -
 :00006 [01] @_x: - = %1
 :00007 [01] @_a: - = %1
 :00008 [01] @_p_nz: - = %1
 :00009 [01] ret %1
------------------------------------
------------------------------------
<_lax> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:782
meta:on_stack:true kind:Ruby mode:method FuncId(483) regs:2 ISeq(RubyFuncInfo { id:483 name:_lax method:(FuncId(483), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @data: -
 :00002 [01] @_x: - = %1
 :00003 [01] @_a: - = %1
 :00004 [01] @_p_nz: - = %1
 :00005 [01] ret %1
------------------------------------
------------------------------------
<_lxa> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:786
meta:on_stack:true kind:Ruby mode:method FuncId(484) regs:2 ISeq(RubyFuncInfo { id:484 name:_lxa method:(FuncId(484), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @data: -
 :00002 [01] @_x: - = %1
 :00003 [01] @_a: - = %1
 :00004 [01] @_p_nz: - = %1
 :00005 [01] ret %1
------------------------------------
------------------------------------
<_rla> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:790
meta:on_stack:true kind:Ruby mode:method FuncId(485) regs:4 ISeq(RubyFuncInfo { id:485 name:_rla method:(FuncId(485), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_p_c: -
 :00002 [03] %2 = @data: -
 :00003 [04] %3 = 7: i32
 :00004 [03] %2 = %2.>>(%3;1)                     [<INVALID>]
 :00006 [02] @_p_c: - = %2
 :00007 [03] %2 = @data: -
 :00008 [04] %3 = 1: i32
 :00009 [03] %2 = %2.<<(%3;1)                     [<INVALID>]
 :00011 [03] %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00012 [03] %2 = %2 | %1                         [<INVALID>][<INVALID>]
 :00013 [02] @data: - = %2
 :00014 [03] %2 = @_a: -
 :00015 [04] %3 = @data: -
 :00016 [03] %2 = %2 & %3                         [<INVALID>][<INVALID>]
 :00017 [02] @_a: - = %2
 :00018 [02] @_p_nz: - = %2
 :00019 [02] ret %2
------------------------------------
------------------------------------
<_rra> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:797
meta:on_stack:true kind:Ruby mode:method FuncId(486) regs:4 ISeq(RubyFuncInfo { id:486 name:_rra method:(FuncId(486), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @_p_c: -
 :00002 [04] %3 = 7: i32
 :00003 [02] %1 = %2.<<(%3;1)                     [<INVALID>]
 :00005 [03] %2 = @data: -
 :00006 [03] %2 = %2 & 1: i16                     [<INVALID>][<INVALID>]
 :00007 [02] @_p_c: - = %2
 :00008 [03] %2 = @data: -
 :00009 [04] %3 = 1: i32
 :00010 [03] %2 = %2.>>(%3;1)                     [<INVALID>]
 :00012 [03] %2 = %2 | %1                         [<INVALID>][<INVALID>]
 :00013 [02] @data: - = %2
 :00014 [03] %2 = %0._adc()                       [<INVALID>]
 :00016 [02] ret %2
------------------------------------
------------------------------------
<_sax> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:804
meta:on_stack:true kind:Ruby mode:method FuncId(487) regs:3 ISeq(RubyFuncInfo { id:487 name:_sax method:(FuncId(487), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_a: -
 :00002 [03] %2 = @_x: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [01] @data: - = %1
 :00005 [01] ret %1
------------------------------------
------------------------------------
<_sbx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:808
meta:on_stack:true kind:Ruby mode:method FuncId(488) regs:3 ISeq(RubyFuncInfo { id:488 name:_sbx method:(FuncId(488), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_a: -
 :00002 [03] %2 = @_x: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [03] %2 = @data: -
 :00005 [02] %1 = %1 - %2                         [<INVALID>][<INVALID>]
 :00006 [01] @data: - = %1
 :00007 [02] %1 = @data: -
 :00008 [03] %2 = 65535: i32
 :00009 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00010 [02] _%1 = %1 <= 255: i16                 [<INVALID>][<INVALID>]
 :00011 [01] condnotbr _%1 =>:00014
+:00012 [02] %1 = 1: i32
 :00013 [02] br =>:00015
+:00014 [02] %1 = 0: i32
+:00015 [01] @_p_c: - = %1
 :00016 [02] %1 = @data: -
 :00017 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00018 [01] @_x: - = %1
 :00019 [01] @_p_nz: - = %1
 :00020 [01] ret %1
------------------------------------
------------------------------------
<_sha> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:814
meta:on_stack:true kind:Ruby mode:method FuncId(489) regs:4 ISeq(RubyFuncInfo { id:489 name:_sha method:(FuncId(489), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_a: -
 :00002 [03] %2 = @_x: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [03] %2 = @addr: -
 :00005 [04] %3 = 8: i32
 :00006 [03] %2 = %2.>>(%3;1)                     [<INVALID>]
 :00008 [03] %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00009 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00010 [01] @data: - = %1
 :00011 [01] ret %1
------------------------------------
------------------------------------
<_shs> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:818
meta:on_stack:true kind:Ruby mode:method FuncId(490) regs:4 ISeq(RubyFuncInfo { id:490 name:_shs method:(FuncId(490), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_a: -
 :00002 [03] %2 = @_x: -
 :00003 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00004 [01] @_sp: - = %1
 :00005 [02] %1 = @_sp: -
 :00006 [03] %2 = @addr: -
 :00007 [04] %3 = 8: i32
 :00008 [03] %2 = %2.>>(%3;1)                     [<INVALID>]
 :00010 [03] %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00011 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00012 [01] @data: - = %1
 :00013 [01] ret %1
------------------------------------
------------------------------------
<_shx> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:823
meta:on_stack:true kind:Ruby mode:method FuncId(491) regs:4 ISeq(RubyFuncInfo { id:491 name:_shx method:(FuncId(491), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_x: -
 :00002 [03] %2 = @addr: -
 :00003 [04] %3 = 8: i32
 :00004 [03] %2 = %2.>>(%3;1)                     [<INVALID>]
 :00006 [03] %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00008 [01] @data: - = %1
 :00009 [02] %1 = @data: -
 :00010 [03] %2 = 8: i32
 :00011 [02] %1 = %1.<<(%2;1)                     [<INVALID>]
 :00013 [03] %2 = @addr: -
 :00014 [03] %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00015 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00016 [01] @addr: - = %1
 :00017 [01] ret %1
------------------------------------
------------------------------------
<_shy> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:828
meta:on_stack:true kind:Ruby mode:method FuncId(492) regs:4 ISeq(RubyFuncInfo { id:492 name:_shy method:(FuncId(492), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_y: -
 :00002 [03] %2 = @addr: -
 :00003 [04] %3 = 8: i32
 :00004 [03] %2 = %2.>>(%3;1)                     [<INVALID>]
 :00006 [03] %2 = %2 + 1: i16                     [<INVALID>][<INVALID>]
 :00007 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00008 [01] @data: - = %1
 :00009 [02] %1 = @data: -
 :00010 [03] %2 = 8: i32
 :00011 [02] %1 = %1.<<(%2;1)                     [<INVALID>]
 :00013 [03] %2 = @addr: -
 :00014 [03] %2 = %2 & 255: i16                   [<INVALID>][<INVALID>]
 :00015 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00016 [01] @addr: - = %1
 :00017 [01] ret %1
------------------------------------
------------------------------------
<_slo> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:833
meta:on_stack:true kind:Ruby mode:method FuncId(493) regs:3 ISeq(RubyFuncInfo { id:493 name:_slo method:(FuncId(493), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @data: -
 :00002 [03] %2 = 7: i32
 :00003 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00005 [01] @_p_c: - = %1
 :00006 [02] %1 = @data: -
 :00007 [03] %2 = 1: i32
 :00008 [02] %1 = %1.<<(%2;1)                     [<INVALID>]
 :00010 [02] %1 = %1 & 255: i16                   [<INVALID>][<INVALID>]
 :00011 [01] @data: - = %1
 :00012 [02] %1 = @_a: -
 :00013 [03] %2 = @data: -
 :00014 [02] %1 = %1 | %2                         [<INVALID>][<INVALID>]
 :00015 [01] @_a: - = %1
 :00016 [01] @_p_nz: - = %1
 :00017 [01] ret %1
------------------------------------
------------------------------------
<_sre> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:839
meta:on_stack:true kind:Ruby mode:method FuncId(494) regs:3 ISeq(RubyFuncInfo { id:494 name:_sre method:(FuncId(494), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @data: -
 :00002 [02] %1 = %1 & 1: i16                     [<INVALID>][<INVALID>]
 :00003 [01] @_p_c: - = %1
 :00004 [02] %1 = @data: -
 :00005 [03] %2 = 1: i32
 :00006 [02] %1 = %1.>>(%2;1)                     [<INVALID>]
 :00008 [01] @data: - = %1
 :00009 [02] %1 = @_a: -
 :00010 [03] %2 = @data: -
 :00011 [02] %1 = %1 ^ %2                         [<INVALID>][<INVALID>]
 :00012 [01] @_a: - = %1
 :00013 [01] @_p_nz: - = %1
 :00014 [01] ret %1
------------------------------------
------------------------------------
<_nop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:846
meta:on_stack:true kind:Ruby mode:method FuncId(495) regs:2 ISeq(RubyFuncInfo { id:495 name:_nop method:(FuncId(495), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = nil
 :00002 [01] ret %1
------------------------------------
------------------------------------
<_brk> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:850
meta:on_stack:true kind:Ruby mode:method FuncId(496) regs:5 ISeq(RubyFuncInfo { id:496 name:_brk method:(FuncId(496), 0) args: 0 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = @_pc: -
 :00002 [03] %1 = %3 + 1: i16                     [<INVALID>][<INVALID>]
 :00003 [03] _ = %0.push16(%1;1)                  [<INVALID>]
 :00005 [04] %3 = %0.flags_pack()                 [<INVALID>]
 :00007 [03] %1 = %3 | 16: i16                    [<INVALID>][<INVALID>]
 :00008 [03] _ = %0.push8(%1;1)                   [<INVALID>]
 :00010 [04] %3 = 4: i32
 :00011 [03] @_p_i: - = %3
 :00012 [04] %3 = const[FOREVER_CLOCK]            [<INVALID>]
 :00013 [03] @clk_irq: - = %3
 :00014 [04] %3 = @clk: -
 :00015 [05] %4 = const[CLK_7]                    [<INVALID>]
 :00016 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00017 [03] @clk: - = %3
 :00018 [04] %3 = %0.fetch_irq_isr_vector()       [<INVALID>]
 :00020 [04] %2 = %3
 :00021 [04] %3 = %0.peek16(%2;1)                 [<INVALID>]
 :00023 [03] @_pc: - = %3
 :00024 [03] ret %3
------------------------------------
------------------------------------
<_jam> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:862
meta:on_stack:true kind:Ruby mode:method FuncId(497) regs:3 ISeq(RubyFuncInfo { id:497 name:_jam method:(FuncId(497), 0) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = @_pc: -
 :00002 [02] %1 = %1 - 1: i16                     [<INVALID>][<INVALID>]
 :00003 [03] %2 = 65535: i32
 :00004 [02] %1 = %1 & %2                         [<INVALID>][<INVALID>]
 :00005 [01] @_pc: - = %1
 :00006 [02] %1 = @clk: -
 :00007 [03] %2 = const[CLK_2]                    [<INVALID>]
 :00008 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00009 [01] @clk: - = %1
 :00010 [02] %1 = @jammed: -
 :00011 [01] condnotbr %1 =>:00014
+:00012 [02] %1 = nil
 :00013 [01] ret %1
+:00014 [02] %1 = literal[true]
 :00015 [01] @jammed: - = %1
 :00016 [02] %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00017 [01] @clk_nmi: - = %1
 :00018 [02] %1 = const[FOREVER_CLOCK]            [<INVALID>]
 :00019 [01] @clk_irq: - = %1
 :00020 [02] %1 = 0: i32
 :00021 [01] @irq_flags: - = %1
 :00022 [01] ret %1
------------------------------------
------------------------------------
<r_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:877
meta:on_stack:true kind:Ruby mode:method FuncId(498) regs:6 ISeq(RubyFuncInfo { id:498 name:r_op method:(FuncId(498), 0) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = %2
 :00002 [05] %4 = literal[true]
 :00003 [06] %5 = literal[false]
 :00004 [03] _ = %0.send(%3;3)                    [<INVALID>]
 :00006 [04] %3 = %0.send(%1;1)                   [<INVALID>]
 :00008 [03] ret %3
------------------------------------
------------------------------------
<w_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:882
meta:on_stack:true kind:Ruby mode:method FuncId(499) regs:7 ISeq(RubyFuncInfo { id:499 name:w_op method:(FuncId(499), 0) args: 3 non_temp: 3 temp: 3})
[]
+:00000 [04] init_method reg:6 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 [05] %4 = %2
 :00002 [06] %5 = literal[false]
 :00003 [07] %6 = literal[true]
 :00004 [04] _ = %0.send(%4;3)                    [<INVALID>]
 :00006 [04] _ = %0.send(%1;1)                    [<INVALID>]
 :00008 [05] %4 = %0.send(%3;1)                   [<INVALID>]
 :00010 [04] ret %4
------------------------------------
------------------------------------
<rw_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:888
meta:on_stack:true kind:Ruby mode:method FuncId(500) regs:7 ISeq(RubyFuncInfo { id:500 name:rw_op method:(FuncId(500), 0) args: 3 non_temp: 3 temp: 3})
[]
+:00000 [04] init_method reg:6 arg:3 req:3 opt:0 rest:false block:None stack_offset:7
 :00001 [05] %4 = %2
 :00002 [06] %5 = literal[true]
 :00003 [07] %6 = literal[true]
 :00004 [04] _ = %0.send(%4;3)                    [<INVALID>]
 :00006 [04] _ = %0.send(%1;1)                    [<INVALID>]
 :00008 [05] %4 = %0.send(%3;1)                   [<INVALID>]
 :00010 [04] ret %4
------------------------------------
------------------------------------
<a_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:894
meta:on_stack:true kind:Ruby mode:method FuncId(501) regs:4 ISeq(RubyFuncInfo { id:501 name:a_op method:(FuncId(501), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @clk: -
 :00002 [04] %3 = const[CLK_2]                    [<INVALID>]
 :00003 [03] %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00004 [02] @clk: - = %2
 :00005 [03] %2 = @_a: -
 :00006 [02] @data: - = %2
 :00007 [02] _ = %0.send(%1;1)                    [<INVALID>]
 :00009 [03] %2 = @data: -
 :00010 [02] @_a: - = %2
 :00011 [02] ret %2
------------------------------------
------------------------------------
<no_op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:901
meta:on_stack:true kind:Ruby mode:method FuncId(502) regs:6 ISeq(RubyFuncInfo { id:502 name:no_op method:(FuncId(502), 0) args: 3 non_temp: 3 temp: 2})
[]
+:00000 [04] init_method reg:5 arg:3 req:3 opt:0 rest:false block:None stack_offset:6
 :00001 [05] %4 = @_pc: -
 :00002 [05] %4 = %4 + %2                         [<INVALID>][<INVALID>]
 :00003 [04] @_pc: - = %4
 :00004 [05] %4 = @clk: -
 :00005 [06] %5 = const[RP2A03_CC]                [<INVALID>]
 :00006 [06] %5 = %3 * %5                         [<INVALID>][<INVALID>]
 :00007 [05] %4 = %4 + %5                         [<INVALID>][<INVALID>]
 :00008 [04] @clk: - = %4
 :00009 [04] ret %4
------------------------------------
------------------------------------
<do_clock> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:906
meta:on_stack:true kind:Ruby mode:method FuncId(503) regs:4 ISeq(RubyFuncInfo { id:503 name:do_clock method:(FuncId(503), 0) args: 0 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @apu: -
 :00002 [02] %1 = %2.do_clock()                   [<INVALID>]
 :00004 [03] %2 = @clk_frame: -
 :00005 [03] _%2 = %1 > %2                        [<INVALID>][<INVALID>]
 :00006 [02] condnotbr _%2 =>:00008
+:00007 [02] %1 = @clk_frame: -
+:00008 [03] %2 = @clk: -
 :00009 [04] %3 = @clk_nmi: -
 :00010 [03] _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00011 [02] condnotbr _%2 =>:00031
+:00012 [03] %2 = @clk_nmi: -
 :00013 [03] _%2 = %1 > %2                        [<INVALID>][<INVALID>]
 :00014 [02] condnotbr _%2 =>:00016
+:00015 [02] %1 = @clk_nmi: -
+:00016 [03] %2 = @clk: -
 :00017 [04] %3 = @clk_irq: -
 :00018 [03] _%2 = %2 < %3                        [<INVALID>][<INVALID>]
 :00019 [02] condnotbr _%2 =>:00025
+:00020 [03] %2 = @clk_irq: -
 :00021 [03] _%2 = %1 > %2                        [<INVALID>][<INVALID>]
 :00022 [02] condnotbr _%2 =>:00024
+:00023 [02] %1 = @clk_irq: -
+:00024 [02] br =>:00030
+:00025 [03] %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00026 [02] @clk_irq: - = %2
 :00027 [03] %2 = const[IRQ_VECTOR]               [<INVALID>]
 :00028 [02] _ = %0.do_isr(%2;1)                  [<INVALID>]
+:00030 [02] br =>:00037
+:00031 [03] %2 = const[FOREVER_CLOCK]            [<INVALID>]
 :00032 [02] @clk_irq: - = %2
 :00033 [02] @clk_nmi: - = %2
 :00034 [03] %2 = const[NMI_VECTOR]               [<INVALID>]
 :00035 [02] _ = %0.do_isr(%2;1)                  [<INVALID>]
+:00037 [02] @clk_target: - = %1
 :00038 [02] ret %1
------------------------------------
------------------------------------
<run> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:926
meta:on_stack:true kind:Ruby mode:method FuncId(504) regs:14 ISeq(RubyFuncInfo { id:504 name:run method:(FuncId(504), 0) args: 0 non_temp: 0 temp: 13})
[]
+:00000 [01] init_method reg:13 arg:0 req:0 opt:0 rest:false block:None stack_offset:10
 :00001 [01] _ = %0.do_clock()                    [<INVALID>]
+:00003 [01] loop_start counter=0 jit-addr=0000000000000000
+:00004 [01] loop_start counter=0 jit-addr=0000000000000000
 :00005 [02] %1 = @_pc: -
 :00006 [02] %1 = %0.fetch(%1;1)                  [<INVALID>]
 :00008 [01] @opcode: - = %1
 :00009 [02] %1 = @conf: -
 :00010 [02] %1 = %1.loglevel()                   [<INVALID>]
 :00012 [02] _%1 = %1 >= 3: i16                   [<INVALID>][<INVALID>]
 :00013 [01] condnotbr _%1 =>:00033
+:00014 [02] %1 = @conf: -
 :00015 [03] %2 = literal["PC:%04X A:%02X X:%02X Y:%02X P:%02X SP:%02X CYC:%3d : OPCODE:%02X (%d, %d)"]
 :00016 [05] %4 = @_pc: -
 :00017 [06] %5 = @_a: -
 :00018 [07] %6 = @_x: -
 :00019 [08] %7 = @_y: -
 :00020 [09] %8 = %0.flags_pack()                 [<INVALID>]
 :00022 [10] %9 = @_sp: -
 :00023 [11] %10 = @clk: -
 :00024 [11] %10 = %10 / 4: i16                   [<INVALID>][<INVALID>]
 :00025 [11] %10 = %10 % 341: i16                 [<INVALID>][<INVALID>]
 :00026 [12] %11 = @opcode: -
 :00027 [13] %12 = @clk: -
 :00028 [14] %13 = @clk_target: -
 :00029 [04] %3 = array[%4; 10]
 :00030 [03] %2 = %2 % %3                         [<INVALID>][<INVALID>]
 :00031 [01] _ = %1.debug(%2;1)                   [<INVALID>]
+:00033 [02] %1 = @_pc: -
 :00034 [02] %1 = %1 + 1: i16                     [<INVALID>][<INVALID>]
 :00035 [01] @_pc: - = %1
 :00036 [02] %1 = const[DISPATCH]                 [<INVALID>]
 :00037 [03] %2 = @opcode: -
 :00038 [02] %1 = %1.[%2]                         [<INVALID>][<INVALID>]
 :00039 [01] _ = %0.send(%1;1)*                   [<INVALID>]
 :00041 [02] %1 = @ppu_sync: -
 :00042 [01] condnotbr %1 =>:00047
+:00043 [02] %1 = @ppu: -
 :00044 [03] %2 = @clk: -
 :00045 [01] _ = %1.sync(%2;1)                    [<INVALID>]
+:00047 [02] %1 = @clk: -
 :00048 [03] %2 = @clk_target: -
 :00049 [02] _%1 = %1 < %2                        [<INVALID>][<INVALID>]
 :00050 [01] condbr _%1 =>:00004
+:00051 [01] loop_end
+:00052 [01] _ = %0.do_clock()                    [<INVALID>]
 :00054 [02] %1 = @clk: -
 :00055 [03] %2 = @clk_frame: -
 :00056 [02] _%1 = %1 < %2                        [<INVALID>][<INVALID>]
 :00057 [01] condbr _%1 =>:00003
+:00058 [02] %1 = nil
 :00059 [02] loop_end
+:00060 [01] ret %1
------------------------------------
------------------------------------
<op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:957
meta:on_stack:true kind:Ruby mode:method FuncId(505) regs:5 ISeq(RubyFuncInfo { id:505 name:op method:(FuncId(505), 0) args: 2 non_temp: 2 temp: 2})
[]
+:00000 [03] init_method reg:4 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = literal[33423361]
 :00002 [04] %3 = %1.each( &%3)                   [<INVALID>]
 :00004 [03] ret %3
------------------------------------
------------------------------------
<OptimizedCodeBuilder> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1085
meta:on_stack:true kind:Ruby mode:class_def FuncId(506) regs:2 ISeq(RubyFuncInfo { id:506 name:OptimizedCodeBuilder method:(FuncId(506), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = const[CodeOptimizationHelper]   [<INVALID>]
 :00002 [01] _ = %0.include(%1;1)                 [<INVALID>]
 :00004 [02] %1 = literal[[:method_inlining, :constant_inlining, :ivar_localization, :trivial_branches]]
 :00005 [01] const[OPTIONS] = %1
 :00006 [02] %1 = literal[[:@addr, :@data, :@_a, :@_x, :@_y, :@_pc, :@_sp, :@fetch, :@store, :@ram, :@opcode]]
 :00007 [01] const[LOCALIZE_IVARS] = %1
 :00008 [01] method_def build: FuncId(511)
 :00009 [01] method_def build_loop: FuncId(512)
 :00010 [01] method_def cpu_expand_methods: FuncId(513)
 :00011 [01] method_def expand_constants: FuncId(514)
 :00012 [02] %1 = :expand_constants
 :00013 [01] ret %1
------------------------------------
------------------------------------
<block in add_mappings> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:119
meta:on_stack:true kind:Ruby mode:method FuncId(507) regs:4 ISeq(RubyFuncInfo { id:507 name:<unnamed> method:(FuncId(379), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = @fetch: -
 :00002 [04] %3 = dynvar(1, %2)
 :00003 [02] %2:.[%1:] = %3
 :00004 [03] %2 = @store: -
 :00005 [04] %3 = dynvar(1, %3)
 :00006 [04] condbr %3 =>:00008
+:00007 [04] %3 = @poke_nop: -
+:00008 [02] %2:.[%1:] = %3
 :00009 [02] ret %3
------------------------------------
------------------------------------
<block in sprite_dma> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:182
meta:on_stack:true kind:Ruby mode:method FuncId(508) regs:5 ISeq(RubyFuncInfo { id:508 name:<unnamed> method:(FuncId(391), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 [02] init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = dynvar(1, %2)
 :00002 [04] %3 = @ram: -
 :00003 [05] %4 = dynvar(1, %1)
 :00004 [05] %4 = %4 + %1                         [<INVALID>][<INVALID>]
 :00005 [04] %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00006 [02] %2:.[%1:] = %3
 :00007 [02] ret %3
------------------------------------
------------------------------------
<block in sprite_dma> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:183
meta:on_stack:true kind:Ruby mode:method FuncId(509) regs:6 ISeq(RubyFuncInfo { id:509 name:<unnamed> method:(FuncId(391), 1) args: 1 non_temp: 1 temp: 4})
[]
+:00000 [02] init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = dynvar(1, %2)
 :00002 [04] %3 = %1 * 4: i16                     [<INVALID>][<INVALID>]
 :00003 [04] %3 = %3 + 2: i16                     [<INVALID>][<INVALID>]
 :00004 [05] %4 = dynvar(1, %2)
 :00005 [06] %5 = %1 * 4: i16                     [<INVALID>][<INVALID>]
 :00006 [06] %5 = %5 + 2: i16                     [<INVALID>][<INVALID>]
 :00007 [05] %4 = %4.[%5]                         [<INVALID>][<INVALID>]
 :00008 [05] %4 = %4 & 227: i16                   [<INVALID>][<INVALID>]
 :00009 [02] %2:.[%3:] = %4
 :00010 [02] ret %4
------------------------------------
------------------------------------
<block in op> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:958
meta:on_stack:true kind:Ruby mode:method FuncId(510) regs:10 ISeq(RubyFuncInfo { id:510 name:<unnamed> method:(FuncId(505), 1) args: 1 non_temp: 5 temp: 4})
[]
+:00000 [06] init_method reg:9 arg:1 req:1 opt:0 rest:false block:None stack_offset:8
 :00001 [07] %6 = dynvar(1, %2)
 :00002 [08] %7 = const[Array]                    [<INVALID>]
 :00003 [07] %6 = %6.is_a?(%7;1)                  [<INVALID>]
 :00005 [06] condnotbr %6 =>:00046
+:00006 [07] %6 = literal[[:r_op, :w_op, :rw_op]]
 :00007 [08] %7 = dynvar(1, %2)
 :00008 [09] %8 = 0: i32
 :00009 [08] %7 = %7.[%8]                         [<INVALID>][<INVALID>]
 :00010 [07] %6 = %6.include?(%7;1)               [<INVALID>]
 :00012 [06] condnotbr %6 =>:00046
+:00013 [07] %6 = dynvar(1, %2)
 :00014 [07] %7; 3 = expand(%6)
 :00015 [07] %2 = %7
 :00016 [07] %3 = %8
 :00017 [07] %4 = %9
 :00018 [07] %6 = const[ADDRESSING_MODES]         [<INVALID>]
 :00019 [07] %6 = %6.[%4]                         [<INVALID>][<INVALID>]
 :00020 [08] %7 = 2: i32
 :00021 [08] %7 = %1.>>(%7;1)                     [<INVALID>]
 :00023 [08] %7 = %7 & 7: i16                     [<INVALID>][<INVALID>]
 :00024 [06] %4 = %6.[%7]                         [<INVALID>][<INVALID>]
 :00025 [07] %6 = %2
 :00026 [08] %7 = %3
 :00027 [09] %8 = %4
 :00028 [06] %5 = array[%6; 3]
 :00029 [07] %6 = :r_op
 :00030 [07] _%6 = %2 != %6                       [<INVALID>][<INVALID>]
 :00031 [06] condnotbr _%6 =>:00043
+:00032 [07] %6 = %4.to_s()                       [<INVALID>]
 :00034 [08] %7 = literal["zpg"]
 :00035 [07] %6 = %6.start_with?(%7;1)            [<INVALID>]
 :00037 [06] condnotbr %6 =>:00040
+:00038 [07] %6 = :store_zpg
 :00039 [07] br =>:00041
+:00040 [07] %6 = :store_mem
+:00041 [07] %6 = %5.<<(%6;1)                     [<INVALID>]
+:00043 [07] %6 = const[DISPATCH]                 [<INVALID>]
 :00044 [06] %6:.[%1:] = %5
 :00045 [06] ret %5
+:00046 [07] %6 = const[DISPATCH]                 [<INVALID>]
 :00047 [09] %8 = dynvar(1, %2)
 :00048 [08] %7 = array[%8; 1]
 :00049 [06] %6:.[%1:] = %7
 :00050 [06] ret %7
------------------------------------
------------------------------------
<build> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1092
meta:on_stack:true kind:Ruby mode:method FuncId(511) regs:6 ISeq(RubyFuncInfo { id:511 name:build method:(FuncId(511), 0) args: 0 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = :ivar_localization
 :00002 [05] %4 = :method_inlining
 :00003 [03] _ = %0.depends(%3;2)                 [<INVALID>]
 :00005 [04] %3 = literal["/home/monochrome/optcarrot/lib/optcarrot/cpu.rb"]
 :00006 [03] %1 = %0.parse_method_definitions(%3;1) [<INVALID>]
 :00008 [03] %2 = %0.build_loop(%1;1)             [<INVALID>]
 :00010 [04] %3 = @method_inlining: -
 :00011 [03] condnotbr %3 =>:00016
+:00012 [04] %3 = %2
 :00013 [05] %4 = %1
 :00014 [03] %2 = %0.cpu_expand_methods(%3;2)     [<INVALID>]
+:00016 [04] %3 = @trivial_branches: -
 :00017 [03] condnotbr %3 =>:00020
+:00018 [03] %2 = %0.remove_trivial_branches(%2;1) [<INVALID>]
+:00020 [04] %3 = @constant_inlining: -
 :00021 [03] condnotbr %3 =>:00024
+:00022 [03] %2 = %0.expand_constants(%2;1)       [<INVALID>]
+:00024 [04] %3 = @ivar_localization: -
 :00025 [03] condnotbr %3 =>:00030
+:00026 [04] %3 = %2
 :00027 [05] %4 = const[LOCALIZE_IVARS]           [<INVALID>]
 :00028 [03] %2 = %0.localize_instance_variables(%3;2) [<INVALID>]
+:00030 [04] %3 = literal["def self.run"]
 :00031 [05] %4 = 2: i32
 :00032 [06] %5 = %2
 :00033 [05] %4 = %0.indent(%4;2)                 [<INVALID>]
 :00035 [06] %5 = literal["end"]
 :00036 [04] %3 = %0.gen(%3;3)                    [<INVALID>]
 :00038 [03] ret %3
------------------------------------
------------------------------------
<build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1112
meta:on_stack:true kind:Ruby mode:method FuncId(512) regs:8 ISeq(RubyFuncInfo { id:512 name:build_loop method:(FuncId(512), 0) args: 1 non_temp: 3 temp: 4})
[]
+:00000 [04] init_method reg:7 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 [05] %4 = literal["case @opcode"]
 :00002 [06] %5 = const[DISPATCH]                 [<INVALID>]
 :00003 [06] %5 = %5.map()                        [<INVALID>]
 :00005 [07] %6 = literal[33751041]
 :00006 [06] %5 = %5.with_index( &%6)             [<INVALID>]
 :00008 [07] %6 = literal["end"]
 :00009 [04] %2 = %0.gen(%4;3)*                   [<INVALID>]
 :00011 [05] %4 = :run
 :00012 [05] %4 = %1.[%4]                         [<INVALID>][<INVALID>]
 :00013 [05] %4 = %4.body()                       [<INVALID>]
 :00015 [06] %5 = literal[33816577]
 :00016 [07] %6 = literal["@conf.loglevel >= 3"]
 :00017 [04] %3 = %4.sub(%6;1 &%5)                [<INVALID>]
 :00019 [05] %4 = literal[33882113]
 :00020 [06] %5 = literal[/(?m)^ *send.*\n/]
 :00021 [05] %4 = %3.sub(%5;1 &%4)                [<INVALID>]
 :00023 [04] ret %4
------------------------------------
------------------------------------
<cpu_expand_methods> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1134
meta:on_stack:true kind:Ruby mode:method FuncId(513) regs:12 ISeq(RubyFuncInfo { id:513 name:cpu_expand_methods method:(FuncId(513), 0) args: 2 non_temp: 2 temp: 9})
[]
+:00000 [03] init_method reg:11 arg:2 req:2 opt:0 rest:false block:None stack_offset:9
 :00001 [04] %3 = %1
 :00002 [05] %4 = %2
 :00003 [06] %5 = %2.keys()                       [<INVALID>]
 :00005 [07] %6 = literal[/(?m)^_/]
 :00006 [06] %5 = %5.grep(%6;1)                   [<INVALID>]
 :00008 [03] %1 = %0.expand_methods(%3;3)         [<INVALID>]
 :00010 [05] %4 = literal[[:_adc, :_sbc, :_cmp, :store_mem, :store_zpg]]
 :00011 [06] %5 = literal[[:imm, :abs, :zpg, :abs_x, :abs_y, :zpg_x, :zpg_y, :ind_x, :ind_y]]
 :00012 [07] %6 = literal[[:abs_reg, :zpg_reg]]
 :00013 [08] %7 = literal[[:read_write]]
 :00014 [09] %8 = literal[[:do_clock]]
 :00015 [10] %9 = literal[[:do_isr]]
 :00016 [11] %10 = literal[[:branch, :push16]]
 :00017 [12] %11 = literal[[:push8]]
 :00018 [04] %3 = array[%4; 8]
 :00019 [05] %4 = literal[33947649]
 :00020 [03] _ = %3.each( &%4)                    [<INVALID>]
 :00022 [04] %3 = literal[[:fetch, :peek16, :store, :pull16, :pull8]]
 :00023 [05] %4 = literal[34013185]
 :00024 [03] _ = %3.each( &%4)                    [<INVALID>]
 :00026 [03] ret %1
------------------------------------
------------------------------------
<expand_constants> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1155
meta:on_stack:true kind:Ruby mode:method FuncId(514) regs:4 ISeq(RubyFuncInfo { id:514 name:expand_constants method:(FuncId(514), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = literal[34078721]
 :00002 [04] %3 = literal[/(?m)CLK_(\d+)/]
 :00003 [02] %1 = %1.gsub(%3;1 &%2)               [<INVALID>]
 :00005 [03] %2 = literal[34144257]
 :00006 [04] %3 = literal[/(?m)FOREVER_CLOCK/]
 :00007 [02] %1 = %1.gsub(%3;1 &%2)               [<INVALID>]
 :00009 [02] ret %1
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1115
meta:on_stack:true kind:Ruby mode:method FuncId(515) regs:10 ISeq(RubyFuncInfo { id:515 name:<unnamed> method:(FuncId(512), 1) args: 2 non_temp: 5 temp: 4})
[]
+:00000 [06] init_method reg:9 arg:2 req:2 opt:0 rest:false block:None stack_offset:8
 :00001 [07] %6 = %1.size()                       [<INVALID>]
 :00003 [07] _%6 = %6 > 1: i16                    [<INVALID>][<INVALID>]
 :00004 [06] condnotbr _%6 =>:00038
+:00005 [07] %6 = %1
 :00006 [07] %7; 2 = expand(%6)
 :00007 [07] %3 = %7
 :00008 [07] %4 = %8
 :00009 [07] %6 = %3
 :00010 [08] %7 = literal["("]
 :00011 [09] %8 = 1: i32
 :00012 [09] %8 = %1.drop(%8;1)                   [<INVALID>]
 :00014 [10] %9 = literal[", "]
 :00015 [09] %8 = %8.join(%9;1)                   [<INVALID>]
 :00017 [10] %9 = literal[")"]
 :00018 [07] %6 = concat(%6; 4)
 :00019 [08] %7 = %3
 :00020 [09] %8 = dynvar(1, %1)
 :00021 [09] %8 = %8.[%3]                         [<INVALID>][<INVALID>]
 :00022 [06] %5 = %0.expand_inline_methods(%6;3)  [<INVALID>]
 :00024 [07] %6 = literal[34209793]
 :00025 [08] %7 = literal[/(?m)send\((\w+), (.*?)\)/]
 :00026 [06] %5 = %5.gsub(%7;1 &%6)               [<INVALID>]
 :00028 [07] %6 = literal[34275329]
 :00029 [08] %7 = literal[/(?m)send\((\w+)\)/]
 :00030 [06] %5 = %5.gsub(%7;1 &%6)               [<INVALID>]
 :00032 [07] %6 = literal[1..-2]
 :00033 [07] %6 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00034 [08] %7 = literal["; "]
 :00035 [06] %5 = %6.split(%7;1)                  [<INVALID>]
 :00037 [06] br =>:00041
+:00038 [07] %6 = 0: i32
 :00039 [06] %5 = %1.[%6]                         [<INVALID>][<INVALID>]
 :00040 [06] %4 = %5
+:00041 [07] %6 = literal["when 0x%02x # "]
 :00042 [08] %7 = %4
 :00043 [09] %8 = literal["\n"]
 :00044 [07] %6 = concat(%6; 3)
 :00045 [07] %6 = %6 % %2                         [<INVALID>][<INVALID>]
 :00046 [08] %7 = 2: i32
 :00047 [09] %8 = %0.gen(%5;1)*                   [<INVALID>]
 :00049 [08] %7 = %0.indent(%7;2)                 [<INVALID>]
 :00051 [07] %6 = %6 + %7                         [<INVALID>][<INVALID>]
 :00052 [06] ret %6
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1129
meta:on_stack:true kind:Ruby mode:method FuncId(516) regs:2 ISeq(RubyFuncInfo { id:516 name:<unnamed> method:(FuncId(512), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = @loglevel: -
 :00002 [02] %1 = %1 >= 3: i16                    [<INVALID>][<INVALID>]
 :00003 [01] ret %1
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1130
meta:on_stack:true kind:Ruby mode:method FuncId(517) regs:3 ISeq(RubyFuncInfo { id:517 name:<unnamed> method:(FuncId(512), 1) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = 4: i32
 :00002 [03] %2 = dynvar(1, %2)
 :00003 [02] %1 = %0.indent(%1;2)                 [<INVALID>]
 :00005 [01] ret %1
------------------------------------
------------------------------------
<block in cpu_expand_methods> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1145
meta:on_stack:true kind:Ruby mode:method FuncId(518) regs:5 ISeq(RubyFuncInfo { id:518 name:<unnamed> method:(FuncId(513), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 [02] init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = dynvar(1, %1)
 :00002 [04] %3 = dynvar(1, %2)
 :00003 [05] %4 = %1
 :00004 [03] %2 = %0.expand_methods(%2;3)         [<INVALID>]
 :00006 [02] dynvar(1, %1) = %2
 :00007 [02] ret %2
------------------------------------
------------------------------------
<block in cpu_expand_methods> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1148
meta:on_stack:true kind:Ruby mode:method FuncId(519) regs:5 ISeq(RubyFuncInfo { id:519 name:<unnamed> method:(FuncId(513), 1) args: 1 non_temp: 1 temp: 3})
[]
+:00000 [02] init_method reg:4 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = dynvar(1, %1)
 :00002 [04] %3 = %1
 :00003 [05] %4 = dynvar(1, %2)
 :00004 [05] %4 = %4.[%1]                         [<INVALID>][<INVALID>]
 :00005 [03] %2 = %0.expand_inline_methods(%2;3)  [<INVALID>]
 :00007 [02] dynvar(1, %1) = %2
 :00008 [02] ret %2
------------------------------------
------------------------------------
<block in expand_constants> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1156
meta:on_stack:true kind:Ruby mode:method FuncId(520) regs:2 ISeq(RubyFuncInfo { id:520 name:<unnamed> method:(FuncId(514), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = $&
 :00002 [02] %1 = %0.eval(%1;1)                   [<INVALID>]
 :00004 [01] ret %1
------------------------------------
------------------------------------
<block in expand_constants> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1157
meta:on_stack:true kind:Ruby mode:method FuncId(521) regs:2 ISeq(RubyFuncInfo { id:521 name:<unnamed> method:(FuncId(514), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = literal["0xffffffff"]
 :00002 [01] ret %1
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1119
meta:on_stack:true kind:Ruby mode:method FuncId(522) regs:5 ISeq(RubyFuncInfo { id:522 name:<unnamed> method:(FuncId(512), 2) args: 0 non_temp: 0 temp: 4})
[]
+:00000 [01] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = $1
 :00002 [03] %2 = literal["("]
 :00003 [04] %3 = $2
 :00004 [05] %4 = literal[")"]
 :00005 [02] %1 = concat(%1; 4)
 :00006 [01] ret %1
------------------------------------
------------------------------------
<block in build_loop> /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:1120
meta:on_stack:true kind:Ruby mode:method FuncId(523) regs:2 ISeq(RubyFuncInfo { id:523 name:<unnamed> method:(FuncId(512), 2) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = $1
 :00002 [01] ret %1
------------------------------------
------------------------------------
</main> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:1
meta:on_stack:true kind:Ruby mode:method FuncId(524) regs:2 ISeq(RubyFuncInfo { id:524 name:/main method:(FuncId(524), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = module_def Optcarrot: FuncId(525)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<Optcarrot> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:1
meta:on_stack:true kind:Ruby mode:class_def FuncId(525) regs:2 ISeq(RubyFuncInfo { id:525 name:Optcarrot method:(FuncId(525), 0) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = module_def CodeOptimizationHelper: FuncId(526)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<CodeOptimizationHelper> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:3
meta:on_stack:true kind:Ruby mode:class_def FuncId(526) regs:4 ISeq(RubyFuncInfo { id:526 name:CodeOptimizationHelper method:(FuncId(526), 0) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [01] method_def initialize: FuncId(527)
 :00002 [01] method_def depends: FuncId(528)
 :00003 [01] method_def gen: FuncId(529)
 :00004 [01] method_def indent: FuncId(530)
 :00005 [01] method_def branch: FuncId(531)
 :00006 [02] %1 = const[Struct]                   [<INVALID>]
 :00007 [03] %2 = :params
 :00008 [04] %3 = :body
 :00009 [02] %1 = %1.new(%2;2)                    [<INVALID>]
 :00011 [01] const[MethodDef] = %1
 :00012 [02] %1 = literal[/(?mx)
      ^(\ +)def[[:space:]]+(\w+)(?:\((.*)\))?\n
      ^((?:\1\ +.*\n|\n)*)
      ^\1end$
    /]
 :00013 [01] const[METHOD_DEFINITIONS_RE] = %1
 :00014 [01] method_def parse_method_definitions: FuncId(532)
 :00015 [01] method_def expand_methods: FuncId(533)
 :00016 [01] method_def expand_inline_methods: FuncId(534)
 :00017 [01] method_def replace_var: FuncId(535)
 :00018 [01] method_def replace_cond_var: FuncId(536)
 :00019 [02] %1 = literal[/(?mx)
      ^(\ *)(if|unless)\ (true|false)\n
      ^((?:\1\ +.*\n|\n)*)
       (?:
         \1else\n
         ((?:\1\ +.*\n|\n)*)
       )?
      ^\1end\n
    /]
 :00020 [01] const[TRIVIAL_BRANCH_RE] = %1
 :00021 [01] method_def remove_trivial_branches: FuncId(537)
 :00022 [01] method_def localize_instance_variables: FuncId(538)
 :00023 [02] %1 = :localize_instance_variables
 :00024 [01] ret %1
------------------------------------
------------------------------------
<initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:4
meta:on_stack:true kind:Ruby mode:method FuncId(527) regs:9 ISeq(RubyFuncInfo { id:527 name:initialize method:(FuncId(527), 0) args: 2 non_temp: 5 temp: 3})
[]
+:00000 [06] init_method reg:8 arg:2 req:2 opt:0 rest:false block:None stack_offset:8
 :00001 [06] @loglevel: - = %1
 :00002 [06] %3 = const[OPTIONS]                  [<INVALID>]
 :00003 [06] %4 = literal[{}]
 :00004 [07] %6 = %2
 :00005 [07] condbr %6 =>:00008
+:00006 [07] %2 = literal[[:all]]
 :00007 [07] %6 = %2
+:00008 [08] %7 = literal[[:all]]
 :00009 [07] %6 = %2 == %7                        [<INVALID>][<INVALID>]
 :00010 [07] condbr %6 =>:00017
+:00011 [08] %7 = literal[[]]
 :00012 [07] %6 = %2 != %7                        [<INVALID>][<INVALID>]
 :00013 [07] condnotbr %6 =>:00017
+:00014 [08] %7 = literal[35323905]
 :00015 [07] %6 = %2.all?( &%7)                   [<INVALID>]
+:00017 [06] %5 = %6
 :00018 [07] %6 = literal[35389441]
 :00019 [06] _ = %3.each( &%6)                    [<INVALID>]
 :00021 [07] %6 = literal[[:none, :all]]
 :00022 [07] %6 = %2 - %6                         [<INVALID>][<INVALID>]
 :00023 [08] %7 = literal[35454977]
 :00024 [06] _ = %6.each( &%7)                    [<INVALID>]
 :00026 [07] %6 = literal[35520513]
 :00027 [07] %6 = %3.each( &%6)                   [<INVALID>]
 :00029 [06] ret %6
------------------------------------
------------------------------------
<depends> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:24
meta:on_stack:true kind:Ruby mode:method FuncId(528) regs:8 ISeq(RubyFuncInfo { id:528 name:depends method:(FuncId(528), 0) args: 2 non_temp: 2 temp: 5})
[]
+:00000 [03] init_method reg:7 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 [04] %3 = literal["@"]
 :00002 [05] %4 = %1
 :00003 [04] %3 = concat(%3; 2)
 :00004 [04] %3 = %3.to_sym()                     [<INVALID>]
 :00006 [04] %3 = %0.instance_variable_get(%3;1)  [<INVALID>]
 :00008 [03] condnotbr %3 =>:00027
+:00009 [05] %4 = literal["@"]
 :00010 [06] %5 = %2
 :00011 [05] %4 = concat(%4; 2)
 :00012 [05] %4 = %4.to_sym()                     [<INVALID>]
 :00014 [04] %3 = %0.instance_variable_get(%4;1)  [<INVALID>]
 :00016 [04] %3 = !%3                             [<INVALID>]
 :00017 [03] condnotbr %3 =>:00027
+:00018 [04] %3 = literal["`"]
 :00019 [05] %4 = %1
 :00020 [06] %5 = literal["' depends upon `"]
 :00021 [07] %6 = %2
 :00022 [08] %7 = literal["'"]
 :00023 [04] %3 = concat(%3; 5)
 :00024 [04] %3 = %0.raise(%3;1)                  [<INVALID>]
 :00026 [03] ret %3
+:00027 [04] %3 = nil
 :00028 [03] ret %3
------------------------------------
------------------------------------
<gen> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:30
meta:on_stack:true kind:Ruby mode:method FuncId(529) regs:4 ISeq(RubyFuncInfo { id:529 name:gen method:(FuncId(529), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:0 opt:0 rest:true block:None stack_offset:5
 :00001 [03] %2 = literal[35586049]
 :00002 [03] %2 = %1.map( &%2)                    [<INVALID>]
 :00004 [04] %3 = literal["\n"]
 :00005 [03] %2 = %2.join(%3;1)                   [<INVALID>]
 :00007 [04] %3 = literal["\n"]
 :00008 [03] %2 = %2 + %3                         [<INVALID>][<INVALID>]
 :00009 [02] ret %2
------------------------------------
------------------------------------
<indent> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:35
meta:on_stack:true kind:Ruby mode:method FuncId(530) regs:8 ISeq(RubyFuncInfo { id:530 name:indent method:(FuncId(530), 0) args: 2 non_temp: 2 temp: 5})
[]
+:00000 [03] init_method reg:7 arg:2 req:2 opt:0 rest:false block:None stack_offset:7
 :00001 [04] _%3 = %1 > 0: i16                    [<INVALID>][<INVALID>]
 :00002 [03] condnotbr _%3 =>:00008
+:00003 [04] %3 = literal[35651585]
 :00004 [05] %4 = literal[/(?m)^(.+)$/]
 :00005 [04] %3 = %2.gsub(%4;1 &%3)               [<INVALID>]
 :00007 [03] ret %3
+:00008 [04] _%3 = %1 < 0: i16                    [<INVALID>][<INVALID>]
 :00009 [03] condnotbr _%3 =>:00019
+:00010 [04] %4 = literal["(?m)"]
 :00011 [06] %5 = literal["^ {"]
 :00012 [07] %6 = -%1                             [<INVALID>]
 :00013 [08] %7 = literal["}"]
 :00014 [04] %3 = concat_regexp(%4; 4)
 :00015 [05] %4 = literal[""]
 :00016 [04] %3 = %2.gsub(%3;2)                   [<INVALID>]
 :00018 [03] ret %3
+:00019 [03] ret %2
------------------------------------
------------------------------------
<branch> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:46
meta:on_stack:true kind:Ruby mode:method FuncId(531) regs:9 ISeq(RubyFuncInfo { id:531 name:branch method:(FuncId(531), 0) args: 3 non_temp: 3 temp: 5})
[]
+:00000 [04] init_method reg:8 arg:3 req:3 opt:0 rest:false block:None stack_offset:8
 :00001 [05] %4 = literal["if "]
 :00002 [06] %5 = %1
 :00003 [05] %4 = concat(%4; 2)
 :00004 [06] %5 = 2: i32
 :00005 [07] %6 = %2
 :00006 [06] %5 = %0.indent(%5;2)                 [<INVALID>]
 :00008 [07] %6 = literal["else"]
 :00009 [08] %7 = 2: i32
 :00010 [09] %8 = %3
 :00011 [08] %7 = %0.indent(%7;2)                 [<INVALID>]
 :00013 [09] %8 = literal["end"]
 :00014 [05] %4 = %0.gen(%4;5)                    [<INVALID>]
 :00016 [04] ret %4
------------------------------------
------------------------------------
<parse_method_definitions> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:64
meta:on_stack:true kind:Ruby mode:method FuncId(532) regs:6 ISeq(RubyFuncInfo { id:532 name:parse_method_definitions method:(FuncId(532), 0) args: 1 non_temp: 3 temp: 2})
[]
+:00000 [04] init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [05] %4 = const[File]                     [<INVALID>]
 :00002 [04] %2 = %4.read(%1;1)                   [<INVALID>]
 :00004 [04] %3 = literal[{}]
 :00005 [05] %4 = literal[35717121]
 :00006 [06] %5 = const[METHOD_DEFINITIONS_RE]    [<INVALID>]
 :00007 [04] _ = %2.scan(%5;1 &%4)                [<INVALID>]
 :00009 [04] ret %3
------------------------------------
------------------------------------
<expand_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:85
meta:on_stack:true kind:Ruby mode:method FuncId(533) regs:10 ISeq(RubyFuncInfo { id:533 name:expand_methods method:(FuncId(533), 0) args: 3 non_temp: 3 temp: 6})
[]
+:00000 [04] init_method reg:9 arg:3 req:2 opt:1 rest:false block:None stack_offset:8
 :00001 [04] check_local(%3) =>:00004
+:00002 [04] %3 = %2.keys()                       [<INVALID>]
+:00004 [05] %4 = literal[35782657]
 :00005 [06] %6 = literal["(?m)"]
 :00006 [08] %7 = literal["^( *)\\b("]
 :00007 [09] %8 = literal["|"]
 :00008 [09] %8 = %3 * %8                         [<INVALID>][<INVALID>]
 :00009 [10] %9 = literal[")\\b(?:\\((.*?)\\))?\\n"]
 :00010 [06] %5 = concat_regexp(%6; 4)
 :00011 [05] %4 = %1.gsub(%5;1 &%4)               [<INVALID>]
 :00013 [04] ret %4
------------------------------------
------------------------------------
<expand_inline_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:99
meta:on_stack:true kind:Ruby mode:method FuncId(534) regs:10 ISeq(RubyFuncInfo { id:534 name:expand_inline_methods method:(FuncId(534), 0) args: 3 non_temp: 3 temp: 6})
[]
+:00000 [04] init_method reg:9 arg:3 req:3 opt:0 rest:false block:None stack_offset:8
 :00001 [05] %4 = literal[35848193]
 :00002 [06] %6 = literal["(?m)"]
 :00003 [08] %7 = literal["\\b"]
 :00004 [09] %8 = %2
 :00005 [10] %9 = literal["\\b(?:\\(((?:@?\\w+, )*@?\\w+)\\))?"]
 :00006 [06] %5 = concat_regexp(%6; 4)
 :00007 [05] %4 = %1.gsub(%5;1 &%4)               [<INVALID>]
 :00009 [04] ret %4
------------------------------------
------------------------------------
<replace_var> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:112
meta:on_stack:true kind:Ruby mode:method FuncId(535) regs:10 ISeq(RubyFuncInfo { id:535 name:replace_var method:(FuncId(535), 0) args: 3 non_temp: 4 temp: 5})
[]
+:00000 [05] init_method reg:9 arg:3 req:3 opt:0 rest:false block:None stack_offset:8
 :00001 [06] %5 = literal["@"]
 :00002 [06] %5 = %2.start_with?(%5;1)            [<INVALID>]
 :00004 [05] condnotbr %5 =>:00011
+:00005 [06] %6 = literal["(?m)"]
 :00006 [08] %7 = literal[""]
 :00007 [09] %8 = %2
 :00008 [10] %9 = literal["\\b"]
 :00009 [06] %5 = concat_regexp(%6; 4)
 :00010 [06] br =>:00016
+:00011 [06] %6 = literal["(?m)"]
 :00012 [08] %7 = literal["\\b"]
 :00013 [09] %8 = %2
 :00014 [10] %9 = literal["\\b"]
 :00015 [06] %5 = concat_regexp(%6; 4)
+:00016 [06] %4 = %5
 :00017 [06] %5 = literal[35913729]
 :00018 [07] %6 = %4
 :00019 [06] %5 = %1.gsub(%6;1 &%5)               [<INVALID>]
 :00021 [05] ret %5
------------------------------------
------------------------------------
<replace_cond_var> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:117
meta:on_stack:true kind:Ruby mode:method FuncId(536) regs:10 ISeq(RubyFuncInfo { id:536 name:replace_cond_var method:(FuncId(536), 0) args: 3 non_temp: 3 temp: 6})
[]
+:00000 [04] init_method reg:9 arg:3 req:3 opt:0 rest:false block:None stack_offset:8
 :00001 [05] %4 = literal[35979265]
 :00002 [06] %6 = literal["(?m)"]
 :00003 [08] %7 = literal["(if|unless)[[:space:]]"]
 :00004 [09] %8 = %2
 :00005 [10] %9 = literal["\\b"]
 :00006 [06] %5 = concat_regexp(%6; 4)
 :00007 [05] %4 = %1.gsub(%5;1 &%4)               [<INVALID>]
 :00009 [04] ret %4
------------------------------------
------------------------------------
<remove_trivial_branches> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:131
meta:on_stack:true kind:Ruby mode:method FuncId(537) regs:4 ISeq(RubyFuncInfo { id:537 name:remove_trivial_branches method:(FuncId(537), 0) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = %1.dup()                        [<INVALID>]
+:00003 [02] loop_start counter=0 jit-addr=0000000000000000
 :00004 [03] %2 = literal[36044801]
 :00005 [04] %3 = const[TRIVIAL_BRANCH_RE]        [<INVALID>]
 :00006 [03] %2 = %1.gsub!(%3;1 &%2)              [<INVALID>]
 :00008 [02] condnotbr %2 =>:00010
+:00009 [02] br =>:00003
+:00010 [02] loop_end
+:00011 [02] ret %1
------------------------------------
------------------------------------
<localize_instance_variables> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:146
meta:on_stack:true kind:Ruby mode:method FuncId(538) regs:11 ISeq(RubyFuncInfo { id:538 name:localize_instance_variables method:(FuncId(538), 0) args: 2 non_temp: 4 temp: 6})
[]
+:00000 [05] init_method reg:10 arg:2 req:1 opt:1 rest:false block:None stack_offset:9
 :00001 [05] check_local(%2) =>:00009
+:00002 [06] %5 = literal[/(?m)@\w+/]
 :00003 [06] %5 = %1.scan(%5;1)                   [<INVALID>]
 :00005 [06] %5 = %5.uniq()                       [<INVALID>]
 :00007 [05] %2 = %5.sort()                       [<INVALID>]
+:00009 [06] %5 = literal[36110337]
 :00010 [05] %2 = %2.map( &%5)                    [<INVALID>]
 :00012 [06] %5 = literal[[]]
 :00013 [07] %6 = literal[[]]
 :00014 [07] %3 = %5
 :00015 [07] %4 = %6
 :00016 [06] %5 = literal[36175873]
 :00017 [05] _ = %2.each( &%5)                    [<INVALID>]
 :00019 [06] %5 = literal[36241409]
 :00020 [07] %7 = literal["(?m)"]
 :00021 [09] %8 = literal["@("]
 :00022 [10] %9 = literal["|"]
 :00023 [10] %9 = %2 * %9                         [<INVALID>][<INVALID>]
 :00024 [11] %10 = literal[")\\b"]
 :00025 [07] %6 = concat_regexp(%7; 4)
 :00026 [05] %1 = %1.gsub(%6;1 &%5)               [<INVALID>]
 :00028 [06] %5 = literal["begin"]
 :00029 [07] %6 = 2: i32
 :00030 [08] %7 = literal["\n"]
 :00031 [08] %7 = %3.join(%7;1)                   [<INVALID>]
 :00033 [07] %6 = %0.indent(%6;2)                 [<INVALID>]
 :00035 [08] %7 = 2: i32
 :00036 [09] %8 = %1
 :00037 [08] %7 = %0.indent(%7;2)                 [<INVALID>]
 :00039 [09] %8 = literal["ensure"]
 :00040 [10] %9 = 2: i32
 :00041 [11] %10 = literal["\n"]
 :00042 [11] %10 = %4.join(%10;1)                 [<INVALID>]
 :00044 [10] %9 = %0.indent(%9;2)                 [<INVALID>]
 :00046 [11] %10 = literal["end"]
 :00047 [06] %5 = %0.gen(%5;6)                    [<INVALID>]
 :00049 [05] ret %5
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:10
meta:on_stack:true kind:Ruby mode:method FuncId(539) regs:4 ISeq(RubyFuncInfo { id:539 name:<unnamed> method:(FuncId(527), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = %1.to_s()                       [<INVALID>]
 :00003 [04] %3 = literal["-"]
 :00004 [03] %2 = %2.start_with?(%3;1)            [<INVALID>]
 :00006 [02] ret %2
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:11
meta:on_stack:true kind:Ruby mode:method FuncId(540) regs:4 ISeq(RubyFuncInfo { id:540 name:<unnamed> method:(FuncId(527), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = dynvar(1, %4)
 :00002 [04] %3 = dynvar(1, %5)
 :00003 [02] %2:.[%1:] = %3
 :00004 [02] ret %3
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:12
meta:on_stack:true kind:Ruby mode:method FuncId(541) regs:6 ISeq(RubyFuncInfo { id:541 name:<unnamed> method:(FuncId(527), 1) args: 1 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:1 req:1 opt:0 rest:false block:None stack_offset:6
 :00001 [03] %2 = literal[true]
 :00002 [04] %3 = %1.to_s()                       [<INVALID>]
 :00004 [05] %4 = literal["-"]
 :00005 [04] %3 = %3.start_with?(%4;1)            [<INVALID>]
 :00007 [03] condnotbr %3 =>:00015
+:00008 [04] %3 = %1.to_s()                       [<INVALID>]
 :00010 [05] %4 = literal[1..-1]
 :00011 [04] %3 = %3.[%4]                         [<INVALID>][<INVALID>]
 :00012 [03] %1 = %3.to_sym()                     [<INVALID>]
 :00014 [03] %2 = literal[false]
+:00015 [04] %3 = dynvar(1, %3)
 :00016 [04] %3 = %3.include?(%1;1)               [<INVALID>]
 :00018 [03] condnotbr %3 =>:00020
+:00019 [03] br =>:00026
+:00020 [04] %3 = literal["unknown optimization: `"]
 :00021 [05] %4 = %1
 :00022 [06] %5 = literal["'"]
 :00023 [04] %3 = concat(%3; 3)
 :00024 [03] _ = %0.raise(%3;1)                   [<INVALID>]
+:00026 [04] %3 = dynvar(1, %4)
 :00027 [03] %3:.[%1:] = %2
 :00028 [03] ret %2
------------------------------------
------------------------------------
<block in initialize> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:21
meta:on_stack:true kind:Ruby mode:method FuncId(542) regs:4 ISeq(RubyFuncInfo { id:542 name:<unnamed> method:(FuncId(527), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = literal["@"]
 :00002 [04] %3 = %1
 :00003 [03] %2 = concat(%2; 2)
 :00004 [03] %2 = %2.to_sym()                     [<INVALID>]
 :00006 [04] %3 = dynvar(1, %4)
 :00007 [04] %3 = %3.[%1]                         [<INVALID>][<INVALID>]
 :00008 [03] %2 = %0.instance_variable_set(%2;2)  [<INVALID>]
 :00010 [02] ret %2
------------------------------------
------------------------------------
<block in gen> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:31
meta:on_stack:true kind:Ruby mode:method FuncId(543) regs:4 ISeq(RubyFuncInfo { id:543 name:<unnamed> method:(FuncId(529), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = %1.to_s()                       [<INVALID>]
 :00003 [03] %2 = %2.chomp()                      [<INVALID>]
 :00005 [02] ret %2
------------------------------------
------------------------------------
<block in indent> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:37
meta:on_stack:true kind:Ruby mode:method FuncId(544) regs:3 ISeq(RubyFuncInfo { id:544 name:<unnamed> method:(FuncId(530), 1) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = literal[" "]
 :00002 [03] %2 = dynvar(1, %1)
 :00003 [02] %1 = %1 * %2                         [<INVALID>][<INVALID>]
 :00004 [03] %2 = $1
 :00005 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00006 [01] ret %1
------------------------------------
------------------------------------
<block in parse_method_definitions> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:67
meta:on_stack:true kind:Ruby mode:method FuncId(545) regs:10 ISeq(RubyFuncInfo { id:545 name:<unnamed> method:(FuncId(532), 1) args: 4 non_temp: 4 temp: 5})
[]
+:00000 [05] init_method reg:9 arg:4 req:4 opt:0 rest:false block:None stack_offset:8
 :00001 [06] %5 = %1.size()                       [<INVALID>]
 :00003 [06] %5 = -%5                             [<INVALID>]
 :00004 [06] %5 = %5 - 2: i16                     [<INVALID>][<INVALID>]
 :00005 [07] %6 = %4
 :00006 [05] %4 = %0.indent(%5;2)                 [<INVALID>]
 :00008 [06] %5 = literal[36306945]
 :00009 [07] %6 = literal[/(?m)^( *)when +(.*?) +then +(.*)/]
 :00010 [05] %4 = %4.gsub(%6;1 &%5)               [<INVALID>]
 :00012 [06] %5 = literal[/(?m)\Areturn unless (.*)/]
 :00013 [06] %5 = %4.=~(%5;1)                     [<INVALID>]
 :00015 [05] condnotbr %5 =>:00026
+:00016 [06] %5 = literal["if "]
 :00017 [07] %6 = $1
 :00018 [06] %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00019 [07] %6 = 2: i32
 :00020 [08] %7 = $'
 :00021 [07] %6 = %0.indent(%6;2)                 [<INVALID>]
 :00023 [06] %5 = %5 + %6                         [<INVALID>][<INVALID>]
 :00024 [07] %6 = literal["end\n"]
 :00025 [05] %4 = %5 + %6                         [<INVALID>][<INVALID>]
+:00026 [05] loop_start counter=0 jit-addr=0000000000000000
 :00027 [06] %5 = literal[36372481]
 :00028 [07] %6 = literal[/(?m)^( *)((?!#)\S.*) ((?:if|unless) .*\n)/]
 :00029 [06] %5 = %4.gsub!(%6;1 &%5)              [<INVALID>]
 :00031 [05] condnotbr %5 =>:00033
+:00032 [05] br =>:00026
+:00033 [05] loop_end
+:00034 [06] %5 = dynvar(1, %3)
 :00035 [07] %6 = %2.to_sym()                     [<INVALID>]
 :00037 [08] %7 = const[MethodDef]                [<INVALID>]
 :00038 [08] condnotbr %3 =>:00043
+:00039 [09] %8 = literal[", "]
 :00040 [09] %8 = %3.split(%8;1)                  [<INVALID>]
 :00042 [09] br =>:00044
+:00043 [09] %8 = nil
+:00044 [10] %9 = %4
 :00045 [08] %7 = %7.[](%8;2)                     [<INVALID>]
 :00047 [05] %5:.[%6:] = %7
 :00048 [05] ret %7
------------------------------------
------------------------------------
<block in expand_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:86
meta:on_stack:true kind:Ruby mode:method FuncId(546) regs:8 ISeq(RubyFuncInfo { id:546 name:<unnamed> method:(FuncId(533), 1) args: 0 non_temp: 4 temp: 3})
[]
+:00000 [05] init_method reg:7 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 [06] %5 = $1
 :00002 [07] %6 = $2
 :00003 [08] %7 = $3
 :00004 [08] %1 = %5
 :00005 [08] %2 = %6
 :00006 [08] %3 = %7
 :00007 [06] %5 = dynvar(1, %2)
 :00008 [07] %6 = %2.to_sym()                     [<INVALID>]
 :00010 [05] %4 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00011 [06] %5 = const[MethodDef]                [<INVALID>]
 :00012 [06] %5 = %4.is_a?(%5;1)                  [<INVALID>]
 :00014 [05] condnotbr %5 =>:00017
+:00015 [05] %4 = %4.body()                       [<INVALID>]
+:00017 [05] condnotbr %3 =>:00030
+:00018 [06] %5 = dynvar(1, %2)
 :00019 [07] %6 = %2.to_sym()                     [<INVALID>]
 :00021 [06] %5 = %5.[%6]                         [<INVALID>][<INVALID>]
 :00022 [06] %5 = %5.params()                     [<INVALID>]
 :00024 [07] %6 = literal[36438017]
 :00025 [08] %7 = literal[", "]
 :00026 [08] %7 = %3.split(%7;1)                  [<INVALID>]
 :00028 [05] _ = %5.zip(%7;1 &%6)                 [<INVALID>]
+:00030 [06] %5 = %1.size()                       [<INVALID>]
 :00032 [07] %6 = %4
 :00033 [06] %5 = %0.indent(%5;2)                 [<INVALID>]
 :00035 [05] ret %5
------------------------------------
------------------------------------
<block in expand_inline_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:100
meta:on_stack:true kind:Ruby mode:method FuncId(547) regs:7 ISeq(RubyFuncInfo { id:547 name:<unnamed> method:(FuncId(534), 1) args: 0 non_temp: 2 temp: 4})
[]
+:00000 [03] init_method reg:6 arg:0 req:0 opt:0 rest:false block:None stack_offset:7
 :00001 [03] %1 = $1
 :00002 [04] %3 = literal["("]
 :00003 [05] %4 = dynvar(1, %3)
 :00004 [05] %4 = %4.body()                       [<INVALID>]
 :00006 [05] %4 = %4.chomp()                      [<INVALID>]
 :00008 [06] %5 = literal[/(?m) *#.*/]
 :00009 [07] %6 = literal[""]
 :00010 [05] %4 = %4.gsub(%5;2)                   [<INVALID>]
 :00012 [06] %5 = literal["\n"]
 :00013 [07] %6 = literal["; "]
 :00014 [05] %4 = %4.gsub(%5;2)                   [<INVALID>]
 :00016 [06] %5 = literal[")"]
 :00017 [04] %3 = concat(%3; 3)
 :00018 [04] %2 = %3
 :00019 [03] condnotbr %1 =>:00029
+:00020 [04] %3 = dynvar(1, %3)
 :00021 [04] %3 = %3.params()                     [<INVALID>]
 :00023 [05] %4 = literal[36503553]
 :00024 [06] %5 = literal[", "]
 :00025 [06] %5 = %1.split(%5;1)                  [<INVALID>]
 :00027 [03] _ = %3.zip(%5;1 &%4)                 [<INVALID>]
+:00029 [03] ret %2
------------------------------------
------------------------------------
<block in replace_var> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:114
meta:on_stack:true kind:Ruby mode:method FuncId(548) regs:2 ISeq(RubyFuncInfo { id:548 name:<unnamed> method:(FuncId(535), 1) args: 0 non_temp: 0 temp: 1})
[]
+:00000 [01] init_method reg:1 arg:0 req:0 opt:0 rest:false block:None stack_offset:4
 :00001 [02] %1 = dynvar(1, %3)
 :00002 [01] ret %1
------------------------------------
------------------------------------
<block in replace_cond_var> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:118
meta:on_stack:true kind:Ruby mode:method FuncId(549) regs:3 ISeq(RubyFuncInfo { id:549 name:<unnamed> method:(FuncId(536), 1) args: 0 non_temp: 0 temp: 2})
[]
+:00000 [01] init_method reg:2 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = $1
 :00002 [03] %2 = literal[" "]
 :00003 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00004 [03] %2 = dynvar(1, %3)
 :00005 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00006 [01] ret %1
------------------------------------
------------------------------------
<block in remove_trivial_branches> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:134
meta:on_stack:true kind:Ruby mode:method FuncId(550) regs:4 ISeq(RubyFuncInfo { id:550 name:<unnamed> method:(FuncId(537), 1) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = $2
 :00002 [03] %2 = literal["if"]
 :00003 [02] %1 = %1 == %2                        [<INVALID>][<INVALID>]
 :00004 [03] %2 = $3
 :00005 [04] %3 = literal["true"]
 :00006 [03] %2 = %2 == %3                        [<INVALID>][<INVALID>]
 :00007 [02] _%1 = %1 == %2                       [<INVALID>][<INVALID>]
 :00008 [01] condnotbr _%1 =>:00014
+:00009 [02] %1 = -2: i32
 :00010 [03] %2 = $4
 :00011 [02] %1 = %0.indent(%1;2)                 [<INVALID>]
 :00013 [01] ret %1
+:00014 [02] %1 = $5
 :00015 [01] condnotbr %1 =>:00021
+:00016 [02] %1 = -2: i32
 :00017 [03] %2 = $5
 :00018 [02] %1 = %0.indent(%1;2)                 [<INVALID>]
 :00020 [01] ret %1
+:00021 [02] %1 = literal[""]
 :00022 [01] ret %1
------------------------------------
------------------------------------
<block in localize_instance_variables> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:147
meta:on_stack:true kind:Ruby mode:method FuncId(551) regs:4 ISeq(RubyFuncInfo { id:551 name:<unnamed> method:(FuncId(538), 1) args: 1 non_temp: 1 temp: 2})
[]
+:00000 [02] init_method reg:3 arg:1 req:1 opt:0 rest:false block:None stack_offset:5
 :00001 [03] %2 = %1.to_s()                       [<INVALID>]
 :00003 [04] %3 = literal[1..-1]
 :00004 [03] %2 = %2.[%3]                         [<INVALID>][<INVALID>]
 :00005 [02] ret %2
------------------------------------
------------------------------------
<block in localize_instance_variables> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:150
meta:on_stack:true kind:Ruby mode:method FuncId(552) regs:8 ISeq(RubyFuncInfo { id:552 name:<unnamed> method:(FuncId(538), 1) args: 1 non_temp: 2 temp: 5})
[]
+:00000 [03] init_method reg:7 arg:1 req:1 opt:0 rest:false block:None stack_offset:7
 :00001 [04] %3 = literal["__"]
 :00002 [05] %4 = %1
 :00003 [06] %5 = literal["__"]
 :00004 [04] %3 = concat(%3; 3)
 :00005 [04] %2 = %3
 :00006 [04] %3 = dynvar(1, %3)
 :00007 [05] %4 = %2
 :00008 [06] %5 = literal[" = @"]
 :00009 [07] %6 = %1
 :00010 [05] %4 = concat(%4; 3)
 :00011 [04] %3 = %3.<<(%4;1)                     [<INVALID>]
 :00013 [04] %3 = dynvar(1, %4)
 :00014 [05] %4 = literal["@"]
 :00015 [06] %5 = %1
 :00016 [07] %6 = literal[" = "]
 :00017 [08] %7 = %2
 :00018 [05] %4 = concat(%4; 4)
 :00019 [04] %3 = %3.<<(%4;1)                     [<INVALID>]
 :00021 [03] ret %3
------------------------------------
------------------------------------
<block in localize_instance_variables> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:156
meta:on_stack:true kind:Ruby mode:method FuncId(553) regs:4 ISeq(RubyFuncInfo { id:553 name:<unnamed> method:(FuncId(538), 1) args: 0 non_temp: 0 temp: 3})
[]
+:00000 [01] init_method reg:3 arg:0 req:0 opt:0 rest:false block:None stack_offset:5
 :00001 [02] %1 = literal["__"]
 :00002 [03] %2 = $1
 :00003 [04] %3 = literal["__"]
 :00004 [02] %1 = concat(%1; 3)
 :00005 [01] ret %1
------------------------------------
------------------------------------
<block in parse_method_definitions> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:71
meta:on_stack:true kind:Ruby mode:method FuncId(554) regs:5 ISeq(RubyFuncInfo { id:554 name:<unnamed> method:(FuncId(532), 2) args: 0 non_temp: 0 temp: 4})
[]
+:00000 [01] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = $1
 :00002 [03] %2 = literal["when "]
 :00003 [04] %3 = $2
 :00004 [05] %4 = literal["\n"]
 :00005 [03] %2 = concat(%2; 3)
 :00006 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00007 [03] %2 = $1
 :00008 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00009 [03] %2 = literal["  "]
 :00010 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00011 [03] %2 = $3
 :00012 [02] %1 = %1 + %2                         [<INVALID>][<INVALID>]
 :00013 [01] ret %1
------------------------------------
------------------------------------
<block in parse_method_definitions> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:77
meta:on_stack:true kind:Ruby mode:method FuncId(555) regs:5 ISeq(RubyFuncInfo { id:555 name:<unnamed> method:(FuncId(532), 2) args: 0 non_temp: 0 temp: 4})
[]
+:00000 [01] init_method reg:4 arg:0 req:0 opt:0 rest:false block:None stack_offset:6
 :00001 [02] %1 = $1
 :00002 [02] %1 = %1.size()                       [<INVALID>]
 :00004 [03] %2 = $3
 :00005 [04] %3 = literal["  "]
 :00006 [05] %4 = $2
 :00007 [04] %3 = %3 + %4                         [<INVALID>][<INVALID>]
 :00008 [05] %4 = literal["end"]
 :00009 [03] %2 = %0.gen(%2;3)                    [<INVALID>]
 :00011 [02] %1 = %0.indent(%1;2)                 [<INVALID>]
 :00013 [01] ret %1
------------------------------------
------------------------------------
<block in expand_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:91
meta:on_stack:true kind:Ruby mode:method FuncId(556) regs:6 ISeq(RubyFuncInfo { id:556 name:<unnamed> method:(FuncId(533), 2) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = dynvar(1, %4)
 :00002 [05] %4 = %1
 :00003 [06] %5 = %2
 :00004 [04] %3 = %0.replace_var(%3;3)            [<INVALID>]
 :00006 [03] dynvar(1, %4) = %3
 :00007 [03] ret %3
------------------------------------
------------------------------------
<block in expand_inline_methods> /home/monochrome/optcarrot/lib/optcarrot/opt.rb:104
meta:on_stack:true kind:Ruby mode:method FuncId(557) regs:6 ISeq(RubyFuncInfo { id:557 name:<unnamed> method:(FuncId(534), 2) args: 2 non_temp: 2 temp: 3})
[]
+:00000 [03] init_method reg:5 arg:2 req:2 opt:0 rest:false block:None stack_offset:6
 :00001 [04] %3 = dynvar(1, %2)
 :00002 [05] %4 = %1
 :00003 [06] %5 = %2
 :00004 [04] %3 = %0.replace_var(%3;3)            [<INVALID>]
 :00006 [03] dynvar(1, %2) = %3
 :00007 [03] ret %3
------------------------------------
==> start whole compile: <block in CPU> FuncId(370) self_class:#<Class:CPU> start:[:00000] /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:14
   new_branch_init: :00000->:00000

===gen_merge bb: :00000
===merge_end
    total bytes(0):22088
    total bytes(1):481
<== finished compile.
==> start whole compile: <block in op> FuncId(510) self_class:#<Class:CPU> start:[:00000] /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:958
   new_branch_init: :00000->:00000

===gen_merge bb: :00000
===merge_end
   new_branch: [%6]:00005->:00046
   new_continue:[%6] :00005->:00006

===gen_merge bb: :00006
===merge_end
   new_branch: [%6]:00012->:00046
   new_continue:[%6] :00012->:00013

===gen_merge bb: :00013
===merge_end
   new_branch: [%6]:00031->:00043
   new_continue:[%6] :00031->:00032

===gen_merge bb: :00032
===merge_end
 => deopt

===gen_merge bb: :00038
=== no entry

===gen_merge bb: :00040
=== no entry

===gen_merge bb: :00041
=== no entry

===gen_merge bb: :00043
===merge_end

===gen_merge bb: :00046
  <-:00005:[%6] []
  <-:00012:[%6] [%8:Const(0) ]
  merged_entries: []
  ***write_back :00005->:00046
    src:    []
    target: []
  ***write_back end
  ***write_back :00012->:00046
    src:    [%8:Const(0) ]
    target: []
      wb: Const(0)->%8
  ***write_back end
===merge_end
 => deopt
    total bytes(0):23868
    total bytes(1):1196
<== finished compile.
==> start whole compile: <block in op> FuncId(510) self_class:#<Class:CPU> start:[:00000] /home/monochrome/optcarrot/lib/optcarrot/cpu.rb:958
   new_branch_init: :00000->:00000

===gen_merge bb: :00000
===merge_end
   new_branch: [%6]:00005->:00046
   new_continue:[%6] :00005->:00006

===gen_merge bb: :00006
===merge_end
   new_branch: [%6]:00012->:00046
   new_continue:[%6] :00012->:00013

===gen_merge bb: :00013
===merge_end
   new_branch: [%6]:00031->:00043
   new_continue:[%6] :00031->:00032

===gen_merge bb: :00032
===merge_end
   new_branch: [%6]:00037->:00040
   new_continue:[%6] :00037->:00038

===gen_merge bb: :00038
===merge_end
   new_branch: [%7]:00039->:00041

===gen_merge bb: :00040
===merge_end
   new_continue:[%7] :00040->:00041

===gen_merge bb: :00041
  <-:00039:[%7] [%6:Const(Symbol(592)) ]
  <-:00040:[%7] [%6:Const(Symbol(591)) ]
  merged_entries: []
  ***write_back :00039->:00041
    src:    [%6:Const(Symbol(592)) ]
    target: []
      wb: Const(Symbol(592))->%6
  ***write_back end
  ***write_back :00040->:00041
    src:    [%6:Const(Symbol(591)) ]
    target: []
      wb: Const(Symbol(591))->%6
  ***write_back end
===merge_end
   new_continue:[%7] :00042->:00043

===gen_merge bb: :00043
  <-:00031:[%6] []
thread 'main' panicked at monoruby/src/executor/compiler/jitgen.rs:271:9:
assertion `left == right` failed
  left: %7
 right: %6
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
fatal runtime error: failed to initiate panic, error 5
