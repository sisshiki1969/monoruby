digraph graph_name {
  graph [
    charset = "UTF-8";
    label = "/main",
    labelloc = "t",
    labeljust = "c",
    bgcolor = "#343434",
    fontcolor = white,
    fontsize = 20,
    rankdir = TB,
    margin = 0.2,
    splines = spline,
    nodesep = 0.8,
    ranksep = 1.1
  ];

  node [
    colorscheme = "accent8"
    shape = box,
    style = "solid,filled",
    fontsize = 16,
    fontcolor = 5,
    fontname = "Consolas",
    color = 5,
    fillcolor = 4,
  ];

  edge [
    style = solid,
    fontsize = 14,
    fontcolor = white,
    fontname = "Migu 1M",
    color = white,
    labelfloat = true,
    labeldistance = 2.5,
    labelangle = 70
  ];
  BB3 [
    shape=record
    label="{BB3|:00009 loop_start counter=5 jit-addr=0x0\l|:00010 _%5 = %2 &gt; %4                        [Integer][Integer]\l|:00011 condbr _%5 =&gt;:00024\l}"
  ];
  BB4 [
    shape=record
    label="{BB4|:00012 %5 = literal[method]\l|:00013 %6 = 1: i32\l|:00014 %5 = defined?(method) %6.+\l|:00015 br =&gt;::00017\l}"
  ];
  BB5 [
    shape=record
    label="{BB5|:00000 init_method reg:7 arg:0 req:0 opt:0 rest:false stack_offset:7\l|:00001 %4 = literal[method]\l|:00002 %5 = 1: i32\l|:00003 %4 = defined?(method) %5.+\l|:00004 br =&gt;::00006\l|:00005 %4 = nil\l|:00006 %1 = %4\l|:00007 %2 = 0: i32\l|:00008 %4 = 25: i32\l|:00009 loop_start counter=5 jit-addr=0x0\l|:00010 _%5 = %2 &gt; %4                        [Integer][Integer]\l|:00011 condbr _%5 =&gt;:00024\l|:00012 %5 = literal[method]\l|:00013 %6 = 1: i32\l|:00014 %5 = defined?(method) %6.+\l|:00015 br =&gt;::00017\l|:00016 %5 = nil\l}"
  ];
  BB6 [
    shape=record
    label="{BB6|:00017 %3 = %5\l|:00018 %5 = %1\l|:00019 %6 = %3\l|:00020 _ = %0.__assert(%5;2)                [#&lt;Class:main&gt;]\l|:00022 %2 = %2 + 1: i16                     [Integer][Integer]\l|:00023 br =&gt;::00009\l}"
  ];
  BB7 [
    shape=record
    label="{BB7|:00024 loop_end\l}"
  ];
  BB3 -> BB4 [headport = n, tailport = s];
  BB3 -> BB7 [headport = n, tailport = s];
  BB4 -> BB6 [headport = n, tailport = s];
  BB5 -> BB6 [headport = n, tailport = s];
  BB6 -> BB3 [headport = n, tailport = s];
  BB7 -> BB8 [headport = n, tailport = s];
}
