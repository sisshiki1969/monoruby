def self.run
  begin
    __addr__ = @addr
    __data__ = @data
    ___a__ = @_a
    ___x__ = @_x
    ___y__ = @_y
    ___pc__ = @_pc
    ___sp__ = @_sp
    __fetch__ = @fetch
    __store__ = @store
    __ram__ = @ram
    __opcode__ = @opcode
    clock = @apu.do_clock

    if clock > @clk_frame
      clock = @clk_frame
    end

    if @clk < @clk_nmi
      if clock > @clk_nmi
        clock = @clk_nmi
      end
      if @clk < @clk_irq
        if clock > @clk_irq
          clock = @clk_irq
        end
      else
        @clk_irq = 0xffffffff
        if @jammed
          return
        end
        __ram__[0x0100 + ___sp__] = ___pc__ >> 8
        ___sp__ = (___sp__ - 1) & 0xff
        __ram__[0x0100 + ___sp__] = ___pc__ & 0xff
        ___sp__ = (___sp__ - 1) & 0xff
        __ram__[0x0100 + ___sp__] = flags_pack
        ___sp__ = (___sp__ - 1) & 0xff
        @_p_i = 0x04
        @clk += 84
        addr = IRQ_VECTOR == NMI_VECTOR ? NMI_VECTOR : fetch_irq_isr_vector
        ___pc__ = (__fetch__[addr][addr] + (__fetch__[addr + 1][addr + 1] << 8))
      end
    else
      @clk_nmi = @clk_irq = 0xffffffff
      if @jammed
        return
      end
      __ram__[0x0100 + ___sp__] = ___pc__ >> 8
      ___sp__ = (___sp__ - 1) & 0xff
      __ram__[0x0100 + ___sp__] = ___pc__ & 0xff
      ___sp__ = (___sp__ - 1) & 0xff
      __ram__[0x0100 + ___sp__] = flags_pack
      ___sp__ = (___sp__ - 1) & 0xff
      @_p_i = 0x04
      @clk += 84
      addr = NMI_VECTOR == NMI_VECTOR ? NMI_VECTOR : fetch_irq_isr_vector
      ___pc__ = (__fetch__[addr][addr] + (__fetch__[addr + 1][addr + 1] << 8))
    end
    @clk_target = clock
    begin
      begin
        __opcode__ = (__fetch__[___pc__][___pc__])


        ___pc__ += 1

        case __opcode__
































































































































































































































































        end

        if @ppu_sync
          @ppu.sync(@clk)
        end
      end while @clk < @clk_target
      clock = @apu.do_clock

      if clock > @clk_frame
        clock = @clk_frame
      end

      if @clk < @clk_nmi
        if clock > @clk_nmi
          clock = @clk_nmi
        end
        if @clk < @clk_irq
          if clock > @clk_irq
            clock = @clk_irq
          end
        else
          @clk_irq = 0xffffffff
          if @jammed
            return
          end
          __ram__[0x0100 + ___sp__] = ___pc__ >> 8
          ___sp__ = (___sp__ - 1) & 0xff
          __ram__[0x0100 + ___sp__] = ___pc__ & 0xff
          ___sp__ = (___sp__ - 1) & 0xff
          __ram__[0x0100 + ___sp__] = flags_pack
          ___sp__ = (___sp__ - 1) & 0xff
          @_p_i = 0x04
          @clk += 84
          addr = IRQ_VECTOR == NMI_VECTOR ? NMI_VECTOR : fetch_irq_isr_vector
          ___pc__ = (__fetch__[addr][addr] + (__fetch__[addr + 1][addr + 1] << 8))
        end
      else
        @clk_nmi = @clk_irq = 0xffffffff
        if @jammed
          return
        end
        __ram__[0x0100 + ___sp__] = ___pc__ >> 8
        ___sp__ = (___sp__ - 1) & 0xff
        __ram__[0x0100 + ___sp__] = ___pc__ & 0xff
        ___sp__ = (___sp__ - 1) & 0xff
        __ram__[0x0100 + ___sp__] = flags_pack
        ___sp__ = (___sp__ - 1) & 0xff
        @_p_i = 0x04
        @clk += 84
        addr = NMI_VECTOR == NMI_VECTOR ? NMI_VECTOR : fetch_irq_isr_vector
        ___pc__ = (__fetch__[addr][addr] + (__fetch__[addr + 1][addr + 1] << 8))
      end
      @clk_target = clock
    end while @clk < @clk_frame
  ensure
    @addr = __addr__
    @data = __data__
    @_a = ___a__
    @_x = ___x__
    @_y = ___y__
    @_pc = ___pc__
    @_sp = ___sp__
    @fetch = __fetch__
    @store = __store__
    @ram = __ram__
    @opcode = __opcode__
  end
end
