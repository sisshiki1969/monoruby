==> start whole compile: initialize FuncId(89) self_class:Vec start:[00000] bytecode:0x557861f748a0
<== finished compile. elapsed:9.4µs
offset:Pos(15014) code: 105 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x60
  0000b: cmp    edx,0x3
  0000e: jne    0x3cb2e
  00014: mov    QWORD PTR [r14-0x50],0x4
  0001c: mov    rdi,QWORD PTR [r14-0x30]
  00020: test   rdi,0x7
  00027: jne    0x3cb3d
  0002d: cmp    DWORD PTR [rdi+0x4],0x2b
  00031: jne    0x3cb3d
:00000 init_method reg:5 arg:3 pos:3 req:3 block:0 stack_offset:6
:00001 @x: Vec[IvarId(0)] = %1
  00037: mov    rdi,QWORD PTR [r14-0x30]
  0003b: mov    rax,QWORD PTR [r14-0x38]
  0003f: mov    QWORD PTR [rdi+0x10],rax
:00002 @y: Vec[IvarId(1)] = %2
  00043: mov    rdi,QWORD PTR [r14-0x30]
  00047: mov    rax,QWORD PTR [r14-0x40]
  0004b: mov    QWORD PTR [rdi+0x18],rax
:00003 @z: Vec[IvarId(2)] = %3
  0004f: mov    rdi,QWORD PTR [r14-0x30]
  00053: mov    rax,QWORD PTR [r14-0x48]
  00057: mov    QWORD PTR [rdi+0x20],rax
:00004 %4 = %3
  0005b: mov    rax,QWORD PTR [r14-0x48]
  0005f: mov    QWORD PTR [r14-0x50],rax
:00005 ret %4
  00063: mov    rax,QWORD PTR [r14-0x50]
  00067: leave  
  00068: ret    
==> start whole compile: vdot FuncId(93) self_class:Vec start:[00000] bytecode:0x557861fb69b0
<== finished compile. elapsed:25.7µs
offset:Pos(16876) code: 1092 bytes  data: 24 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x60
  0000b: cmp    edx,0x1
  0000e: jne    0x3c406
  00014: mov    rax,0x4
  0001b: mov    QWORD PTR [r14-0x40],rax
  0001f: mov    QWORD PTR [r14-0x48],rax
  00023: mov    QWORD PTR [r14-0x50],rax
  00027: mov    rdi,QWORD PTR [r14-0x30]
  0002b: test   rdi,0x7
  00032: jne    0x3c415
  00038: cmp    DWORD PTR [rdi+0x4],0x2b
  0003c: jne    0x3c415
:00000 init_method reg:5 arg:1 pos:1 req:1 block:0 stack_offset:6
:00001 %2 = @x: Vec[IvarId(0)]
  00042: mov    rdi,QWORD PTR [r14-0x30]
  00046: mov    rax,QWORD PTR [rdi+0x10]
  0004a: mov    QWORD PTR [r14-0x40],rax
:00002 %3 = %1.call x()                     [Vec]
  0004e: mov    rdi,QWORD PTR [r14-0x38]
  00052: test   rdi,0x7
  00059: jne    0x3c424
  0005f: cmp    DWORD PTR [rdi+0x4],0x2b
  00063: jne    0x3c424
  00069: cmp    DWORD PTR [rip+0xfffffffffffff260],0x26        # 0xfffff2d0
  00070: jne    0x3c424
  00076: mov    esi,DWORD PTR [rip+0x3cc]        # 0x448
  0007c: cmp    esi,0xffffffff
  0007f: je     0x3c433
  00085: cmp    WORD PTR [rdi+0x2],0x3
  0008a: jne    0xa3
  00090: cmp    esi,0x6
  00093: jge    0xa3
  00099: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0009e: jmp    0xaf
  000a3: movabs rax,0x557860b3bf40
  000ad: call   rax
  000af: mov    QWORD PTR [r14-0x48],rax
:00003 
:00004 %2 = %2 * %3                         [Float][Float]
  000b3: mov    rdi,QWORD PTR [r14-0x40]
  000b7: test   rdi,0x1
  000be: jne    0x3c45c
  000c4: test   rdi,0x2
  000cb: je     0x107
  000d1: xorps  xmm2,xmm2
  000d4: movabs rax,0x8000000000000002
  000de: cmp    rdi,rax
  000e1: je     0x119
  000e7: mov    rax,rdi
  000ea: sar    rax,0x3f
  000ee: add    rax,0x2
  000f2: and    rdi,0xfffffffffffffffc
  000f6: or     rdi,rax
  000f9: rol    rdi,0x3d
  000fd: movq   xmm2,rdi
  00102: jmp    0x119
  00107: call   0xffffbe91
  0010c: test   rax,rax
  0010f: je     0x3c45c
  00115: movq   xmm2,xmm0
  00119: mov    rdi,QWORD PTR [r14-0x48]
  0011d: test   rdi,0x1
  00124: jne    0x3c46b
  0012a: test   rdi,0x2
  00131: je     0x16d
  00137: xorps  xmm3,xmm3
  0013a: movabs rax,0x8000000000000002
  00144: cmp    rdi,rax
  00147: je     0x17f
  0014d: mov    rax,rdi
  00150: sar    rax,0x3f
  00154: add    rax,0x2
  00158: and    rdi,0xfffffffffffffffc
  0015c: or     rdi,rax
  0015f: rol    rdi,0x3d
  00163: movq   xmm3,rdi
  00168: jmp    0x17f
  0016d: call   0xffffbe91
  00172: test   rax,rax
  00175: je     0x3c46b
  0017b: movq   xmm3,xmm0
  0017f: mulsd  xmm2,xmm3
:00005 %3 = @y: Vec[IvarId(1)]
  00183: mov    rdi,QWORD PTR [r14-0x30]
  00187: mov    rax,QWORD PTR [rdi+0x18]
  0018b: mov    QWORD PTR [r14-0x48],rax
:00006 %4 = %1.call y()                     [Vec]
  0018f: mov    rdi,QWORD PTR [r14-0x38]
  00193: test   rdi,0x7
  0019a: jne    0x3c47a
  001a0: cmp    DWORD PTR [rdi+0x4],0x2b
  001a4: jne    0x3c47a
  001aa: cmp    DWORD PTR [rip+0xfffffffffffff11f],0x26        # 0xfffff2d0
  001b1: jne    0x3c47a
  001b7: mov    esi,DWORD PTR [rip+0x293]        # 0x450
  001bd: cmp    esi,0xffffffff
  001c0: je     0x3c496
  001c6: cmp    WORD PTR [rdi+0x2],0x3
  001cb: jne    0x1e4
  001d1: cmp    esi,0x6
  001d4: jge    0x1e4
  001da: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001df: jmp    0x202
  001e4: sub    rsp,0x10
  001e8: movq   QWORD PTR [rsp],xmm2
  001ed: movabs rax,0x557860b3bf40
  001f7: call   rax
  001f9: movq   xmm2,QWORD PTR [rsp]
  001fe: add    rsp,0x10
  00202: mov    QWORD PTR [r14-0x50],rax
:00007 
:00008 %3 = %3 * %4                         [Float][Float]
  00206: mov    rdi,QWORD PTR [r14-0x48]
  0020a: test   rdi,0x1
  00211: jne    0x3c4d1
  00217: test   rdi,0x2
  0021e: je     0x25a
  00224: xorps  xmm3,xmm3
  00227: movabs rax,0x8000000000000002
  00231: cmp    rdi,rax
  00234: je     0x26c
  0023a: mov    rax,rdi
  0023d: sar    rax,0x3f
  00241: add    rax,0x2
  00245: and    rdi,0xfffffffffffffffc
  00249: or     rdi,rax
  0024c: rol    rdi,0x3d
  00250: movq   xmm3,rdi
  00255: jmp    0x26c
  0025a: call   0xffffbe91
  0025f: test   rax,rax
  00262: je     0x3c4d1
  00268: movq   xmm3,xmm0
  0026c: mov    rdi,QWORD PTR [r14-0x50]
  00270: test   rdi,0x1
  00277: jne    0x3c4ed
  0027d: test   rdi,0x2
  00284: je     0x2c0
  0028a: xorps  xmm4,xmm4
  0028d: movabs rax,0x8000000000000002
  00297: cmp    rdi,rax
  0029a: je     0x2d2
  002a0: mov    rax,rdi
  002a3: sar    rax,0x3f
  002a7: add    rax,0x2
  002ab: and    rdi,0xfffffffffffffffc
  002af: or     rdi,rax
  002b2: rol    rdi,0x3d
  002b6: movq   xmm4,rdi
  002bb: jmp    0x2d2
  002c0: call   0xffffbe91
  002c5: test   rax,rax
  002c8: je     0x3c4ed
  002ce: movq   xmm4,xmm0
  002d2: mulsd  xmm3,xmm4
:00009 %2 = %2 + %3                         [Float][Float]
  002d6: addsd  xmm2,xmm3
:00010 %3 = @z: Vec[IvarId(2)]
  002da: mov    rdi,QWORD PTR [r14-0x30]
  002de: mov    rax,QWORD PTR [rdi+0x20]
  002e2: mov    QWORD PTR [r14-0x48],rax
:00011 %4 = %1.call z()                     [Vec]
  002e6: mov    rdi,QWORD PTR [r14-0x38]
  002ea: test   rdi,0x7
  002f1: jne    0x3c509
  002f7: cmp    DWORD PTR [rdi+0x4],0x2b
  002fb: jne    0x3c509
  00301: cmp    DWORD PTR [rip+0xffffffffffffefc8],0x26        # 0xfffff2d0
  00308: jne    0x3c509
  0030e: mov    esi,DWORD PTR [rip+0x144]        # 0x458
  00314: cmp    esi,0xffffffff
  00317: je     0x3c525
  0031d: cmp    WORD PTR [rdi+0x2],0x3
  00322: jne    0x33b
  00328: cmp    esi,0x6
  0032b: jge    0x33b
  00331: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00336: jmp    0x359
  0033b: sub    rsp,0x10
  0033f: movq   QWORD PTR [rsp],xmm2
  00344: movabs rax,0x557860b3bf40
  0034e: call   rax
  00350: movq   xmm2,QWORD PTR [rsp]
  00355: add    rsp,0x10
  00359: mov    QWORD PTR [r14-0x50],rax
:00012 
:00013 %3 = %3 * %4                         [Float][Float]
  0035d: mov    rdi,QWORD PTR [r14-0x48]
  00361: test   rdi,0x1
  00368: jne    0x3c560
  0036e: test   rdi,0x2
  00375: je     0x3b1
  0037b: xorps  xmm3,xmm3
  0037e: movabs rax,0x8000000000000002
  00388: cmp    rdi,rax
  0038b: je     0x3c3
  00391: mov    rax,rdi
  00394: sar    rax,0x3f
  00398: add    rax,0x2
  0039c: and    rdi,0xfffffffffffffffc
  003a0: or     rdi,rax
  003a3: rol    rdi,0x3d
  003a7: movq   xmm3,rdi
  003ac: jmp    0x3c3
  003b1: call   0xffffbe91
  003b6: test   rax,rax
  003b9: je     0x3c560
  003bf: movq   xmm3,xmm0
  003c3: mov    rdi,QWORD PTR [r14-0x50]
  003c7: test   rdi,0x1
  003ce: jne    0x3c57c
  003d4: test   rdi,0x2
  003db: je     0x417
  003e1: xorps  xmm4,xmm4
  003e4: movabs rax,0x8000000000000002
  003ee: cmp    rdi,rax
  003f1: je     0x429
  003f7: mov    rax,rdi
  003fa: sar    rax,0x3f
  003fe: add    rax,0x2
  00402: and    rdi,0xfffffffffffffffc
  00406: or     rdi,rax
  00409: rol    rdi,0x3d
  0040d: movq   xmm4,rdi
  00412: jmp    0x429
  00417: call   0xffffbe91
  0041c: test   rax,rax
  0041f: je     0x3c57c
  00425: movq   xmm4,xmm0
  00429: mulsd  xmm3,xmm4
:00014 %2 = %2 + %3                         [Float][Float]
  0042d: addsd  xmm2,xmm3
:00015 ret %2
  00431: movq   xmm0,xmm2
  00435: call   0xffffbfb5
  0043a: mov    QWORD PTR [r14-0x40],rax
  0043e: mov    rax,QWORD PTR [r14-0x40]
  00442: leave  
  00443: ret    
==> start whole compile: intersect FuncId(97) self_class:Sphere start:[00000] bytecode:0x557861f78680
<== finished compile. elapsed:95.4µs
offset:Pos(18134) code: 7478 bytes  data: 108 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xa0
  0000e:    	cmp    edx,0x2
  00011:    	jne    0x3c0ae
  00017: 00 	mov    rax,0x4
  0001e:    	mov    QWORD PTR [r14-0x48],rax
  00022:    	mov    QWORD PTR [r14-0x50],rax
  00026:    	mov    QWORD PTR [r14-0x58],rax
  0002a:    	mov    QWORD PTR [r14-0x60],rax
  0002e:    	mov    QWORD PTR [r14-0x68],rax
  00032:    	mov    QWORD PTR [r14-0x70],rax
  00036:    	mov    QWORD PTR [r14-0x78],rax
  0003a:    	mov    QWORD PTR [r14-0x80],rax
  0003e: ff 	mov    QWORD PTR [r14-0x88],rax
  00045: ff 	mov    QWORD PTR [r14-0x90],rax
  0004c: ff 	mov    QWORD PTR [r14-0x98],rax
  00053:    	mov    rdi,QWORD PTR [r14-0x30]
  00057: 00 	test   rdi,0x7
  0005e:    	jne    0x3c0bd
  00064:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00068:    	jne    0x3c0bd
:00000 init_method reg:14 arg:2 pos:2 req:2 block:0 stack_offset:10
:00001 %9 = %1.call org()                   [Ray]
  0006e:    	mov    rdi,QWORD PTR [r14-0x38]
  00072: 00 	test   rdi,0x7
  00079:    	jne    0x3c0cc
  0007f:    	cmp    DWORD PTR [rdi+0x4],0x31
  00083:    	jne    0x3c0cc
  00089: 26 	cmp    DWORD PTR [rip+0xffffffffffffed56],0x26        # 0xffffede6
  00090:    	jne    0x3c0cc
  00096:    	mov    esi,DWORD PTR [rip+0x1c9e]        # 0x1d3a
  0009c:    	cmp    esi,0xffffffff
  0009f:    	je     0x3c0db
  000a5:    	cmp    WORD PTR [rdi+0x2],0x3
  000aa:    	jne    0xc3
  000b0:    	cmp    esi,0x6
  000b3:    	jge    0xc3
  000b9:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000be:    	jmp    0xcf
  000c3: 78 	movabs rax,0x557860b3bf40
  000cd:    	call   rax
  000cf:    	mov    QWORD PTR [r14-0x78],rax
:00002 
:00003 %10 = @center: Sphere[IvarId(0)]
  000d3:    	mov    rdi,QWORD PTR [r14-0x30]
  000d7:    	mov    rax,QWORD PTR [rdi+0x10]
  000db:    	mov    QWORD PTR [r14-0x80],rax
:00004 %3 = %9.call vsub(%10; 1)            [Vec]
  000df:    	mov    rdi,QWORD PTR [r14-0x78]
  000e3: 00 	test   rdi,0x7
  000ea:    	jne    0x3c104
  000f0:    	cmp    DWORD PTR [rdi+0x4],0x2b
  000f4:    	jne    0x3c104
  000fa: 26 	cmp    DWORD PTR [rip+0xffffffffffffece5],0x26        # 0xffffede6
  00101:    	jne    0x3c104
  00107: 00 	cmp    DWORD PTR [rip+0xffffffffffffecdc],0x0        # 0xffffedea
  0010e:    	je     0x126
  00114:    	mov    rdi,r12
  00117:    	mov    rsi,QWORD PTR [rbx]
  0011a: 78 	movabs rax,0x557860afd140
  00124:    	call   rax
  00126: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0012f:    	mov    rax,QWORD PTR [r14-0x78]
  00133:    	mov    QWORD PTR [rsp-0x40],rax
  00138: 00 	mov    rdi,0x1
  0013f:    	mov    rax,QWORD PTR [r14-0x80]
  00143:    	mov    QWORD PTR [rsp-0x48],rax
  00148: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00151: 07 	movabs rax,0x70000005b
  0015b:    	mov    QWORD PTR [rsp-0x30],rax
  00160: 78 	movabs r13,0x557861ff1450
  0016a:    	mov    rsi,QWORD PTR [rbx]
  0016d:    	mov    QWORD PTR [rsp-0x18],rsi
  00172:    	lea    rsi,[rsp-0x18]
  00177:    	mov    QWORD PTR [rbx],rsi
  0017a:    	lea    r14,[rsp-0x10]
  0017f:    	mov    QWORD PTR [rsp-0x20],r14
  00184:    	call   0xfffffa34
  00189:    	lea    r14,[rbp-0x8]
  0018d:    	mov    QWORD PTR [rbx],r14
  00190:    	mov    r14,QWORD PTR [rbp-0x10]
  00194: 78 	movabs r13,0x557861f786e0
  0019e:    	test   rax,rax
  001a1:    	je     0xffffb94e
  001a7:    	mov    QWORD PTR [r14-0x48],rax
:00005 
:00006 %9 = %1.call dir()                   [Ray]
  001ab:    	mov    rdi,QWORD PTR [r14-0x38]
  001af: 00 	test   rdi,0x7
  001b6:    	jne    0x3c113
  001bc:    	cmp    DWORD PTR [rdi+0x4],0x31
  001c0:    	jne    0x3c113
  001c6: 26 	cmp    DWORD PTR [rip+0xffffffffffffec19],0x26        # 0xffffede6
  001cd:    	jne    0x3c113
  001d3:    	mov    esi,DWORD PTR [rip+0x1b69]        # 0x1d42
  001d9:    	cmp    esi,0xffffffff
  001dc:    	je     0x3c122
  001e2:    	cmp    WORD PTR [rdi+0x2],0x3
  001e7:    	jne    0x200
  001ed:    	cmp    esi,0x6
  001f0:    	jge    0x200
  001f6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001fb:    	jmp    0x20c
  00200: 78 	movabs rax,0x557860b3bf40
  0020a:    	call   rax
  0020c:    	mov    QWORD PTR [r14-0x78],rax
:00007 
:00008 %4 = %3.call vdot(%9; 1)             [Vec]
  00210:    	mov    rdi,QWORD PTR [r14-0x48]
  00214: 00 	test   rdi,0x7
  0021b:    	jne    0x3c14b
  00221:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00225:    	jne    0x3c14b
  0022b: 26 	cmp    DWORD PTR [rip+0xffffffffffffebb4],0x26        # 0xffffede6
  00232:    	jne    0x3c14b
  00238: 00 	cmp    DWORD PTR [rip+0xffffffffffffebab],0x0        # 0xffffedea
  0023f:    	je     0x257
  00245:    	mov    rdi,r12
  00248:    	mov    rsi,QWORD PTR [rbx]
  0024b: 78 	movabs rax,0x557860afd140
  00255:    	call   rax
  00257: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00260:    	mov    rax,QWORD PTR [r14-0x48]
  00264:    	mov    QWORD PTR [rsp-0x40],rax
  00269: 00 	mov    rdi,0x1
  00270:    	mov    rax,QWORD PTR [r14-0x78]
  00274:    	mov    QWORD PTR [rsp-0x48],rax
  00279: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00282: 05 	movabs rax,0x100050000005d
  0028c:    	mov    QWORD PTR [rsp-0x30],rax
  00291: 78 	movabs r13,0x557861fb69b0
  0029b:    	mov    rsi,QWORD PTR [rbx]
  0029e:    	mov    QWORD PTR [rsp-0x18],rsi
  002a3:    	lea    rsi,[rsp-0x18]
  002a8:    	mov    QWORD PTR [rbx],rsi
  002ab:    	lea    r14,[rsp-0x10]
  002b0:    	mov    QWORD PTR [rsp-0x20],r14
  002b5:    	call   0xfffffac2
  002ba:    	lea    r14,[rbp-0x8]
  002be:    	mov    QWORD PTR [rbx],r14
  002c1:    	mov    r14,QWORD PTR [rbp-0x10]
  002c5: 78 	movabs r13,0x557861f78720
  002cf:    	test   rax,rax
  002d2:    	je     0xffffb94e
  002d8:    	mov    QWORD PTR [r14-0x50],rax
:00009 
:00010 %9 = %3
  002dc:    	mov    rax,QWORD PTR [r14-0x48]
  002e0:    	mov    QWORD PTR [r14-0x78],rax
:00011 %9 = %3.call vdot(%9; 1)             [Vec]
  002e4:    	mov    rdi,QWORD PTR [r14-0x48]
  002e8: 00 	test   rdi,0x7
  002ef:    	jne    0x3c15a
  002f5:    	cmp    DWORD PTR [rdi+0x4],0x2b
  002f9:    	jne    0x3c15a
  002ff: 26 	cmp    DWORD PTR [rip+0xffffffffffffeae0],0x26        # 0xffffede6
  00306:    	jne    0x3c15a
  0030c: 00 	cmp    DWORD PTR [rip+0xffffffffffffead7],0x0        # 0xffffedea
  00313:    	je     0x32b
  00319:    	mov    rdi,r12
  0031c:    	mov    rsi,QWORD PTR [rbx]
  0031f: 78 	movabs rax,0x557860afd140
  00329:    	call   rax
  0032b: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00334:    	mov    rax,QWORD PTR [r14-0x48]
  00338:    	mov    QWORD PTR [rsp-0x40],rax
  0033d: 00 	mov    rdi,0x1
  00344:    	mov    rax,QWORD PTR [r14-0x78]
  00348:    	mov    QWORD PTR [rsp-0x48],rax
  0034d: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00356: 05 	movabs rax,0x100050000005d
  00360:    	mov    QWORD PTR [rsp-0x30],rax
  00365: 78 	movabs r13,0x557861fb69b0
  0036f:    	mov    rsi,QWORD PTR [rbx]
  00372:    	mov    QWORD PTR [rsp-0x18],rsi
  00377:    	lea    rsi,[rsp-0x18]
  0037c:    	mov    QWORD PTR [rbx],rsi
  0037f:    	lea    r14,[rsp-0x10]
  00384:    	mov    QWORD PTR [rsp-0x20],r14
  00389:    	call   0xfffffac2
  0038e:    	lea    r14,[rbp-0x8]
  00392:    	mov    QWORD PTR [rbx],r14
  00395:    	mov    r14,QWORD PTR [rbp-0x10]
  00399: 78 	movabs r13,0x557861f78750
  003a3:    	test   rax,rax
  003a6:    	je     0xffffb94e
  003ac:    	mov    QWORD PTR [r14-0x78],rax
:00012 
:00013 %10 = @radius: Sphere[IvarId(1)]
  003b0:    	mov    rdi,QWORD PTR [r14-0x30]
  003b4:    	mov    rax,QWORD PTR [rdi+0x18]
  003b8:    	mov    QWORD PTR [r14-0x80],rax
:00014 %11 = @radius: Sphere[IvarId(1)]
  003bc:    	mov    rdi,QWORD PTR [r14-0x30]
  003c0:    	mov    rax,QWORD PTR [rdi+0x18]
  003c4: ff 	mov    QWORD PTR [r14-0x88],rax
:00015 %10 = %10 * %11                      [Float][Float]
  003cb:    	mov    rdi,QWORD PTR [r14-0x80]
  003cf: 00 	test   rdi,0x1
  003d6:    	jne    0x3c169
  003dc: 00 	test   rdi,0x2
  003e3:    	je     0x41f
  003e9:    	xorps  xmm2,xmm2
  003ec: 00 	movabs rax,0x8000000000000002
  003f6:    	cmp    rdi,rax
  003f9:    	je     0x431
  003ff:    	mov    rax,rdi
  00402:    	sar    rax,0x3f
  00406:    	add    rax,0x2
  0040a:    	and    rdi,0xfffffffffffffffc
  0040e:    	or     rdi,rax
  00411:    	rol    rdi,0x3d
  00415:    	movq   xmm2,rdi
  0041a:    	jmp    0x431
  0041f:    	call   0xffffb9a7
  00424:    	test   rax,rax
  00427:    	je     0x3c169
  0042d:    	movq   xmm2,xmm0
  00431: ff 	mov    rdi,QWORD PTR [r14-0x88]
  00438: 00 	test   rdi,0x1
  0043f:    	jne    0x3c178
  00445: 00 	test   rdi,0x2
  0044c:    	je     0x488
  00452:    	xorps  xmm3,xmm3
  00455: 00 	movabs rax,0x8000000000000002
  0045f:    	cmp    rdi,rax
  00462:    	je     0x49a
  00468:    	mov    rax,rdi
  0046b:    	sar    rax,0x3f
  0046f:    	add    rax,0x2
  00473:    	and    rdi,0xfffffffffffffffc
  00477:    	or     rdi,rax
  0047a:    	rol    rdi,0x3d
  0047e:    	movq   xmm3,rdi
  00483:    	jmp    0x49a
  00488:    	call   0xffffb9a7
  0048d:    	test   rax,rax
  00490:    	je     0x3c178
  00496:    	movq   xmm3,xmm0
  0049a:    	mulsd  xmm2,xmm3
:00016 %5 = %9 - %10                        [Float][Float]
  0049e:    	mov    rdi,QWORD PTR [r14-0x78]
  004a2: 00 	test   rdi,0x1
  004a9:    	jne    0x3c187
  004af: 00 	test   rdi,0x2
  004b6:    	je     0x4f2
  004bc:    	xorps  xmm4,xmm4
  004bf: 00 	movabs rax,0x8000000000000002
  004c9:    	cmp    rdi,rax
  004cc:    	je     0x504
  004d2:    	mov    rax,rdi
  004d5:    	sar    rax,0x3f
  004d9:    	add    rax,0x2
  004dd:    	and    rdi,0xfffffffffffffffc
  004e1:    	or     rdi,rax
  004e4:    	rol    rdi,0x3d
  004e8:    	movq   xmm4,rdi
  004ed:    	jmp    0x504
  004f2:    	call   0xffffb9a7
  004f7:    	test   rax,rax
  004fa:    	je     0x3c187
  00500:    	movq   xmm4,xmm0
  00504:    	movq   xmm5,xmm4
  00508:    	subsd  xmm5,xmm2
:00017 %9 = %4 * %4                         [Float][Float]
  0050c:    	mov    rdi,QWORD PTR [r14-0x50]
  00510: 00 	test   rdi,0x1
  00517:    	jne    0x3c1a3
  0051d: 00 	test   rdi,0x2
  00524:    	je     0x560
  0052a:    	xorps  xmm6,xmm6
  0052d: 00 	movabs rax,0x8000000000000002
  00537:    	cmp    rdi,rax
  0053a:    	je     0x572
  00540:    	mov    rax,rdi
  00543:    	sar    rax,0x3f
  00547:    	add    rax,0x2
  0054b:    	and    rdi,0xfffffffffffffffc
  0054f:    	or     rdi,rax
  00552:    	rol    rdi,0x3d
  00556:    	movq   xmm6,rdi
  0055b:    	jmp    0x572
  00560:    	call   0xffffb9a7
  00565:    	test   rax,rax
  00568:    	je     0x3c1a3
  0056e:    	movq   xmm6,xmm0
  00572:    	movq   xmm4,xmm6
  00576:    	mulsd  xmm4,xmm6
:00018 %6 = %9 - %5                         [Float][Float]
  0057a:    	movq   xmm7,xmm4
  0057e:    	subsd  xmm7,xmm5
:00019 %9 = literal[0.0]
  00582: 00 	movq   xmm4,QWORD PTR [rip+0x17c0]        # 0x1d4a
  0058a: 00 	movabs rax,0x8000000000000002
  00594:    	mov    QWORD PTR [r14-0x78],rax
:00020 _%9 = %6 > %9                        [Float][Float]
:00021 condnotbr _%9 =>:00087
  00598:    	ucomisd xmm7,xmm4
  0059c:    	jbe    0x3cb31
:00022 %9 = %4
:00023 %9 = neg %9                          [<INVALID>]
  005a2: 00 	cmp    DWORD PTR [rip+0x17a9],0x0        # 0x1d52
  005a9:    	jl     0x3c1cc
  005af:    	je     0x3c20f
  005b5: 01 	sub    DWORD PTR [rip+0x1796],0x1        # 0x1d52
  005bc:    	xor    rdi,rdi
  005bf:    	jmp    0x3c1cc
  005c4:    	movq   xmm0,xmm6
  005c8:    	call   0xffffbacb
  005cd:    	mov    QWORD PTR [r14-0x78],rax
  005d1:    	sub    rsp,0x30
  005d5:    	movq   QWORD PTR [rsp],xmm2
  005da:    	movq   QWORD PTR [rsp+0x8],xmm3
  005e0:    	movq   QWORD PTR [rsp+0x10],xmm5
  005e6:    	movq   QWORD PTR [rsp+0x18],xmm6
  005ec:    	movq   QWORD PTR [rsp+0x20],xmm7
  005f2:    	mov    rdi,QWORD PTR [r14-0x78]
  005f6:    	mov    rdx,rdi
  005f9:    	mov    rdi,rbx
  005fc:    	mov    rsi,r12
  005ff: 78 	movabs rax,0x557860aa7750
  00609:    	call   rax
  0060b:    	movq   xmm2,QWORD PTR [rsp]
  00610:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00616:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0061c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00622:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00628:    	add    rsp,0x30
  0062c: 78 	movabs r13,0x557861f78800
  00636:    	test   rax,rax
  00639:    	je     0xffffb94e
  0063f:    	mov    QWORD PTR [r14-0x78],rax
:00024 %10 = const[Math]                    [<INVALID>]
  00643: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffe7b0]        # 0xffffedfa
  0064a: 00 	cmp    rax,QWORD PTR [rip+0x1719]        # 0x1d6a
  00651:    	jne    0x3c22b
  00657: 00 	mov    rax,QWORD PTR [rip+0x16fc]        # 0x1d5a
  0065e:    	mov    QWORD PTR [r14-0x80],rax
:00025 %11 = %6
:00026 %10 = %10.call sqrt(%11; 1)          [<INVALID>]
  00662:    	movq   xmm0,xmm7
  00666:    	call   0xffffbacb
  0066b: ff 	mov    QWORD PTR [r14-0x88],rax
  00672:    	sub    rsp,0x20
  00676:    	movq   QWORD PTR [rsp],xmm5
  0067b:    	movq   QWORD PTR [rsp+0x8],xmm6
  00681:    	movq   QWORD PTR [rsp+0x10],xmm7
  00687:    	mov    rdi,QWORD PTR [r14-0x80]
  0068b: 78 	movabs rax,0x557860aa2e20
  00695:    	call   rax
  00697:    	mov    r15d,eax
  0069a: 78 	movabs r13,0x557861f78830
  006a4:    	cmp    QWORD PTR [r13+0x8],0x0
  006a9:    	je     0x3c2a7
  006af:    	cmp    r15d,DWORD PTR [r13-0x8]
  006b3:    	jne    0x3c2a7
  006b9:    	mov    eax,DWORD PTR [rip+0xffffffffffffe727]        # 0xffffede6
  006bf:    	cmp    DWORD PTR [r13-0x4],eax
  006c3:    	jne    0x3c2a7
  006c9: 00 	mov    QWORD PTR [rsp-0x28],0x0
  006d2:    	mov    rax,QWORD PTR [r14-0x80]
  006d6:    	mov    QWORD PTR [rsp-0x40],rax
  006db: 00 	mov    rdi,0x1
  006e2: ff 	mov    rax,QWORD PTR [r14-0x88]
  006e9:    	mov    QWORD PTR [rsp-0x48],rax
  006ee: 00 	mov    QWORD PTR [rsp-0x38],0x0
  006f7:    	mov    r13,QWORD PTR [r13+0x8]
  006fb:    	mov    rax,QWORD PTR [r13+0x8]
  006ff:    	mov    QWORD PTR [rsp-0x30],rax
  00704:    	mov    rax,QWORD PTR [r13+0x0]
  00708:    	mov    r13,QWORD PTR [r13+0x10]
  0070c:    	mov    rsi,QWORD PTR [rbx]
  0070f:    	mov    QWORD PTR [rsp-0x18],rsi
  00714:    	lea    rsi,[rsp-0x18]
  00719:    	mov    QWORD PTR [rbx],rsi
  0071c:    	lea    r14,[rsp-0x10]
  00721:    	mov    QWORD PTR [rsp-0x20],r14
  00726:    	call   rax
  00728:    	lea    r14,[rbp-0x8]
  0072c:    	mov    QWORD PTR [rbx],r14
  0072f:    	mov    r14,QWORD PTR [rbp-0x10]
  00733:    	movq   xmm5,QWORD PTR [rsp]
  00738:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0073e:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00744:    	add    rsp,0x20
  00748:    	test   rax,rax
  0074b:    	je     0x3c2e8
  00751:    	mov    QWORD PTR [r14-0x80],rax
:00027 
:00028 %7 = %9 - %10                        [<INVALID>][<INVALID>]
  00755:    	mov    rdi,QWORD PTR [r14-0x78]
  00759:    	mov    rsi,QWORD PTR [r14-0x80]
  0075d:    	sub    rsp,0x20
  00761:    	movq   QWORD PTR [rsp],xmm5
  00766:    	movq   QWORD PTR [rsp+0x8],xmm6
  0076c:    	movq   QWORD PTR [rsp+0x10],xmm7
  00772:    	mov    rdx,rdi
  00775:    	mov    rcx,rsi
  00778:    	mov    rdi,rbx
  0077b:    	mov    rsi,r12
  0077e: 78 	movabs rax,0x557860aa97a0
  00788:    	call   rax
  0078a:    	movq   xmm5,QWORD PTR [rsp]
  0078f:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00795:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0079b:    	add    rsp,0x20
  0079f: 78 	movabs r13,0x557861f78850
  007a9:    	test   rax,rax
  007ac:    	je     0xffffb94e
  007b2:    	mov    QWORD PTR [r14-0x68],rax
:00029 %9 = literal[0.0]
  007b6: 00 	movq   xmm2,QWORD PTR [rip+0x15bc]        # 0x1d7a
  007be: 00 	movabs rax,0x8000000000000002
  007c8:    	mov    QWORD PTR [r14-0x78],rax
:00030 _%9 = %7 > %9                        [<INVALID>][<INVALID>]
:00031 condnotbr _%9 =>:00086
  007cc:    	mov    rdi,QWORD PTR [r14-0x68]
  007d0:    	mov    rsi,QWORD PTR [r14-0x78]
  007d4: 00 	test   rdi,0x1
  007db:    	je     0x3c2f7
  007e1: 00 	test   rsi,0x1
  007e8:    	je     0x3c2f7
  007ee:    	cmp    rdi,rsi
  007f1:    	jle    0x3ca98
:00032 %9 = %2.call t()                     [<INVALID>]
  007f7:    	sub    rsp,0x20
  007fb:    	movq   QWORD PTR [rsp],xmm5
  00800:    	movq   QWORD PTR [rsp+0x8],xmm6
  00806:    	movq   QWORD PTR [rsp+0x10],xmm7
  0080c:    	mov    rdi,QWORD PTR [r14-0x40]
  00810: 78 	movabs rax,0x557860aa2e20
  0081a:    	call   rax
  0081c:    	mov    r15d,eax
  0081f: 78 	movabs r13,0x557861f78890
  00829:    	cmp    QWORD PTR [r13+0x8],0x0
  0082e:    	je     0x3c340
  00834:    	cmp    r15d,DWORD PTR [r13-0x8]
  00838:    	jne    0x3c340
  0083e:    	mov    eax,DWORD PTR [rip+0xffffffffffffe5a2]        # 0xffffede6
  00844:    	cmp    DWORD PTR [r13-0x4],eax
  00848:    	jne    0x3c340
  0084e: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00857:    	mov    rax,QWORD PTR [r14-0x40]
  0085b:    	mov    QWORD PTR [rsp-0x40],rax
  00860: 00 	mov    rdi,0x0
  00867: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00870:    	mov    r13,QWORD PTR [r13+0x8]
  00874:    	mov    rax,QWORD PTR [r13+0x8]
  00878:    	mov    QWORD PTR [rsp-0x30],rax
  0087d:    	mov    rax,QWORD PTR [r13+0x0]
  00881:    	mov    r13,QWORD PTR [r13+0x10]
  00885:    	mov    rsi,QWORD PTR [rbx]
  00888:    	mov    QWORD PTR [rsp-0x18],rsi
  0088d:    	lea    rsi,[rsp-0x18]
  00892:    	mov    QWORD PTR [rbx],rsi
  00895:    	lea    r14,[rsp-0x10]
  0089a:    	mov    QWORD PTR [rsp-0x20],r14
  0089f:    	call   rax
  008a1:    	lea    r14,[rbp-0x8]
  008a5:    	mov    QWORD PTR [rbx],r14
  008a8:    	mov    r14,QWORD PTR [rbp-0x10]
  008ac:    	movq   xmm5,QWORD PTR [rsp]
  008b1:    	movq   xmm6,QWORD PTR [rsp+0x8]
  008b7:    	movq   xmm7,QWORD PTR [rsp+0x10]
  008bd:    	add    rsp,0x20
  008c1:    	test   rax,rax
  008c4:    	je     0x3c381
  008ca:    	mov    QWORD PTR [r14-0x78],rax
:00033 
:00034 _%9 = %7 < %9                        [<INVALID>][<INVALID>]
:00035 condnotbr _%9 =>:00086
  008ce:    	mov    rdi,QWORD PTR [r14-0x68]
  008d2:    	mov    rsi,QWORD PTR [r14-0x78]
  008d6: 00 	test   rdi,0x1
  008dd:    	je     0x3c390
  008e3: 00 	test   rsi,0x1
  008ea:    	je     0x3c390
  008f0:    	cmp    rdi,rsi
  008f3:    	jge    0x3cacb
:00036 _ = %2.call t=(%7; 1)                [<INVALID>]
  008f9:    	sub    rsp,0x20
  008fd:    	movq   QWORD PTR [rsp],xmm5
  00902:    	movq   QWORD PTR [rsp+0x8],xmm6
  00908:    	movq   QWORD PTR [rsp+0x10],xmm7
  0090e:    	mov    rdi,QWORD PTR [r14-0x40]
  00912: 78 	movabs rax,0x557860aa2e20
  0091c:    	call   rax
  0091e:    	mov    r15d,eax
  00921: 78 	movabs r13,0x557861f788d0
  0092b:    	cmp    QWORD PTR [r13+0x8],0x0
  00930:    	je     0x3c3d9
  00936:    	cmp    r15d,DWORD PTR [r13-0x8]
  0093a:    	jne    0x3c3d9
  00940:    	mov    eax,DWORD PTR [rip+0xffffffffffffe4a0]        # 0xffffede6
  00946:    	cmp    DWORD PTR [r13-0x4],eax
  0094a:    	jne    0x3c3d9
  00950: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00959:    	mov    rax,QWORD PTR [r14-0x40]
  0095d:    	mov    QWORD PTR [rsp-0x40],rax
  00962: 00 	mov    rdi,0x1
  00969:    	mov    rax,QWORD PTR [r14-0x68]
  0096d:    	mov    QWORD PTR [rsp-0x48],rax
  00972: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0097b:    	mov    r13,QWORD PTR [r13+0x8]
  0097f:    	mov    rax,QWORD PTR [r13+0x8]
  00983:    	mov    QWORD PTR [rsp-0x30],rax
  00988:    	mov    rax,QWORD PTR [r13+0x0]
  0098c:    	mov    r13,QWORD PTR [r13+0x10]
  00990:    	mov    rsi,QWORD PTR [rbx]
  00993:    	mov    QWORD PTR [rsp-0x18],rsi
  00998:    	lea    rsi,[rsp-0x18]
  0099d:    	mov    QWORD PTR [rbx],rsi
  009a0:    	lea    r14,[rsp-0x10]
  009a5:    	mov    QWORD PTR [rsp-0x20],r14
  009aa:    	call   rax
  009ac:    	lea    r14,[rbp-0x8]
  009b0:    	mov    QWORD PTR [rbx],r14
  009b3:    	mov    r14,QWORD PTR [rbp-0x10]
  009b7:    	movq   xmm5,QWORD PTR [rsp]
  009bc:    	movq   xmm6,QWORD PTR [rsp+0x8]
  009c2:    	movq   xmm7,QWORD PTR [rsp+0x10]
  009c8:    	add    rsp,0x20
  009cc:    	test   rax,rax
  009cf:    	je     0x3c41a
:00037 
:00038 %9 = literal[true]
  009d5: 00 	mov    rax,0x1c
  009dc:    	mov    QWORD PTR [r14-0x78],rax
:00039 _ = %2.call hit=(%9; 1)              [<INVALID>]
  009e0:    	sub    rsp,0x20
  009e4:    	movq   QWORD PTR [rsp],xmm5
  009e9:    	movq   QWORD PTR [rsp+0x8],xmm6
  009ef:    	movq   QWORD PTR [rsp+0x10],xmm7
  009f5:    	mov    rdi,QWORD PTR [r14-0x40]
  009f9: 78 	movabs rax,0x557860aa2e20
  00a03:    	call   rax
  00a05:    	mov    r15d,eax
  00a08: 78 	movabs r13,0x557861f78900
  00a12:    	cmp    QWORD PTR [r13+0x8],0x0
  00a17:    	je     0x3c429
  00a1d:    	cmp    r15d,DWORD PTR [r13-0x8]
  00a21:    	jne    0x3c429
  00a27:    	mov    eax,DWORD PTR [rip+0xffffffffffffe3b9]        # 0xffffede6
  00a2d:    	cmp    DWORD PTR [r13-0x4],eax
  00a31:    	jne    0x3c429
  00a37: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00a40:    	mov    rax,QWORD PTR [r14-0x40]
  00a44:    	mov    QWORD PTR [rsp-0x40],rax
  00a49: 00 	mov    rdi,0x1
  00a50:    	mov    rax,QWORD PTR [r14-0x78]
  00a54:    	mov    QWORD PTR [rsp-0x48],rax
  00a59: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00a62:    	mov    r13,QWORD PTR [r13+0x8]
  00a66:    	mov    rax,QWORD PTR [r13+0x8]
  00a6a:    	mov    QWORD PTR [rsp-0x30],rax
  00a6f:    	mov    rax,QWORD PTR [r13+0x0]
  00a73:    	mov    r13,QWORD PTR [r13+0x10]
  00a77:    	mov    rsi,QWORD PTR [rbx]
  00a7a:    	mov    QWORD PTR [rsp-0x18],rsi
  00a7f:    	lea    rsi,[rsp-0x18]
  00a84:    	mov    QWORD PTR [rbx],rsi
  00a87:    	lea    r14,[rsp-0x10]
  00a8c:    	mov    QWORD PTR [rsp-0x20],r14
  00a91:    	call   rax
  00a93:    	lea    r14,[rbp-0x8]
  00a97:    	mov    QWORD PTR [rbx],r14
  00a9a:    	mov    r14,QWORD PTR [rbp-0x10]
  00a9e:    	movq   xmm5,QWORD PTR [rsp]
  00aa3:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00aa9:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00aaf:    	add    rsp,0x20
  00ab3:    	test   rax,rax
  00ab6:    	je     0x3c46a
:00040 
:00041 %9 = const[Vec]                      [<INVALID>]
  00abc: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffe337]        # 0xffffedfa
  00ac3: 00 	cmp    rax,QWORD PTR [rip+0x12d0]        # 0x1d9a
  00aca:    	jne    0x3c479
  00ad0: 00 	mov    rax,QWORD PTR [rip+0x12b3]        # 0x1d8a
  00ad7:    	mov    QWORD PTR [r14-0x78],rax
:00042 %10 = %1.call org()                  [<INVALID>]
  00adb:    	sub    rsp,0x20
  00adf:    	movq   QWORD PTR [rsp],xmm5
  00ae4:    	movq   QWORD PTR [rsp+0x8],xmm6
  00aea:    	movq   QWORD PTR [rsp+0x10],xmm7
  00af0:    	mov    rdi,QWORD PTR [r14-0x38]
  00af4: 78 	movabs rax,0x557860aa2e20
  00afe:    	call   rax
  00b00:    	mov    r15d,eax
  00b03: 78 	movabs r13,0x557861f78930
  00b0d:    	cmp    QWORD PTR [r13+0x8],0x0
  00b12:    	je     0x3c4e9
  00b18:    	cmp    r15d,DWORD PTR [r13-0x8]
  00b1c:    	jne    0x3c4e9
  00b22:    	mov    eax,DWORD PTR [rip+0xffffffffffffe2be]        # 0xffffede6
  00b28:    	cmp    DWORD PTR [r13-0x4],eax
  00b2c:    	jne    0x3c4e9
  00b32: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00b3b:    	mov    rax,QWORD PTR [r14-0x38]
  00b3f:    	mov    QWORD PTR [rsp-0x40],rax
  00b44: 00 	mov    rdi,0x0
  00b4b: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00b54:    	mov    r13,QWORD PTR [r13+0x8]
  00b58:    	mov    rax,QWORD PTR [r13+0x8]
  00b5c:    	mov    QWORD PTR [rsp-0x30],rax
  00b61:    	mov    rax,QWORD PTR [r13+0x0]
  00b65:    	mov    r13,QWORD PTR [r13+0x10]
  00b69:    	mov    rsi,QWORD PTR [rbx]
  00b6c:    	mov    QWORD PTR [rsp-0x18],rsi
  00b71:    	lea    rsi,[rsp-0x18]
  00b76:    	mov    QWORD PTR [rbx],rsi
  00b79:    	lea    r14,[rsp-0x10]
  00b7e:    	mov    QWORD PTR [rsp-0x20],r14
  00b83:    	call   rax
  00b85:    	lea    r14,[rbp-0x8]
  00b89:    	mov    QWORD PTR [rbx],r14
  00b8c:    	mov    r14,QWORD PTR [rbp-0x10]
  00b90:    	movq   xmm5,QWORD PTR [rsp]
  00b95:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00b9b:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00ba1:    	add    rsp,0x20
  00ba5:    	test   rax,rax
  00ba8:    	je     0x3c52a
  00bae:    	mov    QWORD PTR [r14-0x80],rax
:00043 
:00044 %10 = %10.call x()                   [<INVALID>]
  00bb2:    	sub    rsp,0x20
  00bb6:    	movq   QWORD PTR [rsp],xmm5
  00bbb:    	movq   QWORD PTR [rsp+0x8],xmm6
  00bc1:    	movq   QWORD PTR [rsp+0x10],xmm7
  00bc7:    	mov    rdi,QWORD PTR [r14-0x80]
  00bcb: 78 	movabs rax,0x557860aa2e20
  00bd5:    	call   rax
  00bd7:    	mov    r15d,eax
  00bda: 78 	movabs r13,0x557861f78950
  00be4:    	cmp    QWORD PTR [r13+0x8],0x0
  00be9:    	je     0x3c539
  00bef:    	cmp    r15d,DWORD PTR [r13-0x8]
  00bf3:    	jne    0x3c539
  00bf9:    	mov    eax,DWORD PTR [rip+0xffffffffffffe1e7]        # 0xffffede6
  00bff:    	cmp    DWORD PTR [r13-0x4],eax
  00c03:    	jne    0x3c539
  00c09: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00c12:    	mov    rax,QWORD PTR [r14-0x80]
  00c16:    	mov    QWORD PTR [rsp-0x40],rax
  00c1b: 00 	mov    rdi,0x0
  00c22: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00c2b:    	mov    r13,QWORD PTR [r13+0x8]
  00c2f:    	mov    rax,QWORD PTR [r13+0x8]
  00c33:    	mov    QWORD PTR [rsp-0x30],rax
  00c38:    	mov    rax,QWORD PTR [r13+0x0]
  00c3c:    	mov    r13,QWORD PTR [r13+0x10]
  00c40:    	mov    rsi,QWORD PTR [rbx]
  00c43:    	mov    QWORD PTR [rsp-0x18],rsi
  00c48:    	lea    rsi,[rsp-0x18]
  00c4d:    	mov    QWORD PTR [rbx],rsi
  00c50:    	lea    r14,[rsp-0x10]
  00c55:    	mov    QWORD PTR [rsp-0x20],r14
  00c5a:    	call   rax
  00c5c:    	lea    r14,[rbp-0x8]
  00c60:    	mov    QWORD PTR [rbx],r14
  00c63:    	mov    r14,QWORD PTR [rbp-0x10]
  00c67:    	movq   xmm5,QWORD PTR [rsp]
  00c6c:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00c72:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00c78:    	add    rsp,0x20
  00c7c:    	test   rax,rax
  00c7f:    	je     0x3c57a
  00c85:    	mov    QWORD PTR [r14-0x80],rax
:00045 
:00046 %11 = %1.call dir()                  [<INVALID>]
  00c89:    	sub    rsp,0x20
  00c8d:    	movq   QWORD PTR [rsp],xmm5
  00c92:    	movq   QWORD PTR [rsp+0x8],xmm6
  00c98:    	movq   QWORD PTR [rsp+0x10],xmm7
  00c9e:    	mov    rdi,QWORD PTR [r14-0x38]
  00ca2: 78 	movabs rax,0x557860aa2e20
  00cac:    	call   rax
  00cae:    	mov    r15d,eax
  00cb1: 78 	movabs r13,0x557861f78970
  00cbb:    	cmp    QWORD PTR [r13+0x8],0x0
  00cc0:    	je     0x3c589
  00cc6:    	cmp    r15d,DWORD PTR [r13-0x8]
  00cca:    	jne    0x3c589
  00cd0:    	mov    eax,DWORD PTR [rip+0xffffffffffffe110]        # 0xffffede6
  00cd6:    	cmp    DWORD PTR [r13-0x4],eax
  00cda:    	jne    0x3c589
  00ce0: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00ce9:    	mov    rax,QWORD PTR [r14-0x38]
  00ced:    	mov    QWORD PTR [rsp-0x40],rax
  00cf2: 00 	mov    rdi,0x0
  00cf9: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00d02:    	mov    r13,QWORD PTR [r13+0x8]
  00d06:    	mov    rax,QWORD PTR [r13+0x8]
  00d0a:    	mov    QWORD PTR [rsp-0x30],rax
  00d0f:    	mov    rax,QWORD PTR [r13+0x0]
  00d13:    	mov    r13,QWORD PTR [r13+0x10]
  00d17:    	mov    rsi,QWORD PTR [rbx]
  00d1a:    	mov    QWORD PTR [rsp-0x18],rsi
  00d1f:    	lea    rsi,[rsp-0x18]
  00d24:    	mov    QWORD PTR [rbx],rsi
  00d27:    	lea    r14,[rsp-0x10]
  00d2c:    	mov    QWORD PTR [rsp-0x20],r14
  00d31:    	call   rax
  00d33:    	lea    r14,[rbp-0x8]
  00d37:    	mov    QWORD PTR [rbx],r14
  00d3a:    	mov    r14,QWORD PTR [rbp-0x10]
  00d3e:    	movq   xmm5,QWORD PTR [rsp]
  00d43:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00d49:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00d4f:    	add    rsp,0x20
  00d53:    	test   rax,rax
  00d56:    	je     0x3c5ca
  00d5c: ff 	mov    QWORD PTR [r14-0x88],rax
:00047 
:00048 %11 = %11.call x()                   [<INVALID>]
  00d63:    	sub    rsp,0x20
  00d67:    	movq   QWORD PTR [rsp],xmm5
  00d6c:    	movq   QWORD PTR [rsp+0x8],xmm6
  00d72:    	movq   QWORD PTR [rsp+0x10],xmm7
  00d78: ff 	mov    rdi,QWORD PTR [r14-0x88]
  00d7f: 78 	movabs rax,0x557860aa2e20
  00d89:    	call   rax
  00d8b:    	mov    r15d,eax
  00d8e: 78 	movabs r13,0x557861f78990
  00d98:    	cmp    QWORD PTR [r13+0x8],0x0
  00d9d:    	je     0x3c5d9
  00da3:    	cmp    r15d,DWORD PTR [r13-0x8]
  00da7:    	jne    0x3c5d9
  00dad:    	mov    eax,DWORD PTR [rip+0xffffffffffffe033]        # 0xffffede6
  00db3:    	cmp    DWORD PTR [r13-0x4],eax
  00db7:    	jne    0x3c5d9
  00dbd: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00dc6: ff 	mov    rax,QWORD PTR [r14-0x88]
  00dcd:    	mov    QWORD PTR [rsp-0x40],rax
  00dd2: 00 	mov    rdi,0x0
  00dd9: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00de2:    	mov    r13,QWORD PTR [r13+0x8]
  00de6:    	mov    rax,QWORD PTR [r13+0x8]
  00dea:    	mov    QWORD PTR [rsp-0x30],rax
  00def:    	mov    rax,QWORD PTR [r13+0x0]
  00df3:    	mov    r13,QWORD PTR [r13+0x10]
  00df7:    	mov    rsi,QWORD PTR [rbx]
  00dfa:    	mov    QWORD PTR [rsp-0x18],rsi
  00dff:    	lea    rsi,[rsp-0x18]
  00e04:    	mov    QWORD PTR [rbx],rsi
  00e07:    	lea    r14,[rsp-0x10]
  00e0c:    	mov    QWORD PTR [rsp-0x20],r14
  00e11:    	call   rax
  00e13:    	lea    r14,[rbp-0x8]
  00e17:    	mov    QWORD PTR [rbx],r14
  00e1a:    	mov    r14,QWORD PTR [rbp-0x10]
  00e1e:    	movq   xmm5,QWORD PTR [rsp]
  00e23:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00e29:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00e2f:    	add    rsp,0x20
  00e33:    	test   rax,rax
  00e36:    	je     0x3c61d
  00e3c: ff 	mov    QWORD PTR [r14-0x88],rax
:00049 
:00050 %11 = %11 * %7                       [<INVALID>][<INVALID>]
  00e43: ff 	mov    rdi,QWORD PTR [r14-0x88]
  00e4a:    	mov    rsi,QWORD PTR [r14-0x68]
  00e4e:    	sub    rsp,0x20
  00e52:    	movq   QWORD PTR [rsp],xmm5
  00e57:    	movq   QWORD PTR [rsp+0x8],xmm6
  00e5d:    	movq   QWORD PTR [rsp+0x10],xmm7
  00e63:    	mov    rdx,rdi
  00e66:    	mov    rcx,rsi
  00e69:    	mov    rdi,rbx
  00e6c:    	mov    rsi,r12
  00e6f: 78 	movabs rax,0x557860aaa780
  00e79:    	call   rax
  00e7b:    	movq   xmm5,QWORD PTR [rsp]
  00e80:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00e86:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00e8c:    	add    rsp,0x20
  00e90: 78 	movabs r13,0x557861f789b0
  00e9a:    	test   rax,rax
  00e9d:    	je     0xffffb94e
  00ea3: ff 	mov    QWORD PTR [r14-0x88],rax
:00051 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  00eaa:    	mov    rdi,QWORD PTR [r14-0x80]
  00eae: ff 	mov    rsi,QWORD PTR [r14-0x88]
  00eb5:    	sub    rsp,0x20
  00eb9:    	movq   QWORD PTR [rsp],xmm5
  00ebe:    	movq   QWORD PTR [rsp+0x8],xmm6
  00ec4:    	movq   QWORD PTR [rsp+0x10],xmm7
  00eca:    	mov    rdx,rdi
  00ecd:    	mov    rcx,rsi
  00ed0:    	mov    rdi,rbx
  00ed3:    	mov    rsi,r12
  00ed6: 78 	movabs rax,0x557860aa8800
  00ee0:    	call   rax
  00ee2:    	movq   xmm5,QWORD PTR [rsp]
  00ee7:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00eed:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00ef3:    	add    rsp,0x20
  00ef7: 78 	movabs r13,0x557861f789c0
  00f01:    	test   rax,rax
  00f04:    	je     0xffffb94e
  00f0a:    	mov    QWORD PTR [r14-0x80],rax
:00052 %11 = %1.call org()                  [<INVALID>]
  00f0e:    	sub    rsp,0x20
  00f12:    	movq   QWORD PTR [rsp],xmm5
  00f17:    	movq   QWORD PTR [rsp+0x8],xmm6
  00f1d:    	movq   QWORD PTR [rsp+0x10],xmm7
  00f23:    	mov    rdi,QWORD PTR [r14-0x38]
  00f27: 78 	movabs rax,0x557860aa2e20
  00f31:    	call   rax
  00f33:    	mov    r15d,eax
  00f36: 78 	movabs r13,0x557861f789d0
  00f40:    	cmp    QWORD PTR [r13+0x8],0x0
  00f45:    	je     0x3c62c
  00f4b:    	cmp    r15d,DWORD PTR [r13-0x8]
  00f4f:    	jne    0x3c62c
  00f55:    	mov    eax,DWORD PTR [rip+0xffffffffffffde8b]        # 0xffffede6
  00f5b:    	cmp    DWORD PTR [r13-0x4],eax
  00f5f:    	jne    0x3c62c
  00f65: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00f6e:    	mov    rax,QWORD PTR [r14-0x38]
  00f72:    	mov    QWORD PTR [rsp-0x40],rax
  00f77: 00 	mov    rdi,0x0
  00f7e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00f87:    	mov    r13,QWORD PTR [r13+0x8]
  00f8b:    	mov    rax,QWORD PTR [r13+0x8]
  00f8f:    	mov    QWORD PTR [rsp-0x30],rax
  00f94:    	mov    rax,QWORD PTR [r13+0x0]
  00f98:    	mov    r13,QWORD PTR [r13+0x10]
  00f9c:    	mov    rsi,QWORD PTR [rbx]
  00f9f:    	mov    QWORD PTR [rsp-0x18],rsi
  00fa4:    	lea    rsi,[rsp-0x18]
  00fa9:    	mov    QWORD PTR [rbx],rsi
  00fac:    	lea    r14,[rsp-0x10]
  00fb1:    	mov    QWORD PTR [rsp-0x20],r14
  00fb6:    	call   rax
  00fb8:    	lea    r14,[rbp-0x8]
  00fbc:    	mov    QWORD PTR [rbx],r14
  00fbf:    	mov    r14,QWORD PTR [rbp-0x10]
  00fc3:    	movq   xmm5,QWORD PTR [rsp]
  00fc8:    	movq   xmm6,QWORD PTR [rsp+0x8]
  00fce:    	movq   xmm7,QWORD PTR [rsp+0x10]
  00fd4:    	add    rsp,0x20
  00fd8:    	test   rax,rax
  00fdb:    	je     0x3c66d
  00fe1: ff 	mov    QWORD PTR [r14-0x88],rax
:00053 
:00054 %11 = %11.call y()                   [<INVALID>]
  00fe8:    	sub    rsp,0x20
  00fec:    	movq   QWORD PTR [rsp],xmm5
  00ff1:    	movq   QWORD PTR [rsp+0x8],xmm6
  00ff7:    	movq   QWORD PTR [rsp+0x10],xmm7
  00ffd: ff 	mov    rdi,QWORD PTR [r14-0x88]
  01004: 78 	movabs rax,0x557860aa2e20
  0100e:    	call   rax
  01010:    	mov    r15d,eax
  01013: 78 	movabs r13,0x557861f789f0
  0101d:    	cmp    QWORD PTR [r13+0x8],0x0
  01022:    	je     0x3c67c
  01028:    	cmp    r15d,DWORD PTR [r13-0x8]
  0102c:    	jne    0x3c67c
  01032:    	mov    eax,DWORD PTR [rip+0xffffffffffffddae]        # 0xffffede6
  01038:    	cmp    DWORD PTR [r13-0x4],eax
  0103c:    	jne    0x3c67c
  01042: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0104b: ff 	mov    rax,QWORD PTR [r14-0x88]
  01052:    	mov    QWORD PTR [rsp-0x40],rax
  01057: 00 	mov    rdi,0x0
  0105e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01067:    	mov    r13,QWORD PTR [r13+0x8]
  0106b:    	mov    rax,QWORD PTR [r13+0x8]
  0106f:    	mov    QWORD PTR [rsp-0x30],rax
  01074:    	mov    rax,QWORD PTR [r13+0x0]
  01078:    	mov    r13,QWORD PTR [r13+0x10]
  0107c:    	mov    rsi,QWORD PTR [rbx]
  0107f:    	mov    QWORD PTR [rsp-0x18],rsi
  01084:    	lea    rsi,[rsp-0x18]
  01089:    	mov    QWORD PTR [rbx],rsi
  0108c:    	lea    r14,[rsp-0x10]
  01091:    	mov    QWORD PTR [rsp-0x20],r14
  01096:    	call   rax
  01098:    	lea    r14,[rbp-0x8]
  0109c:    	mov    QWORD PTR [rbx],r14
  0109f:    	mov    r14,QWORD PTR [rbp-0x10]
  010a3:    	movq   xmm5,QWORD PTR [rsp]
  010a8:    	movq   xmm6,QWORD PTR [rsp+0x8]
  010ae:    	movq   xmm7,QWORD PTR [rsp+0x10]
  010b4:    	add    rsp,0x20
  010b8:    	test   rax,rax
  010bb:    	je     0x3c6c0
  010c1: ff 	mov    QWORD PTR [r14-0x88],rax
:00055 
:00056 %12 = %1.call dir()                  [<INVALID>]
  010c8:    	sub    rsp,0x20
  010cc:    	movq   QWORD PTR [rsp],xmm5
  010d1:    	movq   QWORD PTR [rsp+0x8],xmm6
  010d7:    	movq   QWORD PTR [rsp+0x10],xmm7
  010dd:    	mov    rdi,QWORD PTR [r14-0x38]
  010e1: 78 	movabs rax,0x557860aa2e20
  010eb:    	call   rax
  010ed:    	mov    r15d,eax
  010f0: 78 	movabs r13,0x557861f78a10
  010fa:    	cmp    QWORD PTR [r13+0x8],0x0
  010ff:    	je     0x3c6cf
  01105:    	cmp    r15d,DWORD PTR [r13-0x8]
  01109:    	jne    0x3c6cf
  0110f:    	mov    eax,DWORD PTR [rip+0xffffffffffffdcd1]        # 0xffffede6
  01115:    	cmp    DWORD PTR [r13-0x4],eax
  01119:    	jne    0x3c6cf
  0111f: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01128:    	mov    rax,QWORD PTR [r14-0x38]
  0112c:    	mov    QWORD PTR [rsp-0x40],rax
  01131: 00 	mov    rdi,0x0
  01138: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01141:    	mov    r13,QWORD PTR [r13+0x8]
  01145:    	mov    rax,QWORD PTR [r13+0x8]
  01149:    	mov    QWORD PTR [rsp-0x30],rax
  0114e:    	mov    rax,QWORD PTR [r13+0x0]
  01152:    	mov    r13,QWORD PTR [r13+0x10]
  01156:    	mov    rsi,QWORD PTR [rbx]
  01159:    	mov    QWORD PTR [rsp-0x18],rsi
  0115e:    	lea    rsi,[rsp-0x18]
  01163:    	mov    QWORD PTR [rbx],rsi
  01166:    	lea    r14,[rsp-0x10]
  0116b:    	mov    QWORD PTR [rsp-0x20],r14
  01170:    	call   rax
  01172:    	lea    r14,[rbp-0x8]
  01176:    	mov    QWORD PTR [rbx],r14
  01179:    	mov    r14,QWORD PTR [rbp-0x10]
  0117d:    	movq   xmm5,QWORD PTR [rsp]
  01182:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01188:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0118e:    	add    rsp,0x20
  01192:    	test   rax,rax
  01195:    	je     0x3c710
  0119b: ff 	mov    QWORD PTR [r14-0x90],rax
:00057 
:00058 %12 = %12.call y()                   [<INVALID>]
  011a2:    	sub    rsp,0x20
  011a6:    	movq   QWORD PTR [rsp],xmm5
  011ab:    	movq   QWORD PTR [rsp+0x8],xmm6
  011b1:    	movq   QWORD PTR [rsp+0x10],xmm7
  011b7: ff 	mov    rdi,QWORD PTR [r14-0x90]
  011be: 78 	movabs rax,0x557860aa2e20
  011c8:    	call   rax
  011ca:    	mov    r15d,eax
  011cd: 78 	movabs r13,0x557861f78a30
  011d7:    	cmp    QWORD PTR [r13+0x8],0x0
  011dc:    	je     0x3c71f
  011e2:    	cmp    r15d,DWORD PTR [r13-0x8]
  011e6:    	jne    0x3c71f
  011ec:    	mov    eax,DWORD PTR [rip+0xffffffffffffdbf4]        # 0xffffede6
  011f2:    	cmp    DWORD PTR [r13-0x4],eax
  011f6:    	jne    0x3c71f
  011fc: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01205: ff 	mov    rax,QWORD PTR [r14-0x90]
  0120c:    	mov    QWORD PTR [rsp-0x40],rax
  01211: 00 	mov    rdi,0x0
  01218: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01221:    	mov    r13,QWORD PTR [r13+0x8]
  01225:    	mov    rax,QWORD PTR [r13+0x8]
  01229:    	mov    QWORD PTR [rsp-0x30],rax
  0122e:    	mov    rax,QWORD PTR [r13+0x0]
  01232:    	mov    r13,QWORD PTR [r13+0x10]
  01236:    	mov    rsi,QWORD PTR [rbx]
  01239:    	mov    QWORD PTR [rsp-0x18],rsi
  0123e:    	lea    rsi,[rsp-0x18]
  01243:    	mov    QWORD PTR [rbx],rsi
  01246:    	lea    r14,[rsp-0x10]
  0124b:    	mov    QWORD PTR [rsp-0x20],r14
  01250:    	call   rax
  01252:    	lea    r14,[rbp-0x8]
  01256:    	mov    QWORD PTR [rbx],r14
  01259:    	mov    r14,QWORD PTR [rbp-0x10]
  0125d:    	movq   xmm5,QWORD PTR [rsp]
  01262:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01268:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0126e:    	add    rsp,0x20
  01272:    	test   rax,rax
  01275:    	je     0x3c763
  0127b: ff 	mov    QWORD PTR [r14-0x90],rax
:00059 
:00060 %12 = %12 * %7                       [<INVALID>][<INVALID>]
  01282: ff 	mov    rdi,QWORD PTR [r14-0x90]
  01289:    	mov    rsi,QWORD PTR [r14-0x68]
  0128d:    	sub    rsp,0x20
  01291:    	movq   QWORD PTR [rsp],xmm5
  01296:    	movq   QWORD PTR [rsp+0x8],xmm6
  0129c:    	movq   QWORD PTR [rsp+0x10],xmm7
  012a2:    	mov    rdx,rdi
  012a5:    	mov    rcx,rsi
  012a8:    	mov    rdi,rbx
  012ab:    	mov    rsi,r12
  012ae: 78 	movabs rax,0x557860aaa780
  012b8:    	call   rax
  012ba:    	movq   xmm5,QWORD PTR [rsp]
  012bf:    	movq   xmm6,QWORD PTR [rsp+0x8]
  012c5:    	movq   xmm7,QWORD PTR [rsp+0x10]
  012cb:    	add    rsp,0x20
  012cf: 78 	movabs r13,0x557861f78a50
  012d9:    	test   rax,rax
  012dc:    	je     0xffffb94e
  012e2: ff 	mov    QWORD PTR [r14-0x90],rax
:00061 %11 = %11 + %12                      [<INVALID>][<INVALID>]
  012e9: ff 	mov    rdi,QWORD PTR [r14-0x88]
  012f0: ff 	mov    rsi,QWORD PTR [r14-0x90]
  012f7:    	sub    rsp,0x20
  012fb:    	movq   QWORD PTR [rsp],xmm5
  01300:    	movq   QWORD PTR [rsp+0x8],xmm6
  01306:    	movq   QWORD PTR [rsp+0x10],xmm7
  0130c:    	mov    rdx,rdi
  0130f:    	mov    rcx,rsi
  01312:    	mov    rdi,rbx
  01315:    	mov    rsi,r12
  01318: 78 	movabs rax,0x557860aa8800
  01322:    	call   rax
  01324:    	movq   xmm5,QWORD PTR [rsp]
  01329:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0132f:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01335:    	add    rsp,0x20
  01339: 78 	movabs r13,0x557861f78a60
  01343:    	test   rax,rax
  01346:    	je     0xffffb94e
  0134c: ff 	mov    QWORD PTR [r14-0x88],rax
:00062 %12 = %1.call org()                  [<INVALID>]
  01353:    	sub    rsp,0x20
  01357:    	movq   QWORD PTR [rsp],xmm5
  0135c:    	movq   QWORD PTR [rsp+0x8],xmm6
  01362:    	movq   QWORD PTR [rsp+0x10],xmm7
  01368:    	mov    rdi,QWORD PTR [r14-0x38]
  0136c: 78 	movabs rax,0x557860aa2e20
  01376:    	call   rax
  01378:    	mov    r15d,eax
  0137b: 78 	movabs r13,0x557861f78a70
  01385:    	cmp    QWORD PTR [r13+0x8],0x0
  0138a:    	je     0x3c772
  01390:    	cmp    r15d,DWORD PTR [r13-0x8]
  01394:    	jne    0x3c772
  0139a:    	mov    eax,DWORD PTR [rip+0xffffffffffffda46]        # 0xffffede6
  013a0:    	cmp    DWORD PTR [r13-0x4],eax
  013a4:    	jne    0x3c772
  013aa: 00 	mov    QWORD PTR [rsp-0x28],0x0
  013b3:    	mov    rax,QWORD PTR [r14-0x38]
  013b7:    	mov    QWORD PTR [rsp-0x40],rax
  013bc: 00 	mov    rdi,0x0
  013c3: 00 	mov    QWORD PTR [rsp-0x38],0x0
  013cc:    	mov    r13,QWORD PTR [r13+0x8]
  013d0:    	mov    rax,QWORD PTR [r13+0x8]
  013d4:    	mov    QWORD PTR [rsp-0x30],rax
  013d9:    	mov    rax,QWORD PTR [r13+0x0]
  013dd:    	mov    r13,QWORD PTR [r13+0x10]
  013e1:    	mov    rsi,QWORD PTR [rbx]
  013e4:    	mov    QWORD PTR [rsp-0x18],rsi
  013e9:    	lea    rsi,[rsp-0x18]
  013ee:    	mov    QWORD PTR [rbx],rsi
  013f1:    	lea    r14,[rsp-0x10]
  013f6:    	mov    QWORD PTR [rsp-0x20],r14
  013fb:    	call   rax
  013fd:    	lea    r14,[rbp-0x8]
  01401:    	mov    QWORD PTR [rbx],r14
  01404:    	mov    r14,QWORD PTR [rbp-0x10]
  01408:    	movq   xmm5,QWORD PTR [rsp]
  0140d:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01413:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01419:    	add    rsp,0x20
  0141d:    	test   rax,rax
  01420:    	je     0x3c7b3
  01426: ff 	mov    QWORD PTR [r14-0x90],rax
:00063 
:00064 %12 = %12.call z()                   [<INVALID>]
  0142d:    	sub    rsp,0x20
  01431:    	movq   QWORD PTR [rsp],xmm5
  01436:    	movq   QWORD PTR [rsp+0x8],xmm6
  0143c:    	movq   QWORD PTR [rsp+0x10],xmm7
  01442: ff 	mov    rdi,QWORD PTR [r14-0x90]
  01449: 78 	movabs rax,0x557860aa2e20
  01453:    	call   rax
  01455:    	mov    r15d,eax
  01458: 78 	movabs r13,0x557861f78a90
  01462:    	cmp    QWORD PTR [r13+0x8],0x0
  01467:    	je     0x3c7c2
  0146d:    	cmp    r15d,DWORD PTR [r13-0x8]
  01471:    	jne    0x3c7c2
  01477:    	mov    eax,DWORD PTR [rip+0xffffffffffffd969]        # 0xffffede6
  0147d:    	cmp    DWORD PTR [r13-0x4],eax
  01481:    	jne    0x3c7c2
  01487: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01490: ff 	mov    rax,QWORD PTR [r14-0x90]
  01497:    	mov    QWORD PTR [rsp-0x40],rax
  0149c: 00 	mov    rdi,0x0
  014a3: 00 	mov    QWORD PTR [rsp-0x38],0x0
  014ac:    	mov    r13,QWORD PTR [r13+0x8]
  014b0:    	mov    rax,QWORD PTR [r13+0x8]
  014b4:    	mov    QWORD PTR [rsp-0x30],rax
  014b9:    	mov    rax,QWORD PTR [r13+0x0]
  014bd:    	mov    r13,QWORD PTR [r13+0x10]
  014c1:    	mov    rsi,QWORD PTR [rbx]
  014c4:    	mov    QWORD PTR [rsp-0x18],rsi
  014c9:    	lea    rsi,[rsp-0x18]
  014ce:    	mov    QWORD PTR [rbx],rsi
  014d1:    	lea    r14,[rsp-0x10]
  014d6:    	mov    QWORD PTR [rsp-0x20],r14
  014db:    	call   rax
  014dd:    	lea    r14,[rbp-0x8]
  014e1:    	mov    QWORD PTR [rbx],r14
  014e4:    	mov    r14,QWORD PTR [rbp-0x10]
  014e8:    	movq   xmm5,QWORD PTR [rsp]
  014ed:    	movq   xmm6,QWORD PTR [rsp+0x8]
  014f3:    	movq   xmm7,QWORD PTR [rsp+0x10]
  014f9:    	add    rsp,0x20
  014fd:    	test   rax,rax
  01500:    	je     0x3c806
  01506: ff 	mov    QWORD PTR [r14-0x90],rax
:00065 
:00066 %13 = %1.call dir()                  [<INVALID>]
  0150d:    	sub    rsp,0x20
  01511:    	movq   QWORD PTR [rsp],xmm5
  01516:    	movq   QWORD PTR [rsp+0x8],xmm6
  0151c:    	movq   QWORD PTR [rsp+0x10],xmm7
  01522:    	mov    rdi,QWORD PTR [r14-0x38]
  01526: 78 	movabs rax,0x557860aa2e20
  01530:    	call   rax
  01532:    	mov    r15d,eax
  01535: 78 	movabs r13,0x557861f78ab0
  0153f:    	cmp    QWORD PTR [r13+0x8],0x0
  01544:    	je     0x3c815
  0154a:    	cmp    r15d,DWORD PTR [r13-0x8]
  0154e:    	jne    0x3c815
  01554:    	mov    eax,DWORD PTR [rip+0xffffffffffffd88c]        # 0xffffede6
  0155a:    	cmp    DWORD PTR [r13-0x4],eax
  0155e:    	jne    0x3c815
  01564: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0156d:    	mov    rax,QWORD PTR [r14-0x38]
  01571:    	mov    QWORD PTR [rsp-0x40],rax
  01576: 00 	mov    rdi,0x0
  0157d: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01586:    	mov    r13,QWORD PTR [r13+0x8]
  0158a:    	mov    rax,QWORD PTR [r13+0x8]
  0158e:    	mov    QWORD PTR [rsp-0x30],rax
  01593:    	mov    rax,QWORD PTR [r13+0x0]
  01597:    	mov    r13,QWORD PTR [r13+0x10]
  0159b:    	mov    rsi,QWORD PTR [rbx]
  0159e:    	mov    QWORD PTR [rsp-0x18],rsi
  015a3:    	lea    rsi,[rsp-0x18]
  015a8:    	mov    QWORD PTR [rbx],rsi
  015ab:    	lea    r14,[rsp-0x10]
  015b0:    	mov    QWORD PTR [rsp-0x20],r14
  015b5:    	call   rax
  015b7:    	lea    r14,[rbp-0x8]
  015bb:    	mov    QWORD PTR [rbx],r14
  015be:    	mov    r14,QWORD PTR [rbp-0x10]
  015c2:    	movq   xmm5,QWORD PTR [rsp]
  015c7:    	movq   xmm6,QWORD PTR [rsp+0x8]
  015cd:    	movq   xmm7,QWORD PTR [rsp+0x10]
  015d3:    	add    rsp,0x20
  015d7:    	test   rax,rax
  015da:    	je     0x3c856
  015e0: ff 	mov    QWORD PTR [r14-0x98],rax
:00067 
:00068 %13 = %13.call z()                   [<INVALID>]
  015e7:    	sub    rsp,0x20
  015eb:    	movq   QWORD PTR [rsp],xmm5
  015f0:    	movq   QWORD PTR [rsp+0x8],xmm6
  015f6:    	movq   QWORD PTR [rsp+0x10],xmm7
  015fc: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01603: 78 	movabs rax,0x557860aa2e20
  0160d:    	call   rax
  0160f:    	mov    r15d,eax
  01612: 78 	movabs r13,0x557861f78ad0
  0161c:    	cmp    QWORD PTR [r13+0x8],0x0
  01621:    	je     0x3c865
  01627:    	cmp    r15d,DWORD PTR [r13-0x8]
  0162b:    	jne    0x3c865
  01631:    	mov    eax,DWORD PTR [rip+0xffffffffffffd7af]        # 0xffffede6
  01637:    	cmp    DWORD PTR [r13-0x4],eax
  0163b:    	jne    0x3c865
  01641: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0164a: ff 	mov    rax,QWORD PTR [r14-0x98]
  01651:    	mov    QWORD PTR [rsp-0x40],rax
  01656: 00 	mov    rdi,0x0
  0165d: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01666:    	mov    r13,QWORD PTR [r13+0x8]
  0166a:    	mov    rax,QWORD PTR [r13+0x8]
  0166e:    	mov    QWORD PTR [rsp-0x30],rax
  01673:    	mov    rax,QWORD PTR [r13+0x0]
  01677:    	mov    r13,QWORD PTR [r13+0x10]
  0167b:    	mov    rsi,QWORD PTR [rbx]
  0167e:    	mov    QWORD PTR [rsp-0x18],rsi
  01683:    	lea    rsi,[rsp-0x18]
  01688:    	mov    QWORD PTR [rbx],rsi
  0168b:    	lea    r14,[rsp-0x10]
  01690:    	mov    QWORD PTR [rsp-0x20],r14
  01695:    	call   rax
  01697:    	lea    r14,[rbp-0x8]
  0169b:    	mov    QWORD PTR [rbx],r14
  0169e:    	mov    r14,QWORD PTR [rbp-0x10]
  016a2:    	movq   xmm5,QWORD PTR [rsp]
  016a7:    	movq   xmm6,QWORD PTR [rsp+0x8]
  016ad:    	movq   xmm7,QWORD PTR [rsp+0x10]
  016b3:    	add    rsp,0x20
  016b7:    	test   rax,rax
  016ba:    	je     0x3c8a9
  016c0: ff 	mov    QWORD PTR [r14-0x98],rax
:00069 
:00070 %13 = %13 * %7                       [<INVALID>][<INVALID>]
  016c7: ff 	mov    rdi,QWORD PTR [r14-0x98]
  016ce:    	mov    rsi,QWORD PTR [r14-0x68]
  016d2:    	sub    rsp,0x20
  016d6:    	movq   QWORD PTR [rsp],xmm5
  016db:    	movq   QWORD PTR [rsp+0x8],xmm6
  016e1:    	movq   QWORD PTR [rsp+0x10],xmm7
  016e7:    	mov    rdx,rdi
  016ea:    	mov    rcx,rsi
  016ed:    	mov    rdi,rbx
  016f0:    	mov    rsi,r12
  016f3: 78 	movabs rax,0x557860aaa780
  016fd:    	call   rax
  016ff:    	movq   xmm5,QWORD PTR [rsp]
  01704:    	movq   xmm6,QWORD PTR [rsp+0x8]
  0170a:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01710:    	add    rsp,0x20
  01714: 78 	movabs r13,0x557861f78af0
  0171e:    	test   rax,rax
  01721:    	je     0xffffb94e
  01727: ff 	mov    QWORD PTR [r14-0x98],rax
:00071 %12 = %12 + %13                      [<INVALID>][<INVALID>]
  0172e: ff 	mov    rdi,QWORD PTR [r14-0x90]
  01735: ff 	mov    rsi,QWORD PTR [r14-0x98]
  0173c:    	sub    rsp,0x20
  01740:    	movq   QWORD PTR [rsp],xmm5
  01745:    	movq   QWORD PTR [rsp+0x8],xmm6
  0174b:    	movq   QWORD PTR [rsp+0x10],xmm7
  01751:    	mov    rdx,rdi
  01754:    	mov    rcx,rsi
  01757:    	mov    rdi,rbx
  0175a:    	mov    rsi,r12
  0175d: 78 	movabs rax,0x557860aa8800
  01767:    	call   rax
  01769:    	movq   xmm5,QWORD PTR [rsp]
  0176e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01774:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0177a:    	add    rsp,0x20
  0177e: 78 	movabs r13,0x557861f78b00
  01788:    	test   rax,rax
  0178b:    	je     0xffffb94e
  01791: ff 	mov    QWORD PTR [r14-0x90],rax
:00072 %9 = %9.call new(%10; 3)             [<INVALID>]
  01798:    	sub    rsp,0x20
  0179c:    	movq   QWORD PTR [rsp],xmm5
  017a1:    	movq   QWORD PTR [rsp+0x8],xmm6
  017a7:    	movq   QWORD PTR [rsp+0x10],xmm7
  017ad:    	mov    rdi,QWORD PTR [r14-0x78]
  017b1: 78 	movabs rax,0x557860aa2e20
  017bb:    	call   rax
  017bd:    	mov    r15d,eax
  017c0: 78 	movabs r13,0x557861f78b10
  017ca:    	cmp    QWORD PTR [r13+0x8],0x0
  017cf:    	je     0x3c8b8
  017d5:    	cmp    r15d,DWORD PTR [r13-0x8]
  017d9:    	jne    0x3c8b8
  017df:    	mov    eax,DWORD PTR [rip+0xffffffffffffd601]        # 0xffffede6
  017e5:    	cmp    DWORD PTR [r13-0x4],eax
  017e9:    	jne    0x3c8b8
  017ef: 00 	mov    QWORD PTR [rsp-0x28],0x0
  017f8:    	mov    rax,QWORD PTR [r14-0x78]
  017fc:    	mov    QWORD PTR [rsp-0x40],rax
  01801: 00 	mov    rdi,0x3
  01808:    	mov    rax,QWORD PTR [r14-0x80]
  0180c:    	mov    QWORD PTR [rsp-0x48],rax
  01811: ff 	mov    rax,QWORD PTR [r14-0x88]
  01818:    	mov    QWORD PTR [rsp-0x50],rax
  0181d: ff 	mov    rax,QWORD PTR [r14-0x90]
  01824:    	mov    QWORD PTR [rsp-0x58],rax
  01829: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01832:    	mov    r13,QWORD PTR [r13+0x8]
  01836:    	mov    rax,QWORD PTR [r13+0x8]
  0183a:    	mov    QWORD PTR [rsp-0x30],rax
  0183f:    	mov    rax,QWORD PTR [r13+0x0]
  01843:    	mov    r13,QWORD PTR [r13+0x10]
  01847:    	mov    rsi,QWORD PTR [rbx]
  0184a:    	mov    QWORD PTR [rsp-0x18],rsi
  0184f:    	lea    rsi,[rsp-0x18]
  01854:    	mov    QWORD PTR [rbx],rsi
  01857:    	lea    r14,[rsp-0x10]
  0185c:    	mov    QWORD PTR [rsp-0x20],r14
  01861:    	call   rax
  01863:    	lea    r14,[rbp-0x8]
  01867:    	mov    QWORD PTR [rbx],r14
  0186a:    	mov    r14,QWORD PTR [rbp-0x10]
  0186e:    	movq   xmm5,QWORD PTR [rsp]
  01873:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01879:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0187f:    	add    rsp,0x20
  01883:    	test   rax,rax
  01886:    	je     0x3c8f9
  0188c:    	mov    QWORD PTR [r14-0x78],rax
:00073 
:00074 _ = %2.call pl=(%9; 1)               [<INVALID>]
  01890:    	sub    rsp,0x20
  01894:    	movq   QWORD PTR [rsp],xmm5
  01899:    	movq   QWORD PTR [rsp+0x8],xmm6
  0189f:    	movq   QWORD PTR [rsp+0x10],xmm7
  018a5:    	mov    rdi,QWORD PTR [r14-0x40]
  018a9: 78 	movabs rax,0x557860aa2e20
  018b3:    	call   rax
  018b5:    	mov    r15d,eax
  018b8: 78 	movabs r13,0x557861f78b30
  018c2:    	cmp    QWORD PTR [r13+0x8],0x0
  018c7:    	je     0x3c908
  018cd:    	cmp    r15d,DWORD PTR [r13-0x8]
  018d1:    	jne    0x3c908
  018d7:    	mov    eax,DWORD PTR [rip+0xffffffffffffd509]        # 0xffffede6
  018dd:    	cmp    DWORD PTR [r13-0x4],eax
  018e1:    	jne    0x3c908
  018e7: 00 	mov    QWORD PTR [rsp-0x28],0x0
  018f0:    	mov    rax,QWORD PTR [r14-0x40]
  018f4:    	mov    QWORD PTR [rsp-0x40],rax
  018f9: 00 	mov    rdi,0x1
  01900:    	mov    rax,QWORD PTR [r14-0x78]
  01904:    	mov    QWORD PTR [rsp-0x48],rax
  01909: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01912:    	mov    r13,QWORD PTR [r13+0x8]
  01916:    	mov    rax,QWORD PTR [r13+0x8]
  0191a:    	mov    QWORD PTR [rsp-0x30],rax
  0191f:    	mov    rax,QWORD PTR [r13+0x0]
  01923:    	mov    r13,QWORD PTR [r13+0x10]
  01927:    	mov    rsi,QWORD PTR [rbx]
  0192a:    	mov    QWORD PTR [rsp-0x18],rsi
  0192f:    	lea    rsi,[rsp-0x18]
  01934:    	mov    QWORD PTR [rbx],rsi
  01937:    	lea    r14,[rsp-0x10]
  0193c:    	mov    QWORD PTR [rsp-0x20],r14
  01941:    	call   rax
  01943:    	lea    r14,[rbp-0x8]
  01947:    	mov    QWORD PTR [rbx],r14
  0194a:    	mov    r14,QWORD PTR [rbp-0x10]
  0194e:    	movq   xmm5,QWORD PTR [rsp]
  01953:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01959:    	movq   xmm7,QWORD PTR [rsp+0x10]
  0195f:    	add    rsp,0x20
  01963:    	test   rax,rax
  01966:    	je     0x3c949
:00075 
:00076 %9 = %2.call pl()                    [<INVALID>]
  0196c:    	sub    rsp,0x20
  01970:    	movq   QWORD PTR [rsp],xmm5
  01975:    	movq   QWORD PTR [rsp+0x8],xmm6
  0197b:    	movq   QWORD PTR [rsp+0x10],xmm7
  01981:    	mov    rdi,QWORD PTR [r14-0x40]
  01985: 78 	movabs rax,0x557860aa2e20
  0198f:    	call   rax
  01991:    	mov    r15d,eax
  01994: 78 	movabs r13,0x557861f78b50
  0199e:    	cmp    QWORD PTR [r13+0x8],0x0
  019a3:    	je     0x3c958
  019a9:    	cmp    r15d,DWORD PTR [r13-0x8]
  019ad:    	jne    0x3c958
  019b3:    	mov    eax,DWORD PTR [rip+0xffffffffffffd42d]        # 0xffffede6
  019b9:    	cmp    DWORD PTR [r13-0x4],eax
  019bd:    	jne    0x3c958
  019c3: 00 	mov    QWORD PTR [rsp-0x28],0x0
  019cc:    	mov    rax,QWORD PTR [r14-0x40]
  019d0:    	mov    QWORD PTR [rsp-0x40],rax
  019d5: 00 	mov    rdi,0x0
  019dc: 00 	mov    QWORD PTR [rsp-0x38],0x0
  019e5:    	mov    r13,QWORD PTR [r13+0x8]
  019e9:    	mov    rax,QWORD PTR [r13+0x8]
  019ed:    	mov    QWORD PTR [rsp-0x30],rax
  019f2:    	mov    rax,QWORD PTR [r13+0x0]
  019f6:    	mov    r13,QWORD PTR [r13+0x10]
  019fa:    	mov    rsi,QWORD PTR [rbx]
  019fd:    	mov    QWORD PTR [rsp-0x18],rsi
  01a02:    	lea    rsi,[rsp-0x18]
  01a07:    	mov    QWORD PTR [rbx],rsi
  01a0a:    	lea    r14,[rsp-0x10]
  01a0f:    	mov    QWORD PTR [rsp-0x20],r14
  01a14:    	call   rax
  01a16:    	lea    r14,[rbp-0x8]
  01a1a:    	mov    QWORD PTR [rbx],r14
  01a1d:    	mov    r14,QWORD PTR [rbp-0x10]
  01a21:    	movq   xmm5,QWORD PTR [rsp]
  01a26:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01a2c:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01a32:    	add    rsp,0x20
  01a36:    	test   rax,rax
  01a39:    	je     0x3c999
  01a3f:    	mov    QWORD PTR [r14-0x78],rax
:00077 
:00078 %10 = @center: <INVALID>[IvarId(0)]
  01a43:    	mov    rdi,QWORD PTR [r14-0x30]
  01a47:    	sub    rsp,0x20
  01a4b:    	movq   QWORD PTR [rsp],xmm5
  01a50:    	movq   QWORD PTR [rsp+0x8],xmm6
  01a56:    	movq   QWORD PTR [rsp+0x10],xmm7
  01a5c: 00 	mov    rsi,0xa4
  01a63:    	mov    rdx,r12
  01a66: 78 	movabs rax,0x557860b06250
  01a70:    	call   rax
  01a72:    	movq   xmm5,QWORD PTR [rsp]
  01a77:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01a7d:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01a83:    	add    rsp,0x20
  01a87:    	mov    QWORD PTR [r14-0x80],rax
:00079 %8 = %9.call vsub(%10; 1)            [<INVALID>]
  01a8b:    	sub    rsp,0x20
  01a8f:    	movq   QWORD PTR [rsp],xmm5
  01a94:    	movq   QWORD PTR [rsp+0x8],xmm6
  01a9a:    	movq   QWORD PTR [rsp+0x10],xmm7
  01aa0:    	mov    rdi,QWORD PTR [r14-0x78]
  01aa4: 78 	movabs rax,0x557860aa2e20
  01aae:    	call   rax
  01ab0:    	mov    r15d,eax
  01ab3: 78 	movabs r13,0x557861f78b80
  01abd:    	cmp    QWORD PTR [r13+0x8],0x0
  01ac2:    	je     0x3c9a8
  01ac8:    	cmp    r15d,DWORD PTR [r13-0x8]
  01acc:    	jne    0x3c9a8
  01ad2:    	mov    eax,DWORD PTR [rip+0xffffffffffffd30e]        # 0xffffede6
  01ad8:    	cmp    DWORD PTR [r13-0x4],eax
  01adc:    	jne    0x3c9a8
  01ae2: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01aeb:    	mov    rax,QWORD PTR [r14-0x78]
  01aef:    	mov    QWORD PTR [rsp-0x40],rax
  01af4: 00 	mov    rdi,0x1
  01afb:    	mov    rax,QWORD PTR [r14-0x80]
  01aff:    	mov    QWORD PTR [rsp-0x48],rax
  01b04: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01b0d:    	mov    r13,QWORD PTR [r13+0x8]
  01b11:    	mov    rax,QWORD PTR [r13+0x8]
  01b15:    	mov    QWORD PTR [rsp-0x30],rax
  01b1a:    	mov    rax,QWORD PTR [r13+0x0]
  01b1e:    	mov    r13,QWORD PTR [r13+0x10]
  01b22:    	mov    rsi,QWORD PTR [rbx]
  01b25:    	mov    QWORD PTR [rsp-0x18],rsi
  01b2a:    	lea    rsi,[rsp-0x18]
  01b2f:    	mov    QWORD PTR [rbx],rsi
  01b32:    	lea    r14,[rsp-0x10]
  01b37:    	mov    QWORD PTR [rsp-0x20],r14
  01b3c:    	call   rax
  01b3e:    	lea    r14,[rbp-0x8]
  01b42:    	mov    QWORD PTR [rbx],r14
  01b45:    	mov    r14,QWORD PTR [rbp-0x10]
  01b49:    	movq   xmm5,QWORD PTR [rsp]
  01b4e:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01b54:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01b5a:    	add    rsp,0x20
  01b5e:    	test   rax,rax
  01b61:    	je     0x3c9e9
  01b67:    	mov    QWORD PTR [r14-0x70],rax
:00080 
:00081 %9 = %8.call vnormalize()            [<INVALID>]
  01b6b:    	sub    rsp,0x20
  01b6f:    	movq   QWORD PTR [rsp],xmm5
  01b74:    	movq   QWORD PTR [rsp+0x8],xmm6
  01b7a:    	movq   QWORD PTR [rsp+0x10],xmm7
  01b80:    	mov    rdi,QWORD PTR [r14-0x70]
  01b84: 78 	movabs rax,0x557860aa2e20
  01b8e:    	call   rax
  01b90:    	mov    r15d,eax
  01b93: 78 	movabs r13,0x557861f78ba0
  01b9d:    	cmp    QWORD PTR [r13+0x8],0x0
  01ba2:    	je     0x3c9f8
  01ba8:    	cmp    r15d,DWORD PTR [r13-0x8]
  01bac:    	jne    0x3c9f8
  01bb2:    	mov    eax,DWORD PTR [rip+0xffffffffffffd22e]        # 0xffffede6
  01bb8:    	cmp    DWORD PTR [r13-0x4],eax
  01bbc:    	jne    0x3c9f8
  01bc2: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01bcb:    	mov    rax,QWORD PTR [r14-0x70]
  01bcf:    	mov    QWORD PTR [rsp-0x40],rax
  01bd4: 00 	mov    rdi,0x0
  01bdb: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01be4:    	mov    r13,QWORD PTR [r13+0x8]
  01be8:    	mov    rax,QWORD PTR [r13+0x8]
  01bec:    	mov    QWORD PTR [rsp-0x30],rax
  01bf1:    	mov    rax,QWORD PTR [r13+0x0]
  01bf5:    	mov    r13,QWORD PTR [r13+0x10]
  01bf9:    	mov    rsi,QWORD PTR [rbx]
  01bfc:    	mov    QWORD PTR [rsp-0x18],rsi
  01c01:    	lea    rsi,[rsp-0x18]
  01c06:    	mov    QWORD PTR [rbx],rsi
  01c09:    	lea    r14,[rsp-0x10]
  01c0e:    	mov    QWORD PTR [rsp-0x20],r14
  01c13:    	call   rax
  01c15:    	lea    r14,[rbp-0x8]
  01c19:    	mov    QWORD PTR [rbx],r14
  01c1c:    	mov    r14,QWORD PTR [rbp-0x10]
  01c20:    	movq   xmm5,QWORD PTR [rsp]
  01c25:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01c2b:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01c31:    	add    rsp,0x20
  01c35:    	test   rax,rax
  01c38:    	je     0x3ca39
  01c3e:    	mov    QWORD PTR [r14-0x78],rax
:00082 
:00083 _ = %2.call n=(%9; 1)                [<INVALID>]
  01c42:    	sub    rsp,0x20
  01c46:    	movq   QWORD PTR [rsp],xmm5
  01c4b:    	movq   QWORD PTR [rsp+0x8],xmm6
  01c51:    	movq   QWORD PTR [rsp+0x10],xmm7
  01c57:    	mov    rdi,QWORD PTR [r14-0x40]
  01c5b: 78 	movabs rax,0x557860aa2e20
  01c65:    	call   rax
  01c67:    	mov    r15d,eax
  01c6a: 78 	movabs r13,0x557861f78bc0
  01c74:    	cmp    QWORD PTR [r13+0x8],0x0
  01c79:    	je     0x3ca48
  01c7f:    	cmp    r15d,DWORD PTR [r13-0x8]
  01c83:    	jne    0x3ca48
  01c89:    	mov    eax,DWORD PTR [rip+0xffffffffffffd157]        # 0xffffede6
  01c8f:    	cmp    DWORD PTR [r13-0x4],eax
  01c93:    	jne    0x3ca48
  01c99: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01ca2:    	mov    rax,QWORD PTR [r14-0x40]
  01ca6:    	mov    QWORD PTR [rsp-0x40],rax
  01cab: 00 	mov    rdi,0x1
  01cb2:    	mov    rax,QWORD PTR [r14-0x78]
  01cb6:    	mov    QWORD PTR [rsp-0x48],rax
  01cbb: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01cc4:    	mov    r13,QWORD PTR [r13+0x8]
  01cc8:    	mov    rax,QWORD PTR [r13+0x8]
  01ccc:    	mov    QWORD PTR [rsp-0x30],rax
  01cd1:    	mov    rax,QWORD PTR [r13+0x0]
  01cd5:    	mov    r13,QWORD PTR [r13+0x10]
  01cd9:    	mov    rsi,QWORD PTR [rbx]
  01cdc:    	mov    QWORD PTR [rsp-0x18],rsi
  01ce1:    	lea    rsi,[rsp-0x18]
  01ce6:    	mov    QWORD PTR [rbx],rsi
  01ce9:    	lea    r14,[rsp-0x10]
  01cee:    	mov    QWORD PTR [rsp-0x20],r14
  01cf3:    	call   rax
  01cf5:    	lea    r14,[rbp-0x8]
  01cf9:    	mov    QWORD PTR [rbx],r14
  01cfc:    	mov    r14,QWORD PTR [rbp-0x10]
  01d00:    	movq   xmm5,QWORD PTR [rsp]
  01d05:    	movq   xmm6,QWORD PTR [rsp+0x8]
  01d0b:    	movq   xmm7,QWORD PTR [rsp+0x10]
  01d11:    	add    rsp,0x20
  01d15:    	test   rax,rax
  01d18:    	je     0x3ca89
:00084 
:00085 br =>:00086
  01d1e:    	jmp    0x3cafe
:00086 br =>:00087
  01d23:    	jmp    0x3cb71
:00087 %9 = nil
  01d28: 00 	mov    QWORD PTR [r14-0x78],0x4
:00088 ret %9
  01d30:    	mov    rax,QWORD PTR [r14-0x78]
  01d34:    	leave  
  01d35:    	ret    
==> start whole compile: vsub FuncId(91) self_class:Vec start:[00000] bytecode:0x557861ff1450
<== finished compile. elapsed:35.1µs
offset:Pos(25720) code: 1355 bytes  data: 61 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x70
  0000b: cmp    edx,0x1
  0000e: jne    0x3ae02
  00014: mov    rax,0x4
  0001b: mov    QWORD PTR [r14-0x40],rax
  0001f: mov    QWORD PTR [r14-0x48],rax
  00023: mov    QWORD PTR [r14-0x50],rax
  00027: mov    QWORD PTR [r14-0x58],rax
  0002b: mov    QWORD PTR [r14-0x60],rax
  0002f: mov    rdi,QWORD PTR [r14-0x30]
  00033: test   rdi,0x7
  0003a: jne    0x3ae11
  00040: cmp    DWORD PTR [rdi+0x4],0x2b
  00044: jne    0x3ae11
:00000 init_method reg:7 arg:1 pos:1 req:1 block:0 stack_offset:7
:00001 %2 = const[Vec]                      [Vec]
  0004a: mov    rax,QWORD PTR [rip+0xffffffffffffd007]        # 0xffffd058
  00051: cmp    rax,QWORD PTR [rip+0x510]        # 0x568
  00058: jne    0x3ae20
  0005e: mov    rax,QWORD PTR [rip+0x4f3]        # 0x558
  00065: mov    QWORD PTR [r14-0x40],rax
:00002 %3 = @x: Vec[IvarId(0)]
  00069: mov    rdi,QWORD PTR [r14-0x30]
  0006d: mov    rax,QWORD PTR [rdi+0x10]
  00071: mov    QWORD PTR [r14-0x48],rax
:00003 %4 = %1.call x()                     [Vec]
  00075: mov    rdi,QWORD PTR [r14-0x38]
  00079: test   rdi,0x7
  00080: jne    0x3ae66
  00086: cmp    DWORD PTR [rdi+0x4],0x2b
  0008a: jne    0x3ae66
  00090: cmp    DWORD PTR [rip+0xffffffffffffcfad],0x26        # 0xffffd044
  00097: jne    0x3ae66
  0009d: mov    esi,DWORD PTR [rip+0x4d1]        # 0x574
  000a3: cmp    esi,0xffffffff
  000a6: je     0x3ae75
  000ac: cmp    WORD PTR [rdi+0x2],0x3
  000b1: jne    0xca
  000b7: cmp    esi,0x6
  000ba: jge    0xca
  000c0: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000c5: jmp    0xd6
  000ca: movabs rax,0x557860b3bf40
  000d4: call   rax
  000d6: mov    QWORD PTR [r14-0x50],rax
:00004 
:00005 %3 = %3 - %4                         [Float][Float]
  000da: mov    rdi,QWORD PTR [r14-0x48]
  000de: test   rdi,0x1
  000e5: jne    0x3ae9e
  000eb: test   rdi,0x2
  000f2: je     0x12e
  000f8: xorps  xmm2,xmm2
  000fb: movabs rax,0x8000000000000002
  00105: cmp    rdi,rax
  00108: je     0x140
  0010e: mov    rax,rdi
  00111: sar    rax,0x3f
  00115: add    rax,0x2
  00119: and    rdi,0xfffffffffffffffc
  0011d: or     rdi,rax
  00120: rol    rdi,0x3d
  00124: movq   xmm2,rdi
  00129: jmp    0x140
  0012e: call   0xffff9c05
  00133: test   rax,rax
  00136: je     0x3ae9e
  0013c: movq   xmm2,xmm0
  00140: mov    rdi,QWORD PTR [r14-0x50]
  00144: test   rdi,0x1
  0014b: jne    0x3aead
  00151: test   rdi,0x2
  00158: je     0x194
  0015e: xorps  xmm3,xmm3
  00161: movabs rax,0x8000000000000002
  0016b: cmp    rdi,rax
  0016e: je     0x1a6
  00174: mov    rax,rdi
  00177: sar    rax,0x3f
  0017b: add    rax,0x2
  0017f: and    rdi,0xfffffffffffffffc
  00183: or     rdi,rax
  00186: rol    rdi,0x3d
  0018a: movq   xmm3,rdi
  0018f: jmp    0x1a6
  00194: call   0xffff9c05
  00199: test   rax,rax
  0019c: je     0x3aead
  001a2: movq   xmm3,xmm0
  001a6: subsd  xmm2,xmm3
:00006 %4 = @y: Vec[IvarId(1)]
  001aa: mov    rdi,QWORD PTR [r14-0x30]
  001ae: mov    rax,QWORD PTR [rdi+0x18]
  001b2: mov    QWORD PTR [r14-0x50],rax
:00007 %5 = %1.call y()                     [Vec]
  001b6: mov    rdi,QWORD PTR [r14-0x38]
  001ba: test   rdi,0x7
  001c1: jne    0x3aebc
  001c7: cmp    DWORD PTR [rdi+0x4],0x2b
  001cb: jne    0x3aebc
  001d1: cmp    DWORD PTR [rip+0xffffffffffffce6c],0x26        # 0xffffd044
  001d8: jne    0x3aebc
  001de: mov    esi,DWORD PTR [rip+0x398]        # 0x57c
  001e4: cmp    esi,0xffffffff
  001e7: je     0x3aed8
  001ed: cmp    WORD PTR [rdi+0x2],0x3
  001f2: jne    0x20b
  001f8: cmp    esi,0x6
  001fb: jge    0x20b
  00201: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00206: jmp    0x229
  0020b: sub    rsp,0x10
  0020f: movq   QWORD PTR [rsp],xmm2
  00214: movabs rax,0x557860b3bf40
  0021e: call   rax
  00220: movq   xmm2,QWORD PTR [rsp]
  00225: add    rsp,0x10
  00229: mov    QWORD PTR [r14-0x58],rax
:00008 
:00009 %4 = %4 - %5                         [Float][Float]
  0022d: mov    rdi,QWORD PTR [r14-0x50]
  00231: test   rdi,0x1
  00238: jne    0x3af13
  0023e: test   rdi,0x2
  00245: je     0x281
  0024b: xorps  xmm3,xmm3
  0024e: movabs rax,0x8000000000000002
  00258: cmp    rdi,rax
  0025b: je     0x293
  00261: mov    rax,rdi
  00264: sar    rax,0x3f
  00268: add    rax,0x2
  0026c: and    rdi,0xfffffffffffffffc
  00270: or     rdi,rax
  00273: rol    rdi,0x3d
  00277: movq   xmm3,rdi
  0027c: jmp    0x293
  00281: call   0xffff9c05
  00286: test   rax,rax
  00289: je     0x3af13
  0028f: movq   xmm3,xmm0
  00293: mov    rdi,QWORD PTR [r14-0x58]
  00297: test   rdi,0x1
  0029e: jne    0x3af2f
  002a4: test   rdi,0x2
  002ab: je     0x2e7
  002b1: xorps  xmm4,xmm4
  002b4: movabs rax,0x8000000000000002
  002be: cmp    rdi,rax
  002c1: je     0x2f9
  002c7: mov    rax,rdi
  002ca: sar    rax,0x3f
  002ce: add    rax,0x2
  002d2: and    rdi,0xfffffffffffffffc
  002d6: or     rdi,rax
  002d9: rol    rdi,0x3d
  002dd: movq   xmm4,rdi
  002e2: jmp    0x2f9
  002e7: call   0xffff9c05
  002ec: test   rax,rax
  002ef: je     0x3af2f
  002f5: movq   xmm4,xmm0
  002f9: subsd  xmm3,xmm4
:00010 %5 = @z: Vec[IvarId(2)]
  002fd: mov    rdi,QWORD PTR [r14-0x30]
  00301: mov    rax,QWORD PTR [rdi+0x20]
  00305: mov    QWORD PTR [r14-0x58],rax
:00011 %6 = %1.call z()                     [Vec]
  00309: mov    rdi,QWORD PTR [r14-0x38]
  0030d: test   rdi,0x7
  00314: jne    0x3af4b
  0031a: cmp    DWORD PTR [rdi+0x4],0x2b
  0031e: jne    0x3af4b
  00324: cmp    DWORD PTR [rip+0xffffffffffffcd19],0x26        # 0xffffd044
  0032b: jne    0x3af4b
  00331: mov    esi,DWORD PTR [rip+0x24d]        # 0x584
  00337: cmp    esi,0xffffffff
  0033a: je     0x3af74
  00340: cmp    WORD PTR [rdi+0x2],0x3
  00345: jne    0x35e
  0034b: cmp    esi,0x6
  0034e: jge    0x35e
  00354: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00359: jmp    0x388
  0035e: sub    rsp,0x10
  00362: movq   QWORD PTR [rsp],xmm2
  00367: movq   QWORD PTR [rsp+0x8],xmm3
  0036d: movabs rax,0x557860b3bf40
  00377: call   rax
  00379: movq   xmm2,QWORD PTR [rsp]
  0037e: movq   xmm3,QWORD PTR [rsp+0x8]
  00384: add    rsp,0x10
  00388: mov    QWORD PTR [r14-0x60],rax
:00012 
:00013 %5 = %5 - %6                         [Float][Float]
  0038c: mov    rdi,QWORD PTR [r14-0x58]
  00390: test   rdi,0x1
  00397: jne    0x3afbb
  0039d: test   rdi,0x2
  003a4: je     0x3e0
  003aa: xorps  xmm4,xmm4
  003ad: movabs rax,0x8000000000000002
  003b7: cmp    rdi,rax
  003ba: je     0x3f2
  003c0: mov    rax,rdi
  003c3: sar    rax,0x3f
  003c7: add    rax,0x2
  003cb: and    rdi,0xfffffffffffffffc
  003cf: or     rdi,rax
  003d2: rol    rdi,0x3d
  003d6: movq   xmm4,rdi
  003db: jmp    0x3f2
  003e0: call   0xffff9c05
  003e5: test   rax,rax
  003e8: je     0x3afbb
  003ee: movq   xmm4,xmm0
  003f2: mov    rdi,QWORD PTR [r14-0x60]
  003f6: test   rdi,0x1
  003fd: jne    0x3afe4
  00403: test   rdi,0x2
  0040a: je     0x446
  00410: xorps  xmm5,xmm5
  00413: movabs rax,0x8000000000000002
  0041d: cmp    rdi,rax
  00420: je     0x458
  00426: mov    rax,rdi
  00429: sar    rax,0x3f
  0042d: add    rax,0x2
  00431: and    rdi,0xfffffffffffffffc
  00435: or     rdi,rax
  00438: rol    rdi,0x3d
  0043c: movq   xmm5,rdi
  00441: jmp    0x458
  00446: call   0xffff9c05
  0044b: test   rax,rax
  0044e: je     0x3afe4
  00454: movq   xmm5,xmm0
  00458: subsd  xmm4,xmm5
:00014 %2 = %2.call new(%3; 3)              [#<Class:Vec>]
  0045c: movq   xmm0,xmm2
  00460: call   0xffff9d29
  00465: mov    QWORD PTR [r14-0x48],rax
  00469: movq   xmm0,xmm3
  0046d: call   0xffff9d29
  00472: mov    QWORD PTR [r14-0x50],rax
  00476: movq   xmm0,xmm4
  0047a: call   0xffff9d29
  0047f: mov    QWORD PTR [r14-0x58],rax
  00483: mov    rdi,QWORD PTR [r14-0x40]
  00487: test   rdi,0x7
  0048e: jne    0x3b00d
  00494: cmp    DWORD PTR [rdi+0x4],0x2c
  00498: jne    0x3b00d
  0049e: cmp    DWORD PTR [rip+0xffffffffffffcb9f],0x26        # 0xffffd044
  004a5: jne    0x3b00d
  004ab: mov    r9,0x0
  004b2: sub    rsp,0x20
  004b6: movq   QWORD PTR [rsp],xmm2
  004bb: movq   QWORD PTR [rsp+0x8],xmm3
  004c1: movq   QWORD PTR [rsp+0x10],xmm4
  004c7: movq   QWORD PTR [rsp+0x18],xmm5
  004cd: mov    rdx,rdi
  004d0: mov    QWORD PTR [rsp-0x40],rcx
  004d5: mov    QWORD PTR [rsp-0x28],0x0
  004de: lea    rcx,[r14-0x48]
  004e2: mov    r8,0x3
  004e9: mov    rsi,QWORD PTR [rbx]
  004ec: mov    QWORD PTR [rsp-0x18],rsi
  004f1: lea    rsi,[rsp-0x18]
  004f6: mov    QWORD PTR [rbx],rsi
  004f9: lea    r14,[rsp-0x10]
  004fe: mov    QWORD PTR [rsp-0x20],r14
  00503: call   0x3b01c
  00508: lea    r14,[rbp-0x8]
  0050c: mov    QWORD PTR [rbx],r14
  0050f: mov    r14,QWORD PTR [rbp-0x10]
  00513: movq   xmm2,QWORD PTR [rsp]
  00518: movq   xmm3,QWORD PTR [rsp+0x8]
  0051e: movq   xmm4,QWORD PTR [rsp+0x10]
  00524: movq   xmm5,QWORD PTR [rsp+0x18]
  0052a: add    rsp,0x20
  0052e: movabs r13,0x557861ff1550
  00538: test   rax,rax
  0053b: je     0xffff9bac
  00541: mov    QWORD PTR [r14-0x40],rax
:00015 
:00016 ret %2
  00545: mov    rax,QWORD PTR [r14-0x40]
  00549: leave  
  0054a: ret    
==> start whole compile: <unnamed> FuncId(110) self_class:Scene start:[00000] bytecode:0x557861fb8e50
<== finished compile. elapsed:131.3µs
offset:Pos(27406) code: 9391 bytes  data: 279 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xd0
  0000e:    	cmp    edx,0x1
  00011:    	jge    0x3d
  00017:    	mov    eax,0x1
  0001c:    	sub    eax,edx
  0001e:    	test   rax,rax
  00021:    	je     0x3d
  00027:    	lea    rdi,[r14-0x40]
  0002b: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  00033:    	sub    rax,0x1
  00037:    	jne    0x2b
  0003d: 00 	mov    rax,0x4
  00044:    	mov    QWORD PTR [r14-0x40],rax
  00048:    	mov    QWORD PTR [r14-0x48],rax
  0004c:    	mov    QWORD PTR [r14-0x50],rax
  00050:    	mov    QWORD PTR [r14-0x58],rax
  00054:    	mov    QWORD PTR [r14-0x60],rax
  00058:    	mov    QWORD PTR [r14-0x68],rax
  0005c:    	mov    QWORD PTR [r14-0x70],rax
  00060:    	mov    QWORD PTR [r14-0x78],rax
  00064:    	mov    QWORD PTR [r14-0x80],rax
  00068: ff 	mov    QWORD PTR [r14-0x88],rax
  0006f: ff 	mov    QWORD PTR [r14-0x90],rax
  00076: ff 	mov    QWORD PTR [r14-0x98],rax
  0007d: ff 	mov    QWORD PTR [r14-0xa0],rax
  00084: ff 	mov    QWORD PTR [r14-0xa8],rax
  0008b: ff 	mov    QWORD PTR [r14-0xb0],rax
  00092: ff 	mov    QWORD PTR [r14-0xb8],rax
  00099: ff 	mov    QWORD PTR [r14-0xc0],rax
  000a0:    	mov    rdi,QWORD PTR [r14-0x30]
  000a4: 00 	test   rdi,0x7
  000ab:    	jne    0x3a9c7
  000b1:    	cmp    DWORD PTR [rdi+0x4],0x35
  000b5:    	jne    0x3a9c7
:00000 init_block reg:19 arg:1 pos:1 req:1 block:0 stack_offset:13
:00001 %14 = dynvar(4, %1)
  000bb:    	mov    rax,QWORD PTR [r14-0x18]
  000bf:    	mov    rax,QWORD PTR [rax]
  000c2:    	mov    rax,QWORD PTR [rax]
  000c5:    	mov    rax,QWORD PTR [rax]
  000c8:    	mov    rax,QWORD PTR [rax-0x20]
  000cc: ff 	mov    QWORD PTR [r14-0xa0],rax
:00002 %2 = %14.call to_f()                 [Integer]
  000d3: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  000da: 00 	test   rdi,0x1
  000e1:    	je     0x3a9d6
  000e7: 26 	cmp    DWORD PTR [rip+0xffffffffffffc8c0],0x26        # 0xffffc9ae
  000ee:    	jne    0x3a9d6
  000f4:    	sar    rdi,1
  000f7:    	cvtsi2sd xmm2,rdi
:00003 
:00004 %14 = dynvar(4, %2)
  000fc:    	mov    rax,QWORD PTR [r14-0x18]
  00100:    	mov    rax,QWORD PTR [rax]
  00103:    	mov    rax,QWORD PTR [rax]
  00106:    	mov    rax,QWORD PTR [rax]
  00109:    	mov    rax,QWORD PTR [rax-0x28]
  0010d: ff 	mov    QWORD PTR [r14-0xa0],rax
:00005 %3 = %14.call to_f()                 [Integer]
  00114: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0011b: 00 	test   rdi,0x1
  00122:    	je     0x3a9e5
  00128: 26 	cmp    DWORD PTR [rip+0xffffffffffffc87f],0x26        # 0xffffc9ae
  0012f:    	jne    0x3a9e5
  00135:    	sar    rdi,1
  00138:    	cvtsi2sd xmm3,rdi
:00006 
:00007 %14 = dynvar(2, %1)
  0013d:    	mov    rax,QWORD PTR [r14-0x18]
  00141:    	mov    rax,QWORD PTR [rax]
  00144:    	mov    rax,QWORD PTR [rax-0x20]
  00148: ff 	mov    QWORD PTR [r14-0xa0],rax
:00008 %4 = %14.call to_f()                 [Integer]
  0014f: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00156: 00 	test   rdi,0x1
  0015d:    	je     0x3aa01
  00163: 26 	cmp    DWORD PTR [rip+0xffffffffffffc844],0x26        # 0xffffc9ae
  0016a:    	jne    0x3aa01
  00170:    	sar    rdi,1
  00173:    	cvtsi2sd xmm4,rdi
:00009 
:00010 %14 = dynvar(3, %1)
  00178:    	mov    rax,QWORD PTR [r14-0x18]
  0017c:    	mov    rax,QWORD PTR [rax]
  0017f:    	mov    rax,QWORD PTR [rax]
  00182:    	mov    rax,QWORD PTR [rax-0x20]
  00186: ff 	mov    QWORD PTR [r14-0xa0],rax
:00011 %5 = %14.call to_f()                 [Integer]
  0018d: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00194: 00 	test   rdi,0x1
  0019b:    	je     0x3aa2a
  001a1: 26 	cmp    DWORD PTR [rip+0xffffffffffffc806],0x26        # 0xffffc9ae
  001a8:    	jne    0x3aa2a
  001ae:    	sar    rdi,1
  001b1:    	cvtsi2sd xmm5,rdi
:00012 
:00013 %6 = %1.call to_f()                  [Integer]
  001b6:    	mov    rdi,QWORD PTR [r14-0x38]
  001ba: 00 	test   rdi,0x1
  001c1:    	je     0x3aa60
  001c7: 26 	cmp    DWORD PTR [rip+0xffffffffffffc7e0],0x26        # 0xffffc9ae
  001ce:    	jne    0x3aa60
  001d4:    	sar    rdi,1
  001d7:    	cvtsi2sd xmm6,rdi
:00014 
:00015 %14 = dynvar(1, %1)
  001dc:    	mov    rax,QWORD PTR [r14-0x18]
  001e0:    	mov    rax,QWORD PTR [rax-0x20]
  001e4: ff 	mov    QWORD PTR [r14-0xa0],rax
:00016 %7 = %14.call to_f()                 [Integer]
  001eb: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  001f2: 00 	test   rdi,0x1
  001f9:    	je     0x3aaa3
  001ff: 26 	cmp    DWORD PTR [rip+0xffffffffffffc7a8],0x26        # 0xffffc9ae
  00206:    	jne    0x3aaa3
  0020c:    	sar    rdi,1
  0020f:    	cvtsi2sd xmm7,rdi
:00017 
:00018 %14 = dynvar(4, %4)
  00214:    	mov    rax,QWORD PTR [r14-0x18]
  00218:    	mov    rax,QWORD PTR [rax]
  0021b:    	mov    rax,QWORD PTR [rax]
  0021e:    	mov    rax,QWORD PTR [rax]
  00221:    	mov    rax,QWORD PTR [rax-0x38]
  00225: ff 	mov    QWORD PTR [r14-0xa0],rax
:00019 %14 = %6 / %14                       [Float][Float]
  0022c: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00233: 00 	test   rdi,0x1
  0023a:    	jne    0x3aaf3
  00240: 00 	test   rdi,0x2
  00247:    	je     0x284
  0024d:    	xorps  xmm8,xmm8
  00251: 00 	movabs rax,0x8000000000000002
  0025b:    	cmp    rdi,rax
  0025e:    	je     0x297
  00264:    	mov    rax,rdi
  00267:    	sar    rax,0x3f
  0026b:    	add    rax,0x2
  0026f:    	and    rdi,0xfffffffffffffffc
  00273:    	or     rdi,rax
  00276:    	rol    rdi,0x3d
  0027a:    	movq   xmm8,rdi
  0027f:    	jmp    0x297
  00284:    	call   0xffff956f
  00289:    	test   rax,rax
  0028c:    	je     0x3aaf3
  00292:    	movq   xmm8,xmm0
  00297:    	movq   rax,xmm8
  0029c:    	test   rax,rax
  0029f:    	je     0xffff953b
  002a5:    	movq   xmm0,xmm6
  002a9:    	divsd  xmm0,xmm8
  002ae:    	movq   xmm8,xmm0
:00020 %14 = %4 + %14                       [Float][Float]
  002b3:    	addsd  xmm8,xmm4
:00021 %15 = literal[2.0]
  002b8: 21 	movq   xmm9,QWORD PTR [rip+0x21f1]        # 0x24b2
  002c1: 00 	mov    rax,0x2
  002c8: ff 	mov    QWORD PTR [r14-0xa8],rax
:00022 %15 = %2 / %15                       [Float][Float]
  002cf:    	movq   rax,xmm9
  002d4:    	test   rax,rax
  002d7:    	je     0xffff953b
  002dd:    	movq   xmm0,xmm2
  002e1:    	divsd  xmm0,xmm9
  002e6:    	movq   xmm9,xmm0
:00023 %14 = %14 - %15                      [Float][Float]
  002eb:    	subsd  xmm8,xmm9
:00024 %15 = literal[2.0]
  002f0: 21 	movq   xmm9,QWORD PTR [rip+0x21c9]        # 0x24c2
  002f9: 00 	mov    rax,0x2
  00300: ff 	mov    QWORD PTR [r14-0xa8],rax
:00025 %15 = %2 / %15                       [Float][Float]
  00307:    	movq   rax,xmm9
  0030c:    	test   rax,rax
  0030f:    	je     0xffff953b
  00315:    	movq   xmm0,xmm2
  00319:    	divsd  xmm0,xmm9
  0031e:    	movq   xmm9,xmm0
:00026 %8 = %14 / %15                       [Float][Float]
  00323:    	movq   xmm10,xmm8
  00328:    	movq   rax,xmm9
  0032d:    	test   rax,rax
  00330:    	je     0xffff953b
  00336:    	divsd  xmm10,xmm9
:00027 %14 = dynvar(4, %4)
  0033b:    	mov    rax,QWORD PTR [r14-0x18]
  0033f:    	mov    rax,QWORD PTR [rax]
  00342:    	mov    rax,QWORD PTR [rax]
  00345:    	mov    rax,QWORD PTR [rax]
  00348:    	mov    rax,QWORD PTR [rax-0x38]
  0034c: ff 	mov    QWORD PTR [r14-0xa0],rax
:00028 %14 = %7 / %14                       [Float][Float]
  00353: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0035a: 00 	test   rdi,0x1
  00361:    	jne    0x3ab50
  00367: 00 	test   rdi,0x2
  0036e:    	je     0x3ab
  00374:    	xorps  xmm8,xmm8
  00378: 00 	movabs rax,0x8000000000000002
  00382:    	cmp    rdi,rax
  00385:    	je     0x3be
  0038b:    	mov    rax,rdi
  0038e:    	sar    rax,0x3f
  00392:    	add    rax,0x2
  00396:    	and    rdi,0xfffffffffffffffc
  0039a:    	or     rdi,rax
  0039d:    	rol    rdi,0x3d
  003a1:    	movq   xmm8,rdi
  003a6:    	jmp    0x3be
  003ab:    	call   0xffff956f
  003b0:    	test   rax,rax
  003b3:    	je     0x3ab50
  003b9:    	movq   xmm8,xmm0
  003be:    	movq   rax,xmm8
  003c3:    	test   rax,rax
  003c6:    	je     0xffff953b
  003cc:    	movq   xmm0,xmm7
  003d0:    	divsd  xmm0,xmm8
  003d5:    	movq   xmm8,xmm0
:00029 %14 = %5 + %14                       [Float][Float]
  003da:    	addsd  xmm8,xmm5
:00030 %15 = literal[2.0]
  003df: 20 	movq   xmm9,QWORD PTR [rip+0x20ea]        # 0x24d2
  003e8: 00 	mov    rax,0x2
  003ef: ff 	mov    QWORD PTR [r14-0xa8],rax
:00031 %15 = %3 / %15                       [Float][Float]
  003f6:    	movq   rax,xmm9
  003fb:    	test   rax,rax
  003fe:    	je     0xffff953b
  00404:    	movq   xmm0,xmm3
  00408:    	divsd  xmm0,xmm9
  0040d:    	movq   xmm9,xmm0
:00032 %14 = %14 - %15                      [Float][Float]
  00412:    	subsd  xmm8,xmm9
:00033 %14 = neg %14                        [Float]
  00417: 00 	xorps  xmm8,XMMWORD PTR [rip+0x20c3]        # 0x24e2
:00034 %15 = literal[2.0]
  0041f: 20 	movq   xmm9,QWORD PTR [rip+0x20ca]        # 0x24f2
  00428: 00 	mov    rax,0x2
  0042f: ff 	mov    QWORD PTR [r14-0xa8],rax
:00035 %15 = %3 / %15                       [Float][Float]
  00436:    	movq   rax,xmm9
  0043b:    	test   rax,rax
  0043e:    	je     0xffff953b
  00444:    	movq   xmm0,xmm3
  00448:    	divsd  xmm0,xmm9
  0044d:    	movq   xmm9,xmm0
:00036 %9 = %14 / %15                       [Float][Float]
  00452:    	movq   xmm11,xmm8
  00457:    	movq   rax,xmm9
  0045c:    	test   rax,rax
  0045f:    	je     0xffff953b
  00465:    	divsd  xmm11,xmm9
:00037 %14 = const[Vec]                     [Vec]
  0046a: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffc551]        # 0xffffc9c2
  00471: 00 	cmp    rax,QWORD PTR [rip+0x209a]        # 0x2512
  00478:    	jne    0x3abcc
  0047e: 00 	mov    rax,QWORD PTR [rip+0x207d]        # 0x2502
  00485: ff 	mov    QWORD PTR [r14-0xa0],rax
:00038 %15 = %8
:00039 %16 = %9
:00040 %17 = literal[-1.0]
  0048c: 20 	movq   xmm8,QWORD PTR [rip+0x208d]        # 0x2522
  00495: 00 	movabs rax,0xff80000000000006
  0049f: ff 	mov    QWORD PTR [r14-0xb8],rax
:00041 %14 = %14.call new(%15; 3)           [#<Class:Vec>]
  004a6:    	movq   xmm0,xmm10
  004ab:    	call   0xffff9693
  004b0: ff 	mov    QWORD PTR [r14-0xa8],rax
  004b7:    	movq   xmm0,xmm11
  004bc:    	call   0xffff9693
  004c1: ff 	mov    QWORD PTR [r14-0xb0],rax
  004c8: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  004cf: 00 	test   rdi,0x7
  004d6:    	jne    0x3ac8a
  004dc:    	cmp    DWORD PTR [rdi+0x4],0x2c
  004e0:    	jne    0x3ac8a
  004e6: 26 	cmp    DWORD PTR [rip+0xffffffffffffc4c1],0x26        # 0xffffc9ae
  004ed:    	jne    0x3ac8a
  004f3: 00 	mov    r9,0x0
  004fa:    	sub    rsp,0x50
  004fe:    	movq   QWORD PTR [rsp],xmm2
  00503:    	movq   QWORD PTR [rsp+0x8],xmm3
  00509:    	movq   QWORD PTR [rsp+0x10],xmm4
  0050f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00515:    	movq   QWORD PTR [rsp+0x20],xmm6
  0051b:    	movq   QWORD PTR [rsp+0x28],xmm7
  00521: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00528: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0052f: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00536:    	mov    rdx,rdi
  00539:    	mov    QWORD PTR [rsp-0x40],rcx
  0053e: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00547: ff 	lea    rcx,[r14-0xa8]
  0054e: 00 	mov    r8,0x3
  00555:    	mov    rsi,QWORD PTR [rbx]
  00558:    	mov    QWORD PTR [rsp-0x18],rsi
  0055d:    	lea    rsi,[rsp-0x18]
  00562:    	mov    QWORD PTR [rbx],rsi
  00565:    	lea    r14,[rsp-0x10]
  0056a:    	mov    QWORD PTR [rsp-0x20],r14
  0056f:    	call   0x3ad03
  00574:    	lea    r14,[rbp-0x8]
  00578:    	mov    QWORD PTR [rbx],r14
  0057b:    	mov    r14,QWORD PTR [rbp-0x10]
  0057f:    	movq   xmm2,QWORD PTR [rsp]
  00584:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0058a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00590:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00596:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0059c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  005a2: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  005a9: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  005b0: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  005b7:    	add    rsp,0x50
  005bb: 78 	movabs r13,0x557861fb9100
  005c5:    	test   rax,rax
  005c8:    	je     0xffff9516
  005ce: ff 	mov    QWORD PTR [r14-0xa0],rax
:00042 
:00043 %10 = %14.call vnormalize()          [Vec]
  005d5: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  005dc: 00 	test   rdi,0x7
  005e3:    	jne    0x3ad35
  005e9:    	cmp    DWORD PTR [rdi+0x4],0x2b
  005ed:    	jne    0x3ad35
  005f3: 26 	cmp    DWORD PTR [rip+0xffffffffffffc3b4],0x26        # 0xffffc9ae
  005fa:    	jne    0x3ad35
  00600:    	sub    rsp,0x50
  00604:    	movq   QWORD PTR [rsp],xmm2
  00609:    	movq   QWORD PTR [rsp+0x8],xmm3
  0060f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00615:    	movq   QWORD PTR [rsp+0x18],xmm5
  0061b:    	movq   QWORD PTR [rsp+0x20],xmm6
  00621:    	movq   QWORD PTR [rsp+0x28],xmm7
  00627: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0062e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00635: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0063c: 00 	cmp    DWORD PTR [rip+0xffffffffffffc36f],0x0        # 0xffffc9b2
  00643:    	je     0x65b
  00649:    	mov    rdi,r12
  0064c:    	mov    rsi,QWORD PTR [rbx]
  0064f: 78 	movabs rax,0x557860afd140
  00659:    	call   rax
  0065b: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00664: ff 	mov    rax,QWORD PTR [r14-0xa0]
  0066b:    	mov    QWORD PTR [rsp-0x40],rax
  00670: 00 	mov    rdi,0x0
  00677: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00680: 07 	movabs rax,0x70000005f
  0068a:    	mov    QWORD PTR [rsp-0x30],rax
  0068f: 78 	movabs r13,0x557861f90e80
  00699:    	mov    rsi,QWORD PTR [rbx]
  0069c:    	mov    QWORD PTR [rsp-0x18],rsi
  006a1:    	lea    rsi,[rsp-0x18]
  006a6:    	mov    QWORD PTR [rbx],rsi
  006a9:    	lea    r14,[rsp-0x10]
  006ae:    	mov    QWORD PTR [rsp-0x20],r14
  006b3:    	call   0xffffd275
  006b8:    	lea    r14,[rbp-0x8]
  006bc:    	mov    QWORD PTR [rbx],r14
  006bf:    	mov    r14,QWORD PTR [rbp-0x10]
  006c3:    	movq   xmm2,QWORD PTR [rsp]
  006c8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006ce:    	movq   xmm4,QWORD PTR [rsp+0x10]
  006d4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  006da:    	movq   xmm6,QWORD PTR [rsp+0x20]
  006e0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  006e6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  006ed: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  006f4: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  006fb:    	add    rsp,0x50
  006ff: 78 	movabs r13,0x557861fb9120
  00709:    	test   rax,rax
  0070c:    	je     0xffff9516
  00712:    	mov    QWORD PTR [r14-0x80],rax
:00044 
:00045 %14 = const[Ray]                     [Ray]
  00716: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffc2a5]        # 0xffffc9c2
  0071d: 00 	cmp    rax,QWORD PTR [rip+0x1e1e]        # 0x2542
  00724:    	jne    0x3adae
  0072a: 00 	mov    rax,QWORD PTR [rip+0x1e01]        # 0x2532
  00731: ff 	mov    QWORD PTR [r14-0xa0],rax
:00046 %15 = const[Vec]                     [Vec]
  00738: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffc283]        # 0xffffc9c2
  0073f: 00 	cmp    rax,QWORD PTR [rip+0x1e1c]        # 0x2562
  00746:    	jne    0x3ae6c
  0074c: 00 	mov    rax,QWORD PTR [rip+0x1dff]        # 0x2552
  00753: ff 	mov    QWORD PTR [r14-0xa8],rax
:00047 %16 = literal[0.0]
  0075a: 1e 	movq   xmm9,QWORD PTR [rip+0x1e0f]        # 0x2572
  00763: 00 	movabs rax,0x8000000000000002
  0076d: ff 	mov    QWORD PTR [r14-0xb0],rax
:00048 %17 = literal[0.0]
  00774: 1e 	movq   xmm8,QWORD PTR [rip+0x1e05]        # 0x2582
  0077d: 00 	movabs rax,0x8000000000000002
  00787: ff 	mov    QWORD PTR [r14-0xb8],rax
:00049 %18 = literal[0.0]
  0078e: 1d 	movq   xmm12,QWORD PTR [rip+0x1dfb]        # 0x2592
  00797: 00 	movabs rax,0x8000000000000002
  007a1: ff 	mov    QWORD PTR [r14-0xc0],rax
:00050 %15 = %15.call new(%16; 3)           [#<Class:Vec>]
  007a8: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  007af: 00 	test   rdi,0x7
  007b6:    	jne    0x3af2a
  007bc:    	cmp    DWORD PTR [rdi+0x4],0x2c
  007c0:    	jne    0x3af2a
  007c6: 26 	cmp    DWORD PTR [rip+0xffffffffffffc1e1],0x26        # 0xffffc9ae
  007cd:    	jne    0x3af2a
  007d3: 00 	mov    r9,0x0
  007da:    	sub    rsp,0x60
  007de:    	movq   QWORD PTR [rsp],xmm2
  007e3:    	movq   QWORD PTR [rsp+0x8],xmm3
  007e9:    	movq   QWORD PTR [rsp+0x10],xmm4
  007ef:    	movq   QWORD PTR [rsp+0x18],xmm5
  007f5:    	movq   QWORD PTR [rsp+0x20],xmm6
  007fb:    	movq   QWORD PTR [rsp+0x28],xmm7
  00801: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00808: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0080f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00816: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0081d: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00824:    	mov    rdx,rdi
  00827:    	mov    QWORD PTR [rsp-0x40],rcx
  0082c: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00835: ff 	lea    rcx,[r14-0xb0]
  0083c: 00 	mov    r8,0x3
  00843:    	mov    rsi,QWORD PTR [rbx]
  00846:    	mov    QWORD PTR [rsp-0x18],rsi
  0084b:    	lea    rsi,[rsp-0x18]
  00850:    	mov    QWORD PTR [rbx],rsi
  00853:    	lea    r14,[rsp-0x10]
  00858:    	mov    QWORD PTR [rsp-0x20],r14
  0085d:    	call   0x3afa3
  00862:    	lea    r14,[rbp-0x8]
  00866:    	mov    QWORD PTR [rbx],r14
  00869:    	mov    r14,QWORD PTR [rbp-0x10]
  0086d:    	movq   xmm2,QWORD PTR [rsp]
  00872:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00878:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0087e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00884:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0088a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00890: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00897: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0089e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  008a5: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  008ac: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  008b3:    	add    rsp,0x60
  008b7: 78 	movabs r13,0x557861fb9190
  008c1:    	test   rax,rax
  008c4:    	je     0xffff9516
  008ca: ff 	mov    QWORD PTR [r14-0xa8],rax
:00051 
:00052 %16 = %10
  008d1:    	mov    rax,QWORD PTR [r14-0x80]
  008d5: ff 	mov    QWORD PTR [r14-0xb0],rax
:00053 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
  008dc: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  008e3: 00 	test   rdi,0x7
  008ea:    	jne    0x3afd5
  008f0:    	cmp    DWORD PTR [rdi+0x4],0x32
  008f4:    	jne    0x3afd5
  008fa: 26 	cmp    DWORD PTR [rip+0xffffffffffffc0ad],0x26        # 0xffffc9ae
  00901:    	jne    0x3afd5
  00907: 00 	mov    r9,0x0
  0090e:    	sub    rsp,0x50
  00912:    	movq   QWORD PTR [rsp],xmm2
  00917:    	movq   QWORD PTR [rsp+0x8],xmm3
  0091d:    	movq   QWORD PTR [rsp+0x10],xmm4
  00923:    	movq   QWORD PTR [rsp+0x18],xmm5
  00929:    	movq   QWORD PTR [rsp+0x20],xmm6
  0092f:    	movq   QWORD PTR [rsp+0x28],xmm7
  00935: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0093c: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00943: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0094a: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00951:    	mov    rdx,rdi
  00954:    	mov    QWORD PTR [rsp-0x40],rcx
  00959: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00962: ff 	lea    rcx,[r14-0xa8]
  00969: 00 	mov    r8,0x2
  00970:    	mov    rsi,QWORD PTR [rbx]
  00973:    	mov    QWORD PTR [rsp-0x18],rsi
  00978:    	lea    rsi,[rsp-0x18]
  0097d:    	mov    QWORD PTR [rbx],rsi
  00980:    	lea    r14,[rsp-0x10]
  00985:    	mov    QWORD PTR [rsp-0x20],r14
  0098a:    	call   0x3b04e
  0098f:    	lea    r14,[rbp-0x8]
  00993:    	mov    QWORD PTR [rbx],r14
  00996:    	mov    r14,QWORD PTR [rbp-0x10]
  0099a:    	movq   xmm2,QWORD PTR [rsp]
  0099f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009a5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009ab:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009b1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  009b7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  009bd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  009c4: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  009cb: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  009d2: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  009d9:    	add    rsp,0x50
  009dd: 78 	movabs r13,0x557861fb91c0
  009e7:    	test   rax,rax
  009ea:    	je     0xffff9516
  009f0: ff 	mov    QWORD PTR [r14-0x88],rax
:00054 
:00055 %14 = const[Isect]                   [Isect]
  009f7: ff 	mov    rax,QWORD PTR [rip+0xffffffffffffbfc4]        # 0xffffc9c2
  009fe: 00 	cmp    rax,QWORD PTR [rip+0x1bad]        # 0x25b2
  00a05:    	jne    0x3b080
  00a0b: 00 	mov    rax,QWORD PTR [rip+0x1b90]        # 0x25a2
  00a12: ff 	mov    QWORD PTR [r14-0xa0],rax
:00056 %12 = %14.call new()                 [#<Class:Isect>]
  00a19: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00a20: 00 	test   rdi,0x7
  00a27:    	jne    0x3b14c
  00a2d:    	cmp    DWORD PTR [rdi+0x4],0x34
  00a31:    	jne    0x3b14c
  00a37: 26 	cmp    DWORD PTR [rip+0xffffffffffffbf70],0x26        # 0xffffc9ae
  00a3e:    	jne    0x3b14c
  00a44: 00 	mov    r9,0x0
  00a4b:    	sub    rsp,0x50
  00a4f:    	movq   QWORD PTR [rsp],xmm2
  00a54:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a5a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a60:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a66:    	movq   QWORD PTR [rsp+0x20],xmm6
  00a6c:    	movq   QWORD PTR [rsp+0x28],xmm7
  00a72: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00a79: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00a80: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00a87: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00a8e:    	mov    rdx,rdi
  00a91:    	mov    QWORD PTR [rsp-0x40],rcx
  00a96: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00a9f: ff 	lea    rcx,[r14-0xa8]
  00aa6: 00 	mov    r8,0x0
  00aad:    	mov    rsi,QWORD PTR [rbx]
  00ab0:    	mov    QWORD PTR [rsp-0x18],rsi
  00ab5:    	lea    rsi,[rsp-0x18]
  00aba:    	mov    QWORD PTR [rbx],rsi
  00abd:    	lea    r14,[rsp-0x10]
  00ac2:    	mov    QWORD PTR [rsp-0x20],r14
  00ac7:    	call   0x3b1c5
  00acc:    	lea    r14,[rbp-0x8]
  00ad0:    	mov    QWORD PTR [rbx],r14
  00ad3:    	mov    r14,QWORD PTR [rbp-0x10]
  00ad7:    	movq   xmm2,QWORD PTR [rsp]
  00adc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ae2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ae8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00aee:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00af4:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00afa: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00b01: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00b08: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00b0f: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  00b16:    	add    rsp,0x50
  00b1a: 78 	movabs r13,0x557861fb91f0
  00b24:    	test   rax,rax
  00b27:    	je     0xffff9516
  00b2d: ff 	mov    QWORD PTR [r14-0x90],rax
:00057 
:00058 %14 = @spheres: Scene[IvarId(0)]
  00b34:    	mov    rdi,QWORD PTR [r14-0x30]
  00b38:    	mov    rax,QWORD PTR [rdi+0x10]
  00b3c: ff 	mov    QWORD PTR [r14-0xa0],rax
:00059 %15 = 0: i32
  00b43: ff 	mov    QWORD PTR [r14-0xa8],0x1
:00060 %14 = %14.[%15]                      [Array][Integer]
  00b4e: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00b55: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00b5c: 00 	test   rdi,0x7
  00b63:    	jne    0x3b1f7
  00b69:    	cmp    DWORD PTR [rdi+0x4],0xb
  00b6d:    	jne    0x3b1f7
  00b73: 00 	test   rsi,0x1
  00b7a:    	je     0x3b1f7
  00b80:    	sar    rsi,1
  00b83:    	sub    rsp,0x50
  00b87:    	movq   QWORD PTR [rsp],xmm2
  00b8c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b92:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b98:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b9e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00ba4:    	movq   QWORD PTR [rsp+0x28],xmm7
  00baa: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00bb1: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00bb8: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00bbf: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00bc6: 78 	movabs rax,0x557860b06070
  00bd0:    	call   rax
  00bd2:    	movq   xmm2,QWORD PTR [rsp]
  00bd7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00bdd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00be3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00be9:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00bef:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00bf5: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00bfc: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00c03: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00c0a: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  00c11:    	add    rsp,0x50
  00c15: 78 	movabs r13,0x557861fb9220
  00c1f:    	test   rax,rax
  00c22:    	je     0xffff9516
  00c28: ff 	mov    QWORD PTR [r14-0xa0],rax
:00061 %15 = %11
  00c2f: ff 	mov    rax,QWORD PTR [r14-0x88]
  00c36: ff 	mov    QWORD PTR [r14-0xa8],rax
:00062 %16 = %12
  00c3d: ff 	mov    rax,QWORD PTR [r14-0x90]
  00c44: ff 	mov    QWORD PTR [r14-0xb0],rax
:00063 _ = %14.call intersect(%15; 2)       [Sphere]
  00c4b: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00c52: 00 	test   rdi,0x7
  00c59:    	jne    0x3b270
  00c5f:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00c63:    	jne    0x3b270
  00c69: 26 	cmp    DWORD PTR [rip+0xffffffffffffbd3e],0x26        # 0xffffc9ae
  00c70:    	jne    0x3b270
  00c76:    	sub    rsp,0x50
  00c7a:    	movq   QWORD PTR [rsp],xmm2
  00c7f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c85:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c8b:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c91:    	movq   QWORD PTR [rsp+0x20],xmm6
  00c97:    	movq   QWORD PTR [rsp+0x28],xmm7
  00c9d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ca4: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00cab: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00cb2: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00cb9: 00 	cmp    DWORD PTR [rip+0xffffffffffffbcf2],0x0        # 0xffffc9b2
  00cc0:    	je     0xcd8
  00cc6:    	mov    rdi,r12
  00cc9:    	mov    rsi,QWORD PTR [rbx]
  00ccc: 78 	movabs rax,0x557860afd140
  00cd6:    	call   rax
  00cd8: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00ce1: ff 	mov    rax,QWORD PTR [r14-0xa0]
  00ce8:    	mov    QWORD PTR [rsp-0x40],rax
  00ced: 00 	mov    rdi,0x2
  00cf4: ff 	mov    rax,QWORD PTR [r14-0xa8]
  00cfb:    	mov    QWORD PTR [rsp-0x48],rax
  00d00: ff 	mov    rax,QWORD PTR [r14-0xb0]
  00d07:    	mov    QWORD PTR [rsp-0x50],rax
  00d0c: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00d15: 0e 	movabs rax,0x1000e00000061
  00d1f:    	mov    QWORD PTR [rsp-0x30],rax
  00d24: 78 	movabs r13,0x557861f78680
  00d2e:    	mov    rsi,QWORD PTR [rbx]
  00d31:    	mov    QWORD PTR [rsp-0x18],rsi
  00d36:    	lea    rsi,[rsp-0x18]
  00d3b:    	mov    QWORD PTR [rbx],rsi
  00d3e:    	lea    r14,[rsp-0x10]
  00d43:    	mov    QWORD PTR [rsp-0x20],r14
  00d48:    	call   0xffffd56e
  00d4d:    	lea    r14,[rbp-0x8]
  00d51:    	mov    QWORD PTR [rbx],r14
  00d54:    	mov    r14,QWORD PTR [rbp-0x10]
  00d58:    	movq   xmm2,QWORD PTR [rsp]
  00d5d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d63:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d69:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d6f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d75:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d7b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d82: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00d89: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00d90: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  00d97:    	add    rsp,0x50
  00d9b: 78 	movabs r13,0x557861fb9260
  00da5:    	test   rax,rax
  00da8:    	je     0xffff9516
:00064 
:00065 %14 = @spheres: Scene[IvarId(0)]
  00dae:    	mov    rdi,QWORD PTR [r14-0x30]
  00db2:    	mov    rax,QWORD PTR [rdi+0x10]
  00db6: ff 	mov    QWORD PTR [r14-0xa0],rax
:00066 %15 = 1: i32
  00dbd: ff 	mov    QWORD PTR [r14-0xa8],0x3
:00067 %14 = %14.[%15]                      [Array][Integer]
  00dc8: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00dcf: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00dd6: 00 	test   rdi,0x7
  00ddd:    	jne    0x3b2e9
  00de3:    	cmp    DWORD PTR [rdi+0x4],0xb
  00de7:    	jne    0x3b2e9
  00ded: 00 	test   rsi,0x1
  00df4:    	je     0x3b2e9
  00dfa:    	sar    rsi,1
  00dfd:    	sub    rsp,0x50
  00e01:    	movq   QWORD PTR [rsp],xmm2
  00e06:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e0c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e12:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e18:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e1e:    	movq   QWORD PTR [rsp+0x28],xmm7
  00e24: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e2b: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00e32: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00e39: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00e40: 78 	movabs rax,0x557860b06070
  00e4a:    	call   rax
  00e4c:    	movq   xmm2,QWORD PTR [rsp]
  00e51:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e57:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e5d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e63:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e69:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e6f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e76: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00e7d: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00e84: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  00e8b:    	add    rsp,0x50
  00e8f: 78 	movabs r13,0x557861fb9290
  00e99:    	test   rax,rax
  00e9c:    	je     0xffff9516
  00ea2: ff 	mov    QWORD PTR [r14-0xa0],rax
:00068 %15 = %11
  00ea9: ff 	mov    rax,QWORD PTR [r14-0x88]
  00eb0: ff 	mov    QWORD PTR [r14-0xa8],rax
:00069 %16 = %12
  00eb7: ff 	mov    rax,QWORD PTR [r14-0x90]
  00ebe: ff 	mov    QWORD PTR [r14-0xb0],rax
:00070 _ = %14.call intersect(%15; 2)       [Sphere]
  00ec5: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00ecc: 00 	test   rdi,0x7
  00ed3:    	jne    0x3b362
  00ed9:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00edd:    	jne    0x3b362
  00ee3: 26 	cmp    DWORD PTR [rip+0xffffffffffffbac4],0x26        # 0xffffc9ae
  00eea:    	jne    0x3b362
  00ef0:    	sub    rsp,0x50
  00ef4:    	movq   QWORD PTR [rsp],xmm2
  00ef9:    	movq   QWORD PTR [rsp+0x8],xmm3
  00eff:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f05:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f0b:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f11:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f17: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f1e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00f25: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00f2c: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00f33: 00 	cmp    DWORD PTR [rip+0xffffffffffffba78],0x0        # 0xffffc9b2
  00f3a:    	je     0xf52
  00f40:    	mov    rdi,r12
  00f43:    	mov    rsi,QWORD PTR [rbx]
  00f46: 78 	movabs rax,0x557860afd140
  00f50:    	call   rax
  00f52: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00f5b: ff 	mov    rax,QWORD PTR [r14-0xa0]
  00f62:    	mov    QWORD PTR [rsp-0x40],rax
  00f67: 00 	mov    rdi,0x2
  00f6e: ff 	mov    rax,QWORD PTR [r14-0xa8]
  00f75:    	mov    QWORD PTR [rsp-0x48],rax
  00f7a: ff 	mov    rax,QWORD PTR [r14-0xb0]
  00f81:    	mov    QWORD PTR [rsp-0x50],rax
  00f86: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00f8f: 0e 	movabs rax,0x1000e00000061
  00f99:    	mov    QWORD PTR [rsp-0x30],rax
  00f9e: 78 	movabs r13,0x557861f78680
  00fa8:    	mov    rsi,QWORD PTR [rbx]
  00fab:    	mov    QWORD PTR [rsp-0x18],rsi
  00fb0:    	lea    rsi,[rsp-0x18]
  00fb5:    	mov    QWORD PTR [rbx],rsi
  00fb8:    	lea    r14,[rsp-0x10]
  00fbd:    	mov    QWORD PTR [rsp-0x20],r14
  00fc2:    	call   0xffffd56e
  00fc7:    	lea    r14,[rbp-0x8]
  00fcb:    	mov    QWORD PTR [rbx],r14
  00fce:    	mov    r14,QWORD PTR [rbp-0x10]
  00fd2:    	movq   xmm2,QWORD PTR [rsp]
  00fd7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fdd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fe3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fe9:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00fef:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00ff5: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00ffc: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01003: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  0100a: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01011:    	add    rsp,0x50
  01015: 78 	movabs r13,0x557861fb92d0
  0101f:    	test   rax,rax
  01022:    	je     0xffff9516
:00071 
:00072 %14 = @spheres: Scene[IvarId(0)]
  01028:    	mov    rdi,QWORD PTR [r14-0x30]
  0102c:    	mov    rax,QWORD PTR [rdi+0x10]
  01030: ff 	mov    QWORD PTR [r14-0xa0],rax
:00073 %15 = 2: i32
  01037: ff 	mov    QWORD PTR [r14-0xa8],0x5
:00074 %14 = %14.[%15]                      [Array][Integer]
  01042: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01049: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  01050: 00 	test   rdi,0x7
  01057:    	jne    0x3b3db
  0105d:    	cmp    DWORD PTR [rdi+0x4],0xb
  01061:    	jne    0x3b3db
  01067: 00 	test   rsi,0x1
  0106e:    	je     0x3b3db
  01074:    	sar    rsi,1
  01077:    	sub    rsp,0x50
  0107b:    	movq   QWORD PTR [rsp],xmm2
  01080:    	movq   QWORD PTR [rsp+0x8],xmm3
  01086:    	movq   QWORD PTR [rsp+0x10],xmm4
  0108c:    	movq   QWORD PTR [rsp+0x18],xmm5
  01092:    	movq   QWORD PTR [rsp+0x20],xmm6
  01098:    	movq   QWORD PTR [rsp+0x28],xmm7
  0109e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  010a5: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  010ac: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  010b3: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  010ba: 78 	movabs rax,0x557860b06070
  010c4:    	call   rax
  010c6:    	movq   xmm2,QWORD PTR [rsp]
  010cb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010d1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010d7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010dd:    	movq   xmm6,QWORD PTR [rsp+0x20]
  010e3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  010e9: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  010f0: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  010f7: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  010fe: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01105:    	add    rsp,0x50
  01109: 78 	movabs r13,0x557861fb9300
  01113:    	test   rax,rax
  01116:    	je     0xffff9516
  0111c: ff 	mov    QWORD PTR [r14-0xa0],rax
:00075 %15 = %11
  01123: ff 	mov    rax,QWORD PTR [r14-0x88]
  0112a: ff 	mov    QWORD PTR [r14-0xa8],rax
:00076 %16 = %12
  01131: ff 	mov    rax,QWORD PTR [r14-0x90]
  01138: ff 	mov    QWORD PTR [r14-0xb0],rax
:00077 _ = %14.call intersect(%15; 2)       [Sphere]
  0113f: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01146: 00 	test   rdi,0x7
  0114d:    	jne    0x3b454
  01153:    	cmp    DWORD PTR [rdi+0x4],0x2d
  01157:    	jne    0x3b454
  0115d: 26 	cmp    DWORD PTR [rip+0xffffffffffffb84a],0x26        # 0xffffc9ae
  01164:    	jne    0x3b454
  0116a:    	sub    rsp,0x50
  0116e:    	movq   QWORD PTR [rsp],xmm2
  01173:    	movq   QWORD PTR [rsp+0x8],xmm3
  01179:    	movq   QWORD PTR [rsp+0x10],xmm4
  0117f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01185:    	movq   QWORD PTR [rsp+0x20],xmm6
  0118b:    	movq   QWORD PTR [rsp+0x28],xmm7
  01191: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01198: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0119f: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  011a6: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  011ad: 00 	cmp    DWORD PTR [rip+0xffffffffffffb7fe],0x0        # 0xffffc9b2
  011b4:    	je     0x11cc
  011ba:    	mov    rdi,r12
  011bd:    	mov    rsi,QWORD PTR [rbx]
  011c0: 78 	movabs rax,0x557860afd140
  011ca:    	call   rax
  011cc: 00 	mov    QWORD PTR [rsp-0x28],0x0
  011d5: ff 	mov    rax,QWORD PTR [r14-0xa0]
  011dc:    	mov    QWORD PTR [rsp-0x40],rax
  011e1: 00 	mov    rdi,0x2
  011e8: ff 	mov    rax,QWORD PTR [r14-0xa8]
  011ef:    	mov    QWORD PTR [rsp-0x48],rax
  011f4: ff 	mov    rax,QWORD PTR [r14-0xb0]
  011fb:    	mov    QWORD PTR [rsp-0x50],rax
  01200: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01209: 0e 	movabs rax,0x1000e00000061
  01213:    	mov    QWORD PTR [rsp-0x30],rax
  01218: 78 	movabs r13,0x557861f78680
  01222:    	mov    rsi,QWORD PTR [rbx]
  01225:    	mov    QWORD PTR [rsp-0x18],rsi
  0122a:    	lea    rsi,[rsp-0x18]
  0122f:    	mov    QWORD PTR [rbx],rsi
  01232:    	lea    r14,[rsp-0x10]
  01237:    	mov    QWORD PTR [rsp-0x20],r14
  0123c:    	call   0xffffd56e
  01241:    	lea    r14,[rbp-0x8]
  01245:    	mov    QWORD PTR [rbx],r14
  01248:    	mov    r14,QWORD PTR [rbp-0x10]
  0124c:    	movq   xmm2,QWORD PTR [rsp]
  01251:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01257:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0125d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01263:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01269:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0126f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01276: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0127d: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01284: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  0128b:    	add    rsp,0x50
  0128f: 78 	movabs r13,0x557861fb9340
  01299:    	test   rax,rax
  0129c:    	je     0xffff9516
:00078 
:00079 %14 = @plane: Scene[IvarId(1)]
  012a2:    	mov    rdi,QWORD PTR [r14-0x30]
  012a6:    	mov    rax,QWORD PTR [rdi+0x18]
  012aa: ff 	mov    QWORD PTR [r14-0xa0],rax
:00080 %15 = %11
  012b1: ff 	mov    rax,QWORD PTR [r14-0x88]
  012b8: ff 	mov    QWORD PTR [r14-0xa8],rax
:00081 %16 = %12
  012bf: ff 	mov    rax,QWORD PTR [r14-0x90]
  012c6: ff 	mov    QWORD PTR [r14-0xb0],rax
:00082 _ = %14.call intersect(%15; 2)       [Plane]
  012cd: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  012d4: 00 	test   rdi,0x7
  012db:    	jne    0x3b4cd
  012e1:    	cmp    DWORD PTR [rdi+0x4],0x2f
  012e5:    	jne    0x3b4cd
  012eb: 26 	cmp    DWORD PTR [rip+0xffffffffffffb6bc],0x26        # 0xffffc9ae
  012f2:    	jne    0x3b4cd
  012f8:    	sub    rsp,0x50
  012fc:    	movq   QWORD PTR [rsp],xmm2
  01301:    	movq   QWORD PTR [rsp+0x8],xmm3
  01307:    	movq   QWORD PTR [rsp+0x10],xmm4
  0130d:    	movq   QWORD PTR [rsp+0x18],xmm5
  01313:    	movq   QWORD PTR [rsp+0x20],xmm6
  01319:    	movq   QWORD PTR [rsp+0x28],xmm7
  0131f: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01326: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0132d: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01334: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  0133b: 00 	cmp    DWORD PTR [rip+0xffffffffffffb670],0x0        # 0xffffc9b2
  01342:    	je     0x135a
  01348:    	mov    rdi,r12
  0134b:    	mov    rsi,QWORD PTR [rbx]
  0134e: 78 	movabs rax,0x557860afd140
  01358:    	call   rax
  0135a: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01363: ff 	mov    rax,QWORD PTR [r14-0xa0]
  0136a:    	mov    QWORD PTR [rsp-0x40],rax
  0136f: 00 	mov    rdi,0x2
  01376: ff 	mov    rax,QWORD PTR [r14-0xa8]
  0137d:    	mov    QWORD PTR [rsp-0x48],rax
  01382: ff 	mov    rax,QWORD PTR [r14-0xb0]
  01389:    	mov    QWORD PTR [rsp-0x50],rax
  0138e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01397: 0c 	movabs rax,0xc00000063
  013a1:    	mov    QWORD PTR [rsp-0x30],rax
  013a6: 78 	movabs r13,0x557861fb0c30
  013b0:    	mov    rsi,QWORD PTR [rbx]
  013b3:    	mov    QWORD PTR [rsp-0x18],rsi
  013b8:    	lea    rsi,[rsp-0x18]
  013bd:    	mov    QWORD PTR [rbx],rsi
  013c0:    	lea    r14,[rsp-0x10]
  013c5:    	mov    QWORD PTR [rsp-0x20],r14
  013ca:    	call   0xffffdb3a
  013cf:    	lea    r14,[rbp-0x8]
  013d3:    	mov    QWORD PTR [rbx],r14
  013d6:    	mov    r14,QWORD PTR [rbp-0x10]
  013da:    	movq   xmm2,QWORD PTR [rsp]
  013df:    	movq   xmm3,QWORD PTR [rsp+0x8]
  013e5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  013eb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  013f1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  013f7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  013fd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01404: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0140b: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01412: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01419:    	add    rsp,0x50
  0141d: 78 	movabs r13,0x557861fb9390
  01427:    	test   rax,rax
  0142a:    	je     0xffff9516
:00083 
:00084 %14 = %12.call hit()                 [Isect]
  01430: ff 	mov    rdi,QWORD PTR [r14-0x90]
  01437: 00 	test   rdi,0x7
  0143e:    	jne    0x3b546
  01444:    	cmp    DWORD PTR [rdi+0x4],0x33
  01448:    	jne    0x3b546
  0144e: 26 	cmp    DWORD PTR [rip+0xffffffffffffb559],0x26        # 0xffffc9ae
  01455:    	jne    0x3b546
  0145b:    	mov    esi,DWORD PTR [rip+0x115d]        # 0x25be
  01461:    	cmp    esi,0xffffffff
  01464:    	je     0x3b5bf
  0146a:    	cmp    WORD PTR [rdi+0x2],0x3
  0146f:    	jne    0x1488
  01475:    	cmp    esi,0x6
  01478:    	jge    0x1488
  0147e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01483:    	jmp    0x151a
  01488:    	sub    rsp,0x50
  0148c:    	movq   QWORD PTR [rsp],xmm2
  01491:    	movq   QWORD PTR [rsp+0x8],xmm3
  01497:    	movq   QWORD PTR [rsp+0x10],xmm4
  0149d:    	movq   QWORD PTR [rsp+0x18],xmm5
  014a3:    	movq   QWORD PTR [rsp+0x20],xmm6
  014a9:    	movq   QWORD PTR [rsp+0x28],xmm7
  014af: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014b6: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  014bd: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  014c4: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  014cb: 78 	movabs rax,0x557860b3bf40
  014d5:    	call   rax
  014d7:    	movq   xmm2,QWORD PTR [rsp]
  014dc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  014e2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  014e8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  014ee:    	movq   xmm6,QWORD PTR [rsp+0x20]
  014f4:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014fa: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01501: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01508: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  0150f: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01516:    	add    rsp,0x50
  0151a: ff 	mov    QWORD PTR [r14-0xa0],rax
:00085 
:00086 condnotbr %14 =>:00119
  01521: ff 	mov    rax,QWORD PTR [r14-0xa0]
  01528:    	or     rax,0x10
  0152c:    	cmp    rax,0x14
  01530:    	je     0x249b
:00087 %14 = %12
  01536: ff 	mov    rax,QWORD PTR [r14-0x90]
  0153d: ff 	mov    QWORD PTR [r14-0xa0],rax
:00088 %13 = %0.call ambient_occlusion(%14; 1) [<INVALID>]
  01544: 00 	cmp    DWORD PTR [rip+0x1077],0x0        # 0x25c2
  0154b:    	jl     0x3b66e
  01551:    	je     0x3b6e7
  01557: 01 	sub    DWORD PTR [rip+0x1064],0x1        # 0x25c2
  0155e:    	xor    rdi,rdi
  01561:    	jmp    0x3b66e
  01566:    	sub    rsp,0x50
  0156a:    	movq   QWORD PTR [rsp],xmm2
  0156f:    	movq   QWORD PTR [rsp+0x8],xmm3
  01575:    	movq   QWORD PTR [rsp+0x10],xmm4
  0157b:    	movq   QWORD PTR [rsp+0x18],xmm5
  01581:    	movq   QWORD PTR [rsp+0x20],xmm6
  01587:    	movq   QWORD PTR [rsp+0x28],xmm7
  0158d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01594: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0159b: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  015a2: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  015a9:    	mov    r15d,0x35
  015af: 78 	movabs r13,0x557861fb93e0
  015b9:    	cmp    QWORD PTR [r13+0x8],0x0
  015be:    	je     0x3b703
  015c4:    	cmp    r15d,DWORD PTR [r13-0x8]
  015c8:    	jne    0x3b703
  015ce:    	mov    eax,DWORD PTR [rip+0xffffffffffffb3da]        # 0xffffc9ae
  015d4:    	cmp    DWORD PTR [r13-0x4],eax
  015d8:    	jne    0x3b703
  015de: 00 	mov    QWORD PTR [rsp-0x28],0x0
  015e7:    	mov    rax,QWORD PTR [r14-0x30]
  015eb:    	mov    QWORD PTR [rsp-0x40],rax
  015f0: 00 	mov    rdi,0x1
  015f7: ff 	mov    rax,QWORD PTR [r14-0xa0]
  015fe:    	mov    QWORD PTR [rsp-0x48],rax
  01603: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0160c:    	mov    r13,QWORD PTR [r13+0x8]
  01610:    	mov    rax,QWORD PTR [r13+0x8]
  01614:    	mov    QWORD PTR [rsp-0x30],rax
  01619:    	mov    rax,QWORD PTR [r13+0x0]
  0161d:    	mov    r13,QWORD PTR [r13+0x10]
  01621:    	mov    rsi,QWORD PTR [rbx]
  01624:    	mov    QWORD PTR [rsp-0x18],rsi
  01629:    	lea    rsi,[rsp-0x18]
  0162e:    	mov    QWORD PTR [rbx],rsi
  01631:    	lea    r14,[rsp-0x10]
  01636:    	mov    QWORD PTR [rsp-0x20],r14
  0163b:    	call   rax
  0163d:    	lea    r14,[rbp-0x8]
  01641:    	mov    QWORD PTR [rbx],r14
  01644:    	mov    r14,QWORD PTR [rbp-0x10]
  01648:    	movq   xmm2,QWORD PTR [rsp]
  0164d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01653:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01659:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0165f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01665:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0166b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01672: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01679: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01680: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01687:    	add    rsp,0x50
  0168b:    	test   rax,rax
  0168e:    	je     0x3b744
  01694: ff 	mov    QWORD PTR [r14-0x98],rax
:00089 
:00090 %14 = dynvar(2, %2)
  0169b:    	mov    rax,QWORD PTR [r14-0x18]
  0169f:    	mov    rax,QWORD PTR [rax]
  016a2:    	mov    rax,QWORD PTR [rax-0x28]
  016a6: ff 	mov    QWORD PTR [r14-0xa0],rax
:00091 %15 = dynvar(2, %2)
  016ad:    	mov    rax,QWORD PTR [r14-0x18]
  016b1:    	mov    rax,QWORD PTR [rax]
  016b4:    	mov    rax,QWORD PTR [rax-0x28]
  016b8: ff 	mov    QWORD PTR [r14-0xa8],rax
:00092 %15 = %15.call x()                   [<INVALID>]
  016bf:    	sub    rsp,0x50
  016c3:    	movq   QWORD PTR [rsp],xmm2
  016c8:    	movq   QWORD PTR [rsp+0x8],xmm3
  016ce:    	movq   QWORD PTR [rsp+0x10],xmm4
  016d4:    	movq   QWORD PTR [rsp+0x18],xmm5
  016da:    	movq   QWORD PTR [rsp+0x20],xmm6
  016e0:    	movq   QWORD PTR [rsp+0x28],xmm7
  016e6: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  016ed: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  016f4: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  016fb: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01702: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  01709: 78 	movabs rax,0x557860aa2e20
  01713:    	call   rax
  01715:    	mov    r15d,eax
  01718: 78 	movabs r13,0x557861fb9420
  01722:    	cmp    QWORD PTR [r13+0x8],0x0
  01727:    	je     0x3b753
  0172d:    	cmp    r15d,DWORD PTR [r13-0x8]
  01731:    	jne    0x3b753
  01737:    	mov    eax,DWORD PTR [rip+0xffffffffffffb271]        # 0xffffc9ae
  0173d:    	cmp    DWORD PTR [r13-0x4],eax
  01741:    	jne    0x3b753
  01747: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01750: ff 	mov    rax,QWORD PTR [r14-0xa8]
  01757:    	mov    QWORD PTR [rsp-0x40],rax
  0175c: 00 	mov    rdi,0x0
  01763: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0176c:    	mov    r13,QWORD PTR [r13+0x8]
  01770:    	mov    rax,QWORD PTR [r13+0x8]
  01774:    	mov    QWORD PTR [rsp-0x30],rax
  01779:    	mov    rax,QWORD PTR [r13+0x0]
  0177d:    	mov    r13,QWORD PTR [r13+0x10]
  01781:    	mov    rsi,QWORD PTR [rbx]
  01784:    	mov    QWORD PTR [rsp-0x18],rsi
  01789:    	lea    rsi,[rsp-0x18]
  0178e:    	mov    QWORD PTR [rbx],rsi
  01791:    	lea    r14,[rsp-0x10]
  01796:    	mov    QWORD PTR [rsp-0x20],r14
  0179b:    	call   rax
  0179d:    	lea    r14,[rbp-0x8]
  017a1:    	mov    QWORD PTR [rbx],r14
  017a4:    	mov    r14,QWORD PTR [rbp-0x10]
  017a8:    	movq   xmm2,QWORD PTR [rsp]
  017ad:    	movq   xmm3,QWORD PTR [rsp+0x8]
  017b3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  017b9:    	movq   xmm5,QWORD PTR [rsp+0x18]
  017bf:    	movq   xmm6,QWORD PTR [rsp+0x20]
  017c5:    	movq   xmm7,QWORD PTR [rsp+0x28]
  017cb: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  017d2: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  017d9: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  017e0: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  017e7:    	add    rsp,0x50
  017eb:    	test   rax,rax
  017ee:    	je     0x3b797
  017f4: ff 	mov    QWORD PTR [r14-0xa8],rax
:00093 
:00094 %16 = %13.call x()                   [<INVALID>]
  017fb:    	sub    rsp,0x50
  017ff:    	movq   QWORD PTR [rsp],xmm2
  01804:    	movq   QWORD PTR [rsp+0x8],xmm3
  0180a:    	movq   QWORD PTR [rsp+0x10],xmm4
  01810:    	movq   QWORD PTR [rsp+0x18],xmm5
  01816:    	movq   QWORD PTR [rsp+0x20],xmm6
  0181c:    	movq   QWORD PTR [rsp+0x28],xmm7
  01822: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01829: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01830: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01837: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  0183e: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01845: 78 	movabs rax,0x557860aa2e20
  0184f:    	call   rax
  01851:    	mov    r15d,eax
  01854: 78 	movabs r13,0x557861fb9440
  0185e:    	cmp    QWORD PTR [r13+0x8],0x0
  01863:    	je     0x3b7a6
  01869:    	cmp    r15d,DWORD PTR [r13-0x8]
  0186d:    	jne    0x3b7a6
  01873:    	mov    eax,DWORD PTR [rip+0xffffffffffffb135]        # 0xffffc9ae
  01879:    	cmp    DWORD PTR [r13-0x4],eax
  0187d:    	jne    0x3b7a6
  01883: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0188c: ff 	mov    rax,QWORD PTR [r14-0x98]
  01893:    	mov    QWORD PTR [rsp-0x40],rax
  01898: 00 	mov    rdi,0x0
  0189f: 00 	mov    QWORD PTR [rsp-0x38],0x0
  018a8:    	mov    r13,QWORD PTR [r13+0x8]
  018ac:    	mov    rax,QWORD PTR [r13+0x8]
  018b0:    	mov    QWORD PTR [rsp-0x30],rax
  018b5:    	mov    rax,QWORD PTR [r13+0x0]
  018b9:    	mov    r13,QWORD PTR [r13+0x10]
  018bd:    	mov    rsi,QWORD PTR [rbx]
  018c0:    	mov    QWORD PTR [rsp-0x18],rsi
  018c5:    	lea    rsi,[rsp-0x18]
  018ca:    	mov    QWORD PTR [rbx],rsi
  018cd:    	lea    r14,[rsp-0x10]
  018d2:    	mov    QWORD PTR [rsp-0x20],r14
  018d7:    	call   rax
  018d9:    	lea    r14,[rbp-0x8]
  018dd:    	mov    QWORD PTR [rbx],r14
  018e0:    	mov    r14,QWORD PTR [rbp-0x10]
  018e4:    	movq   xmm2,QWORD PTR [rsp]
  018e9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  018ef:    	movq   xmm4,QWORD PTR [rsp+0x10]
  018f5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  018fb:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01901:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01907: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0190e: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01915: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  0191c: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01923:    	add    rsp,0x50
  01927:    	test   rax,rax
  0192a:    	je     0x3b7ea
  01930: ff 	mov    QWORD PTR [r14-0xb0],rax
:00095 
:00096 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  01937: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  0193e: ff 	mov    rsi,QWORD PTR [r14-0xb0]
  01945:    	sub    rsp,0x50
  01949:    	movq   QWORD PTR [rsp],xmm2
  0194e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01954:    	movq   QWORD PTR [rsp+0x10],xmm4
  0195a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01960:    	movq   QWORD PTR [rsp+0x20],xmm6
  01966:    	movq   QWORD PTR [rsp+0x28],xmm7
  0196c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01973: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0197a: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01981: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01988:    	mov    rdx,rdi
  0198b:    	mov    rcx,rsi
  0198e:    	mov    rdi,rbx
  01991:    	mov    rsi,r12
  01994: 78 	movabs rax,0x557860aa8800
  0199e:    	call   rax
  019a0:    	movq   xmm2,QWORD PTR [rsp]
  019a5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  019ab:    	movq   xmm4,QWORD PTR [rsp+0x10]
  019b1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  019b7:    	movq   xmm6,QWORD PTR [rsp+0x20]
  019bd:    	movq   xmm7,QWORD PTR [rsp+0x28]
  019c3: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  019ca: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  019d1: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  019d8: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  019df:    	add    rsp,0x50
  019e3: 78 	movabs r13,0x557861fb9460
  019ed:    	test   rax,rax
  019f0:    	je     0xffff9516
  019f6: ff 	mov    QWORD PTR [r14-0xa8],rax
:00097 _ = %14.call x=(%15; 1)              [<INVALID>]
  019fd:    	sub    rsp,0x50
  01a01:    	movq   QWORD PTR [rsp],xmm2
  01a06:    	movq   QWORD PTR [rsp+0x8],xmm3
  01a0c:    	movq   QWORD PTR [rsp+0x10],xmm4
  01a12:    	movq   QWORD PTR [rsp+0x18],xmm5
  01a18:    	movq   QWORD PTR [rsp+0x20],xmm6
  01a1e:    	movq   QWORD PTR [rsp+0x28],xmm7
  01a24: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01a2b: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01a32: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01a39: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01a40: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01a47: 78 	movabs rax,0x557860aa2e20
  01a51:    	call   rax
  01a53:    	mov    r15d,eax
  01a56: 78 	movabs r13,0x557861fb9470
  01a60:    	cmp    QWORD PTR [r13+0x8],0x0
  01a65:    	je     0x3b7f9
  01a6b:    	cmp    r15d,DWORD PTR [r13-0x8]
  01a6f:    	jne    0x3b7f9
  01a75:    	mov    eax,DWORD PTR [rip+0xffffffffffffaf33]        # 0xffffc9ae
  01a7b:    	cmp    DWORD PTR [r13-0x4],eax
  01a7f:    	jne    0x3b7f9
  01a85: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01a8e: ff 	mov    rax,QWORD PTR [r14-0xa0]
  01a95:    	mov    QWORD PTR [rsp-0x40],rax
  01a9a: 00 	mov    rdi,0x1
  01aa1: ff 	mov    rax,QWORD PTR [r14-0xa8]
  01aa8:    	mov    QWORD PTR [rsp-0x48],rax
  01aad: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01ab6:    	mov    r13,QWORD PTR [r13+0x8]
  01aba:    	mov    rax,QWORD PTR [r13+0x8]
  01abe:    	mov    QWORD PTR [rsp-0x30],rax
  01ac3:    	mov    rax,QWORD PTR [r13+0x0]
  01ac7:    	mov    r13,QWORD PTR [r13+0x10]
  01acb:    	mov    rsi,QWORD PTR [rbx]
  01ace:    	mov    QWORD PTR [rsp-0x18],rsi
  01ad3:    	lea    rsi,[rsp-0x18]
  01ad8:    	mov    QWORD PTR [rbx],rsi
  01adb:    	lea    r14,[rsp-0x10]
  01ae0:    	mov    QWORD PTR [rsp-0x20],r14
  01ae5:    	call   rax
  01ae7:    	lea    r14,[rbp-0x8]
  01aeb:    	mov    QWORD PTR [rbx],r14
  01aee:    	mov    r14,QWORD PTR [rbp-0x10]
  01af2:    	movq   xmm2,QWORD PTR [rsp]
  01af7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01afd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01b03:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01b09:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01b0f:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01b15: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01b1c: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01b23: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01b2a: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01b31:    	add    rsp,0x50
  01b35:    	test   rax,rax
  01b38:    	je     0x3b83d
:00098 
:00099 %14 = dynvar(2, %2)
  01b3e:    	mov    rax,QWORD PTR [r14-0x18]
  01b42:    	mov    rax,QWORD PTR [rax]
  01b45:    	mov    rax,QWORD PTR [rax-0x28]
  01b49: ff 	mov    QWORD PTR [r14-0xa0],rax
:00100 %15 = dynvar(2, %2)
  01b50:    	mov    rax,QWORD PTR [r14-0x18]
  01b54:    	mov    rax,QWORD PTR [rax]
  01b57:    	mov    rax,QWORD PTR [rax-0x28]
  01b5b: ff 	mov    QWORD PTR [r14-0xa8],rax
:00101 %15 = %15.call y()                   [<INVALID>]
  01b62:    	sub    rsp,0x50
  01b66:    	movq   QWORD PTR [rsp],xmm2
  01b6b:    	movq   QWORD PTR [rsp+0x8],xmm3
  01b71:    	movq   QWORD PTR [rsp+0x10],xmm4
  01b77:    	movq   QWORD PTR [rsp+0x18],xmm5
  01b7d:    	movq   QWORD PTR [rsp+0x20],xmm6
  01b83:    	movq   QWORD PTR [rsp+0x28],xmm7
  01b89: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01b90: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01b97: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01b9e: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01ba5: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  01bac: 78 	movabs rax,0x557860aa2e20
  01bb6:    	call   rax
  01bb8:    	mov    r15d,eax
  01bbb: 78 	movabs r13,0x557861fb94b0
  01bc5:    	cmp    QWORD PTR [r13+0x8],0x0
  01bca:    	je     0x3b84c
  01bd0:    	cmp    r15d,DWORD PTR [r13-0x8]
  01bd4:    	jne    0x3b84c
  01bda:    	mov    eax,DWORD PTR [rip+0xffffffffffffadce]        # 0xffffc9ae
  01be0:    	cmp    DWORD PTR [r13-0x4],eax
  01be4:    	jne    0x3b84c
  01bea: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01bf3: ff 	mov    rax,QWORD PTR [r14-0xa8]
  01bfa:    	mov    QWORD PTR [rsp-0x40],rax
  01bff: 00 	mov    rdi,0x0
  01c06: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01c0f:    	mov    r13,QWORD PTR [r13+0x8]
  01c13:    	mov    rax,QWORD PTR [r13+0x8]
  01c17:    	mov    QWORD PTR [rsp-0x30],rax
  01c1c:    	mov    rax,QWORD PTR [r13+0x0]
  01c20:    	mov    r13,QWORD PTR [r13+0x10]
  01c24:    	mov    rsi,QWORD PTR [rbx]
  01c27:    	mov    QWORD PTR [rsp-0x18],rsi
  01c2c:    	lea    rsi,[rsp-0x18]
  01c31:    	mov    QWORD PTR [rbx],rsi
  01c34:    	lea    r14,[rsp-0x10]
  01c39:    	mov    QWORD PTR [rsp-0x20],r14
  01c3e:    	call   rax
  01c40:    	lea    r14,[rbp-0x8]
  01c44:    	mov    QWORD PTR [rbx],r14
  01c47:    	mov    r14,QWORD PTR [rbp-0x10]
  01c4b:    	movq   xmm2,QWORD PTR [rsp]
  01c50:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01c56:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01c5c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01c62:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01c68:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01c6e: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01c75: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01c7c: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01c83: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01c8a:    	add    rsp,0x50
  01c8e:    	test   rax,rax
  01c91:    	je     0x3b890
  01c97: ff 	mov    QWORD PTR [r14-0xa8],rax
:00102 
:00103 %16 = %13.call y()                   [<INVALID>]
  01c9e:    	sub    rsp,0x50
  01ca2:    	movq   QWORD PTR [rsp],xmm2
  01ca7:    	movq   QWORD PTR [rsp+0x8],xmm3
  01cad:    	movq   QWORD PTR [rsp+0x10],xmm4
  01cb3:    	movq   QWORD PTR [rsp+0x18],xmm5
  01cb9:    	movq   QWORD PTR [rsp+0x20],xmm6
  01cbf:    	movq   QWORD PTR [rsp+0x28],xmm7
  01cc5: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01ccc: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01cd3: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01cda: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01ce1: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01ce8: 78 	movabs rax,0x557860aa2e20
  01cf2:    	call   rax
  01cf4:    	mov    r15d,eax
  01cf7: 78 	movabs r13,0x557861fb94d0
  01d01:    	cmp    QWORD PTR [r13+0x8],0x0
  01d06:    	je     0x3b89f
  01d0c:    	cmp    r15d,DWORD PTR [r13-0x8]
  01d10:    	jne    0x3b89f
  01d16:    	mov    eax,DWORD PTR [rip+0xffffffffffffac92]        # 0xffffc9ae
  01d1c:    	cmp    DWORD PTR [r13-0x4],eax
  01d20:    	jne    0x3b89f
  01d26: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01d2f: ff 	mov    rax,QWORD PTR [r14-0x98]
  01d36:    	mov    QWORD PTR [rsp-0x40],rax
  01d3b: 00 	mov    rdi,0x0
  01d42: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01d4b:    	mov    r13,QWORD PTR [r13+0x8]
  01d4f:    	mov    rax,QWORD PTR [r13+0x8]
  01d53:    	mov    QWORD PTR [rsp-0x30],rax
  01d58:    	mov    rax,QWORD PTR [r13+0x0]
  01d5c:    	mov    r13,QWORD PTR [r13+0x10]
  01d60:    	mov    rsi,QWORD PTR [rbx]
  01d63:    	mov    QWORD PTR [rsp-0x18],rsi
  01d68:    	lea    rsi,[rsp-0x18]
  01d6d:    	mov    QWORD PTR [rbx],rsi
  01d70:    	lea    r14,[rsp-0x10]
  01d75:    	mov    QWORD PTR [rsp-0x20],r14
  01d7a:    	call   rax
  01d7c:    	lea    r14,[rbp-0x8]
  01d80:    	mov    QWORD PTR [rbx],r14
  01d83:    	mov    r14,QWORD PTR [rbp-0x10]
  01d87:    	movq   xmm2,QWORD PTR [rsp]
  01d8c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01d92:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01d98:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01d9e:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01da4:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01daa: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01db1: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01db8: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01dbf: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01dc6:    	add    rsp,0x50
  01dca:    	test   rax,rax
  01dcd:    	je     0x3b8e3
  01dd3: ff 	mov    QWORD PTR [r14-0xb0],rax
:00104 
:00105 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  01dda: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  01de1: ff 	mov    rsi,QWORD PTR [r14-0xb0]
  01de8:    	sub    rsp,0x50
  01dec:    	movq   QWORD PTR [rsp],xmm2
  01df1:    	movq   QWORD PTR [rsp+0x8],xmm3
  01df7:    	movq   QWORD PTR [rsp+0x10],xmm4
  01dfd:    	movq   QWORD PTR [rsp+0x18],xmm5
  01e03:    	movq   QWORD PTR [rsp+0x20],xmm6
  01e09:    	movq   QWORD PTR [rsp+0x28],xmm7
  01e0f: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01e16: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01e1d: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01e24: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01e2b:    	mov    rdx,rdi
  01e2e:    	mov    rcx,rsi
  01e31:    	mov    rdi,rbx
  01e34:    	mov    rsi,r12
  01e37: 78 	movabs rax,0x557860aa8800
  01e41:    	call   rax
  01e43:    	movq   xmm2,QWORD PTR [rsp]
  01e48:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01e4e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01e54:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01e5a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01e60:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01e66: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01e6d: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01e74: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01e7b: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01e82:    	add    rsp,0x50
  01e86: 78 	movabs r13,0x557861fb94f0
  01e90:    	test   rax,rax
  01e93:    	je     0xffff9516
  01e99: ff 	mov    QWORD PTR [r14-0xa8],rax
:00106 _ = %14.call y=(%15; 1)              [<INVALID>]
  01ea0:    	sub    rsp,0x50
  01ea4:    	movq   QWORD PTR [rsp],xmm2
  01ea9:    	movq   QWORD PTR [rsp+0x8],xmm3
  01eaf:    	movq   QWORD PTR [rsp+0x10],xmm4
  01eb5:    	movq   QWORD PTR [rsp+0x18],xmm5
  01ebb:    	movq   QWORD PTR [rsp+0x20],xmm6
  01ec1:    	movq   QWORD PTR [rsp+0x28],xmm7
  01ec7: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01ece: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01ed5: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01edc: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01ee3: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01eea: 78 	movabs rax,0x557860aa2e20
  01ef4:    	call   rax
  01ef6:    	mov    r15d,eax
  01ef9: 78 	movabs r13,0x557861fb9500
  01f03:    	cmp    QWORD PTR [r13+0x8],0x0
  01f08:    	je     0x3b8f2
  01f0e:    	cmp    r15d,DWORD PTR [r13-0x8]
  01f12:    	jne    0x3b8f2
  01f18:    	mov    eax,DWORD PTR [rip+0xffffffffffffaa90]        # 0xffffc9ae
  01f1e:    	cmp    DWORD PTR [r13-0x4],eax
  01f22:    	jne    0x3b8f2
  01f28: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01f31: ff 	mov    rax,QWORD PTR [r14-0xa0]
  01f38:    	mov    QWORD PTR [rsp-0x40],rax
  01f3d: 00 	mov    rdi,0x1
  01f44: ff 	mov    rax,QWORD PTR [r14-0xa8]
  01f4b:    	mov    QWORD PTR [rsp-0x48],rax
  01f50: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01f59:    	mov    r13,QWORD PTR [r13+0x8]
  01f5d:    	mov    rax,QWORD PTR [r13+0x8]
  01f61:    	mov    QWORD PTR [rsp-0x30],rax
  01f66:    	mov    rax,QWORD PTR [r13+0x0]
  01f6a:    	mov    r13,QWORD PTR [r13+0x10]
  01f6e:    	mov    rsi,QWORD PTR [rbx]
  01f71:    	mov    QWORD PTR [rsp-0x18],rsi
  01f76:    	lea    rsi,[rsp-0x18]
  01f7b:    	mov    QWORD PTR [rbx],rsi
  01f7e:    	lea    r14,[rsp-0x10]
  01f83:    	mov    QWORD PTR [rsp-0x20],r14
  01f88:    	call   rax
  01f8a:    	lea    r14,[rbp-0x8]
  01f8e:    	mov    QWORD PTR [rbx],r14
  01f91:    	mov    r14,QWORD PTR [rbp-0x10]
  01f95:    	movq   xmm2,QWORD PTR [rsp]
  01f9a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01fa0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01fa6:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01fac:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01fb2:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01fb8: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01fbf: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01fc6: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01fcd: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01fd4:    	add    rsp,0x50
  01fd8:    	test   rax,rax
  01fdb:    	je     0x3b936
:00107 
:00108 %14 = dynvar(2, %2)
  01fe1:    	mov    rax,QWORD PTR [r14-0x18]
  01fe5:    	mov    rax,QWORD PTR [rax]
  01fe8:    	mov    rax,QWORD PTR [rax-0x28]
  01fec: ff 	mov    QWORD PTR [r14-0xa0],rax
:00109 %15 = dynvar(2, %2)
  01ff3:    	mov    rax,QWORD PTR [r14-0x18]
  01ff7:    	mov    rax,QWORD PTR [rax]
  01ffa:    	mov    rax,QWORD PTR [rax-0x28]
  01ffe: ff 	mov    QWORD PTR [r14-0xa8],rax
:00110 %15 = %15.call z()                   [<INVALID>]
  02005:    	sub    rsp,0x50
  02009:    	movq   QWORD PTR [rsp],xmm2
  0200e:    	movq   QWORD PTR [rsp+0x8],xmm3
  02014:    	movq   QWORD PTR [rsp+0x10],xmm4
  0201a:    	movq   QWORD PTR [rsp+0x18],xmm5
  02020:    	movq   QWORD PTR [rsp+0x20],xmm6
  02026:    	movq   QWORD PTR [rsp+0x28],xmm7
  0202c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02033: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0203a: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  02041: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  02048: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  0204f: 78 	movabs rax,0x557860aa2e20
  02059:    	call   rax
  0205b:    	mov    r15d,eax
  0205e: 78 	movabs r13,0x557861fb9540
  02068:    	cmp    QWORD PTR [r13+0x8],0x0
  0206d:    	je     0x3b945
  02073:    	cmp    r15d,DWORD PTR [r13-0x8]
  02077:    	jne    0x3b945
  0207d:    	mov    eax,DWORD PTR [rip+0xffffffffffffa92b]        # 0xffffc9ae
  02083:    	cmp    DWORD PTR [r13-0x4],eax
  02087:    	jne    0x3b945
  0208d: 00 	mov    QWORD PTR [rsp-0x28],0x0
  02096: ff 	mov    rax,QWORD PTR [r14-0xa8]
  0209d:    	mov    QWORD PTR [rsp-0x40],rax
  020a2: 00 	mov    rdi,0x0
  020a9: 00 	mov    QWORD PTR [rsp-0x38],0x0
  020b2:    	mov    r13,QWORD PTR [r13+0x8]
  020b6:    	mov    rax,QWORD PTR [r13+0x8]
  020ba:    	mov    QWORD PTR [rsp-0x30],rax
  020bf:    	mov    rax,QWORD PTR [r13+0x0]
  020c3:    	mov    r13,QWORD PTR [r13+0x10]
  020c7:    	mov    rsi,QWORD PTR [rbx]
  020ca:    	mov    QWORD PTR [rsp-0x18],rsi
  020cf:    	lea    rsi,[rsp-0x18]
  020d4:    	mov    QWORD PTR [rbx],rsi
  020d7:    	lea    r14,[rsp-0x10]
  020dc:    	mov    QWORD PTR [rsp-0x20],r14
  020e1:    	call   rax
  020e3:    	lea    r14,[rbp-0x8]
  020e7:    	mov    QWORD PTR [rbx],r14
  020ea:    	mov    r14,QWORD PTR [rbp-0x10]
  020ee:    	movq   xmm2,QWORD PTR [rsp]
  020f3:    	movq   xmm3,QWORD PTR [rsp+0x8]
  020f9:    	movq   xmm4,QWORD PTR [rsp+0x10]
  020ff:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02105:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0210b:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02111: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02118: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0211f: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  02126: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  0212d:    	add    rsp,0x50
  02131:    	test   rax,rax
  02134:    	je     0x3b989
  0213a: ff 	mov    QWORD PTR [r14-0xa8],rax
:00111 
:00112 %16 = %13.call z()                   [<INVALID>]
  02141:    	sub    rsp,0x50
  02145:    	movq   QWORD PTR [rsp],xmm2
  0214a:    	movq   QWORD PTR [rsp+0x8],xmm3
  02150:    	movq   QWORD PTR [rsp+0x10],xmm4
  02156:    	movq   QWORD PTR [rsp+0x18],xmm5
  0215c:    	movq   QWORD PTR [rsp+0x20],xmm6
  02162:    	movq   QWORD PTR [rsp+0x28],xmm7
  02168: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0216f: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  02176: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0217d: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  02184: ff 	mov    rdi,QWORD PTR [r14-0x98]
  0218b: 78 	movabs rax,0x557860aa2e20
  02195:    	call   rax
  02197:    	mov    r15d,eax
  0219a: 78 	movabs r13,0x557861fb9560
  021a4:    	cmp    QWORD PTR [r13+0x8],0x0
  021a9:    	je     0x3b998
  021af:    	cmp    r15d,DWORD PTR [r13-0x8]
  021b3:    	jne    0x3b998
  021b9:    	mov    eax,DWORD PTR [rip+0xffffffffffffa7ef]        # 0xffffc9ae
  021bf:    	cmp    DWORD PTR [r13-0x4],eax
  021c3:    	jne    0x3b998
  021c9: 00 	mov    QWORD PTR [rsp-0x28],0x0
  021d2: ff 	mov    rax,QWORD PTR [r14-0x98]
  021d9:    	mov    QWORD PTR [rsp-0x40],rax
  021de: 00 	mov    rdi,0x0
  021e5: 00 	mov    QWORD PTR [rsp-0x38],0x0
  021ee:    	mov    r13,QWORD PTR [r13+0x8]
  021f2:    	mov    rax,QWORD PTR [r13+0x8]
  021f6:    	mov    QWORD PTR [rsp-0x30],rax
  021fb:    	mov    rax,QWORD PTR [r13+0x0]
  021ff:    	mov    r13,QWORD PTR [r13+0x10]
  02203:    	mov    rsi,QWORD PTR [rbx]
  02206:    	mov    QWORD PTR [rsp-0x18],rsi
  0220b:    	lea    rsi,[rsp-0x18]
  02210:    	mov    QWORD PTR [rbx],rsi
  02213:    	lea    r14,[rsp-0x10]
  02218:    	mov    QWORD PTR [rsp-0x20],r14
  0221d:    	call   rax
  0221f:    	lea    r14,[rbp-0x8]
  02223:    	mov    QWORD PTR [rbx],r14
  02226:    	mov    r14,QWORD PTR [rbp-0x10]
  0222a:    	movq   xmm2,QWORD PTR [rsp]
  0222f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02235:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0223b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02241:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02247:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0224d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02254: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0225b: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  02262: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  02269:    	add    rsp,0x50
  0226d:    	test   rax,rax
  02270:    	je     0x3b9dc
  02276: ff 	mov    QWORD PTR [r14-0xb0],rax
:00113 
:00114 %15 = %15 + %16                      [<INVALID>][<INVALID>]
  0227d: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  02284: ff 	mov    rsi,QWORD PTR [r14-0xb0]
  0228b:    	sub    rsp,0x50
  0228f:    	movq   QWORD PTR [rsp],xmm2
  02294:    	movq   QWORD PTR [rsp+0x8],xmm3
  0229a:    	movq   QWORD PTR [rsp+0x10],xmm4
  022a0:    	movq   QWORD PTR [rsp+0x18],xmm5
  022a6:    	movq   QWORD PTR [rsp+0x20],xmm6
  022ac:    	movq   QWORD PTR [rsp+0x28],xmm7
  022b2: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  022b9: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  022c0: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  022c7: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  022ce:    	mov    rdx,rdi
  022d1:    	mov    rcx,rsi
  022d4:    	mov    rdi,rbx
  022d7:    	mov    rsi,r12
  022da: 78 	movabs rax,0x557860aa8800
  022e4:    	call   rax
  022e6:    	movq   xmm2,QWORD PTR [rsp]
  022eb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  022f1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  022f7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  022fd:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02303:    	movq   xmm7,QWORD PTR [rsp+0x28]
  02309: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02310: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  02317: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  0231e: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  02325:    	add    rsp,0x50
  02329: 78 	movabs r13,0x557861fb9580
  02333:    	test   rax,rax
  02336:    	je     0xffff9516
  0233c: ff 	mov    QWORD PTR [r14-0xa8],rax
:00115 _ = %14.call z=(%15; 1)              [<INVALID>]
  02343:    	sub    rsp,0x50
  02347:    	movq   QWORD PTR [rsp],xmm2
  0234c:    	movq   QWORD PTR [rsp+0x8],xmm3
  02352:    	movq   QWORD PTR [rsp+0x10],xmm4
  02358:    	movq   QWORD PTR [rsp+0x18],xmm5
  0235e:    	movq   QWORD PTR [rsp+0x20],xmm6
  02364:    	movq   QWORD PTR [rsp+0x28],xmm7
  0236a: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02371: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  02378: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0237f: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  02386: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0238d: 78 	movabs rax,0x557860aa2e20
  02397:    	call   rax
  02399:    	mov    r15d,eax
  0239c: 78 	movabs r13,0x557861fb9590
  023a6:    	cmp    QWORD PTR [r13+0x8],0x0
  023ab:    	je     0x3b9eb
  023b1:    	cmp    r15d,DWORD PTR [r13-0x8]
  023b5:    	jne    0x3b9eb
  023bb:    	mov    eax,DWORD PTR [rip+0xffffffffffffa5ed]        # 0xffffc9ae
  023c1:    	cmp    DWORD PTR [r13-0x4],eax
  023c5:    	jne    0x3b9eb
  023cb: 00 	mov    QWORD PTR [rsp-0x28],0x0
  023d4: ff 	mov    rax,QWORD PTR [r14-0xa0]
  023db:    	mov    QWORD PTR [rsp-0x40],rax
  023e0: 00 	mov    rdi,0x1
  023e7: ff 	mov    rax,QWORD PTR [r14-0xa8]
  023ee:    	mov    QWORD PTR [rsp-0x48],rax
  023f3: 00 	mov    QWORD PTR [rsp-0x38],0x0
  023fc:    	mov    r13,QWORD PTR [r13+0x8]
  02400:    	mov    rax,QWORD PTR [r13+0x8]
  02404:    	mov    QWORD PTR [rsp-0x30],rax
  02409:    	mov    rax,QWORD PTR [r13+0x0]
  0240d:    	mov    r13,QWORD PTR [r13+0x10]
  02411:    	mov    rsi,QWORD PTR [rbx]
  02414:    	mov    QWORD PTR [rsp-0x18],rsi
  02419:    	lea    rsi,[rsp-0x18]
  0241e:    	mov    QWORD PTR [rbx],rsi
  02421:    	lea    r14,[rsp-0x10]
  02426:    	mov    QWORD PTR [rsp-0x20],r14
  0242b:    	call   rax
  0242d:    	lea    r14,[rbp-0x8]
  02431:    	mov    QWORD PTR [rbx],r14
  02434:    	mov    r14,QWORD PTR [rbp-0x10]
  02438:    	movq   xmm2,QWORD PTR [rsp]
  0243d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02443:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02449:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0244f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  02455:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0245b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  02462: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  02469: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  02470: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  02477:    	add    rsp,0x50
  0247b:    	test   rax,rax
  0247e:    	je     0x3ba2f
:00116 
:00117 %14 = %15
  02484: ff 	mov    rax,QWORD PTR [r14-0xa8]
  0248b: ff 	mov    QWORD PTR [r14-0xa0],rax
:00118 ret %14
  02492: ff 	mov    rax,QWORD PTR [r14-0xa0]
  02499:    	leave  
  0249a:    	ret    
:00119 %14 = nil
  0249b: ff 	mov    QWORD PTR [r14-0xa0],0x4
:00120 ret %14
  024a6: ff 	mov    rax,QWORD PTR [r14-0xa0]
  024ad:    	leave  
  024ae:    	ret    
==> start whole compile: vnormalize FuncId(95) self_class:Vec start:[00000] bytecode:0x557861f90e80
<== finished compile. elapsed:46.4µs
offset:Pos(37076) code: 1828 bytes  data: 96 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x70
  0000b: cmp    edx,0x0
  0000e: jne    0x39478
  00014: mov    rax,0x4
  0001b: mov    QWORD PTR [r14-0x38],rax
  0001f: mov    QWORD PTR [r14-0x40],rax
  00023: mov    QWORD PTR [r14-0x48],rax
  00027: mov    QWORD PTR [r14-0x50],rax
  0002b: mov    QWORD PTR [r14-0x58],rax
  0002f: mov    QWORD PTR [r14-0x60],rax
  00033: mov    rdi,QWORD PTR [r14-0x30]
  00037: test   rdi,0x7
  0003e: jne    0x39487
  00044: cmp    DWORD PTR [rdi+0x4],0x2b
  00048: jne    0x39487
:00000 init_method reg:7 arg:0 pos:0 req:0 block:0 stack_offset:7
:00001 %3 = %0.call vlength()               [Vec]
  0004e: mov    rdi,QWORD PTR [r14-0x30]
  00052: cmp    DWORD PTR [rip+0xffffffffffffa38f],0x26        # 0xffffa3e8
  00059: jne    0x39496
  0005f: cmp    DWORD PTR [rip+0xffffffffffffa386],0x0        # 0xffffa3ec
  00066: je     0x7e
  0006c: mov    rdi,r12
  0006f: mov    rsi,QWORD PTR [rbx]
  00072: movabs rax,0x557860afd140
  0007c: call   rax
  0007e: mov    QWORD PTR [rsp-0x28],0x0
  00087: mov    rax,QWORD PTR [r14-0x30]
  0008b: mov    QWORD PTR [rsp-0x40],rax
  00090: mov    rdi,0x0
  00097: mov    QWORD PTR [rsp-0x38],0x0
  000a0: movabs rax,0x50000005e
  000aa: mov    QWORD PTR [rsp-0x30],rax
  000af: movabs r13,0x557861fc6ff0
  000b9: mov    rsi,QWORD PTR [rbx]
  000bc: mov    QWORD PTR [rsp-0x18],rsi
  000c1: lea    rsi,[rsp-0x18]
  000c6: mov    QWORD PTR [rbx],rsi
  000c9: lea    r14,[rsp-0x10]
  000ce: mov    QWORD PTR [rsp-0x20],r14
  000d3: call   0xffffad03
  000d8: lea    r14,[rbp-0x8]
  000dc: mov    QWORD PTR [rbx],r14
  000df: mov    r14,QWORD PTR [rbp-0x10]
  000e3: movabs r13,0x557861f90eb0
  000ed: test   rax,rax
  000f0: je     0xffff6f50
  000f6: mov    QWORD PTR [r14-0x48],rax
:00002 
:00003 %1 = %3
  000fa: mov    rax,QWORD PTR [r14-0x48]
  000fe: mov    QWORD PTR [r14-0x38],rax
:00004 %3 = const[Vec]                      [Vec]
  00102: mov    rax,QWORD PTR [rip+0xffffffffffffa2f3]        # 0xffffa3fc
  00109: cmp    rax,QWORD PTR [rip+0x62c]        # 0x73c
  00110: jne    0x394a5
  00116: mov    rax,QWORD PTR [rip+0x60f]        # 0x72c
  0011d: mov    QWORD PTR [r14-0x48],rax
:00005 %4 = @x: Vec[IvarId(0)]
  00121: mov    rdi,QWORD PTR [r14-0x30]
  00125: mov    rax,QWORD PTR [rdi+0x10]
  00129: mov    QWORD PTR [r14-0x50],rax
:00006 %5 = @y: Vec[IvarId(1)]
  0012d: mov    rdi,QWORD PTR [r14-0x30]
  00131: mov    rax,QWORD PTR [rdi+0x18]
  00135: mov    QWORD PTR [r14-0x58],rax
:00007 %6 = @z: Vec[IvarId(2)]
  00139: mov    rdi,QWORD PTR [r14-0x30]
  0013d: mov    rax,QWORD PTR [rdi+0x20]
  00141: mov    QWORD PTR [r14-0x60],rax
:00008 %2 = %3.call new(%4; 3)              [#<Class:Vec>]
  00145: mov    rdi,QWORD PTR [r14-0x48]
  00149: test   rdi,0x7
  00150: jne    0x394eb
  00156: cmp    DWORD PTR [rdi+0x4],0x2c
  0015a: jne    0x394eb
  00160: cmp    DWORD PTR [rip+0xffffffffffffa281],0x26        # 0xffffa3e8
  00167: jne    0x394eb
  0016d: mov    r9,0x0
  00174: mov    rdx,rdi
  00177: mov    QWORD PTR [rsp-0x40],rcx
  0017c: mov    QWORD PTR [rsp-0x28],0x0
  00185: lea    rcx,[r14-0x50]
  00189: mov    r8,0x3
  00190: mov    rsi,QWORD PTR [rbx]
  00193: mov    QWORD PTR [rsp-0x18],rsi
  00198: lea    rsi,[rsp-0x18]
  0019d: mov    QWORD PTR [rbx],rsi
  001a0: lea    r14,[rsp-0x10]
  001a5: mov    QWORD PTR [rsp-0x20],r14
  001aa: call   0x394fa
  001af: lea    r14,[rbp-0x8]
  001b3: mov    QWORD PTR [rbx],r14
  001b6: mov    r14,QWORD PTR [rbp-0x10]
  001ba: movabs r13,0x557861f90f20
  001c4: test   rax,rax
  001c7: je     0xffff6f50
  001cd: mov    QWORD PTR [r14-0x40],rax
:00009 
:00010 %3 = literal[1e-17]
  001d1: movq   xmm2,QWORD PTR [rip+0x573]        # 0x74c
  001d9: movabs rax,0xe33877aa3236a4ba
  001e3: mov    QWORD PTR [r14-0x48],rax
:00011 _%3 = %1 > %3                        [Float][Float]
:00012 condnotbr _%3 =>:00029
  001e7: mov    rdi,QWORD PTR [r14-0x38]
  001eb: test   rdi,0x1
  001f2: jne    0x3952c
  001f8: test   rdi,0x2
  001ff: je     0x23b
  00205: xorps  xmm3,xmm3
  00208: movabs rax,0x8000000000000002
  00212: cmp    rdi,rax
  00215: je     0x24d
  0021b: mov    rax,rdi
  0021e: sar    rax,0x3f
  00222: add    rax,0x2
  00226: and    rdi,0xfffffffffffffffc
  0022a: or     rdi,rax
  0022d: rol    rdi,0x3d
  00231: movq   xmm3,rdi
  00236: jmp    0x24d
  0023b: call   0xffff6fa9
  00240: test   rax,rax
  00243: je     0x3952c
  00249: movq   xmm3,xmm0
  0024d: ucomisd xmm3,xmm2
  00251: jbe    0x3975d
:00013 %3 = %2.call x()                     [Vec]
  00257: mov    rdi,QWORD PTR [r14-0x40]
  0025b: test   rdi,0x7
  00262: jne    0x3953b
  00268: cmp    DWORD PTR [rdi+0x4],0x2b
  0026c: jne    0x3953b
  00272: cmp    DWORD PTR [rip+0xffffffffffffa16f],0x26        # 0xffffa3e8
  00279: jne    0x3953b
  0027f: mov    esi,DWORD PTR [rip+0x4d3]        # 0x758
  00285: cmp    esi,0xffffffff
  00288: je     0x3954a
  0028e: cmp    WORD PTR [rdi+0x2],0x3
  00293: jne    0x2ac
  00299: cmp    esi,0x6
  0029c: jge    0x2ac
  002a2: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  002a7: jmp    0x2ca
  002ac: sub    rsp,0x10
  002b0: movq   QWORD PTR [rsp],xmm3
  002b5: movabs rax,0x557860b3bf40
  002bf: call   rax
  002c1: movq   xmm3,QWORD PTR [rsp]
  002c6: add    rsp,0x10
  002ca: mov    QWORD PTR [r14-0x48],rax
:00014 
:00015 %3 = %3 / %1                         [Float][Float]
  002ce: mov    rdi,QWORD PTR [r14-0x48]
  002d2: test   rdi,0x1
  002d9: jne    0x39585
  002df: test   rdi,0x2
  002e6: je     0x322
  002ec: xorps  xmm2,xmm2
  002ef: movabs rax,0x8000000000000002
  002f9: cmp    rdi,rax
  002fc: je     0x334
  00302: mov    rax,rdi
  00305: sar    rax,0x3f
  00309: add    rax,0x2
  0030d: and    rdi,0xfffffffffffffffc
  00311: or     rdi,rax
  00314: rol    rdi,0x3d
  00318: movq   xmm2,rdi
  0031d: jmp    0x334
  00322: call   0xffff6fa9
  00327: test   rax,rax
  0032a: je     0x39585
  00330: movq   xmm2,xmm0
  00334: movq   rax,xmm3
  00339: test   rax,rax
  0033c: je     0xffff6f75
  00342: divsd  xmm2,xmm3
:00016 _ = %2.call x=(%3; 1)                [Vec]
  00346: movq   xmm0,xmm2
  0034a: call   0xffff70cd
  0034f: mov    QWORD PTR [r14-0x48],rax
  00353: mov    rdi,QWORD PTR [r14-0x40]
  00357: test   rdi,0x7
  0035e: jne    0x39594
  00364: cmp    DWORD PTR [rdi+0x4],0x2b
  00368: jne    0x39594
  0036e: cmp    DWORD PTR [rip+0xffffffffffffa073],0x26        # 0xffffa3e8
  00375: jne    0x39594
  0037b: mov    esi,DWORD PTR [rip+0x3df]        # 0x760
  00381: cmp    esi,0xffffffff
  00384: je     0x395a3
  0038a: cmp    WORD PTR [rdi+0x2],0x3
  0038f: jne    0x3ac
  00395: cmp    esi,0x6
  00398: jge    0x3ac
  0039e: mov    rax,QWORD PTR [r14-0x48]
  003a2: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  003a7: jmp    0x3ed
  003ac: sub    rsp,0x10
  003b0: movq   QWORD PTR [rsp],xmm2
  003b5: movq   QWORD PTR [rsp+0x8],xmm3
  003bb: mov    rdx,QWORD PTR [r14-0x48]
  003bf: movabs rax,0x557860b3c1c0
  003c9: call   rax
  003cb: movq   xmm2,QWORD PTR [rsp]
  003d0: movq   xmm3,QWORD PTR [rsp+0x8]
  003d6: add    rsp,0x10
  003da: movabs r13,0x557861f90fa0
  003e4: test   rax,rax
  003e7: je     0xffff6f50
:00017 
:00018 %3 = %2.call y()                     [Vec]
  003ed: mov    rdi,QWORD PTR [r14-0x40]
  003f1: test   rdi,0x7
  003f8: jne    0x395f1
  003fe: cmp    DWORD PTR [rdi+0x4],0x2b
  00402: jne    0x395f1
  00408: cmp    DWORD PTR [rip+0xffffffffffff9fd9],0x26        # 0xffffa3e8
  0040f: jne    0x395f1
  00415: mov    esi,DWORD PTR [rip+0x34d]        # 0x768
  0041b: cmp    esi,0xffffffff
  0041e: je     0x39600
  00424: cmp    WORD PTR [rdi+0x2],0x3
  00429: jne    0x442
  0042f: cmp    esi,0x6
  00432: jge    0x442
  00438: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0043d: jmp    0x460
  00442: sub    rsp,0x10
  00446: movq   QWORD PTR [rsp],xmm3
  0044b: movabs rax,0x557860b3bf40
  00455: call   rax
  00457: movq   xmm3,QWORD PTR [rsp]
  0045c: add    rsp,0x10
  00460: mov    QWORD PTR [r14-0x48],rax
:00019 
:00020 %3 = %3 / %1                         [Float][Float]
  00464: mov    rdi,QWORD PTR [r14-0x48]
  00468: test   rdi,0x1
  0046f: jne    0x3963b
  00475: test   rdi,0x2
  0047c: je     0x4b8
  00482: xorps  xmm2,xmm2
  00485: movabs rax,0x8000000000000002
  0048f: cmp    rdi,rax
  00492: je     0x4ca
  00498: mov    rax,rdi
  0049b: sar    rax,0x3f
  0049f: add    rax,0x2
  004a3: and    rdi,0xfffffffffffffffc
  004a7: or     rdi,rax
  004aa: rol    rdi,0x3d
  004ae: movq   xmm2,rdi
  004b3: jmp    0x4ca
  004b8: call   0xffff6fa9
  004bd: test   rax,rax
  004c0: je     0x3963b
  004c6: movq   xmm2,xmm0
  004ca: movq   rax,xmm3
  004cf: test   rax,rax
  004d2: je     0xffff6f75
  004d8: divsd  xmm2,xmm3
:00021 _ = %2.call y=(%3; 1)                [Vec]
  004dc: movq   xmm0,xmm2
  004e0: call   0xffff70cd
  004e5: mov    QWORD PTR [r14-0x48],rax
  004e9: mov    rdi,QWORD PTR [r14-0x40]
  004ed: test   rdi,0x7
  004f4: jne    0x3964a
  004fa: cmp    DWORD PTR [rdi+0x4],0x2b
  004fe: jne    0x3964a
  00504: cmp    DWORD PTR [rip+0xffffffffffff9edd],0x26        # 0xffffa3e8
  0050b: jne    0x3964a
  00511: mov    esi,DWORD PTR [rip+0x259]        # 0x770
  00517: cmp    esi,0xffffffff
  0051a: je     0x39659
  00520: cmp    WORD PTR [rdi+0x2],0x3
  00525: jne    0x542
  0052b: cmp    esi,0x6
  0052e: jge    0x542
  00534: mov    rax,QWORD PTR [r14-0x48]
  00538: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0053d: jmp    0x583
  00542: sub    rsp,0x10
  00546: movq   QWORD PTR [rsp],xmm2
  0054b: movq   QWORD PTR [rsp+0x8],xmm3
  00551: mov    rdx,QWORD PTR [r14-0x48]
  00555: movabs rax,0x557860b3c1c0
  0055f: call   rax
  00561: movq   xmm2,QWORD PTR [rsp]
  00566: movq   xmm3,QWORD PTR [rsp+0x8]
  0056c: add    rsp,0x10
  00570: movabs r13,0x557861f90ff0
  0057a: test   rax,rax
  0057d: je     0xffff6f50
:00022 
:00023 %3 = %2.call z()                     [Vec]
  00583: mov    rdi,QWORD PTR [r14-0x40]
  00587: test   rdi,0x7
  0058e: jne    0x396a7
  00594: cmp    DWORD PTR [rdi+0x4],0x2b
  00598: jne    0x396a7
  0059e: cmp    DWORD PTR [rip+0xffffffffffff9e43],0x26        # 0xffffa3e8
  005a5: jne    0x396a7
  005ab: mov    esi,DWORD PTR [rip+0x1c7]        # 0x778
  005b1: cmp    esi,0xffffffff
  005b4: je     0x396b6
  005ba: cmp    WORD PTR [rdi+0x2],0x3
  005bf: jne    0x5d8
  005c5: cmp    esi,0x6
  005c8: jge    0x5d8
  005ce: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005d3: jmp    0x5f6
  005d8: sub    rsp,0x10
  005dc: movq   QWORD PTR [rsp],xmm3
  005e1: movabs rax,0x557860b3bf40
  005eb: call   rax
  005ed: movq   xmm3,QWORD PTR [rsp]
  005f2: add    rsp,0x10
  005f6: mov    QWORD PTR [r14-0x48],rax
:00024 
:00025 %3 = %3 / %1                         [Float][Float]
  005fa: mov    rdi,QWORD PTR [r14-0x48]
  005fe: test   rdi,0x1
  00605: jne    0x396f1
  0060b: test   rdi,0x2
  00612: je     0x64e
  00618: xorps  xmm2,xmm2
  0061b: movabs rax,0x8000000000000002
  00625: cmp    rdi,rax
  00628: je     0x660
  0062e: mov    rax,rdi
  00631: sar    rax,0x3f
  00635: add    rax,0x2
  00639: and    rdi,0xfffffffffffffffc
  0063d: or     rdi,rax
  00640: rol    rdi,0x3d
  00644: movq   xmm2,rdi
  00649: jmp    0x660
  0064e: call   0xffff6fa9
  00653: test   rax,rax
  00656: je     0x396f1
  0065c: movq   xmm2,xmm0
  00660: movq   rax,xmm3
  00665: test   rax,rax
  00668: je     0xffff6f75
  0066e: divsd  xmm2,xmm3
:00026 _ = %2.call z=(%3; 1)                [Vec]
  00672: movq   xmm0,xmm2
  00676: call   0xffff70cd
  0067b: mov    QWORD PTR [r14-0x48],rax
  0067f: mov    rdi,QWORD PTR [r14-0x40]
  00683: test   rdi,0x7
  0068a: jne    0x39700
  00690: cmp    DWORD PTR [rdi+0x4],0x2b
  00694: jne    0x39700
  0069a: cmp    DWORD PTR [rip+0xffffffffffff9d47],0x26        # 0xffffa3e8
  006a1: jne    0x39700
  006a7: mov    esi,DWORD PTR [rip+0xd3]        # 0x780
  006ad: cmp    esi,0xffffffff
  006b0: je     0x3970f
  006b6: cmp    WORD PTR [rdi+0x2],0x3
  006bb: jne    0x6d8
  006c1: cmp    esi,0x6
  006c4: jge    0x6d8
  006ca: mov    rax,QWORD PTR [r14-0x48]
  006ce: mov    QWORD PTR [rdi+rsi*8+0x10],rax
  006d3: jmp    0x719
  006d8: sub    rsp,0x10
  006dc: movq   QWORD PTR [rsp],xmm2
  006e1: movq   QWORD PTR [rsp+0x8],xmm3
  006e7: mov    rdx,QWORD PTR [r14-0x48]
  006eb: movabs rax,0x557860b3c1c0
  006f5: call   rax
  006f7: movq   xmm2,QWORD PTR [rsp]
  006fc: movq   xmm3,QWORD PTR [rsp+0x8]
  00702: add    rsp,0x10
  00706: movabs r13,0x557861f91040
  00710: test   rax,rax
  00713: je     0xffff6f50
:00027 
:00028 br =>:00029
  00719: jmp    0x39776
:00029 ret %2
  0071e: mov    rax,QWORD PTR [r14-0x40]
  00722: leave  
  00723: ret    
==> start whole compile: vlength FuncId(94) self_class:Vec start:[00000] bytecode:0x557861fc6ff0
<== finished compile. elapsed:21.6µs
offset:Pos(39000) code: 868 bytes  data: 28 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x60
  0000b: cmp    edx,0x0
  0000e: jne    0x3900b
  00014: mov    rax,0x4
  0001b: mov    QWORD PTR [r14-0x38],rax
  0001f: mov    QWORD PTR [r14-0x40],rax
  00023: mov    QWORD PTR [r14-0x48],rax
  00027: mov    QWORD PTR [r14-0x50],rax
  0002b: mov    rdi,QWORD PTR [r14-0x30]
  0002f: test   rdi,0x7
  00036: jne    0x3901a
  0003c: cmp    DWORD PTR [rdi+0x4],0x2b
  00040: jne    0x3901a
:00000 init_method reg:5 arg:0 pos:0 req:0 block:0 stack_offset:6
:00001 %1 = const[Math]                     [Math]
  00046: mov    rax,QWORD PTR [rip+0xffffffffffff9c2b]        # 0xffff9c78
  0004d: cmp    rax,QWORD PTR [rip+0x324]        # 0x378
  00054: jne    0x39029
  0005a: mov    rax,QWORD PTR [rip+0x307]        # 0x368
  00061: mov    QWORD PTR [r14-0x38],rax
:00002 %2 = @x: Vec[IvarId(0)]
  00065: mov    rdi,QWORD PTR [r14-0x30]
  00069: mov    rax,QWORD PTR [rdi+0x10]
  0006d: mov    QWORD PTR [r14-0x40],rax
:00003 %3 = @x: Vec[IvarId(0)]
  00071: mov    rdi,QWORD PTR [r14-0x30]
  00075: mov    rax,QWORD PTR [rdi+0x10]
  00079: mov    QWORD PTR [r14-0x48],rax
:00004 %2 = %2 * %3                         [Float][Float]
  0007d: mov    rdi,QWORD PTR [r14-0x40]
  00081: test   rdi,0x1
  00088: jne    0x3906f
  0008e: test   rdi,0x2
  00095: je     0xd1
  0009b: xorps  xmm2,xmm2
  0009e: movabs rax,0x8000000000000002
  000a8: cmp    rdi,rax
  000ab: je     0xe3
  000b1: mov    rax,rdi
  000b4: sar    rax,0x3f
  000b8: add    rax,0x2
  000bc: and    rdi,0xfffffffffffffffc
  000c0: or     rdi,rax
  000c3: rol    rdi,0x3d
  000c7: movq   xmm2,rdi
  000cc: jmp    0xe3
  000d1: call   0xffff6825
  000d6: test   rax,rax
  000d9: je     0x3906f
  000df: movq   xmm2,xmm0
  000e3: mov    rdi,QWORD PTR [r14-0x48]
  000e7: test   rdi,0x1
  000ee: jne    0x3907e
  000f4: test   rdi,0x2
  000fb: je     0x137
  00101: xorps  xmm3,xmm3
  00104: movabs rax,0x8000000000000002
  0010e: cmp    rdi,rax
  00111: je     0x149
  00117: mov    rax,rdi
  0011a: sar    rax,0x3f
  0011e: add    rax,0x2
  00122: and    rdi,0xfffffffffffffffc
  00126: or     rdi,rax
  00129: rol    rdi,0x3d
  0012d: movq   xmm3,rdi
  00132: jmp    0x149
  00137: call   0xffff6825
  0013c: test   rax,rax
  0013f: je     0x3907e
  00145: movq   xmm3,xmm0
  00149: mulsd  xmm2,xmm3
:00005 %3 = @y: Vec[IvarId(1)]
  0014d: mov    rdi,QWORD PTR [r14-0x30]
  00151: mov    rax,QWORD PTR [rdi+0x18]
  00155: mov    QWORD PTR [r14-0x48],rax
:00006 %4 = @y: Vec[IvarId(1)]
  00159: mov    rdi,QWORD PTR [r14-0x30]
  0015d: mov    rax,QWORD PTR [rdi+0x18]
  00161: mov    QWORD PTR [r14-0x50],rax
:00007 %3 = %3 * %4                         [Float][Float]
  00165: mov    rdi,QWORD PTR [r14-0x48]
  00169: test   rdi,0x1
  00170: jne    0x3908d
  00176: test   rdi,0x2
  0017d: je     0x1b9
  00183: xorps  xmm3,xmm3
  00186: movabs rax,0x8000000000000002
  00190: cmp    rdi,rax
  00193: je     0x1cb
  00199: mov    rax,rdi
  0019c: sar    rax,0x3f
  001a0: add    rax,0x2
  001a4: and    rdi,0xfffffffffffffffc
  001a8: or     rdi,rax
  001ab: rol    rdi,0x3d
  001af: movq   xmm3,rdi
  001b4: jmp    0x1cb
  001b9: call   0xffff6825
  001be: test   rax,rax
  001c1: je     0x3908d
  001c7: movq   xmm3,xmm0
  001cb: mov    rdi,QWORD PTR [r14-0x50]
  001cf: test   rdi,0x1
  001d6: jne    0x390a9
  001dc: test   rdi,0x2
  001e3: je     0x21f
  001e9: xorps  xmm4,xmm4
  001ec: movabs rax,0x8000000000000002
  001f6: cmp    rdi,rax
  001f9: je     0x231
  001ff: mov    rax,rdi
  00202: sar    rax,0x3f
  00206: add    rax,0x2
  0020a: and    rdi,0xfffffffffffffffc
  0020e: or     rdi,rax
  00211: rol    rdi,0x3d
  00215: movq   xmm4,rdi
  0021a: jmp    0x231
  0021f: call   0xffff6825
  00224: test   rax,rax
  00227: je     0x390a9
  0022d: movq   xmm4,xmm0
  00231: mulsd  xmm3,xmm4
:00008 %2 = %2 + %3                         [Float][Float]
  00235: addsd  xmm2,xmm3
:00009 %3 = @z: Vec[IvarId(2)]
  00239: mov    rdi,QWORD PTR [r14-0x30]
  0023d: mov    rax,QWORD PTR [rdi+0x20]
  00241: mov    QWORD PTR [r14-0x48],rax
:00010 %4 = @z: Vec[IvarId(2)]
  00245: mov    rdi,QWORD PTR [r14-0x30]
  00249: mov    rax,QWORD PTR [rdi+0x20]
  0024d: mov    QWORD PTR [r14-0x50],rax
:00011 %3 = %3 * %4                         [Float][Float]
  00251: mov    rdi,QWORD PTR [r14-0x48]
  00255: test   rdi,0x1
  0025c: jne    0x390c5
  00262: test   rdi,0x2
  00269: je     0x2a5
  0026f: xorps  xmm3,xmm3
  00272: movabs rax,0x8000000000000002
  0027c: cmp    rdi,rax
  0027f: je     0x2b7
  00285: mov    rax,rdi
  00288: sar    rax,0x3f
  0028c: add    rax,0x2
  00290: and    rdi,0xfffffffffffffffc
  00294: or     rdi,rax
  00297: rol    rdi,0x3d
  0029b: movq   xmm3,rdi
  002a0: jmp    0x2b7
  002a5: call   0xffff6825
  002aa: test   rax,rax
  002ad: je     0x390c5
  002b3: movq   xmm3,xmm0
  002b7: mov    rdi,QWORD PTR [r14-0x50]
  002bb: test   rdi,0x1
  002c2: jne    0x390e1
  002c8: test   rdi,0x2
  002cf: je     0x30b
  002d5: xorps  xmm4,xmm4
  002d8: movabs rax,0x8000000000000002
  002e2: cmp    rdi,rax
  002e5: je     0x31d
  002eb: mov    rax,rdi
  002ee: sar    rax,0x3f
  002f2: add    rax,0x2
  002f6: and    rdi,0xfffffffffffffffc
  002fa: or     rdi,rax
  002fd: rol    rdi,0x3d
  00301: movq   xmm4,rdi
  00306: jmp    0x31d
  0030b: call   0xffff6825
  00310: test   rax,rax
  00313: je     0x390e1
  00319: movq   xmm4,xmm0
  0031d: mulsd  xmm3,xmm4
:00012 %2 = %2 + %3                         [Float][Float]
  00321: addsd  xmm2,xmm3
:00013 %1 = %1.call sqrt(%2; 1)             [#<Class:Math>]
  00325: mov    rdi,QWORD PTR [r14-0x38]
  00329: test   rdi,0x7
  00330: jne    0x390fd
  00336: cmp    DWORD PTR [rdi+0x4],0x24
  0033a: jne    0x390fd
  00340: cmp    DWORD PTR [rip+0xffffffffffff991d],0x26        # 0xffff9c64
  00347: jne    0x390fd
  0034d: sqrtsd xmm5,xmm2
:00014 
:00015 ret %1
  00351: movq   xmm0,xmm5
  00355: call   0xffff6949
  0035a: mov    QWORD PTR [r14-0x38],rax
  0035e: mov    rax,QWORD PTR [r14-0x38]
  00362: leave  
  00363: ret    
==> start whole compile: initialize FuncId(100) self_class:Ray start:[00000] bytecode:0x557861fa42b0
<== finished compile. elapsed:8.9µs
offset:Pos(39896) code: 93 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x2
  0000e: jne    0x38da6
  00014: mov    QWORD PTR [r14-0x48],0x4
  0001c: mov    rdi,QWORD PTR [r14-0x30]
  00020: test   rdi,0x7
  00027: jne    0x38db5
  0002d: cmp    DWORD PTR [rdi+0x4],0x31
  00031: jne    0x38db5
:00000 init_method reg:4 arg:2 pos:2 req:2 block:0 stack_offset:5
:00001 @org: Ray[IvarId(0)] = %1
  00037: mov    rdi,QWORD PTR [r14-0x30]
  0003b: mov    rax,QWORD PTR [r14-0x38]
  0003f: mov    QWORD PTR [rdi+0x10],rax
:00002 @dir: Ray[IvarId(1)] = %2
  00043: mov    rdi,QWORD PTR [r14-0x30]
  00047: mov    rax,QWORD PTR [r14-0x40]
  0004b: mov    QWORD PTR [rdi+0x18],rax
:00003 %3 = %2
  0004f: mov    rax,QWORD PTR [r14-0x40]
  00053: mov    QWORD PTR [r14-0x48],rax
:00004 ret %3
  00057: mov    rax,QWORD PTR [r14-0x48]
  0005b: leave  
  0005c: ret    
==> start whole compile: initialize FuncId(101) self_class:Isect start:[00000] bytecode:0x557861fa8280
<== finished compile. elapsed:21µs
offset:Pos(39989) code: 715 bytes  data: 168 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x60
  0000b: cmp    edx,0x0
  0000e: jne    0x38d67
  00014: mov    rax,0x4
  0001b: mov    QWORD PTR [r14-0x38],rax
  0001f: mov    QWORD PTR [r14-0x40],rax
  00023: mov    QWORD PTR [r14-0x48],rax
  00027: mov    QWORD PTR [r14-0x50],rax
  0002b: mov    rdi,QWORD PTR [r14-0x30]
  0002f: test   rdi,0x7
  00036: jne    0x38d76
  0003c: cmp    DWORD PTR [rdi+0x4],0x33
  00040: jne    0x38d76
:00000 init_method reg:5 arg:0 pos:0 req:0 block:0 stack_offset:6
:00001 %1 = literal[10000000.0]
  00046: movq   xmm2,QWORD PTR [rip+0x27d]        # 0x2cb
  0004e: movabs rax,0xb18968000000002
  00058: mov    QWORD PTR [r14-0x38],rax
:00002 @t: Isect[IvarId(0)] = %1
  0005c: mov    rdi,QWORD PTR [r14-0x30]
  00060: mov    rax,QWORD PTR [r14-0x38]
  00064: mov    QWORD PTR [rdi+0x10],rax
:00003 %1 = literal[false]
  00068: mov    rax,0x14
  0006f: mov    QWORD PTR [r14-0x38],rax
:00004 @hit: Isect[IvarId(1)] = %1
  00073: mov    rdi,QWORD PTR [r14-0x30]
  00077: mov    rax,QWORD PTR [r14-0x38]
  0007b: mov    QWORD PTR [rdi+0x18],rax
:00005 %1 = const[Vec]                      [Vec]
  0007f: mov    rax,QWORD PTR [rip+0xffffffffffff9815]        # 0xffff989b
  00086: cmp    rax,QWORD PTR [rip+0x25e]        # 0x2eb
  0008d: jne    0x38d85
  00093: mov    rax,QWORD PTR [rip+0x241]        # 0x2db
  0009a: mov    QWORD PTR [r14-0x38],rax
:00006 %2 = literal[0.0]
  0009e: movq   xmm2,QWORD PTR [rip+0x255]        # 0x2fb
  000a6: movabs rax,0x8000000000000002
  000b0: mov    QWORD PTR [r14-0x40],rax
:00007 %3 = literal[0.0]
  000b4: movq   xmm3,QWORD PTR [rip+0x24f]        # 0x30b
  000bc: movabs rax,0x8000000000000002
  000c6: mov    QWORD PTR [r14-0x48],rax
:00008 %4 = literal[0.0]
  000ca: movq   xmm4,QWORD PTR [rip+0x249]        # 0x31b
  000d2: movabs rax,0x8000000000000002
  000dc: mov    QWORD PTR [r14-0x50],rax
:00009 %1 = %1.call new(%2; 3)              [#<Class:Vec>]
  000e0: mov    rdi,QWORD PTR [r14-0x38]
  000e4: test   rdi,0x7
  000eb: jne    0x38dcb
  000f1: cmp    DWORD PTR [rdi+0x4],0x2c
  000f5: jne    0x38dcb
  000fb: cmp    DWORD PTR [rip+0xffffffffffff9785],0x26        # 0xffff9887
  00102: jne    0x38dcb
  00108: mov    r9,0x0
  0010f: sub    rsp,0x20
  00113: movq   QWORD PTR [rsp],xmm2
  00118: movq   QWORD PTR [rsp+0x8],xmm3
  0011e: movq   QWORD PTR [rsp+0x10],xmm4
  00124: mov    rdx,rdi
  00127: mov    QWORD PTR [rsp-0x40],rcx
  0012c: mov    QWORD PTR [rsp-0x28],0x0
  00135: lea    rcx,[r14-0x40]
  00139: mov    r8,0x3
  00140: mov    rsi,QWORD PTR [rbx]
  00143: mov    QWORD PTR [rsp-0x18],rsi
  00148: lea    rsi,[rsp-0x18]
  0014d: mov    QWORD PTR [rbx],rsi
  00150: lea    r14,[rsp-0x10]
  00155: mov    QWORD PTR [rsp-0x20],r14
  0015a: call   0x38dda
  0015f: lea    r14,[rbp-0x8]
  00163: mov    QWORD PTR [rbx],r14
  00166: mov    r14,QWORD PTR [rbp-0x10]
  0016a: movq   xmm2,QWORD PTR [rsp]
  0016f: movq   xmm3,QWORD PTR [rsp+0x8]
  00175: movq   xmm4,QWORD PTR [rsp+0x10]
  0017b: add    rsp,0x20
  0017f: movabs r13,0x557861fa8330
  00189: test   rax,rax
  0018c: je     0xffff63ef
  00192: mov    QWORD PTR [r14-0x38],rax
:00010 
:00011 @pl: Isect[IvarId(2)] = %1
  00196: mov    rdi,QWORD PTR [r14-0x30]
  0019a: mov    rax,QWORD PTR [r14-0x38]
  0019e: mov    QWORD PTR [rdi+0x20],rax
:00012 %1 = const[Vec]                      [Vec]
  001a2: mov    rax,QWORD PTR [rip+0xffffffffffff96f2]        # 0xffff989b
  001a9: cmp    rax,QWORD PTR [rip+0x18b]        # 0x33b
  001b0: jne    0x38e0c
  001b6: mov    rax,QWORD PTR [rip+0x16e]        # 0x32b
  001bd: mov    QWORD PTR [r14-0x38],rax
:00013 %2 = literal[0.0]
  001c1: movq   xmm2,QWORD PTR [rip+0x182]        # 0x34b
  001c9: movabs rax,0x8000000000000002
  001d3: mov    QWORD PTR [r14-0x40],rax
:00014 %3 = literal[0.0]
  001d7: movq   xmm3,QWORD PTR [rip+0x17c]        # 0x35b
  001df: movabs rax,0x8000000000000002
  001e9: mov    QWORD PTR [r14-0x48],rax
:00015 %4 = literal[0.0]
  001ed: movq   xmm4,QWORD PTR [rip+0x176]        # 0x36b
  001f5: movabs rax,0x8000000000000002
  001ff: mov    QWORD PTR [r14-0x50],rax
:00016 %1 = %1.call new(%2; 3)              [#<Class:Vec>]
  00203: mov    rdi,QWORD PTR [r14-0x38]
  00207: test   rdi,0x7
  0020e: jne    0x38e7c
  00214: cmp    DWORD PTR [rdi+0x4],0x2c
  00218: jne    0x38e7c
  0021e: cmp    DWORD PTR [rip+0xffffffffffff9662],0x26        # 0xffff9887
  00225: jne    0x38e7c
  0022b: mov    r9,0x0
  00232: sub    rsp,0x20
  00236: movq   QWORD PTR [rsp],xmm2
  0023b: movq   QWORD PTR [rsp+0x8],xmm3
  00241: movq   QWORD PTR [rsp+0x10],xmm4
  00247: mov    rdx,rdi
  0024a: mov    QWORD PTR [rsp-0x40],rcx
  0024f: mov    QWORD PTR [rsp-0x28],0x0
  00258: lea    rcx,[r14-0x40]
  0025c: mov    r8,0x3
  00263: mov    rsi,QWORD PTR [rbx]
  00266: mov    QWORD PTR [rsp-0x18],rsi
  0026b: lea    rsi,[rsp-0x18]
  00270: mov    QWORD PTR [rbx],rsi
  00273: lea    r14,[rsp-0x10]
  00278: mov    QWORD PTR [rsp-0x20],r14
  0027d: call   0x38e8b
  00282: lea    r14,[rbp-0x8]
  00286: mov    QWORD PTR [rbx],r14
  00289: mov    r14,QWORD PTR [rbp-0x10]
  0028d: movq   xmm2,QWORD PTR [rsp]
  00292: movq   xmm3,QWORD PTR [rsp+0x8]
  00298: movq   xmm4,QWORD PTR [rsp+0x10]
  0029e: add    rsp,0x20
  002a2: movabs r13,0x557861fa83a0
  002ac: test   rax,rax
  002af: je     0xffff63ef
  002b5: mov    QWORD PTR [r14-0x38],rax
:00017 
:00018 @n: Isect[IvarId(3)] = %1
  002b9: mov    rdi,QWORD PTR [r14-0x30]
  002bd: mov    rax,QWORD PTR [r14-0x38]
  002c1: mov    QWORD PTR [rdi+0x28],rax
:00019 ret %1
  002c5: mov    rax,QWORD PTR [r14-0x38]
  002c9: leave  
  002ca: ret    
==> start whole compile: intersect FuncId(99) self_class:Plane start:[00000] bytecode:0x557861fb0c30
<== finished compile. elapsed:121µs
offset:Pos(40872) code: 6829 bytes  data: 115 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0x90
  0000e:    	cmp    edx,0x2
  00011:    	jne    0x38b4a
  00017: 00 	mov    rax,0x4
  0001e:    	mov    QWORD PTR [r14-0x48],rax
  00022:    	mov    QWORD PTR [r14-0x50],rax
  00026:    	mov    QWORD PTR [r14-0x58],rax
  0002a:    	mov    QWORD PTR [r14-0x60],rax
  0002e:    	mov    QWORD PTR [r14-0x68],rax
  00032:    	mov    QWORD PTR [r14-0x70],rax
  00036:    	mov    QWORD PTR [r14-0x78],rax
  0003a:    	mov    QWORD PTR [r14-0x80],rax
  0003e: ff 	mov    QWORD PTR [r14-0x88],rax
  00045:    	mov    rdi,QWORD PTR [r14-0x30]
  00049: 00 	test   rdi,0x7
  00050:    	jne    0x38b59
  00056:    	cmp    DWORD PTR [rdi+0x4],0x2f
  0005a:    	jne    0x38b59
:00000 init_method reg:12 arg:2 pos:2 req:2 block:0 stack_offset:9
:00001 %7 = @p: Plane[IvarId(0)]
  00060:    	mov    rdi,QWORD PTR [r14-0x30]
  00064:    	mov    rax,QWORD PTR [rdi+0x10]
  00068:    	mov    QWORD PTR [r14-0x68],rax
:00002 %8 = @n: Plane[IvarId(1)]
  0006c:    	mov    rdi,QWORD PTR [r14-0x30]
  00070:    	mov    rax,QWORD PTR [rdi+0x18]
  00074:    	mov    QWORD PTR [r14-0x70],rax
:00003 %3 = %7.call vdot(%8; 1)             [Vec]
  00078:    	mov    rdi,QWORD PTR [r14-0x68]
  0007c: 00 	test   rdi,0x7
  00083:    	jne    0x38b68
  00089:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0008d:    	jne    0x38b68
  00093: 26 	cmp    DWORD PTR [rip+0xffffffffffff947a],0x26        # 0xffff9514
  0009a:    	jne    0x38b68
  000a0: 00 	cmp    DWORD PTR [rip+0xffffffffffff9471],0x0        # 0xffff9518
  000a7:    	je     0xbf
  000ad:    	mov    rdi,r12
  000b0:    	mov    rsi,QWORD PTR [rbx]
  000b3: 78 	movabs rax,0x557860afd140
  000bd:    	call   rax
  000bf: 00 	mov    QWORD PTR [rsp-0x28],0x0
  000c8:    	mov    rax,QWORD PTR [r14-0x68]
  000cc:    	mov    QWORD PTR [rsp-0x40],rax
  000d1: 00 	mov    rdi,0x1
  000d8:    	mov    rax,QWORD PTR [r14-0x70]
  000dc:    	mov    QWORD PTR [rsp-0x48],rax
  000e1: 00 	mov    QWORD PTR [rsp-0x38],0x0
  000ea: 05 	movabs rax,0x100050000005d
  000f4:    	mov    QWORD PTR [rsp-0x30],rax
  000f9: 78 	movabs r13,0x557861fb69b0
  00103:    	mov    rsi,QWORD PTR [rbx]
  00106:    	mov    QWORD PTR [rsp-0x18],rsi
  0010b:    	lea    rsi,[rsp-0x18]
  00110:    	mov    QWORD PTR [rbx],rsi
  00113:    	lea    r14,[rsp-0x10]
  00118:    	mov    QWORD PTR [rsp-0x20],r14
  0011d:    	call   0xffffa1f0
  00122:    	lea    r14,[rbp-0x8]
  00126:    	mov    QWORD PTR [rbx],r14
  00129:    	mov    r14,QWORD PTR [rbp-0x10]
  0012d: 78 	movabs r13,0x557861fb0c80
  00137:    	test   rax,rax
  0013a:    	je     0xffff607c
  00140:    	mov    QWORD PTR [r14-0x48],rax
:00004 
:00005 %3 = neg %3                          [Float]
  00144:    	mov    rdi,QWORD PTR [r14-0x48]
  00148: 00 	test   rdi,0x1
  0014f:    	jne    0x38b77
  00155: 00 	test   rdi,0x2
  0015c:    	je     0x198
  00162:    	xorps  xmm2,xmm2
  00165: 00 	movabs rax,0x8000000000000002
  0016f:    	cmp    rdi,rax
  00172:    	je     0x1aa
  00178:    	mov    rax,rdi
  0017b:    	sar    rax,0x3f
  0017f:    	add    rax,0x2
  00183:    	and    rdi,0xfffffffffffffffc
  00187:    	or     rdi,rax
  0018a:    	rol    rdi,0x3d
  0018e:    	movq   xmm2,rdi
  00193:    	jmp    0x1aa
  00198:    	call   0xffff60d5
  0019d:    	test   rax,rax
  001a0:    	je     0x38b77
  001a6:    	movq   xmm2,xmm0
  001aa: 00 	xorps  xmm2,XMMWORD PTR [rip+0x1907]        # 0x1ab8
:00006 %7 = %1.call dir()                   [Ray]
  001b1:    	mov    rdi,QWORD PTR [r14-0x38]
  001b5: 00 	test   rdi,0x7
  001bc:    	jne    0x38b86
  001c2:    	cmp    DWORD PTR [rdi+0x4],0x31
  001c6:    	jne    0x38b86
  001cc: 26 	cmp    DWORD PTR [rip+0xffffffffffff9341],0x26        # 0xffff9514
  001d3:    	jne    0x38b86
  001d9:    	mov    esi,DWORD PTR [rip+0x18e5]        # 0x1ac4
  001df:    	cmp    esi,0xffffffff
  001e2:    	je     0x38ba2
  001e8:    	cmp    WORD PTR [rdi+0x2],0x3
  001ed:    	jne    0x206
  001f3:    	cmp    esi,0x6
  001f6:    	jge    0x206
  001fc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00201:    	jmp    0x224
  00206:    	sub    rsp,0x10
  0020a:    	movq   QWORD PTR [rsp],xmm2
  0020f: 78 	movabs rax,0x557860b3bf40
  00219:    	call   rax
  0021b:    	movq   xmm2,QWORD PTR [rsp]
  00220:    	add    rsp,0x10
  00224:    	mov    QWORD PTR [r14-0x68],rax
:00007 
:00008 %8 = @n: Plane[IvarId(1)]
  00228:    	mov    rdi,QWORD PTR [r14-0x30]
  0022c:    	mov    rax,QWORD PTR [rdi+0x18]
  00230:    	mov    QWORD PTR [r14-0x70],rax
:00009 %4 = %7.call vdot(%8; 1)             [Vec]
  00234:    	mov    rdi,QWORD PTR [r14-0x68]
  00238: 00 	test   rdi,0x7
  0023f:    	jne    0x38bdd
  00245:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00249:    	jne    0x38bdd
  0024f: 26 	cmp    DWORD PTR [rip+0xffffffffffff92be],0x26        # 0xffff9514
  00256:    	jne    0x38bdd
  0025c:    	sub    rsp,0x10
  00260:    	movq   QWORD PTR [rsp],xmm2
  00265: 00 	cmp    DWORD PTR [rip+0xffffffffffff92ac],0x0        # 0xffff9518
  0026c:    	je     0x284
  00272:    	mov    rdi,r12
  00275:    	mov    rsi,QWORD PTR [rbx]
  00278: 78 	movabs rax,0x557860afd140
  00282:    	call   rax
  00284: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0028d:    	mov    rax,QWORD PTR [r14-0x68]
  00291:    	mov    QWORD PTR [rsp-0x40],rax
  00296: 00 	mov    rdi,0x1
  0029d:    	mov    rax,QWORD PTR [r14-0x70]
  002a1:    	mov    QWORD PTR [rsp-0x48],rax
  002a6: 00 	mov    QWORD PTR [rsp-0x38],0x0
  002af: 05 	movabs rax,0x100050000005d
  002b9:    	mov    QWORD PTR [rsp-0x30],rax
  002be: 78 	movabs r13,0x557861fb69b0
  002c8:    	mov    rsi,QWORD PTR [rbx]
  002cb:    	mov    QWORD PTR [rsp-0x18],rsi
  002d0:    	lea    rsi,[rsp-0x18]
  002d5:    	mov    QWORD PTR [rbx],rsi
  002d8:    	lea    r14,[rsp-0x10]
  002dd:    	mov    QWORD PTR [rsp-0x20],r14
  002e2:    	call   0xffffa1f0
  002e7:    	lea    r14,[rbp-0x8]
  002eb:    	mov    QWORD PTR [rbx],r14
  002ee:    	mov    r14,QWORD PTR [rbp-0x10]
  002f2:    	movq   xmm2,QWORD PTR [rsp]
  002f7:    	add    rsp,0x10
  002fb: 78 	movabs r13,0x557861fb0ce0
  00305:    	test   rax,rax
  00308:    	je     0xffff607c
  0030e:    	mov    QWORD PTR [r14-0x50],rax
:00010 
:00011 %5 = %4
  00312:    	mov    rax,QWORD PTR [r14-0x50]
  00316:    	mov    QWORD PTR [r14-0x58],rax
:00012 %7 = literal[0.0]
  0031a: 00 	movq   xmm3,QWORD PTR [rip+0x17a6]        # 0x1ac8
  00322: 00 	movabs rax,0x8000000000000002
  0032c:    	mov    QWORD PTR [r14-0x68],rax
:00013 _%7 = %4 < %7                        [Float][Float]
:00014 condnotbr _%7 =>:00018
  00330:    	mov    rdi,QWORD PTR [r14-0x50]
  00334: 00 	test   rdi,0x1
  0033b:    	jne    0x38bf9
  00341: 00 	test   rdi,0x2
  00348:    	je     0x384
  0034e:    	xorps  xmm4,xmm4
  00351: 00 	movabs rax,0x8000000000000002
  0035b:    	cmp    rdi,rax
  0035e:    	je     0x396
  00364:    	mov    rax,rdi
  00367:    	sar    rax,0x3f
  0036b:    	add    rax,0x2
  0036f:    	and    rdi,0xfffffffffffffffc
  00373:    	or     rdi,rax
  00376:    	rol    rdi,0x3d
  0037a:    	movq   xmm4,rdi
  0037f:    	jmp    0x396
  00384:    	call   0xffff60d5
  00389:    	test   rax,rax
  0038c:    	je     0x38bf9
  00392:    	movq   xmm4,xmm0
  00396:    	ucomisd xmm4,xmm3
  0039a:    	jae    0x38c5a
:00015 %5 = %4
:00016 %5 = neg %5                          [<INVALID>]
  003a0: 00 	cmp    DWORD PTR [rip+0x1729],0x0        # 0x1ad0
  003a7:    	jl     0x38c15
  003ad:    	je     0x38c3e
  003b3: 01 	sub    DWORD PTR [rip+0x1716],0x1        # 0x1ad0
  003ba:    	xor    rdi,rdi
  003bd:    	jmp    0x38c15
  003c2:    	movq   xmm0,xmm4
  003c6:    	call   0xffff61f9
  003cb:    	mov    QWORD PTR [r14-0x58],rax
  003cf:    	sub    rsp,0x20
  003d3:    	movq   QWORD PTR [rsp],xmm2
  003d8:    	movq   QWORD PTR [rsp+0x8],xmm3
  003de:    	movq   QWORD PTR [rsp+0x10],xmm4
  003e4:    	mov    rdi,QWORD PTR [r14-0x58]
  003e8:    	mov    rdx,rdi
  003eb:    	mov    rdi,rbx
  003ee:    	mov    rsi,r12
  003f1: 78 	movabs rax,0x557860aa7750
  003fb:    	call   rax
  003fd:    	movq   xmm2,QWORD PTR [rsp]
  00402:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00408:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0040e:    	add    rsp,0x20
  00412: 78 	movabs r13,0x557861fb0d40
  0041c:    	test   rax,rax
  0041f:    	je     0xffff607c
  00425:    	mov    QWORD PTR [r14-0x58],rax
:00017 br =>:00018
  00429:    	jmp    0x38c80
:00018 %7 = literal[1e-17]
  0042e: 00 	movq   xmm3,QWORD PTR [rip+0x16a2]        # 0x1ad8
  00436: aa 	movabs rax,0xe33877aa3236a4ba
  00440:    	mov    QWORD PTR [r14-0x68],rax
:00019 _%7 = %5 < %7                        [Float][Float]
:00020 condnotbr _%7 =>:00024
  00444:    	mov    rdi,QWORD PTR [r14-0x58]
  00448: 00 	test   rdi,0x1
  0044f:    	jne    0x38ca6
  00455: 00 	test   rdi,0x2
  0045c:    	je     0x498
  00462:    	xorps  xmm5,xmm5
  00465: 00 	movabs rax,0x8000000000000002
  0046f:    	cmp    rdi,rax
  00472:    	je     0x4aa
  00478:    	mov    rax,rdi
  0047b:    	sar    rax,0x3f
  0047f:    	add    rax,0x2
  00483:    	and    rdi,0xfffffffffffffffc
  00487:    	or     rdi,rax
  0048a:    	rol    rdi,0x3d
  0048e:    	movq   xmm5,rdi
  00493:    	jmp    0x4aa
  00498:    	call   0xffff60d5
  0049d:    	test   rax,rax
  004a0:    	je     0x38ca6
  004a6:    	movq   xmm5,xmm0
  004aa:    	ucomisd xmm5,xmm3
  004ae:    	jae    0x4c2
:00021 %7 = nil
  004b4: 00 	mov    QWORD PTR [r14-0x68],0x4
:00022 ret %7
  004bc:    	mov    rax,QWORD PTR [r14-0x68]
  004c0:    	leave  
  004c1:    	ret    
:00024 %7 = %1.call org()                   [Ray]
  004c2:    	mov    rdi,QWORD PTR [r14-0x38]
  004c6: 00 	test   rdi,0x7
  004cd:    	jne    0x38cc2
  004d3:    	cmp    DWORD PTR [rdi+0x4],0x31
  004d7:    	jne    0x38cc2
  004dd: 26 	cmp    DWORD PTR [rip+0xffffffffffff9030],0x26        # 0xffff9514
  004e4:    	jne    0x38cc2
  004ea:    	mov    esi,DWORD PTR [rip+0x15f4]        # 0x1ae4
  004f0:    	cmp    esi,0xffffffff
  004f3:    	je     0x38cde
  004f9:    	cmp    WORD PTR [rdi+0x2],0x3
  004fe:    	jne    0x517
  00504:    	cmp    esi,0x6
  00507:    	jge    0x517
  0050d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00512:    	jmp    0x54d
  00517:    	sub    rsp,0x20
  0051b:    	movq   QWORD PTR [rsp],xmm2
  00520:    	movq   QWORD PTR [rsp+0x8],xmm4
  00526:    	movq   QWORD PTR [rsp+0x10],xmm5
  0052c: 78 	movabs rax,0x557860b3bf40
  00536:    	call   rax
  00538:    	movq   xmm2,QWORD PTR [rsp]
  0053d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00543:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00549:    	add    rsp,0x20
  0054d:    	mov    QWORD PTR [r14-0x68],rax
:00025 
:00026 %8 = @n: Plane[IvarId(1)]
  00551:    	mov    rdi,QWORD PTR [r14-0x30]
  00555:    	mov    rax,QWORD PTR [rdi+0x18]
  00559:    	mov    QWORD PTR [r14-0x70],rax
:00027 %7 = %7.call vdot(%8; 1)             [Vec]
  0055d:    	mov    rdi,QWORD PTR [r14-0x68]
  00561: 00 	test   rdi,0x7
  00568:    	jne    0x38d31
  0056e:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00572:    	jne    0x38d31
  00578: 26 	cmp    DWORD PTR [rip+0xffffffffffff8f95],0x26        # 0xffff9514
  0057f:    	jne    0x38d31
  00585:    	sub    rsp,0x20
  00589:    	movq   QWORD PTR [rsp],xmm2
  0058e:    	movq   QWORD PTR [rsp+0x8],xmm4
  00594:    	movq   QWORD PTR [rsp+0x10],xmm5
  0059a: 00 	cmp    DWORD PTR [rip+0xffffffffffff8f77],0x0        # 0xffff9518
  005a1:    	je     0x5b9
  005a7:    	mov    rdi,r12
  005aa:    	mov    rsi,QWORD PTR [rbx]
  005ad: 78 	movabs rax,0x557860afd140
  005b7:    	call   rax
  005b9: 00 	mov    QWORD PTR [rsp-0x28],0x0
  005c2:    	mov    rax,QWORD PTR [r14-0x68]
  005c6:    	mov    QWORD PTR [rsp-0x40],rax
  005cb: 00 	mov    rdi,0x1
  005d2:    	mov    rax,QWORD PTR [r14-0x70]
  005d6:    	mov    QWORD PTR [rsp-0x48],rax
  005db: 00 	mov    QWORD PTR [rsp-0x38],0x0
  005e4: 05 	movabs rax,0x100050000005d
  005ee:    	mov    QWORD PTR [rsp-0x30],rax
  005f3: 78 	movabs r13,0x557861fb69b0
  005fd:    	mov    rsi,QWORD PTR [rbx]
  00600:    	mov    QWORD PTR [rsp-0x18],rsi
  00605:    	lea    rsi,[rsp-0x18]
  0060a:    	mov    QWORD PTR [rbx],rsi
  0060d:    	lea    r14,[rsp-0x10]
  00612:    	mov    QWORD PTR [rsp-0x20],r14
  00617:    	call   0xffffa1f0
  0061c:    	lea    r14,[rbp-0x8]
  00620:    	mov    QWORD PTR [rbx],r14
  00623:    	mov    r14,QWORD PTR [rbp-0x10]
  00627:    	movq   xmm2,QWORD PTR [rsp]
  0062c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00632:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00638:    	add    rsp,0x20
  0063c: 78 	movabs r13,0x557861fb0e00
  00646:    	test   rax,rax
  00649:    	je     0xffff607c
  0064f:    	mov    QWORD PTR [r14-0x68],rax
:00028 
:00029 %7 = %7 + %3                         [Float][Float]
  00653:    	mov    rdi,QWORD PTR [r14-0x68]
  00657: 00 	test   rdi,0x1
  0065e:    	jne    0x38d4d
  00664: 00 	test   rdi,0x2
  0066b:    	je     0x6a7
  00671:    	xorps  xmm3,xmm3
  00674: 00 	movabs rax,0x8000000000000002
  0067e:    	cmp    rdi,rax
  00681:    	je     0x6b9
  00687:    	mov    rax,rdi
  0068a:    	sar    rax,0x3f
  0068e:    	add    rax,0x2
  00692:    	and    rdi,0xfffffffffffffffc
  00696:    	or     rdi,rax
  00699:    	rol    rdi,0x3d
  0069d:    	movq   xmm3,rdi
  006a2:    	jmp    0x6b9
  006a7:    	call   0xffff60d5
  006ac:    	test   rax,rax
  006af:    	je     0x38d4d
  006b5:    	movq   xmm3,xmm0
  006b9:    	addsd  xmm3,xmm2
:00030 %7 = neg %7                          [Float]
  006bd: 00 	xorps  xmm3,XMMWORD PTR [rip+0x1424]        # 0x1ae8
:00031 %6 = %7 / %4                         [Float][Float]
  006c4:    	movq   xmm6,xmm3
  006c8:    	movq   rax,xmm4
  006cd:    	test   rax,rax
  006d0:    	je     0xffff60a1
  006d6:    	divsd  xmm6,xmm4
:00032 %7 = literal[0.0]
  006da: 00 	movq   xmm3,QWORD PTR [rip+0x1416]        # 0x1af8
  006e2: 00 	movabs rax,0x8000000000000002
  006ec:    	mov    QWORD PTR [r14-0x68],rax
:00033 _%7 = %6 > %7                        [Float][Float]
:00034 condnotbr _%7 =>:00083
  006f0:    	ucomisd xmm6,xmm3
  006f4:    	jbe    0x39422
:00035 %7 = %2.call t()                     [<INVALID>]
  006fa: 00 	cmp    DWORD PTR [rip+0x13ff],0x0        # 0x1b00
  00701:    	jl     0x38d69
  00707:    	je     0x38d92
  0070d: 01 	sub    DWORD PTR [rip+0x13ec],0x1        # 0x1b00
  00714:    	xor    rdi,rdi
  00717:    	jmp    0x38d69
  0071c:    	sub    rsp,0x20
  00720:    	movq   QWORD PTR [rsp],xmm2
  00725:    	movq   QWORD PTR [rsp+0x8],xmm4
  0072b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00731:    	movq   QWORD PTR [rsp+0x18],xmm6
  00737:    	mov    rdi,QWORD PTR [r14-0x40]
  0073b: 78 	movabs rax,0x557860aa2e20
  00745:    	call   rax
  00747:    	mov    r15d,eax
  0074a: 78 	movabs r13,0x557861fb0e70
  00754:    	cmp    QWORD PTR [r13+0x8],0x0
  00759:    	je     0x38dae
  0075f:    	cmp    r15d,DWORD PTR [r13-0x8]
  00763:    	jne    0x38dae
  00769:    	mov    eax,DWORD PTR [rip+0xffffffffffff8da5]        # 0xffff9514
  0076f:    	cmp    DWORD PTR [r13-0x4],eax
  00773:    	jne    0x38dae
  00779: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00782:    	mov    rax,QWORD PTR [r14-0x40]
  00786:    	mov    QWORD PTR [rsp-0x40],rax
  0078b: 00 	mov    rdi,0x0
  00792: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0079b:    	mov    r13,QWORD PTR [r13+0x8]
  0079f:    	mov    rax,QWORD PTR [r13+0x8]
  007a3:    	mov    QWORD PTR [rsp-0x30],rax
  007a8:    	mov    rax,QWORD PTR [r13+0x0]
  007ac:    	mov    r13,QWORD PTR [r13+0x10]
  007b0:    	mov    rsi,QWORD PTR [rbx]
  007b3:    	mov    QWORD PTR [rsp-0x18],rsi
  007b8:    	lea    rsi,[rsp-0x18]
  007bd:    	mov    QWORD PTR [rbx],rsi
  007c0:    	lea    r14,[rsp-0x10]
  007c5:    	mov    QWORD PTR [rsp-0x20],r14
  007ca:    	call   rax
  007cc:    	lea    r14,[rbp-0x8]
  007d0:    	mov    QWORD PTR [rbx],r14
  007d3:    	mov    r14,QWORD PTR [rbp-0x10]
  007d7:    	movq   xmm2,QWORD PTR [rsp]
  007dc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007e2:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007e8:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007ee:    	add    rsp,0x20
  007f2:    	test   rax,rax
  007f5:    	je     0x38def
  007fb:    	mov    QWORD PTR [r14-0x68],rax
:00036 
:00037 _%7 = %6 < %7                        [<INVALID>][<INVALID>]
:00038 condnotbr _%7 =>:00083
  007ff:    	movq   xmm0,xmm6
  00803:    	call   0xffff61f9
  00808:    	mov    QWORD PTR [r14-0x60],rax
  0080c:    	mov    rdi,QWORD PTR [r14-0x60]
  00810:    	mov    rsi,QWORD PTR [r14-0x68]
  00814: 00 	test   rdi,0x1
  0081b:    	je     0x38dfe
  00821: 00 	test   rsi,0x1
  00828:    	je     0x38dfe
  0082e:    	cmp    rdi,rsi
  00831:    	jge    0x39455
:00039 %7 = literal[true]
  00837: 00 	mov    rax,0x1c
  0083e:    	mov    QWORD PTR [r14-0x68],rax
:00040 _ = %2.call hit=(%7; 1)              [<INVALID>]
  00842:    	sub    rsp,0x20
  00846:    	movq   QWORD PTR [rsp],xmm2
  0084b:    	movq   QWORD PTR [rsp+0x8],xmm4
  00851:    	movq   QWORD PTR [rsp+0x10],xmm5
  00857:    	movq   QWORD PTR [rsp+0x18],xmm6
  0085d:    	mov    rdi,QWORD PTR [r14-0x40]
  00861: 78 	movabs rax,0x557860aa2e20
  0086b:    	call   rax
  0086d:    	mov    r15d,eax
  00870: 78 	movabs r13,0x557861fb0ec0
  0087a:    	cmp    QWORD PTR [r13+0x8],0x0
  0087f:    	je     0x38e53
  00885:    	cmp    r15d,DWORD PTR [r13-0x8]
  00889:    	jne    0x38e53
  0088f:    	mov    eax,DWORD PTR [rip+0xffffffffffff8c7f]        # 0xffff9514
  00895:    	cmp    DWORD PTR [r13-0x4],eax
  00899:    	jne    0x38e53
  0089f: 00 	mov    QWORD PTR [rsp-0x28],0x0
  008a8:    	mov    rax,QWORD PTR [r14-0x40]
  008ac:    	mov    QWORD PTR [rsp-0x40],rax
  008b1: 00 	mov    rdi,0x1
  008b8:    	mov    rax,QWORD PTR [r14-0x68]
  008bc:    	mov    QWORD PTR [rsp-0x48],rax
  008c1: 00 	mov    QWORD PTR [rsp-0x38],0x0
  008ca:    	mov    r13,QWORD PTR [r13+0x8]
  008ce:    	mov    rax,QWORD PTR [r13+0x8]
  008d2:    	mov    QWORD PTR [rsp-0x30],rax
  008d7:    	mov    rax,QWORD PTR [r13+0x0]
  008db:    	mov    r13,QWORD PTR [r13+0x10]
  008df:    	mov    rsi,QWORD PTR [rbx]
  008e2:    	mov    QWORD PTR [rsp-0x18],rsi
  008e7:    	lea    rsi,[rsp-0x18]
  008ec:    	mov    QWORD PTR [rbx],rsi
  008ef:    	lea    r14,[rsp-0x10]
  008f4:    	mov    QWORD PTR [rsp-0x20],r14
  008f9:    	call   rax
  008fb:    	lea    r14,[rbp-0x8]
  008ff:    	mov    QWORD PTR [rbx],r14
  00902:    	mov    r14,QWORD PTR [rbp-0x10]
  00906:    	movq   xmm2,QWORD PTR [rsp]
  0090b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00911:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00917:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0091d:    	add    rsp,0x20
  00921:    	test   rax,rax
  00924:    	je     0x38e94
:00041 
:00042 _ = %2.call t=(%6; 1)                [<INVALID>]
  0092a:    	sub    rsp,0x20
  0092e:    	movq   QWORD PTR [rsp],xmm2
  00933:    	movq   QWORD PTR [rsp+0x8],xmm4
  00939:    	movq   QWORD PTR [rsp+0x10],xmm5
  0093f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00945:    	mov    rdi,QWORD PTR [r14-0x40]
  00949: 78 	movabs rax,0x557860aa2e20
  00953:    	call   rax
  00955:    	mov    r15d,eax
  00958: 78 	movabs r13,0x557861fb0ee0
  00962:    	cmp    QWORD PTR [r13+0x8],0x0
  00967:    	je     0x38ea3
  0096d:    	cmp    r15d,DWORD PTR [r13-0x8]
  00971:    	jne    0x38ea3
  00977:    	mov    eax,DWORD PTR [rip+0xffffffffffff8b97]        # 0xffff9514
  0097d:    	cmp    DWORD PTR [r13-0x4],eax
  00981:    	jne    0x38ea3
  00987: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00990:    	mov    rax,QWORD PTR [r14-0x40]
  00994:    	mov    QWORD PTR [rsp-0x40],rax
  00999: 00 	mov    rdi,0x1
  009a0:    	mov    rax,QWORD PTR [r14-0x60]
  009a4:    	mov    QWORD PTR [rsp-0x48],rax
  009a9: 00 	mov    QWORD PTR [rsp-0x38],0x0
  009b2:    	mov    r13,QWORD PTR [r13+0x8]
  009b6:    	mov    rax,QWORD PTR [r13+0x8]
  009ba:    	mov    QWORD PTR [rsp-0x30],rax
  009bf:    	mov    rax,QWORD PTR [r13+0x0]
  009c3:    	mov    r13,QWORD PTR [r13+0x10]
  009c7:    	mov    rsi,QWORD PTR [rbx]
  009ca:    	mov    QWORD PTR [rsp-0x18],rsi
  009cf:    	lea    rsi,[rsp-0x18]
  009d4:    	mov    QWORD PTR [rbx],rsi
  009d7:    	lea    r14,[rsp-0x10]
  009dc:    	mov    QWORD PTR [rsp-0x20],r14
  009e1:    	call   rax
  009e3:    	lea    r14,[rbp-0x8]
  009e7:    	mov    QWORD PTR [rbx],r14
  009ea:    	mov    r14,QWORD PTR [rbp-0x10]
  009ee:    	movq   xmm2,QWORD PTR [rsp]
  009f3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  009f9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009ff:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a05:    	add    rsp,0x20
  00a09:    	test   rax,rax
  00a0c:    	je     0x38ee4
:00043 
:00044 %7 = @n: <INVALID>[IvarId(0)]
  00a12:    	mov    rdi,QWORD PTR [r14-0x30]
  00a16:    	sub    rsp,0x20
  00a1a:    	movq   QWORD PTR [rsp],xmm2
  00a1f:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a25:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a2b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a31: 00 	mov    rsi,0xab
  00a38:    	mov    rdx,r12
  00a3b: 78 	movabs rax,0x557860b06250
  00a45:    	call   rax
  00a47:    	movq   xmm2,QWORD PTR [rsp]
  00a4c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a52:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a58:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a5e:    	add    rsp,0x20
  00a62:    	mov    QWORD PTR [r14-0x68],rax
:00045 _ = %2.call n=(%7; 1)                [<INVALID>]
  00a66:    	sub    rsp,0x20
  00a6a:    	movq   QWORD PTR [rsp],xmm2
  00a6f:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a75:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a7b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a81:    	mov    rdi,QWORD PTR [r14-0x40]
  00a85: 78 	movabs rax,0x557860aa2e20
  00a8f:    	call   rax
  00a91:    	mov    r15d,eax
  00a94: 78 	movabs r13,0x557861fb0f10
  00a9e:    	cmp    QWORD PTR [r13+0x8],0x0
  00aa3:    	je     0x38ef3
  00aa9:    	cmp    r15d,DWORD PTR [r13-0x8]
  00aad:    	jne    0x38ef3
  00ab3:    	mov    eax,DWORD PTR [rip+0xffffffffffff8a5b]        # 0xffff9514
  00ab9:    	cmp    DWORD PTR [r13-0x4],eax
  00abd:    	jne    0x38ef3
  00ac3: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00acc:    	mov    rax,QWORD PTR [r14-0x40]
  00ad0:    	mov    QWORD PTR [rsp-0x40],rax
  00ad5: 00 	mov    rdi,0x1
  00adc:    	mov    rax,QWORD PTR [r14-0x68]
  00ae0:    	mov    QWORD PTR [rsp-0x48],rax
  00ae5: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00aee:    	mov    r13,QWORD PTR [r13+0x8]
  00af2:    	mov    rax,QWORD PTR [r13+0x8]
  00af6:    	mov    QWORD PTR [rsp-0x30],rax
  00afb:    	mov    rax,QWORD PTR [r13+0x0]
  00aff:    	mov    r13,QWORD PTR [r13+0x10]
  00b03:    	mov    rsi,QWORD PTR [rbx]
  00b06:    	mov    QWORD PTR [rsp-0x18],rsi
  00b0b:    	lea    rsi,[rsp-0x18]
  00b10:    	mov    QWORD PTR [rbx],rsi
  00b13:    	lea    r14,[rsp-0x10]
  00b18:    	mov    QWORD PTR [rsp-0x20],r14
  00b1d:    	call   rax
  00b1f:    	lea    r14,[rbp-0x8]
  00b23:    	mov    QWORD PTR [rbx],r14
  00b26:    	mov    r14,QWORD PTR [rbp-0x10]
  00b2a:    	movq   xmm2,QWORD PTR [rsp]
  00b2f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b35:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b3b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b41:    	add    rsp,0x20
  00b45:    	test   rax,rax
  00b48:    	je     0x38f34
:00046 
:00047 %7 = const[Vec]                      [<INVALID>]
  00b4e: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff89d3]        # 0xffff9528
  00b55: 00 	cmp    rax,QWORD PTR [rip+0xfbc]        # 0x1b18
  00b5c:    	jne    0x38f43
  00b62: 00 	mov    rax,QWORD PTR [rip+0xf9f]        # 0x1b08
  00b69:    	mov    QWORD PTR [r14-0x68],rax
:00048 %8 = %1.call org()                   [<INVALID>]
  00b6d:    	sub    rsp,0x20
  00b71:    	movq   QWORD PTR [rsp],xmm2
  00b76:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b7c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b82:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b88:    	mov    rdi,QWORD PTR [r14-0x38]
  00b8c: 78 	movabs rax,0x557860aa2e20
  00b96:    	call   rax
  00b98:    	mov    r15d,eax
  00b9b: 78 	movabs r13,0x557861fb0f40
  00ba5:    	cmp    QWORD PTR [r13+0x8],0x0
  00baa:    	je     0x38fbf
  00bb0:    	cmp    r15d,DWORD PTR [r13-0x8]
  00bb4:    	jne    0x38fbf
  00bba:    	mov    eax,DWORD PTR [rip+0xffffffffffff8954]        # 0xffff9514
  00bc0:    	cmp    DWORD PTR [r13-0x4],eax
  00bc4:    	jne    0x38fbf
  00bca: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00bd3:    	mov    rax,QWORD PTR [r14-0x38]
  00bd7:    	mov    QWORD PTR [rsp-0x40],rax
  00bdc: 00 	mov    rdi,0x0
  00be3: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00bec:    	mov    r13,QWORD PTR [r13+0x8]
  00bf0:    	mov    rax,QWORD PTR [r13+0x8]
  00bf4:    	mov    QWORD PTR [rsp-0x30],rax
  00bf9:    	mov    rax,QWORD PTR [r13+0x0]
  00bfd:    	mov    r13,QWORD PTR [r13+0x10]
  00c01:    	mov    rsi,QWORD PTR [rbx]
  00c04:    	mov    QWORD PTR [rsp-0x18],rsi
  00c09:    	lea    rsi,[rsp-0x18]
  00c0e:    	mov    QWORD PTR [rbx],rsi
  00c11:    	lea    r14,[rsp-0x10]
  00c16:    	mov    QWORD PTR [rsp-0x20],r14
  00c1b:    	call   rax
  00c1d:    	lea    r14,[rbp-0x8]
  00c21:    	mov    QWORD PTR [rbx],r14
  00c24:    	mov    r14,QWORD PTR [rbp-0x10]
  00c28:    	movq   xmm2,QWORD PTR [rsp]
  00c2d:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c33:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c39:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c3f:    	add    rsp,0x20
  00c43:    	test   rax,rax
  00c46:    	je     0x39000
  00c4c:    	mov    QWORD PTR [r14-0x70],rax
:00049 
:00050 %8 = %8.call x()                     [<INVALID>]
  00c50:    	sub    rsp,0x20
  00c54:    	movq   QWORD PTR [rsp],xmm2
  00c59:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c5f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c65:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c6b:    	mov    rdi,QWORD PTR [r14-0x70]
  00c6f: 78 	movabs rax,0x557860aa2e20
  00c79:    	call   rax
  00c7b:    	mov    r15d,eax
  00c7e: 78 	movabs r13,0x557861fb0f60
  00c88:    	cmp    QWORD PTR [r13+0x8],0x0
  00c8d:    	je     0x3900f
  00c93:    	cmp    r15d,DWORD PTR [r13-0x8]
  00c97:    	jne    0x3900f
  00c9d:    	mov    eax,DWORD PTR [rip+0xffffffffffff8871]        # 0xffff9514
  00ca3:    	cmp    DWORD PTR [r13-0x4],eax
  00ca7:    	jne    0x3900f
  00cad: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00cb6:    	mov    rax,QWORD PTR [r14-0x70]
  00cba:    	mov    QWORD PTR [rsp-0x40],rax
  00cbf: 00 	mov    rdi,0x0
  00cc6: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00ccf:    	mov    r13,QWORD PTR [r13+0x8]
  00cd3:    	mov    rax,QWORD PTR [r13+0x8]
  00cd7:    	mov    QWORD PTR [rsp-0x30],rax
  00cdc:    	mov    rax,QWORD PTR [r13+0x0]
  00ce0:    	mov    r13,QWORD PTR [r13+0x10]
  00ce4:    	mov    rsi,QWORD PTR [rbx]
  00ce7:    	mov    QWORD PTR [rsp-0x18],rsi
  00cec:    	lea    rsi,[rsp-0x18]
  00cf1:    	mov    QWORD PTR [rbx],rsi
  00cf4:    	lea    r14,[rsp-0x10]
  00cf9:    	mov    QWORD PTR [rsp-0x20],r14
  00cfe:    	call   rax
  00d00:    	lea    r14,[rbp-0x8]
  00d04:    	mov    QWORD PTR [rbx],r14
  00d07:    	mov    r14,QWORD PTR [rbp-0x10]
  00d0b:    	movq   xmm2,QWORD PTR [rsp]
  00d10:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d16:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d1c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d22:    	add    rsp,0x20
  00d26:    	test   rax,rax
  00d29:    	je     0x39050
  00d2f:    	mov    QWORD PTR [r14-0x70],rax
:00051 
:00052 %9 = %1.call dir()                   [<INVALID>]
  00d33:    	sub    rsp,0x20
  00d37:    	movq   QWORD PTR [rsp],xmm2
  00d3c:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d42:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d48:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d4e:    	mov    rdi,QWORD PTR [r14-0x38]
  00d52: 78 	movabs rax,0x557860aa2e20
  00d5c:    	call   rax
  00d5e:    	mov    r15d,eax
  00d61: 78 	movabs r13,0x557861fb0f80
  00d6b:    	cmp    QWORD PTR [r13+0x8],0x0
  00d70:    	je     0x3905f
  00d76:    	cmp    r15d,DWORD PTR [r13-0x8]
  00d7a:    	jne    0x3905f
  00d80:    	mov    eax,DWORD PTR [rip+0xffffffffffff878e]        # 0xffff9514
  00d86:    	cmp    DWORD PTR [r13-0x4],eax
  00d8a:    	jne    0x3905f
  00d90: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00d99:    	mov    rax,QWORD PTR [r14-0x38]
  00d9d:    	mov    QWORD PTR [rsp-0x40],rax
  00da2: 00 	mov    rdi,0x0
  00da9: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00db2:    	mov    r13,QWORD PTR [r13+0x8]
  00db6:    	mov    rax,QWORD PTR [r13+0x8]
  00dba:    	mov    QWORD PTR [rsp-0x30],rax
  00dbf:    	mov    rax,QWORD PTR [r13+0x0]
  00dc3:    	mov    r13,QWORD PTR [r13+0x10]
  00dc7:    	mov    rsi,QWORD PTR [rbx]
  00dca:    	mov    QWORD PTR [rsp-0x18],rsi
  00dcf:    	lea    rsi,[rsp-0x18]
  00dd4:    	mov    QWORD PTR [rbx],rsi
  00dd7:    	lea    r14,[rsp-0x10]
  00ddc:    	mov    QWORD PTR [rsp-0x20],r14
  00de1:    	call   rax
  00de3:    	lea    r14,[rbp-0x8]
  00de7:    	mov    QWORD PTR [rbx],r14
  00dea:    	mov    r14,QWORD PTR [rbp-0x10]
  00dee:    	movq   xmm2,QWORD PTR [rsp]
  00df3:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00df9:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00dff:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e05:    	add    rsp,0x20
  00e09:    	test   rax,rax
  00e0c:    	je     0x390a0
  00e12:    	mov    QWORD PTR [r14-0x78],rax
:00053 
:00054 %9 = %9.call x()                     [<INVALID>]
  00e16:    	sub    rsp,0x20
  00e1a:    	movq   QWORD PTR [rsp],xmm2
  00e1f:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e25:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e2b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e31:    	mov    rdi,QWORD PTR [r14-0x78]
  00e35: 78 	movabs rax,0x557860aa2e20
  00e3f:    	call   rax
  00e41:    	mov    r15d,eax
  00e44: 78 	movabs r13,0x557861fb0fa0
  00e4e:    	cmp    QWORD PTR [r13+0x8],0x0
  00e53:    	je     0x390af
  00e59:    	cmp    r15d,DWORD PTR [r13-0x8]
  00e5d:    	jne    0x390af
  00e63:    	mov    eax,DWORD PTR [rip+0xffffffffffff86ab]        # 0xffff9514
  00e69:    	cmp    DWORD PTR [r13-0x4],eax
  00e6d:    	jne    0x390af
  00e73: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00e7c:    	mov    rax,QWORD PTR [r14-0x78]
  00e80:    	mov    QWORD PTR [rsp-0x40],rax
  00e85: 00 	mov    rdi,0x0
  00e8c: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00e95:    	mov    r13,QWORD PTR [r13+0x8]
  00e99:    	mov    rax,QWORD PTR [r13+0x8]
  00e9d:    	mov    QWORD PTR [rsp-0x30],rax
  00ea2:    	mov    rax,QWORD PTR [r13+0x0]
  00ea6:    	mov    r13,QWORD PTR [r13+0x10]
  00eaa:    	mov    rsi,QWORD PTR [rbx]
  00ead:    	mov    QWORD PTR [rsp-0x18],rsi
  00eb2:    	lea    rsi,[rsp-0x18]
  00eb7:    	mov    QWORD PTR [rbx],rsi
  00eba:    	lea    r14,[rsp-0x10]
  00ebf:    	mov    QWORD PTR [rsp-0x20],r14
  00ec4:    	call   rax
  00ec6:    	lea    r14,[rbp-0x8]
  00eca:    	mov    QWORD PTR [rbx],r14
  00ecd:    	mov    r14,QWORD PTR [rbp-0x10]
  00ed1:    	movq   xmm2,QWORD PTR [rsp]
  00ed6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00edc:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ee2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ee8:    	add    rsp,0x20
  00eec:    	test   rax,rax
  00eef:    	je     0x390f0
  00ef5:    	mov    QWORD PTR [r14-0x78],rax
:00055 
:00056 %9 = %6 * %9                         [<INVALID>][<INVALID>]
  00ef9:    	mov    rdi,QWORD PTR [r14-0x60]
  00efd:    	mov    rsi,QWORD PTR [r14-0x78]
  00f01:    	sub    rsp,0x20
  00f05:    	movq   QWORD PTR [rsp],xmm2
  00f0a:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f10:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f16:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f1c:    	mov    rdx,rdi
  00f1f:    	mov    rcx,rsi
  00f22:    	mov    rdi,rbx
  00f25:    	mov    rsi,r12
  00f28: 78 	movabs rax,0x557860aaa780
  00f32:    	call   rax
  00f34:    	movq   xmm2,QWORD PTR [rsp]
  00f39:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00f3f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00f45:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f4b:    	add    rsp,0x20
  00f4f: 78 	movabs r13,0x557861fb0fc0
  00f59:    	test   rax,rax
  00f5c:    	je     0xffff607c
  00f62:    	mov    QWORD PTR [r14-0x78],rax
:00057 %8 = %8 + %9                         [<INVALID>][<INVALID>]
  00f66:    	mov    rdi,QWORD PTR [r14-0x70]
  00f6a:    	mov    rsi,QWORD PTR [r14-0x78]
  00f6e:    	sub    rsp,0x20
  00f72:    	movq   QWORD PTR [rsp],xmm2
  00f77:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f7d:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f83:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f89:    	mov    rdx,rdi
  00f8c:    	mov    rcx,rsi
  00f8f:    	mov    rdi,rbx
  00f92:    	mov    rsi,r12
  00f95: 78 	movabs rax,0x557860aa8800
  00f9f:    	call   rax
  00fa1:    	movq   xmm2,QWORD PTR [rsp]
  00fa6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00fac:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00fb2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00fb8:    	add    rsp,0x20
  00fbc: 78 	movabs r13,0x557861fb0fd0
  00fc6:    	test   rax,rax
  00fc9:    	je     0xffff607c
  00fcf:    	mov    QWORD PTR [r14-0x70],rax
:00058 %9 = %1.call org()                   [<INVALID>]
  00fd3:    	sub    rsp,0x20
  00fd7:    	movq   QWORD PTR [rsp],xmm2
  00fdc:    	movq   QWORD PTR [rsp+0x8],xmm4
  00fe2:    	movq   QWORD PTR [rsp+0x10],xmm5
  00fe8:    	movq   QWORD PTR [rsp+0x18],xmm6
  00fee:    	mov    rdi,QWORD PTR [r14-0x38]
  00ff2: 78 	movabs rax,0x557860aa2e20
  00ffc:    	call   rax
  00ffe:    	mov    r15d,eax
  01001: 78 	movabs r13,0x557861fb0fe0
  0100b:    	cmp    QWORD PTR [r13+0x8],0x0
  01010:    	je     0x390ff
  01016:    	cmp    r15d,DWORD PTR [r13-0x8]
  0101a:    	jne    0x390ff
  01020:    	mov    eax,DWORD PTR [rip+0xffffffffffff84ee]        # 0xffff9514
  01026:    	cmp    DWORD PTR [r13-0x4],eax
  0102a:    	jne    0x390ff
  01030: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01039:    	mov    rax,QWORD PTR [r14-0x38]
  0103d:    	mov    QWORD PTR [rsp-0x40],rax
  01042: 00 	mov    rdi,0x0
  01049: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01052:    	mov    r13,QWORD PTR [r13+0x8]
  01056:    	mov    rax,QWORD PTR [r13+0x8]
  0105a:    	mov    QWORD PTR [rsp-0x30],rax
  0105f:    	mov    rax,QWORD PTR [r13+0x0]
  01063:    	mov    r13,QWORD PTR [r13+0x10]
  01067:    	mov    rsi,QWORD PTR [rbx]
  0106a:    	mov    QWORD PTR [rsp-0x18],rsi
  0106f:    	lea    rsi,[rsp-0x18]
  01074:    	mov    QWORD PTR [rbx],rsi
  01077:    	lea    r14,[rsp-0x10]
  0107c:    	mov    QWORD PTR [rsp-0x20],r14
  01081:    	call   rax
  01083:    	lea    r14,[rbp-0x8]
  01087:    	mov    QWORD PTR [rbx],r14
  0108a:    	mov    r14,QWORD PTR [rbp-0x10]
  0108e:    	movq   xmm2,QWORD PTR [rsp]
  01093:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01099:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0109f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  010a5:    	add    rsp,0x20
  010a9:    	test   rax,rax
  010ac:    	je     0x39140
  010b2:    	mov    QWORD PTR [r14-0x78],rax
:00059 
:00060 %9 = %9.call y()                     [<INVALID>]
  010b6:    	sub    rsp,0x20
  010ba:    	movq   QWORD PTR [rsp],xmm2
  010bf:    	movq   QWORD PTR [rsp+0x8],xmm4
  010c5:    	movq   QWORD PTR [rsp+0x10],xmm5
  010cb:    	movq   QWORD PTR [rsp+0x18],xmm6
  010d1:    	mov    rdi,QWORD PTR [r14-0x78]
  010d5: 78 	movabs rax,0x557860aa2e20
  010df:    	call   rax
  010e1:    	mov    r15d,eax
  010e4: 78 	movabs r13,0x557861fb1000
  010ee:    	cmp    QWORD PTR [r13+0x8],0x0
  010f3:    	je     0x3914f
  010f9:    	cmp    r15d,DWORD PTR [r13-0x8]
  010fd:    	jne    0x3914f
  01103:    	mov    eax,DWORD PTR [rip+0xffffffffffff840b]        # 0xffff9514
  01109:    	cmp    DWORD PTR [r13-0x4],eax
  0110d:    	jne    0x3914f
  01113: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0111c:    	mov    rax,QWORD PTR [r14-0x78]
  01120:    	mov    QWORD PTR [rsp-0x40],rax
  01125: 00 	mov    rdi,0x0
  0112c: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01135:    	mov    r13,QWORD PTR [r13+0x8]
  01139:    	mov    rax,QWORD PTR [r13+0x8]
  0113d:    	mov    QWORD PTR [rsp-0x30],rax
  01142:    	mov    rax,QWORD PTR [r13+0x0]
  01146:    	mov    r13,QWORD PTR [r13+0x10]
  0114a:    	mov    rsi,QWORD PTR [rbx]
  0114d:    	mov    QWORD PTR [rsp-0x18],rsi
  01152:    	lea    rsi,[rsp-0x18]
  01157:    	mov    QWORD PTR [rbx],rsi
  0115a:    	lea    r14,[rsp-0x10]
  0115f:    	mov    QWORD PTR [rsp-0x20],r14
  01164:    	call   rax
  01166:    	lea    r14,[rbp-0x8]
  0116a:    	mov    QWORD PTR [rbx],r14
  0116d:    	mov    r14,QWORD PTR [rbp-0x10]
  01171:    	movq   xmm2,QWORD PTR [rsp]
  01176:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0117c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01182:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01188:    	add    rsp,0x20
  0118c:    	test   rax,rax
  0118f:    	je     0x39190
  01195:    	mov    QWORD PTR [r14-0x78],rax
:00061 
:00062 %10 = %1.call dir()                  [<INVALID>]
  01199:    	sub    rsp,0x20
  0119d:    	movq   QWORD PTR [rsp],xmm2
  011a2:    	movq   QWORD PTR [rsp+0x8],xmm4
  011a8:    	movq   QWORD PTR [rsp+0x10],xmm5
  011ae:    	movq   QWORD PTR [rsp+0x18],xmm6
  011b4:    	mov    rdi,QWORD PTR [r14-0x38]
  011b8: 78 	movabs rax,0x557860aa2e20
  011c2:    	call   rax
  011c4:    	mov    r15d,eax
  011c7: 78 	movabs r13,0x557861fb1020
  011d1:    	cmp    QWORD PTR [r13+0x8],0x0
  011d6:    	je     0x3919f
  011dc:    	cmp    r15d,DWORD PTR [r13-0x8]
  011e0:    	jne    0x3919f
  011e6:    	mov    eax,DWORD PTR [rip+0xffffffffffff8328]        # 0xffff9514
  011ec:    	cmp    DWORD PTR [r13-0x4],eax
  011f0:    	jne    0x3919f
  011f6: 00 	mov    QWORD PTR [rsp-0x28],0x0
  011ff:    	mov    rax,QWORD PTR [r14-0x38]
  01203:    	mov    QWORD PTR [rsp-0x40],rax
  01208: 00 	mov    rdi,0x0
  0120f: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01218:    	mov    r13,QWORD PTR [r13+0x8]
  0121c:    	mov    rax,QWORD PTR [r13+0x8]
  01220:    	mov    QWORD PTR [rsp-0x30],rax
  01225:    	mov    rax,QWORD PTR [r13+0x0]
  01229:    	mov    r13,QWORD PTR [r13+0x10]
  0122d:    	mov    rsi,QWORD PTR [rbx]
  01230:    	mov    QWORD PTR [rsp-0x18],rsi
  01235:    	lea    rsi,[rsp-0x18]
  0123a:    	mov    QWORD PTR [rbx],rsi
  0123d:    	lea    r14,[rsp-0x10]
  01242:    	mov    QWORD PTR [rsp-0x20],r14
  01247:    	call   rax
  01249:    	lea    r14,[rbp-0x8]
  0124d:    	mov    QWORD PTR [rbx],r14
  01250:    	mov    r14,QWORD PTR [rbp-0x10]
  01254:    	movq   xmm2,QWORD PTR [rsp]
  01259:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0125f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01265:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0126b:    	add    rsp,0x20
  0126f:    	test   rax,rax
  01272:    	je     0x391e0
  01278:    	mov    QWORD PTR [r14-0x80],rax
:00063 
:00064 %10 = %10.call y()                   [<INVALID>]
  0127c:    	sub    rsp,0x20
  01280:    	movq   QWORD PTR [rsp],xmm2
  01285:    	movq   QWORD PTR [rsp+0x8],xmm4
  0128b:    	movq   QWORD PTR [rsp+0x10],xmm5
  01291:    	movq   QWORD PTR [rsp+0x18],xmm6
  01297:    	mov    rdi,QWORD PTR [r14-0x80]
  0129b: 78 	movabs rax,0x557860aa2e20
  012a5:    	call   rax
  012a7:    	mov    r15d,eax
  012aa: 78 	movabs r13,0x557861fb1040
  012b4:    	cmp    QWORD PTR [r13+0x8],0x0
  012b9:    	je     0x391ef
  012bf:    	cmp    r15d,DWORD PTR [r13-0x8]
  012c3:    	jne    0x391ef
  012c9:    	mov    eax,DWORD PTR [rip+0xffffffffffff8245]        # 0xffff9514
  012cf:    	cmp    DWORD PTR [r13-0x4],eax
  012d3:    	jne    0x391ef
  012d9: 00 	mov    QWORD PTR [rsp-0x28],0x0
  012e2:    	mov    rax,QWORD PTR [r14-0x80]
  012e6:    	mov    QWORD PTR [rsp-0x40],rax
  012eb: 00 	mov    rdi,0x0
  012f2: 00 	mov    QWORD PTR [rsp-0x38],0x0
  012fb:    	mov    r13,QWORD PTR [r13+0x8]
  012ff:    	mov    rax,QWORD PTR [r13+0x8]
  01303:    	mov    QWORD PTR [rsp-0x30],rax
  01308:    	mov    rax,QWORD PTR [r13+0x0]
  0130c:    	mov    r13,QWORD PTR [r13+0x10]
  01310:    	mov    rsi,QWORD PTR [rbx]
  01313:    	mov    QWORD PTR [rsp-0x18],rsi
  01318:    	lea    rsi,[rsp-0x18]
  0131d:    	mov    QWORD PTR [rbx],rsi
  01320:    	lea    r14,[rsp-0x10]
  01325:    	mov    QWORD PTR [rsp-0x20],r14
  0132a:    	call   rax
  0132c:    	lea    r14,[rbp-0x8]
  01330:    	mov    QWORD PTR [rbx],r14
  01333:    	mov    r14,QWORD PTR [rbp-0x10]
  01337:    	movq   xmm2,QWORD PTR [rsp]
  0133c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01342:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01348:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0134e:    	add    rsp,0x20
  01352:    	test   rax,rax
  01355:    	je     0x39230
  0135b:    	mov    QWORD PTR [r14-0x80],rax
:00065 
:00066 %10 = %6 * %10                       [<INVALID>][<INVALID>]
  0135f:    	mov    rdi,QWORD PTR [r14-0x60]
  01363:    	mov    rsi,QWORD PTR [r14-0x80]
  01367:    	sub    rsp,0x20
  0136b:    	movq   QWORD PTR [rsp],xmm2
  01370:    	movq   QWORD PTR [rsp+0x8],xmm4
  01376:    	movq   QWORD PTR [rsp+0x10],xmm5
  0137c:    	movq   QWORD PTR [rsp+0x18],xmm6
  01382:    	mov    rdx,rdi
  01385:    	mov    rcx,rsi
  01388:    	mov    rdi,rbx
  0138b:    	mov    rsi,r12
  0138e: 78 	movabs rax,0x557860aaa780
  01398:    	call   rax
  0139a:    	movq   xmm2,QWORD PTR [rsp]
  0139f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  013a5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  013ab:    	movq   xmm6,QWORD PTR [rsp+0x18]
  013b1:    	add    rsp,0x20
  013b5: 78 	movabs r13,0x557861fb1060
  013bf:    	test   rax,rax
  013c2:    	je     0xffff607c
  013c8:    	mov    QWORD PTR [r14-0x80],rax
:00067 %9 = %9 + %10                        [<INVALID>][<INVALID>]
  013cc:    	mov    rdi,QWORD PTR [r14-0x78]
  013d0:    	mov    rsi,QWORD PTR [r14-0x80]
  013d4:    	sub    rsp,0x20
  013d8:    	movq   QWORD PTR [rsp],xmm2
  013dd:    	movq   QWORD PTR [rsp+0x8],xmm4
  013e3:    	movq   QWORD PTR [rsp+0x10],xmm5
  013e9:    	movq   QWORD PTR [rsp+0x18],xmm6
  013ef:    	mov    rdx,rdi
  013f2:    	mov    rcx,rsi
  013f5:    	mov    rdi,rbx
  013f8:    	mov    rsi,r12
  013fb: 78 	movabs rax,0x557860aa8800
  01405:    	call   rax
  01407:    	movq   xmm2,QWORD PTR [rsp]
  0140c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01412:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01418:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0141e:    	add    rsp,0x20
  01422: 78 	movabs r13,0x557861fb1070
  0142c:    	test   rax,rax
  0142f:    	je     0xffff607c
  01435:    	mov    QWORD PTR [r14-0x78],rax
:00068 %10 = %1.call org()                  [<INVALID>]
  01439:    	sub    rsp,0x20
  0143d:    	movq   QWORD PTR [rsp],xmm2
  01442:    	movq   QWORD PTR [rsp+0x8],xmm4
  01448:    	movq   QWORD PTR [rsp+0x10],xmm5
  0144e:    	movq   QWORD PTR [rsp+0x18],xmm6
  01454:    	mov    rdi,QWORD PTR [r14-0x38]
  01458: 78 	movabs rax,0x557860aa2e20
  01462:    	call   rax
  01464:    	mov    r15d,eax
  01467: 78 	movabs r13,0x557861fb1080
  01471:    	cmp    QWORD PTR [r13+0x8],0x0
  01476:    	je     0x3923f
  0147c:    	cmp    r15d,DWORD PTR [r13-0x8]
  01480:    	jne    0x3923f
  01486:    	mov    eax,DWORD PTR [rip+0xffffffffffff8088]        # 0xffff9514
  0148c:    	cmp    DWORD PTR [r13-0x4],eax
  01490:    	jne    0x3923f
  01496: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0149f:    	mov    rax,QWORD PTR [r14-0x38]
  014a3:    	mov    QWORD PTR [rsp-0x40],rax
  014a8: 00 	mov    rdi,0x0
  014af: 00 	mov    QWORD PTR [rsp-0x38],0x0
  014b8:    	mov    r13,QWORD PTR [r13+0x8]
  014bc:    	mov    rax,QWORD PTR [r13+0x8]
  014c0:    	mov    QWORD PTR [rsp-0x30],rax
  014c5:    	mov    rax,QWORD PTR [r13+0x0]
  014c9:    	mov    r13,QWORD PTR [r13+0x10]
  014cd:    	mov    rsi,QWORD PTR [rbx]
  014d0:    	mov    QWORD PTR [rsp-0x18],rsi
  014d5:    	lea    rsi,[rsp-0x18]
  014da:    	mov    QWORD PTR [rbx],rsi
  014dd:    	lea    r14,[rsp-0x10]
  014e2:    	mov    QWORD PTR [rsp-0x20],r14
  014e7:    	call   rax
  014e9:    	lea    r14,[rbp-0x8]
  014ed:    	mov    QWORD PTR [rbx],r14
  014f0:    	mov    r14,QWORD PTR [rbp-0x10]
  014f4:    	movq   xmm2,QWORD PTR [rsp]
  014f9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014ff:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01505:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0150b:    	add    rsp,0x20
  0150f:    	test   rax,rax
  01512:    	je     0x39280
  01518:    	mov    QWORD PTR [r14-0x80],rax
:00069 
:00070 %10 = %10.call z()                   [<INVALID>]
  0151c:    	sub    rsp,0x20
  01520:    	movq   QWORD PTR [rsp],xmm2
  01525:    	movq   QWORD PTR [rsp+0x8],xmm4
  0152b:    	movq   QWORD PTR [rsp+0x10],xmm5
  01531:    	movq   QWORD PTR [rsp+0x18],xmm6
  01537:    	mov    rdi,QWORD PTR [r14-0x80]
  0153b: 78 	movabs rax,0x557860aa2e20
  01545:    	call   rax
  01547:    	mov    r15d,eax
  0154a: 78 	movabs r13,0x557861fb10a0
  01554:    	cmp    QWORD PTR [r13+0x8],0x0
  01559:    	je     0x3928f
  0155f:    	cmp    r15d,DWORD PTR [r13-0x8]
  01563:    	jne    0x3928f
  01569:    	mov    eax,DWORD PTR [rip+0xffffffffffff7fa5]        # 0xffff9514
  0156f:    	cmp    DWORD PTR [r13-0x4],eax
  01573:    	jne    0x3928f
  01579: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01582:    	mov    rax,QWORD PTR [r14-0x80]
  01586:    	mov    QWORD PTR [rsp-0x40],rax
  0158b: 00 	mov    rdi,0x0
  01592: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0159b:    	mov    r13,QWORD PTR [r13+0x8]
  0159f:    	mov    rax,QWORD PTR [r13+0x8]
  015a3:    	mov    QWORD PTR [rsp-0x30],rax
  015a8:    	mov    rax,QWORD PTR [r13+0x0]
  015ac:    	mov    r13,QWORD PTR [r13+0x10]
  015b0:    	mov    rsi,QWORD PTR [rbx]
  015b3:    	mov    QWORD PTR [rsp-0x18],rsi
  015b8:    	lea    rsi,[rsp-0x18]
  015bd:    	mov    QWORD PTR [rbx],rsi
  015c0:    	lea    r14,[rsp-0x10]
  015c5:    	mov    QWORD PTR [rsp-0x20],r14
  015ca:    	call   rax
  015cc:    	lea    r14,[rbp-0x8]
  015d0:    	mov    QWORD PTR [rbx],r14
  015d3:    	mov    r14,QWORD PTR [rbp-0x10]
  015d7:    	movq   xmm2,QWORD PTR [rsp]
  015dc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015e2:    	movq   xmm5,QWORD PTR [rsp+0x10]
  015e8:    	movq   xmm6,QWORD PTR [rsp+0x18]
  015ee:    	add    rsp,0x20
  015f2:    	test   rax,rax
  015f5:    	je     0x392d0
  015fb:    	mov    QWORD PTR [r14-0x80],rax
:00071 
:00072 %11 = %1.call dir()                  [<INVALID>]
  015ff:    	sub    rsp,0x20
  01603:    	movq   QWORD PTR [rsp],xmm2
  01608:    	movq   QWORD PTR [rsp+0x8],xmm4
  0160e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01614:    	movq   QWORD PTR [rsp+0x18],xmm6
  0161a:    	mov    rdi,QWORD PTR [r14-0x38]
  0161e: 78 	movabs rax,0x557860aa2e20
  01628:    	call   rax
  0162a:    	mov    r15d,eax
  0162d: 78 	movabs r13,0x557861fb10c0
  01637:    	cmp    QWORD PTR [r13+0x8],0x0
  0163c:    	je     0x392df
  01642:    	cmp    r15d,DWORD PTR [r13-0x8]
  01646:    	jne    0x392df
  0164c:    	mov    eax,DWORD PTR [rip+0xffffffffffff7ec2]        # 0xffff9514
  01652:    	cmp    DWORD PTR [r13-0x4],eax
  01656:    	jne    0x392df
  0165c: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01665:    	mov    rax,QWORD PTR [r14-0x38]
  01669:    	mov    QWORD PTR [rsp-0x40],rax
  0166e: 00 	mov    rdi,0x0
  01675: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0167e:    	mov    r13,QWORD PTR [r13+0x8]
  01682:    	mov    rax,QWORD PTR [r13+0x8]
  01686:    	mov    QWORD PTR [rsp-0x30],rax
  0168b:    	mov    rax,QWORD PTR [r13+0x0]
  0168f:    	mov    r13,QWORD PTR [r13+0x10]
  01693:    	mov    rsi,QWORD PTR [rbx]
  01696:    	mov    QWORD PTR [rsp-0x18],rsi
  0169b:    	lea    rsi,[rsp-0x18]
  016a0:    	mov    QWORD PTR [rbx],rsi
  016a3:    	lea    r14,[rsp-0x10]
  016a8:    	mov    QWORD PTR [rsp-0x20],r14
  016ad:    	call   rax
  016af:    	lea    r14,[rbp-0x8]
  016b3:    	mov    QWORD PTR [rbx],r14
  016b6:    	mov    r14,QWORD PTR [rbp-0x10]
  016ba:    	movq   xmm2,QWORD PTR [rsp]
  016bf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016c5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  016cb:    	movq   xmm6,QWORD PTR [rsp+0x18]
  016d1:    	add    rsp,0x20
  016d5:    	test   rax,rax
  016d8:    	je     0x39320
  016de: ff 	mov    QWORD PTR [r14-0x88],rax
:00073 
:00074 %11 = %11.call z()                   [<INVALID>]
  016e5:    	sub    rsp,0x20
  016e9:    	movq   QWORD PTR [rsp],xmm2
  016ee:    	movq   QWORD PTR [rsp+0x8],xmm4
  016f4:    	movq   QWORD PTR [rsp+0x10],xmm5
  016fa:    	movq   QWORD PTR [rsp+0x18],xmm6
  01700: ff 	mov    rdi,QWORD PTR [r14-0x88]
  01707: 78 	movabs rax,0x557860aa2e20
  01711:    	call   rax
  01713:    	mov    r15d,eax
  01716: 78 	movabs r13,0x557861fb10e0
  01720:    	cmp    QWORD PTR [r13+0x8],0x0
  01725:    	je     0x3932f
  0172b:    	cmp    r15d,DWORD PTR [r13-0x8]
  0172f:    	jne    0x3932f
  01735:    	mov    eax,DWORD PTR [rip+0xffffffffffff7dd9]        # 0xffff9514
  0173b:    	cmp    DWORD PTR [r13-0x4],eax
  0173f:    	jne    0x3932f
  01745: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0174e: ff 	mov    rax,QWORD PTR [r14-0x88]
  01755:    	mov    QWORD PTR [rsp-0x40],rax
  0175a: 00 	mov    rdi,0x0
  01761: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0176a:    	mov    r13,QWORD PTR [r13+0x8]
  0176e:    	mov    rax,QWORD PTR [r13+0x8]
  01772:    	mov    QWORD PTR [rsp-0x30],rax
  01777:    	mov    rax,QWORD PTR [r13+0x0]
  0177b:    	mov    r13,QWORD PTR [r13+0x10]
  0177f:    	mov    rsi,QWORD PTR [rbx]
  01782:    	mov    QWORD PTR [rsp-0x18],rsi
  01787:    	lea    rsi,[rsp-0x18]
  0178c:    	mov    QWORD PTR [rbx],rsi
  0178f:    	lea    r14,[rsp-0x10]
  01794:    	mov    QWORD PTR [rsp-0x20],r14
  01799:    	call   rax
  0179b:    	lea    r14,[rbp-0x8]
  0179f:    	mov    QWORD PTR [rbx],r14
  017a2:    	mov    r14,QWORD PTR [rbp-0x10]
  017a6:    	movq   xmm2,QWORD PTR [rsp]
  017ab:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017b1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  017b7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  017bd:    	add    rsp,0x20
  017c1:    	test   rax,rax
  017c4:    	je     0x39373
  017ca: ff 	mov    QWORD PTR [r14-0x88],rax
:00075 
:00076 %11 = %6 * %11                       [<INVALID>][<INVALID>]
  017d1:    	mov    rdi,QWORD PTR [r14-0x60]
  017d5: ff 	mov    rsi,QWORD PTR [r14-0x88]
  017dc:    	sub    rsp,0x20
  017e0:    	movq   QWORD PTR [rsp],xmm2
  017e5:    	movq   QWORD PTR [rsp+0x8],xmm4
  017eb:    	movq   QWORD PTR [rsp+0x10],xmm5
  017f1:    	movq   QWORD PTR [rsp+0x18],xmm6
  017f7:    	mov    rdx,rdi
  017fa:    	mov    rcx,rsi
  017fd:    	mov    rdi,rbx
  01800:    	mov    rsi,r12
  01803: 78 	movabs rax,0x557860aaa780
  0180d:    	call   rax
  0180f:    	movq   xmm2,QWORD PTR [rsp]
  01814:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0181a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01820:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01826:    	add    rsp,0x20
  0182a: 78 	movabs r13,0x557861fb1100
  01834:    	test   rax,rax
  01837:    	je     0xffff607c
  0183d: ff 	mov    QWORD PTR [r14-0x88],rax
:00077 %10 = %10 + %11                      [<INVALID>][<INVALID>]
  01844:    	mov    rdi,QWORD PTR [r14-0x80]
  01848: ff 	mov    rsi,QWORD PTR [r14-0x88]
  0184f:    	sub    rsp,0x20
  01853:    	movq   QWORD PTR [rsp],xmm2
  01858:    	movq   QWORD PTR [rsp+0x8],xmm4
  0185e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01864:    	movq   QWORD PTR [rsp+0x18],xmm6
  0186a:    	mov    rdx,rdi
  0186d:    	mov    rcx,rsi
  01870:    	mov    rdi,rbx
  01873:    	mov    rsi,r12
  01876: 78 	movabs rax,0x557860aa8800
  01880:    	call   rax
  01882:    	movq   xmm2,QWORD PTR [rsp]
  01887:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0188d:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01893:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01899:    	add    rsp,0x20
  0189d: 78 	movabs r13,0x557861fb1110
  018a7:    	test   rax,rax
  018aa:    	je     0xffff607c
  018b0:    	mov    QWORD PTR [r14-0x80],rax
:00078 %7 = %7.call new(%8; 3)              [<INVALID>]
  018b4:    	sub    rsp,0x20
  018b8:    	movq   QWORD PTR [rsp],xmm2
  018bd:    	movq   QWORD PTR [rsp+0x8],xmm4
  018c3:    	movq   QWORD PTR [rsp+0x10],xmm5
  018c9:    	movq   QWORD PTR [rsp+0x18],xmm6
  018cf:    	mov    rdi,QWORD PTR [r14-0x68]
  018d3: 78 	movabs rax,0x557860aa2e20
  018dd:    	call   rax
  018df:    	mov    r15d,eax
  018e2: 78 	movabs r13,0x557861fb1120
  018ec:    	cmp    QWORD PTR [r13+0x8],0x0
  018f1:    	je     0x39382
  018f7:    	cmp    r15d,DWORD PTR [r13-0x8]
  018fb:    	jne    0x39382
  01901:    	mov    eax,DWORD PTR [rip+0xffffffffffff7c0d]        # 0xffff9514
  01907:    	cmp    DWORD PTR [r13-0x4],eax
  0190b:    	jne    0x39382
  01911: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0191a:    	mov    rax,QWORD PTR [r14-0x68]
  0191e:    	mov    QWORD PTR [rsp-0x40],rax
  01923: 00 	mov    rdi,0x3
  0192a:    	mov    rax,QWORD PTR [r14-0x70]
  0192e:    	mov    QWORD PTR [rsp-0x48],rax
  01933:    	mov    rax,QWORD PTR [r14-0x78]
  01937:    	mov    QWORD PTR [rsp-0x50],rax
  0193c:    	mov    rax,QWORD PTR [r14-0x80]
  01940:    	mov    QWORD PTR [rsp-0x58],rax
  01945: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0194e:    	mov    r13,QWORD PTR [r13+0x8]
  01952:    	mov    rax,QWORD PTR [r13+0x8]
  01956:    	mov    QWORD PTR [rsp-0x30],rax
  0195b:    	mov    rax,QWORD PTR [r13+0x0]
  0195f:    	mov    r13,QWORD PTR [r13+0x10]
  01963:    	mov    rsi,QWORD PTR [rbx]
  01966:    	mov    QWORD PTR [rsp-0x18],rsi
  0196b:    	lea    rsi,[rsp-0x18]
  01970:    	mov    QWORD PTR [rbx],rsi
  01973:    	lea    r14,[rsp-0x10]
  01978:    	mov    QWORD PTR [rsp-0x20],r14
  0197d:    	call   rax
  0197f:    	lea    r14,[rbp-0x8]
  01983:    	mov    QWORD PTR [rbx],r14
  01986:    	mov    r14,QWORD PTR [rbp-0x10]
  0198a:    	movq   xmm2,QWORD PTR [rsp]
  0198f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01995:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0199b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  019a1:    	add    rsp,0x20
  019a5:    	test   rax,rax
  019a8:    	je     0x393c3
  019ae:    	mov    QWORD PTR [r14-0x68],rax
:00079 
:00080 _ = %2.call pl=(%7; 1)               [<INVALID>]
  019b2:    	sub    rsp,0x20
  019b6:    	movq   QWORD PTR [rsp],xmm2
  019bb:    	movq   QWORD PTR [rsp+0x8],xmm4
  019c1:    	movq   QWORD PTR [rsp+0x10],xmm5
  019c7:    	movq   QWORD PTR [rsp+0x18],xmm6
  019cd:    	mov    rdi,QWORD PTR [r14-0x40]
  019d1: 78 	movabs rax,0x557860aa2e20
  019db:    	call   rax
  019dd:    	mov    r15d,eax
  019e0: 78 	movabs r13,0x557861fb1140
  019ea:    	cmp    QWORD PTR [r13+0x8],0x0
  019ef:    	je     0x393d2
  019f5:    	cmp    r15d,DWORD PTR [r13-0x8]
  019f9:    	jne    0x393d2
  019ff:    	mov    eax,DWORD PTR [rip+0xffffffffffff7b0f]        # 0xffff9514
  01a05:    	cmp    DWORD PTR [r13-0x4],eax
  01a09:    	jne    0x393d2
  01a0f: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01a18:    	mov    rax,QWORD PTR [r14-0x40]
  01a1c:    	mov    QWORD PTR [rsp-0x40],rax
  01a21: 00 	mov    rdi,0x1
  01a28:    	mov    rax,QWORD PTR [r14-0x68]
  01a2c:    	mov    QWORD PTR [rsp-0x48],rax
  01a31: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01a3a:    	mov    r13,QWORD PTR [r13+0x8]
  01a3e:    	mov    rax,QWORD PTR [r13+0x8]
  01a42:    	mov    QWORD PTR [rsp-0x30],rax
  01a47:    	mov    rax,QWORD PTR [r13+0x0]
  01a4b:    	mov    r13,QWORD PTR [r13+0x10]
  01a4f:    	mov    rsi,QWORD PTR [rbx]
  01a52:    	mov    QWORD PTR [rsp-0x18],rsi
  01a57:    	lea    rsi,[rsp-0x18]
  01a5c:    	mov    QWORD PTR [rbx],rsi
  01a5f:    	lea    r14,[rsp-0x10]
  01a64:    	mov    QWORD PTR [rsp-0x20],r14
  01a69:    	call   rax
  01a6b:    	lea    r14,[rbp-0x8]
  01a6f:    	mov    QWORD PTR [rbx],r14
  01a72:    	mov    r14,QWORD PTR [rbp-0x10]
  01a76:    	movq   xmm2,QWORD PTR [rsp]
  01a7b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01a81:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01a87:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01a8d:    	add    rsp,0x20
  01a91:    	test   rax,rax
  01a94:    	je     0x39413
:00081 
:00082 br =>:00083
  01a9a:    	jmp    0x3947b
:00083 %7 = nil
  01a9f: 00 	mov    QWORD PTR [r14-0x68],0x4
:00084 ret %7
  01aa7:    	mov    rax,QWORD PTR [r14-0x68]
  01aab:    	leave  
  01aac:    	ret    
==> start whole compile: clamp FuncId(86) self_class:Scene start:[00000] bytecode:0x557861f71360
<== finished compile. elapsed:35.8µs
offset:Pos(47816) code: 515 bytes  data: 77 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x1
  0000e: jne    0x37981
  00014: mov    QWORD PTR [r14-0x40],0x4
  0001c: mov    QWORD PTR [r14-0x48],0x4
  00024: mov    rdi,QWORD PTR [r14-0x30]
  00028: test   rdi,0x7
  0002f: jne    0x37990
  00035: cmp    DWORD PTR [rdi+0x4],0x35
  00039: jne    0x37990
:00000 init_method reg:4 arg:1 pos:1 req:1 block:0 stack_offset:5
:00001 %3 = literal[255.5]
  0003f: movq   xmm2,QWORD PTR [rip+0x1c1]        # 0x208
  00047: movabs rax,0x37f800000000002
  00051: mov    QWORD PTR [r14-0x48],rax
:00002 %2 = %1 * %3                         [Float][Float]
  00055: mov    rdi,QWORD PTR [r14-0x38]
  00059: test   rdi,0x1
  00060: jne    0x3799f
  00066: test   rdi,0x2
  0006d: je     0xa9
  00073: xorps  xmm3,xmm3
  00076: movabs rax,0x8000000000000002
  00080: cmp    rdi,rax
  00083: je     0xbb
  00089: mov    rax,rdi
  0008c: sar    rax,0x3f
  00090: add    rax,0x2
  00094: and    rdi,0xfffffffffffffffc
  00098: or     rdi,rax
  0009b: rol    rdi,0x3d
  0009f: movq   xmm3,rdi
  000a4: jmp    0xbb
  000a9: call   0xffff45b5
  000ae: test   rax,rax
  000b1: je     0x3799f
  000b7: movq   xmm3,xmm0
  000bb: movq   xmm4,xmm3
  000bf: mulsd  xmm4,xmm2
:00003 %3 = literal[255.0]
  000c3: movq   xmm2,QWORD PTR [rip+0x14d]        # 0x218
  000cb: movabs rax,0x37f000000000002
  000d5: mov    QWORD PTR [r14-0x48],rax
:00004 _%3 = %2 > %3                        [Float][Float]
:00005 condnotbr _%3 =>:00008
  000d9: ucomisd xmm4,xmm2
  000dd: jbe    0x379ae
:00006 %2 = literal[255.0]
  000e3: movq   xmm4,QWORD PTR [rip+0x13d]        # 0x228
  000eb: movabs rax,0x37f000000000002
  000f5: mov    QWORD PTR [r14-0x40],rax
:00007 br =>:00008
  000f9: jmp    0x379d4
:00008 %3 = literal[0.0]
  000fe: movq   xmm2,QWORD PTR [rip+0x132]        # 0x238
  00106: movabs rax,0x8000000000000002
  00110: mov    QWORD PTR [r14-0x48],rax
:00009 _%3 = %2 < %3                        [Float][Float]
:00010 condnotbr _%3 =>:00013
  00114: ucomisd xmm4,xmm2
  00118: jae    0x379ed
:00011 %2 = literal[0.0]
  0011e: movq   xmm4,QWORD PTR [rip+0x122]        # 0x248
  00126: movabs rax,0x8000000000000002
  00130: mov    QWORD PTR [r14-0x40],rax
:00012 br =>:00013
  00134: jmp    0x37a06
:00013 %3 = %2.call to_i()                  [Float]
  00139: mov    rdi,QWORD PTR [r14-0x40]
  0013d: test   rdi,0x1
  00144: jne    0x37a1f
  0014a: test   rdi,0x2
  00151: jne    0x16e
  00157: test   rdi,0x7
  0015e: jne    0x37a1f
  00164: cmp    DWORD PTR [rdi+0x4],0x7
  00168: jne    0x37a1f
  0016e: cmp    DWORD PTR [rip+0xffffffffffff787f],0x26        # 0xffff79f4
  00175: jne    0x37a1f
  0017b: mov    r9,0x0
  00182: sub    rsp,0x10
  00186: movq   QWORD PTR [rsp],xmm3
  0018b: movq   QWORD PTR [rsp+0x8],xmm4
  00191: mov    rdx,rdi
  00194: mov    QWORD PTR [rsp-0x40],rcx
  00199: mov    QWORD PTR [rsp-0x28],0x0
  001a2: lea    rcx,[r14-0x48]
  001a6: mov    r8,0x0
  001ad: mov    rsi,QWORD PTR [rbx]
  001b0: mov    QWORD PTR [rsp-0x18],rsi
  001b5: lea    rsi,[rsp-0x18]
  001ba: mov    QWORD PTR [rbx],rsi
  001bd: lea    r14,[rsp-0x10]
  001c2: mov    QWORD PTR [rsp-0x20],r14
  001c7: call   0x37a2e
  001cc: lea    r14,[rbp-0x8]
  001d0: mov    QWORD PTR [rbx],r14
  001d3: mov    r14,QWORD PTR [rbp-0x10]
  001d7: movq   xmm3,QWORD PTR [rsp]
  001dc: movq   xmm4,QWORD PTR [rsp+0x8]
  001e2: add    rsp,0x10
  001e6: movabs r13,0x557861f71450
  001f0: test   rax,rax
  001f3: je     0xffff455c
  001f9: mov    QWORD PTR [r14-0x48],rax
:00014 
:00015 ret %3
  001fd: mov    rax,QWORD PTR [r14-0x48]
  00201: leave  
  00202: ret    
==> start whole compile: <unnamed> FuncId(109) self_class:Scene start:[00000] bytecode:0x557861fe1000
<== finished compile. elapsed:17.9µs
offset:Pos(48408) code: 263 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x1
  0000e: jge    0x3a
  00014: mov    eax,0x1
  00019: sub    eax,edx
  0001b: test   rax,rax
  0001e: je     0x3a
  00024: lea    rdi,[r14-0x40]
  00028: mov    QWORD PTR [rdi+rax*8],0x4
  00030: sub    rax,0x1
  00034: jne    0x28
  0003a: mov    QWORD PTR [r14-0x40],0x4
  00042: mov    QWORD PTR [r14-0x48],0x4
  0004a: mov    rdi,QWORD PTR [r14-0x30]
  0004e: test   rdi,0x7
  00055: jne    0x3781f
  0005b: cmp    DWORD PTR [rdi+0x4],0x35
  0005f: jne    0x3781f
:00000 init_block reg:4 arg:1 pos:1 req:1 block:0 stack_offset:5
:00001 %2 = dynvar(3, %3)
  00065: mov    rax,QWORD PTR [r14-0x18]
  00069: mov    rax,QWORD PTR [rax]
  0006c: mov    rax,QWORD PTR [rax]
  0006f: mov    rax,QWORD PTR [rax-0x30]
  00073: mov    QWORD PTR [r14-0x40],rax
:00002 %3 = literal[7208961]
  00077: mov    rax,0xdc0003
  0007e: mov    QWORD PTR [r14-0x48],rax
:00003 %2 = %2.call times(&%3)              [Integer]
  00082: mov    rdi,QWORD PTR [r14-0x40]
  00086: test   rdi,0x1
  0008d: je     0x3782e
  00093: cmp    DWORD PTR [rip+0xffffffffffff770a],0x26        # 0xffff77a4
  0009a: jne    0x3782e
  000a0: mov    r9,QWORD PTR [r14-0x48]
  000a4: mov    rdx,rdi
  000a7: mov    QWORD PTR [rsp-0x40],rcx
  000ac: mov    QWORD PTR [rsp-0x28],0x0
  000b5: lea    rcx,[r14-0x50]
  000b9: mov    r8,0x0
  000c0: mov    rsi,QWORD PTR [rbx]
  000c3: mov    QWORD PTR [rsp-0x18],rsi
  000c8: lea    rsi,[rsp-0x18]
  000cd: mov    QWORD PTR [rbx],rsi
  000d0: lea    r14,[rsp-0x10]
  000d5: mov    QWORD PTR [rsp-0x20],r14
  000da: call   0x3783d
  000df: lea    r14,[rbp-0x8]
  000e3: mov    QWORD PTR [rbx],r14
  000e6: mov    r14,QWORD PTR [rbp-0x10]
  000ea: movabs r13,0x557861fe1050
  000f4: test   rax,rax
  000f7: je     0xffff430c
  000fd: mov    QWORD PTR [r14-0x40],rax
:00004 
:00005 ret %2
  00101: mov    rax,QWORD PTR [r14-0x40]
  00105: leave  
  00106: ret    
==> start whole compile: <unnamed> FuncId(108) self_class:Scene start:[00000] bytecode:0x557861fbf040
<== finished compile. elapsed:64.2µs
offset:Pos(48671) code: 4168 bytes  data: 105 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0x80
  0000e:    	cmp    edx,0x1
  00011:    	jge    0x3d
  00017:    	mov    eax,0x1
  0001c:    	sub    eax,edx
  0001e:    	test   rax,rax
  00021:    	je     0x3d
  00027:    	lea    rdi,[r14-0x40]
  0002b: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  00033:    	sub    rax,0x1
  00037:    	jne    0x2b
  0003d: 00 	mov    rax,0x4
  00044:    	mov    QWORD PTR [r14-0x40],rax
  00048:    	mov    QWORD PTR [r14-0x48],rax
  0004c:    	mov    QWORD PTR [r14-0x50],rax
  00050:    	mov    QWORD PTR [r14-0x58],rax
  00054:    	mov    QWORD PTR [r14-0x60],rax
  00058:    	mov    QWORD PTR [r14-0x68],rax
  0005c:    	mov    QWORD PTR [r14-0x70],rax
  00060:    	mov    QWORD PTR [r14-0x78],rax
  00064:    	mov    rdi,QWORD PTR [r14-0x30]
  00068: 00 	test   rdi,0x7
  0006f:    	jne    0x37777
  00075:    	cmp    DWORD PTR [rdi+0x4],0x35
  00079:    	jne    0x37777
:00000 init_block reg:10 arg:1 pos:1 req:1 block:0 stack_offset:8
:00001 %6 = const[Vec]                      [Vec]
  0007f: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff762b]        # 0xffff76b1
  00086: 00 	cmp    rax,QWORD PTR [rip+0xfd4]        # 0x1061
  0008d:    	jne    0x37786
  00093: 00 	mov    rax,QWORD PTR [rip+0xfb7]        # 0x1051
  0009a:    	mov    QWORD PTR [r14-0x60],rax
:00002 %7 = literal[0.0]
  0009e: 00 	movq   xmm2,QWORD PTR [rip+0xfcb]        # 0x1071
  000a6: 00 	movabs rax,0x8000000000000002
  000b0:    	mov    QWORD PTR [r14-0x68],rax
:00003 %8 = literal[0.0]
  000b4: 00 	movq   xmm3,QWORD PTR [rip+0xfc5]        # 0x1081
  000bc: 00 	movabs rax,0x8000000000000002
  000c6:    	mov    QWORD PTR [r14-0x70],rax
:00004 %9 = literal[0.0]
  000ca: 00 	movq   xmm4,QWORD PTR [rip+0xfbf]        # 0x1091
  000d2: 00 	movabs rax,0x8000000000000002
  000dc:    	mov    QWORD PTR [r14-0x78],rax
:00005 %2 = %6.call new(%7; 3)              [#<Class:Vec>]
  000e0:    	mov    rdi,QWORD PTR [r14-0x60]
  000e4: 00 	test   rdi,0x7
  000eb:    	jne    0x377cc
  000f1:    	cmp    DWORD PTR [rdi+0x4],0x2c
  000f5:    	jne    0x377cc
  000fb: 26 	cmp    DWORD PTR [rip+0xffffffffffff759b],0x26        # 0xffff769d
  00102:    	jne    0x377cc
  00108: 00 	mov    r9,0x0
  0010f:    	sub    rsp,0x20
  00113:    	movq   QWORD PTR [rsp],xmm2
  00118:    	movq   QWORD PTR [rsp+0x8],xmm3
  0011e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00124:    	mov    rdx,rdi
  00127:    	mov    QWORD PTR [rsp-0x40],rcx
  0012c: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00135:    	lea    rcx,[r14-0x68]
  00139: 00 	mov    r8,0x3
  00140:    	mov    rsi,QWORD PTR [rbx]
  00143:    	mov    QWORD PTR [rsp-0x18],rsi
  00148:    	lea    rsi,[rsp-0x18]
  0014d:    	mov    QWORD PTR [rbx],rsi
  00150:    	lea    r14,[rsp-0x10]
  00155:    	mov    QWORD PTR [rsp-0x20],r14
  0015a:    	call   0x377db
  0015f:    	lea    r14,[rbp-0x8]
  00163:    	mov    QWORD PTR [rbx],r14
  00166:    	mov    r14,QWORD PTR [rbp-0x10]
  0016a:    	movq   xmm2,QWORD PTR [rsp]
  0016f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00175:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0017b:    	add    rsp,0x20
  0017f: 78 	movabs r13,0x557861fbf0b0
  00189:    	test   rax,rax
  0018c:    	je     0xffff4205
  00192:    	mov    QWORD PTR [r14-0x40],rax
:00006 
:00007 %6 = dynvar(2, %3)
  00196:    	mov    rax,QWORD PTR [r14-0x18]
  0019a:    	mov    rax,QWORD PTR [rax]
  0019d:    	mov    rax,QWORD PTR [rax-0x30]
  001a1:    	mov    QWORD PTR [r14-0x60],rax
:00008 %7 = literal[7143425]
  001a5: 00 	mov    rax,0xda0003
  001ac:    	mov    QWORD PTR [r14-0x68],rax
:00009 _ = %6.call times(&%7)               [Integer]
  001b0:    	mov    rdi,QWORD PTR [r14-0x60]
  001b4: 00 	test   rdi,0x1
  001bb:    	je     0x3780d
  001c1: 26 	cmp    DWORD PTR [rip+0xffffffffffff74d5],0x26        # 0xffff769d
  001c8:    	jne    0x3780d
  001ce:    	mov    r9,QWORD PTR [r14-0x68]
  001d2:    	sub    rsp,0x10
  001d6:    	movq   QWORD PTR [rsp],xmm3
  001db:    	movq   QWORD PTR [rsp+0x8],xmm4
  001e1:    	mov    rdx,rdi
  001e4:    	mov    QWORD PTR [rsp-0x40],rcx
  001e9: 00 	mov    QWORD PTR [rsp-0x28],0x0
  001f2:    	lea    rcx,[r14-0x70]
  001f6: 00 	mov    r8,0x0
  001fd:    	mov    rsi,QWORD PTR [rbx]
  00200:    	mov    QWORD PTR [rsp-0x18],rsi
  00205:    	lea    rsi,[rsp-0x18]
  0020a:    	mov    QWORD PTR [rbx],rsi
  0020d:    	lea    r14,[rsp-0x10]
  00212:    	mov    QWORD PTR [rsp-0x20],r14
  00217:    	call   0x3781c
  0021c:    	lea    r14,[rbp-0x8]
  00220:    	mov    QWORD PTR [rbx],r14
  00223:    	mov    r14,QWORD PTR [rbp-0x10]
  00227:    	movq   xmm3,QWORD PTR [rsp]
  0022c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00232:    	add    rsp,0x10
  00236: 78 	movabs r13,0x557861fbf0f0
  00240:    	test   rax,rax
  00243:    	je     0xffff4205
:00010 
:00011 %6 = %2.call x()                     [Vec]
  00249:    	mov    rdi,QWORD PTR [r14-0x40]
  0024d: 00 	test   rdi,0x7
  00254:    	jne    0x3784e
  0025a:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0025e:    	jne    0x3784e
  00264: 26 	cmp    DWORD PTR [rip+0xffffffffffff7432],0x26        # 0xffff769d
  0026b:    	jne    0x3784e
  00271:    	mov    esi,DWORD PTR [rip+0xe26]        # 0x109d
  00277:    	cmp    esi,0xffffffff
  0027a:    	je     0x3785d
  00280:    	cmp    WORD PTR [rdi+0x2],0x3
  00285:    	jne    0x29e
  0028b:    	cmp    esi,0x6
  0028e:    	jge    0x29e
  00294:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00299:    	jmp    0x2c8
  0029e:    	sub    rsp,0x10
  002a2:    	movq   QWORD PTR [rsp],xmm3
  002a7:    	movq   QWORD PTR [rsp+0x8],xmm4
  002ad: 78 	movabs rax,0x557860b3bf40
  002b7:    	call   rax
  002b9:    	movq   xmm3,QWORD PTR [rsp]
  002be:    	movq   xmm4,QWORD PTR [rsp+0x8]
  002c4:    	add    rsp,0x10
  002c8:    	mov    QWORD PTR [r14-0x60],rax
:00012 
:00013 %7 = dynvar(2, %4)
  002cc:    	mov    rax,QWORD PTR [r14-0x18]
  002d0:    	mov    rax,QWORD PTR [rax]
  002d3:    	mov    rax,QWORD PTR [rax-0x38]
  002d7:    	mov    QWORD PTR [r14-0x68],rax
:00014 %8 = dynvar(2, %4)
  002db:    	mov    rax,QWORD PTR [r14-0x18]
  002df:    	mov    rax,QWORD PTR [rax]
  002e2:    	mov    rax,QWORD PTR [rax-0x38]
  002e6:    	mov    QWORD PTR [r14-0x70],rax
:00015 %7 = %7 * %8                         [Float][Float]
  002ea:    	mov    rdi,QWORD PTR [r14-0x68]
  002ee: 00 	test   rdi,0x1
  002f5:    	jne    0x378a4
  002fb: 00 	test   rdi,0x2
  00302:    	je     0x33e
  00308:    	xorps  xmm2,xmm2
  0030b: 00 	movabs rax,0x8000000000000002
  00315:    	cmp    rdi,rax
  00318:    	je     0x350
  0031e:    	mov    rax,rdi
  00321:    	sar    rax,0x3f
  00325:    	add    rax,0x2
  00329:    	and    rdi,0xfffffffffffffffc
  0032d:    	or     rdi,rax
  00330:    	rol    rdi,0x3d
  00334:    	movq   xmm2,rdi
  00339:    	jmp    0x350
  0033e:    	call   0xffff425e
  00343:    	test   rax,rax
  00346:    	je     0x378a4
  0034c:    	movq   xmm2,xmm0
  00350:    	mov    rdi,QWORD PTR [r14-0x70]
  00354: 00 	test   rdi,0x1
  0035b:    	jne    0x378b3
  00361: 00 	test   rdi,0x2
  00368:    	je     0x3a4
  0036e:    	xorps  xmm3,xmm3
  00371: 00 	movabs rax,0x8000000000000002
  0037b:    	cmp    rdi,rax
  0037e:    	je     0x3b6
  00384:    	mov    rax,rdi
  00387:    	sar    rax,0x3f
  0038b:    	add    rax,0x2
  0038f:    	and    rdi,0xfffffffffffffffc
  00393:    	or     rdi,rax
  00396:    	rol    rdi,0x3d
  0039a:    	movq   xmm3,rdi
  0039f:    	jmp    0x3b6
  003a4:    	call   0xffff425e
  003a9:    	test   rax,rax
  003ac:    	je     0x378b3
  003b2:    	movq   xmm3,xmm0
  003b6:    	mulsd  xmm2,xmm3
:00016 %3 = %6 / %7                         [Float][Float]
  003ba:    	mov    rdi,QWORD PTR [r14-0x60]
  003be: 00 	test   rdi,0x1
  003c5:    	jne    0x378c2
  003cb: 00 	test   rdi,0x2
  003d2:    	je     0x40e
  003d8:    	xorps  xmm5,xmm5
  003db: 00 	movabs rax,0x8000000000000002
  003e5:    	cmp    rdi,rax
  003e8:    	je     0x420
  003ee:    	mov    rax,rdi
  003f1:    	sar    rax,0x3f
  003f5:    	add    rax,0x2
  003f9:    	and    rdi,0xfffffffffffffffc
  003fd:    	or     rdi,rax
  00400:    	rol    rdi,0x3d
  00404:    	movq   xmm5,rdi
  00409:    	jmp    0x420
  0040e:    	call   0xffff425e
  00413:    	test   rax,rax
  00416:    	je     0x378c2
  0041c:    	movq   xmm5,xmm0
  00420:    	movq   xmm6,xmm5
  00424:    	movq   rax,xmm2
  00429:    	test   rax,rax
  0042c:    	je     0xffff422a
  00432:    	divsd  xmm6,xmm2
:00017 %6 = %2.call y()                     [Vec]
  00436:    	mov    rdi,QWORD PTR [r14-0x40]
  0043a: 00 	test   rdi,0x7
  00441:    	jne    0x378de
  00447:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0044b:    	jne    0x378de
  00451: 26 	cmp    DWORD PTR [rip+0xffffffffffff7245],0x26        # 0xffff769d
  00458:    	jne    0x378de
  0045e:    	mov    esi,DWORD PTR [rip+0xc41]        # 0x10a5
  00464:    	cmp    esi,0xffffffff
  00467:    	je     0x37907
  0046d:    	cmp    WORD PTR [rdi+0x2],0x3
  00472:    	jne    0x48b
  00478:    	cmp    esi,0x6
  0047b:    	jge    0x48b
  00481:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00486:    	jmp    0x4cd
  0048b:    	sub    rsp,0x20
  0048f:    	movq   QWORD PTR [rsp],xmm2
  00494:    	movq   QWORD PTR [rsp+0x8],xmm3
  0049a:    	movq   QWORD PTR [rsp+0x10],xmm4
  004a0:    	movq   QWORD PTR [rsp+0x18],xmm6
  004a6: 78 	movabs rax,0x557860b3bf40
  004b0:    	call   rax
  004b2:    	movq   xmm2,QWORD PTR [rsp]
  004b7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  004bd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  004c3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  004c9:    	add    rsp,0x20
  004cd:    	mov    QWORD PTR [r14-0x60],rax
:00018 
:00019 %7 = dynvar(2, %4)
  004d1:    	mov    rax,QWORD PTR [r14-0x18]
  004d5:    	mov    rax,QWORD PTR [rax]
  004d8:    	mov    rax,QWORD PTR [rax-0x38]
  004dc:    	mov    QWORD PTR [r14-0x68],rax
:00020 %8 = dynvar(2, %4)
  004e0:    	mov    rax,QWORD PTR [r14-0x18]
  004e4:    	mov    rax,QWORD PTR [rax]
  004e7:    	mov    rax,QWORD PTR [rax-0x38]
  004eb:    	mov    QWORD PTR [r14-0x70],rax
:00021 %7 = %7 * %8                         [Float][Float]
  004ef:    	mov    rdi,QWORD PTR [r14-0x68]
  004f3: 00 	test   rdi,0x1
  004fa:    	jne    0x37966
  00500: 00 	test   rdi,0x2
  00507:    	je     0x543
  0050d:    	xorps  xmm2,xmm2
  00510: 00 	movabs rax,0x8000000000000002
  0051a:    	cmp    rdi,rax
  0051d:    	je     0x555
  00523:    	mov    rax,rdi
  00526:    	sar    rax,0x3f
  0052a:    	add    rax,0x2
  0052e:    	and    rdi,0xfffffffffffffffc
  00532:    	or     rdi,rax
  00535:    	rol    rdi,0x3d
  00539:    	movq   xmm2,rdi
  0053e:    	jmp    0x555
  00543:    	call   0xffff425e
  00548:    	test   rax,rax
  0054b:    	je     0x37966
  00551:    	movq   xmm2,xmm0
  00555:    	mov    rdi,QWORD PTR [r14-0x70]
  00559: 00 	test   rdi,0x1
  00560:    	jne    0x37982
  00566: 00 	test   rdi,0x2
  0056d:    	je     0x5a9
  00573:    	xorps  xmm3,xmm3
  00576: 00 	movabs rax,0x8000000000000002
  00580:    	cmp    rdi,rax
  00583:    	je     0x5bb
  00589:    	mov    rax,rdi
  0058c:    	sar    rax,0x3f
  00590:    	add    rax,0x2
  00594:    	and    rdi,0xfffffffffffffffc
  00598:    	or     rdi,rax
  0059b:    	rol    rdi,0x3d
  0059f:    	movq   xmm3,rdi
  005a4:    	jmp    0x5bb
  005a9:    	call   0xffff425e
  005ae:    	test   rax,rax
  005b1:    	je     0x37982
  005b7:    	movq   xmm3,xmm0
  005bb:    	mulsd  xmm2,xmm3
:00022 %4 = %6 / %7                         [Float][Float]
  005bf:    	mov    rdi,QWORD PTR [r14-0x60]
  005c3: 00 	test   rdi,0x1
  005ca:    	jne    0x3799e
  005d0: 00 	test   rdi,0x2
  005d7:    	je     0x613
  005dd:    	xorps  xmm5,xmm5
  005e0: 00 	movabs rax,0x8000000000000002
  005ea:    	cmp    rdi,rax
  005ed:    	je     0x625
  005f3:    	mov    rax,rdi
  005f6:    	sar    rax,0x3f
  005fa:    	add    rax,0x2
  005fe:    	and    rdi,0xfffffffffffffffc
  00602:    	or     rdi,rax
  00605:    	rol    rdi,0x3d
  00609:    	movq   xmm5,rdi
  0060e:    	jmp    0x625
  00613:    	call   0xffff425e
  00618:    	test   rax,rax
  0061b:    	je     0x3799e
  00621:    	movq   xmm5,xmm0
  00625:    	movq   xmm7,xmm5
  00629:    	movq   rax,xmm2
  0062e:    	test   rax,rax
  00631:    	je     0xffff422a
  00637:    	divsd  xmm7,xmm2
:00023 %6 = %2.call z()                     [Vec]
  0063b:    	mov    rdi,QWORD PTR [r14-0x40]
  0063f: 00 	test   rdi,0x7
  00646:    	jne    0x379c7
  0064c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00650:    	jne    0x379c7
  00656: 26 	cmp    DWORD PTR [rip+0xffffffffffff7040],0x26        # 0xffff769d
  0065d:    	jne    0x379c7
  00663:    	mov    esi,DWORD PTR [rip+0xa44]        # 0x10ad
  00669:    	cmp    esi,0xffffffff
  0066c:    	je     0x379fd
  00672:    	cmp    WORD PTR [rdi+0x2],0x3
  00677:    	jne    0x690
  0067d:    	cmp    esi,0x6
  00680:    	jge    0x690
  00686:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0068b:    	jmp    0x6de
  00690:    	sub    rsp,0x30
  00694:    	movq   QWORD PTR [rsp],xmm2
  00699:    	movq   QWORD PTR [rsp+0x8],xmm3
  0069f:    	movq   QWORD PTR [rsp+0x10],xmm4
  006a5:    	movq   QWORD PTR [rsp+0x18],xmm6
  006ab:    	movq   QWORD PTR [rsp+0x20],xmm7
  006b1: 78 	movabs rax,0x557860b3bf40
  006bb:    	call   rax
  006bd:    	movq   xmm2,QWORD PTR [rsp]
  006c2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006c8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  006ce:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006d4:    	movq   xmm7,QWORD PTR [rsp+0x20]
  006da:    	add    rsp,0x30
  006de:    	mov    QWORD PTR [r14-0x60],rax
:00024 
:00025 %7 = dynvar(2, %4)
  006e2:    	mov    rax,QWORD PTR [r14-0x18]
  006e6:    	mov    rax,QWORD PTR [rax]
  006e9:    	mov    rax,QWORD PTR [rax-0x38]
  006ed:    	mov    QWORD PTR [r14-0x68],rax
:00026 %8 = dynvar(2, %4)
  006f1:    	mov    rax,QWORD PTR [r14-0x18]
  006f5:    	mov    rax,QWORD PTR [rax]
  006f8:    	mov    rax,QWORD PTR [rax-0x38]
  006fc:    	mov    QWORD PTR [r14-0x70],rax
:00027 %7 = %7 * %8                         [Float][Float]
  00700:    	mov    rdi,QWORD PTR [r14-0x68]
  00704: 00 	test   rdi,0x1
  0070b:    	jne    0x37a68
  00711: 00 	test   rdi,0x2
  00718:    	je     0x754
  0071e:    	xorps  xmm2,xmm2
  00721: 00 	movabs rax,0x8000000000000002
  0072b:    	cmp    rdi,rax
  0072e:    	je     0x766
  00734:    	mov    rax,rdi
  00737:    	sar    rax,0x3f
  0073b:    	add    rax,0x2
  0073f:    	and    rdi,0xfffffffffffffffc
  00743:    	or     rdi,rax
  00746:    	rol    rdi,0x3d
  0074a:    	movq   xmm2,rdi
  0074f:    	jmp    0x766
  00754:    	call   0xffff425e
  00759:    	test   rax,rax
  0075c:    	je     0x37a68
  00762:    	movq   xmm2,xmm0
  00766:    	mov    rdi,QWORD PTR [r14-0x70]
  0076a: 00 	test   rdi,0x1
  00771:    	jne    0x37a91
  00777: 00 	test   rdi,0x2
  0077e:    	je     0x7ba
  00784:    	xorps  xmm3,xmm3
  00787: 00 	movabs rax,0x8000000000000002
  00791:    	cmp    rdi,rax
  00794:    	je     0x7cc
  0079a:    	mov    rax,rdi
  0079d:    	sar    rax,0x3f
  007a1:    	add    rax,0x2
  007a5:    	and    rdi,0xfffffffffffffffc
  007a9:    	or     rdi,rax
  007ac:    	rol    rdi,0x3d
  007b0:    	movq   xmm3,rdi
  007b5:    	jmp    0x7cc
  007ba:    	call   0xffff425e
  007bf:    	test   rax,rax
  007c2:    	je     0x37a91
  007c8:    	movq   xmm3,xmm0
  007cc:    	mulsd  xmm2,xmm3
:00028 %5 = %6 / %7                         [Float][Float]
  007d0:    	mov    rdi,QWORD PTR [r14-0x60]
  007d4: 00 	test   rdi,0x1
  007db:    	jne    0x37aba
  007e1: 00 	test   rdi,0x2
  007e8:    	je     0x824
  007ee:    	xorps  xmm5,xmm5
  007f1: 00 	movabs rax,0x8000000000000002
  007fb:    	cmp    rdi,rax
  007fe:    	je     0x836
  00804:    	mov    rax,rdi
  00807:    	sar    rax,0x3f
  0080b:    	add    rax,0x2
  0080f:    	and    rdi,0xfffffffffffffffc
  00813:    	or     rdi,rax
  00816:    	rol    rdi,0x3d
  0081a:    	movq   xmm5,rdi
  0081f:    	jmp    0x836
  00824:    	call   0xffff425e
  00829:    	test   rax,rax
  0082c:    	je     0x37aba
  00832:    	movq   xmm5,xmm0
  00836:    	movq   xmm8,xmm5
  0083b:    	movq   rax,xmm2
  00840:    	test   rax,rax
  00843:    	je     0xffff422a
  00849:    	divsd  xmm8,xmm2
:00029 %6 = %4
:00030 %6 = %0.call clamp(%6; 1)            [Scene]
  0084e:    	movq   xmm0,xmm7
  00852:    	call   0xffff4382
  00857:    	mov    QWORD PTR [r14-0x60],rax
  0085b:    	mov    rdi,QWORD PTR [r14-0x30]
  0085f: 26 	cmp    DWORD PTR [rip+0xffffffffffff6e37],0x26        # 0xffff769d
  00866:    	jne    0x37af0
  0086c:    	sub    rsp,0x30
  00870:    	movq   QWORD PTR [rsp],xmm2
  00875:    	movq   QWORD PTR [rsp+0x8],xmm3
  0087b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00881:    	movq   QWORD PTR [rsp+0x18],xmm6
  00887:    	movq   QWORD PTR [rsp+0x20],xmm7
  0088d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00894: 00 	cmp    DWORD PTR [rip+0xffffffffffff6e06],0x0        # 0xffff76a1
  0089b:    	je     0x8b3
  008a1:    	mov    rdi,r12
  008a4:    	mov    rsi,QWORD PTR [rbx]
  008a7: 78 	movabs rax,0x557860afd140
  008b1:    	call   rax
  008b3: 00 	mov    QWORD PTR [rsp-0x28],0x0
  008bc:    	mov    rax,QWORD PTR [r14-0x30]
  008c0:    	mov    QWORD PTR [rsp-0x40],rax
  008c5: 00 	mov    rdi,0x1
  008cc:    	mov    rax,QWORD PTR [r14-0x60]
  008d0:    	mov    QWORD PTR [rsp-0x48],rax
  008d5: 00 	mov    QWORD PTR [rsp-0x38],0x0
  008de: 04 	movabs rax,0x1000400000056
  008e8:    	mov    QWORD PTR [rsp-0x30],rax
  008ed: 78 	movabs r13,0x557861f71360
  008f7:    	mov    rsi,QWORD PTR [rbx]
  008fa:    	mov    QWORD PTR [rsp-0x18],rsi
  008ff:    	lea    rsi,[rsp-0x18]
  00904:    	mov    QWORD PTR [rbx],rsi
  00907:    	lea    r14,[rsp-0x10]
  0090c:    	mov    QWORD PTR [rsp-0x20],r14
  00911:    	call   0xffffabe1
  00916:    	lea    r14,[rbp-0x8]
  0091a:    	mov    QWORD PTR [rbx],r14
  0091d:    	mov    r14,QWORD PTR [rbp-0x10]
  00921:    	movq   xmm2,QWORD PTR [rsp]
  00926:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0092c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00932:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00938:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0093e: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00945:    	add    rsp,0x30
  00949: 78 	movabs r13,0x557861fbf240
  00953:    	test   rax,rax
  00956:    	je     0xffff4205
  0095c:    	mov    QWORD PTR [r14-0x60],rax
:00031 
:00032 %6 = %6.call chr()                   [Integer]
  00960:    	mov    rdi,QWORD PTR [r14-0x60]
  00964: 00 	test   rdi,0x1
  0096b:    	je     0x37b34
  00971: 26 	cmp    DWORD PTR [rip+0xffffffffffff6d25],0x26        # 0xffff769d
  00978:    	jne    0x37b34
  0097e: 00 	mov    r9,0x0
  00985:    	sub    rsp,0x30
  00989:    	movq   QWORD PTR [rsp],xmm2
  0098e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00994:    	movq   QWORD PTR [rsp+0x10],xmm4
  0099a:    	movq   QWORD PTR [rsp+0x18],xmm6
  009a0:    	movq   QWORD PTR [rsp+0x20],xmm7
  009a6: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  009ad:    	mov    rdx,rdi
  009b0:    	mov    QWORD PTR [rsp-0x40],rcx
  009b5: 00 	mov    QWORD PTR [rsp-0x28],0x0
  009be:    	lea    rcx,[r14-0x68]
  009c2: 00 	mov    r8,0x0
  009c9:    	mov    rsi,QWORD PTR [rbx]
  009cc:    	mov    QWORD PTR [rsp-0x18],rsi
  009d1:    	lea    rsi,[rsp-0x18]
  009d6:    	mov    QWORD PTR [rbx],rsi
  009d9:    	lea    r14,[rsp-0x10]
  009de:    	mov    QWORD PTR [rsp-0x20],r14
  009e3:    	call   0x37b78
  009e8:    	lea    r14,[rbp-0x8]
  009ec:    	mov    QWORD PTR [rbx],r14
  009ef:    	mov    r14,QWORD PTR [rbp-0x10]
  009f3:    	movq   xmm2,QWORD PTR [rsp]
  009f8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009fe:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a04:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a0a:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00a10: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00a17:    	add    rsp,0x30
  00a1b: 78 	movabs r13,0x557861fbf260
  00a25:    	test   rax,rax
  00a28:    	je     0xffff4205
  00a2e:    	mov    QWORD PTR [r14-0x60],rax
:00033 
:00034 _ = %0.call print(%6; 1)             [Scene]
  00a32:    	mov    rdi,QWORD PTR [r14-0x30]
  00a36: 26 	cmp    DWORD PTR [rip+0xffffffffffff6c60],0x26        # 0xffff769d
  00a3d:    	jne    0x37baa
  00a43: 00 	mov    r9,0x0
  00a4a:    	sub    rsp,0x30
  00a4e:    	movq   QWORD PTR [rsp],xmm2
  00a53:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a59:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a5f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a65:    	movq   QWORD PTR [rsp+0x20],xmm7
  00a6b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00a72:    	mov    rdx,rdi
  00a75:    	mov    QWORD PTR [rsp-0x40],rcx
  00a7a: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00a83:    	lea    rcx,[r14-0x60]
  00a87: 00 	mov    r8,0x1
  00a8e:    	mov    rsi,QWORD PTR [rbx]
  00a91:    	mov    QWORD PTR [rsp-0x18],rsi
  00a96:    	lea    rsi,[rsp-0x18]
  00a9b:    	mov    QWORD PTR [rbx],rsi
  00a9e:    	lea    r14,[rsp-0x10]
  00aa3:    	mov    QWORD PTR [rsp-0x20],r14
  00aa8:    	call   0x37bee
  00aad:    	lea    r14,[rbp-0x8]
  00ab1:    	mov    QWORD PTR [rbx],r14
  00ab4:    	mov    r14,QWORD PTR [rbp-0x10]
  00ab8:    	movq   xmm2,QWORD PTR [rsp]
  00abd:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ac3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ac9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00acf:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00ad5: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00adc:    	add    rsp,0x30
  00ae0: 78 	movabs r13,0x557861fbf280
  00aea:    	test   rax,rax
  00aed:    	je     0xffff4205
:00035 
:00036 %6 = %3
:00037 %6 = %0.call clamp(%6; 1)            [Scene]
  00af3:    	movq   xmm0,xmm6
  00af7:    	call   0xffff4382
  00afc:    	mov    QWORD PTR [r14-0x60],rax
  00b00:    	mov    rdi,QWORD PTR [r14-0x30]
  00b04: 26 	cmp    DWORD PTR [rip+0xffffffffffff6b92],0x26        # 0xffff769d
  00b0b:    	jne    0x37c20
  00b11:    	sub    rsp,0x30
  00b15:    	movq   QWORD PTR [rsp],xmm2
  00b1a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b20:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b26:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b2c:    	movq   QWORD PTR [rsp+0x20],xmm7
  00b32: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00b39: 00 	cmp    DWORD PTR [rip+0xffffffffffff6b61],0x0        # 0xffff76a1
  00b40:    	je     0xb58
  00b46:    	mov    rdi,r12
  00b49:    	mov    rsi,QWORD PTR [rbx]
  00b4c: 78 	movabs rax,0x557860afd140
  00b56:    	call   rax
  00b58: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00b61:    	mov    rax,QWORD PTR [r14-0x30]
  00b65:    	mov    QWORD PTR [rsp-0x40],rax
  00b6a: 00 	mov    rdi,0x1
  00b71:    	mov    rax,QWORD PTR [r14-0x60]
  00b75:    	mov    QWORD PTR [rsp-0x48],rax
  00b7a: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00b83: 04 	movabs rax,0x1000400000056
  00b8d:    	mov    QWORD PTR [rsp-0x30],rax
  00b92: 78 	movabs r13,0x557861f71360
  00b9c:    	mov    rsi,QWORD PTR [rbx]
  00b9f:    	mov    QWORD PTR [rsp-0x18],rsi
  00ba4:    	lea    rsi,[rsp-0x18]
  00ba9:    	mov    QWORD PTR [rbx],rsi
  00bac:    	lea    r14,[rsp-0x10]
  00bb1:    	mov    QWORD PTR [rsp-0x20],r14
  00bb6:    	call   0xffffabe1
  00bbb:    	lea    r14,[rbp-0x8]
  00bbf:    	mov    QWORD PTR [rbx],r14
  00bc2:    	mov    r14,QWORD PTR [rbp-0x10]
  00bc6:    	movq   xmm2,QWORD PTR [rsp]
  00bcb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00bd1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00bd7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00bdd:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00be3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00bea:    	add    rsp,0x30
  00bee: 78 	movabs r13,0x557861fbf2b0
  00bf8:    	test   rax,rax
  00bfb:    	je     0xffff4205
  00c01:    	mov    QWORD PTR [r14-0x60],rax
:00038 
:00039 %6 = %6.call chr()                   [Integer]
  00c05:    	mov    rdi,QWORD PTR [r14-0x60]
  00c09: 00 	test   rdi,0x1
  00c10:    	je     0x37c64
  00c16: 26 	cmp    DWORD PTR [rip+0xffffffffffff6a80],0x26        # 0xffff769d
  00c1d:    	jne    0x37c64
  00c23: 00 	mov    r9,0x0
  00c2a:    	sub    rsp,0x30
  00c2e:    	movq   QWORD PTR [rsp],xmm2
  00c33:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c39:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c3f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c45:    	movq   QWORD PTR [rsp+0x20],xmm7
  00c4b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00c52:    	mov    rdx,rdi
  00c55:    	mov    QWORD PTR [rsp-0x40],rcx
  00c5a: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00c63:    	lea    rcx,[r14-0x68]
  00c67: 00 	mov    r8,0x0
  00c6e:    	mov    rsi,QWORD PTR [rbx]
  00c71:    	mov    QWORD PTR [rsp-0x18],rsi
  00c76:    	lea    rsi,[rsp-0x18]
  00c7b:    	mov    QWORD PTR [rbx],rsi
  00c7e:    	lea    r14,[rsp-0x10]
  00c83:    	mov    QWORD PTR [rsp-0x20],r14
  00c88:    	call   0x37ca8
  00c8d:    	lea    r14,[rbp-0x8]
  00c91:    	mov    QWORD PTR [rbx],r14
  00c94:    	mov    r14,QWORD PTR [rbp-0x10]
  00c98:    	movq   xmm2,QWORD PTR [rsp]
  00c9d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ca3:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ca9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00caf:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00cb5: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00cbc:    	add    rsp,0x30
  00cc0: 78 	movabs r13,0x557861fbf2d0
  00cca:    	test   rax,rax
  00ccd:    	je     0xffff4205
  00cd3:    	mov    QWORD PTR [r14-0x60],rax
:00040 
:00041 _ = %0.call print(%6; 1)             [Scene]
  00cd7:    	mov    rdi,QWORD PTR [r14-0x30]
  00cdb: 26 	cmp    DWORD PTR [rip+0xffffffffffff69bb],0x26        # 0xffff769d
  00ce2:    	jne    0x37cda
  00ce8: 00 	mov    r9,0x0
  00cef:    	sub    rsp,0x30
  00cf3:    	movq   QWORD PTR [rsp],xmm2
  00cf8:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cfe:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d04:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d0a:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d10: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00d17:    	mov    rdx,rdi
  00d1a:    	mov    QWORD PTR [rsp-0x40],rcx
  00d1f: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00d28:    	lea    rcx,[r14-0x60]
  00d2c: 00 	mov    r8,0x1
  00d33:    	mov    rsi,QWORD PTR [rbx]
  00d36:    	mov    QWORD PTR [rsp-0x18],rsi
  00d3b:    	lea    rsi,[rsp-0x18]
  00d40:    	mov    QWORD PTR [rbx],rsi
  00d43:    	lea    r14,[rsp-0x10]
  00d48:    	mov    QWORD PTR [rsp-0x20],r14
  00d4d:    	call   0x37d1e
  00d52:    	lea    r14,[rbp-0x8]
  00d56:    	mov    QWORD PTR [rbx],r14
  00d59:    	mov    r14,QWORD PTR [rbp-0x10]
  00d5d:    	movq   xmm2,QWORD PTR [rsp]
  00d62:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d68:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d6e:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d74:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d7a: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00d81:    	add    rsp,0x30
  00d85: 78 	movabs r13,0x557861fbf2f0
  00d8f:    	test   rax,rax
  00d92:    	je     0xffff4205
:00042 
:00043 %6 = %5
:00044 %6 = %0.call clamp(%6; 1)            [Scene]
  00d98:    	movq   xmm0,xmm8
  00d9d:    	call   0xffff4382
  00da2:    	mov    QWORD PTR [r14-0x60],rax
  00da6:    	mov    rdi,QWORD PTR [r14-0x30]
  00daa: 26 	cmp    DWORD PTR [rip+0xffffffffffff68ec],0x26        # 0xffff769d
  00db1:    	jne    0x37d50
  00db7:    	sub    rsp,0x30
  00dbb:    	movq   QWORD PTR [rsp],xmm2
  00dc0:    	movq   QWORD PTR [rsp+0x8],xmm3
  00dc6:    	movq   QWORD PTR [rsp+0x10],xmm4
  00dcc:    	movq   QWORD PTR [rsp+0x18],xmm6
  00dd2:    	movq   QWORD PTR [rsp+0x20],xmm7
  00dd8: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00ddf: 00 	cmp    DWORD PTR [rip+0xffffffffffff68bb],0x0        # 0xffff76a1
  00de6:    	je     0xdfe
  00dec:    	mov    rdi,r12
  00def:    	mov    rsi,QWORD PTR [rbx]
  00df2: 78 	movabs rax,0x557860afd140
  00dfc:    	call   rax
  00dfe: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00e07:    	mov    rax,QWORD PTR [r14-0x30]
  00e0b:    	mov    QWORD PTR [rsp-0x40],rax
  00e10: 00 	mov    rdi,0x1
  00e17:    	mov    rax,QWORD PTR [r14-0x60]
  00e1b:    	mov    QWORD PTR [rsp-0x48],rax
  00e20: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00e29: 04 	movabs rax,0x1000400000056
  00e33:    	mov    QWORD PTR [rsp-0x30],rax
  00e38: 78 	movabs r13,0x557861f71360
  00e42:    	mov    rsi,QWORD PTR [rbx]
  00e45:    	mov    QWORD PTR [rsp-0x18],rsi
  00e4a:    	lea    rsi,[rsp-0x18]
  00e4f:    	mov    QWORD PTR [rbx],rsi
  00e52:    	lea    r14,[rsp-0x10]
  00e57:    	mov    QWORD PTR [rsp-0x20],r14
  00e5c:    	call   0xffffabe1
  00e61:    	lea    r14,[rbp-0x8]
  00e65:    	mov    QWORD PTR [rbx],r14
  00e68:    	mov    r14,QWORD PTR [rbp-0x10]
  00e6c:    	movq   xmm2,QWORD PTR [rsp]
  00e71:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e77:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e7d:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e83:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e89: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00e90:    	add    rsp,0x30
  00e94: 78 	movabs r13,0x557861fbf320
  00e9e:    	test   rax,rax
  00ea1:    	je     0xffff4205
  00ea7:    	mov    QWORD PTR [r14-0x60],rax
:00045 
:00046 %6 = %6.call chr()                   [Integer]
  00eab:    	mov    rdi,QWORD PTR [r14-0x60]
  00eaf: 00 	test   rdi,0x1
  00eb6:    	je     0x37d94
  00ebc: 26 	cmp    DWORD PTR [rip+0xffffffffffff67da],0x26        # 0xffff769d
  00ec3:    	jne    0x37d94
  00ec9: 00 	mov    r9,0x0
  00ed0:    	sub    rsp,0x30
  00ed4:    	movq   QWORD PTR [rsp],xmm2
  00ed9:    	movq   QWORD PTR [rsp+0x8],xmm3
  00edf:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ee5:    	movq   QWORD PTR [rsp+0x18],xmm6
  00eeb:    	movq   QWORD PTR [rsp+0x20],xmm7
  00ef1: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00ef8:    	mov    rdx,rdi
  00efb:    	mov    QWORD PTR [rsp-0x40],rcx
  00f00: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00f09:    	lea    rcx,[r14-0x68]
  00f0d: 00 	mov    r8,0x0
  00f14:    	mov    rsi,QWORD PTR [rbx]
  00f17:    	mov    QWORD PTR [rsp-0x18],rsi
  00f1c:    	lea    rsi,[rsp-0x18]
  00f21:    	mov    QWORD PTR [rbx],rsi
  00f24:    	lea    r14,[rsp-0x10]
  00f29:    	mov    QWORD PTR [rsp-0x20],r14
  00f2e:    	call   0x37dd8
  00f33:    	lea    r14,[rbp-0x8]
  00f37:    	mov    QWORD PTR [rbx],r14
  00f3a:    	mov    r14,QWORD PTR [rbp-0x10]
  00f3e:    	movq   xmm2,QWORD PTR [rsp]
  00f43:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f49:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f4f:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f55:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00f5b: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00f62:    	add    rsp,0x30
  00f66: 78 	movabs r13,0x557861fbf340
  00f70:    	test   rax,rax
  00f73:    	je     0xffff4205
  00f79:    	mov    QWORD PTR [r14-0x60],rax
:00047 
:00048 %6 = %0.call print(%6; 1)            [Scene]
  00f7d:    	mov    rdi,QWORD PTR [r14-0x30]
  00f81: 26 	cmp    DWORD PTR [rip+0xffffffffffff6715],0x26        # 0xffff769d
  00f88:    	jne    0x37e0a
  00f8e: 00 	mov    r9,0x0
  00f95:    	sub    rsp,0x30
  00f99:    	movq   QWORD PTR [rsp],xmm2
  00f9e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00fa4:    	movq   QWORD PTR [rsp+0x10],xmm4
  00faa:    	movq   QWORD PTR [rsp+0x18],xmm6
  00fb0:    	movq   QWORD PTR [rsp+0x20],xmm7
  00fb6: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00fbd:    	mov    rdx,rdi
  00fc0:    	mov    QWORD PTR [rsp-0x40],rcx
  00fc5: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00fce:    	lea    rcx,[r14-0x60]
  00fd2: 00 	mov    r8,0x1
  00fd9:    	mov    rsi,QWORD PTR [rbx]
  00fdc:    	mov    QWORD PTR [rsp-0x18],rsi
  00fe1:    	lea    rsi,[rsp-0x18]
  00fe6:    	mov    QWORD PTR [rbx],rsi
  00fe9:    	lea    r14,[rsp-0x10]
  00fee:    	mov    QWORD PTR [rsp-0x20],r14
  00ff3:    	call   0x37e4e
  00ff8:    	lea    r14,[rbp-0x8]
  00ffc:    	mov    QWORD PTR [rbx],r14
  00fff:    	mov    r14,QWORD PTR [rbp-0x10]
  01003:    	movq   xmm2,QWORD PTR [rsp]
  01008:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0100e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01014:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0101a:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01020: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01027:    	add    rsp,0x30
  0102b: 78 	movabs r13,0x557861fbf360
  01035:    	test   rax,rax
  01038:    	je     0xffff4205
  0103e:    	mov    QWORD PTR [r14-0x60],rax
:00049 
:00050 ret %6
  01042:    	mov    rax,QWORD PTR [r14-0x60]
  01046:    	leave  
  01047:    	ret    
==> start whole compile: <unnamed> FuncId(106) self_class:Scene start:[00000] bytecode:0x557861faf2f0
<== finished compile. elapsed:19.6µs
offset:Pos(52944) code: 261 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x1
  0000e: jge    0x3a
  00014: mov    eax,0x1
  00019: sub    eax,edx
  0001b: test   rax,rax
  0001e: je     0x3a
  00024: lea    rdi,[r14-0x40]
  00028: mov    QWORD PTR [rdi+rax*8],0x4
  00030: sub    rax,0x1
  00034: jne    0x28
  0003a: mov    QWORD PTR [r14-0x40],0x4
  00042: mov    QWORD PTR [r14-0x48],0x4
  0004a: mov    rdi,QWORD PTR [r14-0x30]
  0004e: test   rdi,0x7
  00055: jne    0x36dde
  0005b: cmp    DWORD PTR [rdi+0x4],0x35
  0005f: jne    0x36dde
:00000 init_block reg:4 arg:1 pos:1 req:1 block:0 stack_offset:5
:00001 %2 = dynvar(1, %1)
  00065: mov    rax,QWORD PTR [r14-0x18]
  00069: mov    rax,QWORD PTR [rax-0x20]
  0006d: mov    QWORD PTR [r14-0x40],rax
:00002 %3 = literal[7077889]
  00071: mov    rax,0xd80003
  00078: mov    QWORD PTR [r14-0x48],rax
:00003 _ = %2.call times(&%3)               [Integer]
  0007c: mov    rdi,QWORD PTR [r14-0x40]
  00080: test   rdi,0x1
  00087: je     0x36ded
  0008d: cmp    DWORD PTR [rip+0xffffffffffff6558],0x26        # 0xffff65ec
  00094: jne    0x36ded
  0009a: mov    r9,QWORD PTR [r14-0x48]
  0009e: mov    rdx,rdi
  000a1: mov    QWORD PTR [rsp-0x40],rcx
  000a6: mov    QWORD PTR [rsp-0x28],0x0
  000af: lea    rcx,[r14-0x50]
  000b3: mov    r8,0x0
  000ba: mov    rsi,QWORD PTR [rbx]
  000bd: mov    QWORD PTR [rsp-0x18],rsi
  000c2: lea    rsi,[rsp-0x18]
  000c7: mov    QWORD PTR [rbx],rsi
  000ca: lea    r14,[rsp-0x10]
  000cf: mov    QWORD PTR [rsp-0x20],r14
  000d4: call   0x36dfc
  000d9: lea    r14,[rbp-0x8]
  000dd: mov    QWORD PTR [rbx],r14
  000e0: mov    r14,QWORD PTR [rbp-0x10]
  000e4: movabs r13,0x557861faf340
  000ee: test   rax,rax
  000f1: je     0xffff3154
:00004 
:00005 %2 = nil
  000f7: mov    QWORD PTR [r14-0x40],0x4
:00006 ret %2
  000ff: mov    rax,QWORD PTR [r14-0x40]
  00103: leave  
  00104: ret    
==> start whole compile: <unnamed> FuncId(107) self_class:Scene start:[00000] bytecode:0x557861f86050
<== finished compile. elapsed:178.3µs
offset:Pos(54237) code: 9686 bytes  data: 421 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xc0
  0000e:    	cmp    edx,0x1
  00011:    	jge    0x3d
  00017:    	mov    eax,0x1
  0001c:    	sub    eax,edx
  0001e:    	test   rax,rax
  00021:    	je     0x3d
  00027:    	lea    rdi,[r14-0x40]
  0002b: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  00033:    	sub    rax,0x1
  00037:    	jne    0x2b
  0003d: 00 	mov    rax,0x4
  00044:    	mov    QWORD PTR [r14-0x40],rax
  00048:    	mov    QWORD PTR [r14-0x48],rax
  0004c:    	mov    QWORD PTR [r14-0x50],rax
  00050:    	mov    QWORD PTR [r14-0x58],rax
  00054:    	mov    QWORD PTR [r14-0x60],rax
  00058:    	mov    QWORD PTR [r14-0x68],rax
  0005c:    	mov    QWORD PTR [r14-0x70],rax
  00060:    	mov    QWORD PTR [r14-0x78],rax
  00064:    	mov    QWORD PTR [r14-0x80],rax
  00068: ff 	mov    QWORD PTR [r14-0x88],rax
  0006f: ff 	mov    QWORD PTR [r14-0x90],rax
  00076: ff 	mov    QWORD PTR [r14-0x98],rax
  0007d: ff 	mov    QWORD PTR [r14-0xa0],rax
  00084: ff 	mov    QWORD PTR [r14-0xa8],rax
  0008b: ff 	mov    QWORD PTR [r14-0xb0],rax
  00092:    	mov    rdi,QWORD PTR [r14-0x30]
  00096: 00 	test   rdi,0x7
  0009d:    	jne    0x36930
  000a3:    	cmp    DWORD PTR [rdi+0x4],0x35
  000a7:    	jne    0x36930
:00000 init_block reg:17 arg:1 pos:1 req:1 block:0 stack_offset:12
:00001 %13 = %0.call rand()                 [Scene]
  000ad:    	mov    rdi,QWORD PTR [r14-0x30]
  000b1: 26 	cmp    DWORD PTR [rip+0xffffffffffff6027],0x26        # 0xffff60df
  000b8:    	jne    0x3693f
  000be: 00 	mov    r9,0x0
  000c5:    	mov    rdx,rdi
  000c8:    	mov    QWORD PTR [rsp-0x40],rcx
  000cd: 00 	mov    QWORD PTR [rsp-0x28],0x0
  000d6: ff 	lea    rcx,[r14-0x98]
  000dd: 00 	mov    r8,0x0
  000e4:    	mov    rsi,QWORD PTR [rbx]
  000e7:    	mov    QWORD PTR [rsp-0x18],rsi
  000ec:    	lea    rsi,[rsp-0x18]
  000f1:    	mov    QWORD PTR [rbx],rsi
  000f4:    	lea    r14,[rsp-0x10]
  000f9:    	mov    QWORD PTR [rsp-0x20],r14
  000fe:    	call   0x3694e
  00103:    	lea    r14,[rbp-0x8]
  00107:    	mov    QWORD PTR [rbx],r14
  0010a:    	mov    r14,QWORD PTR [rbp-0x10]
  0010e: 78 	movabs r13,0x557861f86080
  00118:    	test   rax,rax
  0011b:    	je     0xffff2c47
  00121: ff 	mov    QWORD PTR [r14-0x98],rax
:00002 
:00003 %2 = %13
  00128: ff 	mov    rax,QWORD PTR [r14-0x98]
  0012f:    	mov    QWORD PTR [r14-0x40],rax
:00004 %13 = literal[2.0]
  00133: 00 	movq   xmm2,QWORD PTR [rip+0x24a8]        # 0x25e3
  0013b: 00 	mov    rax,0x2
  00142: ff 	mov    QWORD PTR [r14-0x98],rax
:00005 %14 = literal[3.14159265]
  00149: 00 	movq   xmm3,QWORD PTR [rip+0x24a2]        # 0x25f3
  00151: da 	movabs rax,0x490fda9e46a78a
  0015b: ff 	mov    QWORD PTR [r14-0xa0],rax
:00006 %13 = %13 * %14                      [Float][Float]
  00162:    	mulsd  xmm2,xmm3
:00007 %14 = %0.call rand()                 [Scene]
  00166:    	mov    rdi,QWORD PTR [r14-0x30]
  0016a: 26 	cmp    DWORD PTR [rip+0xffffffffffff5f6e],0x26        # 0xffff60df
  00171:    	jne    0x36980
  00177: 00 	mov    r9,0x0
  0017e:    	sub    rsp,0x10
  00182:    	movq   QWORD PTR [rsp],xmm2
  00187:    	mov    rdx,rdi
  0018a:    	mov    QWORD PTR [rsp-0x40],rcx
  0018f: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00198: ff 	lea    rcx,[r14-0xa0]
  0019f: 00 	mov    r8,0x0
  001a6:    	mov    rsi,QWORD PTR [rbx]
  001a9:    	mov    QWORD PTR [rsp-0x18],rsi
  001ae:    	lea    rsi,[rsp-0x18]
  001b3:    	mov    QWORD PTR [rbx],rsi
  001b6:    	lea    r14,[rsp-0x10]
  001bb:    	mov    QWORD PTR [rsp-0x20],r14
  001c0:    	call   0x3699f
  001c5:    	lea    r14,[rbp-0x8]
  001c9:    	mov    QWORD PTR [rbx],r14
  001cc:    	mov    r14,QWORD PTR [rbp-0x10]
  001d0:    	movq   xmm2,QWORD PTR [rsp]
  001d5:    	add    rsp,0x10
  001d9: 78 	movabs r13,0x557861f860e0
  001e3:    	test   rax,rax
  001e6:    	je     0xffff2c47
  001ec: ff 	mov    QWORD PTR [r14-0xa0],rax
:00008 
:00009 %3 = %13 * %14                       [Float][Float]
  001f3: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  001fa: 00 	test   rdi,0x1
  00201:    	jne    0x369d1
  00207: 00 	test   rdi,0x2
  0020e:    	je     0x24a
  00214:    	xorps  xmm3,xmm3
  00217: 00 	movabs rax,0x8000000000000002
  00221:    	cmp    rdi,rax
  00224:    	je     0x25c
  0022a:    	mov    rax,rdi
  0022d:    	sar    rax,0x3f
  00231:    	add    rax,0x2
  00235:    	and    rdi,0xfffffffffffffffc
  00239:    	or     rdi,rax
  0023c:    	rol    rdi,0x3d
  00240:    	movq   xmm3,rdi
  00245:    	jmp    0x25c
  0024a:    	call   0xffff2ca0
  0024f:    	test   rax,rax
  00252:    	je     0x369d1
  00258:    	movq   xmm3,xmm0
  0025c:    	movq   xmm4,xmm2
  00260:    	mulsd  xmm4,xmm3
:00010 %13 = const[Math]                    [Math]
  00264: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5e88]        # 0xffff60f3
  0026b: 00 	cmp    rax,QWORD PTR [rip+0x23a1]        # 0x2613
  00272:    	jne    0x369f0
  00278: 00 	mov    rax,QWORD PTR [rip+0x2384]        # 0x2603
  0027f: ff 	mov    QWORD PTR [r14-0x98],rax
:00011 %14 = %3
:00012 %13 = %13.call cos(%14; 1)           [#<Class:Math>]
  00286: ff 	mov    rdi,QWORD PTR [r14-0x98]
  0028d: 00 	test   rdi,0x7
  00294:    	jne    0x36a54
  0029a:    	cmp    DWORD PTR [rdi+0x4],0x24
  0029e:    	jne    0x36a54
  002a4: 26 	cmp    DWORD PTR [rip+0xffffffffffff5e34],0x26        # 0xffff60df
  002ab:    	jne    0x36a54
  002b1:    	sub    rsp,0x10
  002b5:    	movq   QWORD PTR [rsp],xmm2
  002ba:    	movq   QWORD PTR [rsp+0x8],xmm4
  002c0:    	movq   xmm0,xmm4
  002c4: 78 	movabs rax,0x557860b0dd80
  002ce:    	call   rax
  002d0:    	movq   xmm2,QWORD PTR [rsp]
  002d5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  002db:    	add    rsp,0x10
  002df:    	movq   xmm2,xmm0
:00013 
:00014 %14 = const[Math]                    [Math]
  002e3: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5e09]        # 0xffff60f3
  002ea: 00 	cmp    rax,QWORD PTR [rip+0x2342]        # 0x2633
  002f1:    	jne    0x36a77
  002f7: 00 	mov    rax,QWORD PTR [rip+0x2325]        # 0x2623
  002fe: ff 	mov    QWORD PTR [r14-0xa0],rax
:00015 %15 = literal[1.0]
  00305: 00 	movq   xmm3,QWORD PTR [rip+0x2336]        # 0x2643
  0030d: 00 	movabs rax,0xff80000000000002
  00317: ff 	mov    QWORD PTR [r14-0xa8],rax
:00016 %15 = %15 - %2                       [Float][Float]
  0031e:    	mov    rdi,QWORD PTR [r14-0x40]
  00322: 00 	test   rdi,0x1
  00329:    	jne    0x36adb
  0032f: 00 	test   rdi,0x2
  00336:    	je     0x372
  0033c:    	xorps  xmm5,xmm5
  0033f: 00 	movabs rax,0x8000000000000002
  00349:    	cmp    rdi,rax
  0034c:    	je     0x384
  00352:    	mov    rax,rdi
  00355:    	sar    rax,0x3f
  00359:    	add    rax,0x2
  0035d:    	and    rdi,0xfffffffffffffffc
  00361:    	or     rdi,rax
  00364:    	rol    rdi,0x3d
  00368:    	movq   xmm5,rdi
  0036d:    	jmp    0x384
  00372:    	call   0xffff2ca0
  00377:    	test   rax,rax
  0037a:    	je     0x36adb
  00380:    	movq   xmm5,xmm0
  00384:    	subsd  xmm3,xmm5
:00017 %14 = %14.call sqrt(%15; 1)          [#<Class:Math>]
  00388: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0038f: 00 	test   rdi,0x7
  00396:    	jne    0x36b07
  0039c:    	cmp    DWORD PTR [rdi+0x4],0x24
  003a0:    	jne    0x36b07
  003a6: 26 	cmp    DWORD PTR [rip+0xffffffffffff5d32],0x26        # 0xffff60df
  003ad:    	jne    0x36b07
  003b3:    	sqrtsd xmm6,xmm3
:00018 
:00019 %4 = %13 * %14                       [Float][Float]
  003b7:    	movq   xmm7,xmm2
  003bb:    	mulsd  xmm7,xmm6
:00020 %13 = const[Math]                    [Math]
  003bf: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5d2d]        # 0xffff60f3
  003c6: 00 	cmp    rax,QWORD PTR [rip+0x2296]        # 0x2663
  003cd:    	jne    0x36b43
  003d3: 00 	mov    rax,QWORD PTR [rip+0x2279]        # 0x2653
  003da: ff 	mov    QWORD PTR [r14-0x98],rax
:00021 %14 = %3
:00022 %13 = %13.call sin(%14; 1)           [#<Class:Math>]
  003e1: ff 	mov    rdi,QWORD PTR [r14-0x98]
  003e8: 00 	test   rdi,0x7
  003ef:    	jne    0x36bcb
  003f5:    	cmp    DWORD PTR [rdi+0x4],0x24
  003f9:    	jne    0x36bcb
  003ff: 26 	cmp    DWORD PTR [rip+0xffffffffffff5cd9],0x26        # 0xffff60df
  00406:    	jne    0x36bcb
  0040c:    	sub    rsp,0x30
  00410:    	movq   QWORD PTR [rsp],xmm2
  00415:    	movq   QWORD PTR [rsp+0x8],xmm3
  0041b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00421:    	movq   QWORD PTR [rsp+0x18],xmm5
  00427:    	movq   QWORD PTR [rsp+0x20],xmm7
  0042d:    	movq   xmm0,xmm4
  00431: 78 	movabs rax,0x557860b0dd90
  0043b:    	call   rax
  0043d:    	movq   xmm2,QWORD PTR [rsp]
  00442:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00448:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0044e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00454:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0045a:    	add    rsp,0x30
  0045e:    	movq   xmm2,xmm0
:00023 
:00024 %14 = const[Math]                    [Math]
  00462: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5c8a]        # 0xffff60f3
  00469: 00 	cmp    rax,QWORD PTR [rip+0x2213]        # 0x2683
  00470:    	jne    0x36c0b
  00476: 00 	mov    rax,QWORD PTR [rip+0x21f6]        # 0x2673
  0047d: ff 	mov    QWORD PTR [r14-0xa0],rax
:00025 %15 = literal[1.0]
  00484: 00 	movq   xmm3,QWORD PTR [rip+0x2207]        # 0x2693
  0048c: 00 	movabs rax,0xff80000000000002
  00496: ff 	mov    QWORD PTR [r14-0xa8],rax
:00026 %15 = %15 - %2                       [Float][Float]
  0049d:    	subsd  xmm3,xmm5
:00027 %14 = %14.call sqrt(%15; 1)          [#<Class:Math>]
  004a1: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  004a8: 00 	test   rdi,0x7
  004af:    	jne    0x36c93
  004b5:    	cmp    DWORD PTR [rdi+0x4],0x24
  004b9:    	jne    0x36c93
  004bf: 26 	cmp    DWORD PTR [rip+0xffffffffffff5c19],0x26        # 0xffff60df
  004c6:    	jne    0x36c93
  004cc:    	sqrtsd xmm6,xmm3
:00028 
:00029 %5 = %13 * %14                       [Float][Float]
  004d0:    	movq   xmm8,xmm2
  004d5:    	mulsd  xmm8,xmm6
:00030 %13 = const[Math]                    [Math]
  004da: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff5c12]        # 0xffff60f3
  004e1: 00 	cmp    rax,QWORD PTR [rip+0x21cb]        # 0x26b3
  004e8:    	jne    0x36cdc
  004ee: 00 	mov    rax,QWORD PTR [rip+0x21ae]        # 0x26a3
  004f5: ff 	mov    QWORD PTR [r14-0x98],rax
:00031 %14 = %2
:00032 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
  004fc: ff 	mov    rdi,QWORD PTR [r14-0x98]
  00503: 00 	test   rdi,0x7
  0050a:    	jne    0x36d72
  00510:    	cmp    DWORD PTR [rdi+0x4],0x24
  00514:    	jne    0x36d72
  0051a: 26 	cmp    DWORD PTR [rip+0xffffffffffff5bbe],0x26        # 0xffff60df
  00521:    	jne    0x36d72
  00527:    	sqrtsd xmm2,xmm5
:00033 
:00034 %13 = dynvar(2, %2)
  0052b:    	mov    rax,QWORD PTR [r14-0x18]
  0052f:    	mov    rax,QWORD PTR [rax]
  00532:    	mov    rax,QWORD PTR [rax-0x28]
  00536: ff 	mov    QWORD PTR [r14-0x98],rax
:00035 %14 = 0: i32
  0053d: ff 	mov    QWORD PTR [r14-0xa0],0x1
:00036 %13 = %13.[%14]                      [Array][Integer]
  00548: ff 	mov    rdi,QWORD PTR [r14-0x98]
  0054f: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  00556: 00 	test   rdi,0x7
  0055d:    	jne    0x36dc9
  00563:    	cmp    DWORD PTR [rdi+0x4],0xb
  00567:    	jne    0x36dc9
  0056d: 00 	test   rsi,0x1
  00574:    	je     0x36dc9
  0057a:    	sar    rsi,1
  0057d:    	sub    rsp,0x30
  00581:    	movq   QWORD PTR [rsp],xmm2
  00586:    	movq   QWORD PTR [rsp+0x8],xmm3
  0058c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00592:    	movq   QWORD PTR [rsp+0x18],xmm5
  00598:    	movq   QWORD PTR [rsp+0x20],xmm7
  0059e: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  005a5: 78 	movabs rax,0x557860b06070
  005af:    	call   rax
  005b1:    	movq   xmm2,QWORD PTR [rsp]
  005b6:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005bc:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005c2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005c8:    	movq   xmm7,QWORD PTR [rsp+0x20]
  005ce: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  005d5:    	add    rsp,0x30
  005d9: 78 	movabs r13,0x557861f862a0
  005e3:    	test   rax,rax
  005e6:    	je     0xffff2c47
  005ec: ff 	mov    QWORD PTR [r14-0x98],rax
:00037 %13 = %13.call x()                   [Vec]
  005f3: ff 	mov    rdi,QWORD PTR [r14-0x98]
  005fa: 00 	test   rdi,0x7
  00601:    	jne    0x36e1d
  00607:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0060b:    	jne    0x36e1d
  00611: 26 	cmp    DWORD PTR [rip+0xffffffffffff5ac7],0x26        # 0xffff60df
  00618:    	jne    0x36e1d
  0061e:    	mov    esi,DWORD PTR [rip+0x209b]        # 0x26bf
  00624:    	cmp    esi,0xffffffff
  00627:    	je     0x36e71
  0062d:    	cmp    WORD PTR [rdi+0x2],0x3
  00632:    	jne    0x64b
  00638:    	cmp    esi,0x6
  0063b:    	jge    0x64b
  00641:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00646:    	jmp    0x6a7
  0064b:    	sub    rsp,0x30
  0064f:    	movq   QWORD PTR [rsp],xmm2
  00654:    	movq   QWORD PTR [rsp+0x8],xmm3
  0065a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00660:    	movq   QWORD PTR [rsp+0x18],xmm5
  00666:    	movq   QWORD PTR [rsp+0x20],xmm7
  0066c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00673: 78 	movabs rax,0x557860b3bf40
  0067d:    	call   rax
  0067f:    	movq   xmm2,QWORD PTR [rsp]
  00684:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0068a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00690:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00696:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0069c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  006a3:    	add    rsp,0x30
  006a7: ff 	mov    QWORD PTR [r14-0x98],rax
:00038 
:00039 %13 = %4 * %13                       [Float][Float]
  006ae: ff 	mov    rdi,QWORD PTR [r14-0x98]
  006b5: 00 	test   rdi,0x1
  006bc:    	jne    0x36eea
  006c2: 00 	test   rdi,0x2
  006c9:    	je     0x705
  006cf:    	xorps  xmm6,xmm6
  006d2: 00 	movabs rax,0x8000000000000002
  006dc:    	cmp    rdi,rax
  006df:    	je     0x717
  006e5:    	mov    rax,rdi
  006e8:    	sar    rax,0x3f
  006ec:    	add    rax,0x2
  006f0:    	and    rdi,0xfffffffffffffffc
  006f4:    	or     rdi,rax
  006f7:    	rol    rdi,0x3d
  006fb:    	movq   xmm6,rdi
  00700:    	jmp    0x717
  00705:    	call   0xffff2ca0
  0070a:    	test   rax,rax
  0070d:    	je     0x36eea
  00713:    	movq   xmm6,xmm0
  00717:    	mulsd  xmm6,xmm7
:00040 %14 = dynvar(2, %2)
  0071b:    	mov    rax,QWORD PTR [r14-0x18]
  0071f:    	mov    rax,QWORD PTR [rax]
  00722:    	mov    rax,QWORD PTR [rax-0x28]
  00726: ff 	mov    QWORD PTR [r14-0xa0],rax
:00041 %15 = 1: i32
  0072d: ff 	mov    QWORD PTR [r14-0xa8],0x3
:00042 %14 = %14.[%15]                      [Array][Integer]
  00738: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0073f: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00746: 00 	test   rdi,0x7
  0074d:    	jne    0x36f3e
  00753:    	cmp    DWORD PTR [rdi+0x4],0xb
  00757:    	jne    0x36f3e
  0075d: 00 	test   rsi,0x1
  00764:    	je     0x36f3e
  0076a:    	sar    rsi,1
  0076d:    	sub    rsp,0x30
  00771:    	movq   QWORD PTR [rsp],xmm2
  00776:    	movq   QWORD PTR [rsp+0x8],xmm4
  0077c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00782:    	movq   QWORD PTR [rsp+0x18],xmm6
  00788:    	movq   QWORD PTR [rsp+0x20],xmm7
  0078e: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00795: 78 	movabs rax,0x557860b06070
  0079f:    	call   rax
  007a1:    	movq   xmm2,QWORD PTR [rsp]
  007a6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007ac:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007b2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007b8:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007be: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  007c5:    	add    rsp,0x30
  007c9: 78 	movabs r13,0x557861f86300
  007d3:    	test   rax,rax
  007d6:    	je     0xffff2c47
  007dc: ff 	mov    QWORD PTR [r14-0xa0],rax
:00043 %14 = %14.call x()                   [Vec]
  007e3: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  007ea: 00 	test   rdi,0x7
  007f1:    	jne    0x36f92
  007f7:    	cmp    DWORD PTR [rdi+0x4],0x2b
  007fb:    	jne    0x36f92
  00801: 26 	cmp    DWORD PTR [rip+0xffffffffffff58d7],0x26        # 0xffff60df
  00808:    	jne    0x36f92
  0080e:    	mov    esi,DWORD PTR [rip+0x1eb3]        # 0x26c7
  00814:    	cmp    esi,0xffffffff
  00817:    	je     0x36fe6
  0081d:    	cmp    WORD PTR [rdi+0x2],0x3
  00822:    	jne    0x83b
  00828:    	cmp    esi,0x6
  0082b:    	jge    0x83b
  00831:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00836:    	jmp    0x897
  0083b:    	sub    rsp,0x30
  0083f:    	movq   QWORD PTR [rsp],xmm2
  00844:    	movq   QWORD PTR [rsp+0x8],xmm4
  0084a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00850:    	movq   QWORD PTR [rsp+0x18],xmm6
  00856:    	movq   QWORD PTR [rsp+0x20],xmm7
  0085c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00863: 78 	movabs rax,0x557860b3bf40
  0086d:    	call   rax
  0086f:    	movq   xmm2,QWORD PTR [rsp]
  00874:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0087a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00880:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00886:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0088c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00893:    	add    rsp,0x30
  00897: ff 	mov    QWORD PTR [r14-0xa0],rax
:00044 
:00045 %14 = %5 * %14                       [Float][Float]
  0089e: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  008a5: 00 	test   rdi,0x1
  008ac:    	jne    0x3705f
  008b2: 00 	test   rdi,0x2
  008b9:    	je     0x8f5
  008bf:    	xorps  xmm3,xmm3
  008c2: 00 	movabs rax,0x8000000000000002
  008cc:    	cmp    rdi,rax
  008cf:    	je     0x907
  008d5:    	mov    rax,rdi
  008d8:    	sar    rax,0x3f
  008dc:    	add    rax,0x2
  008e0:    	and    rdi,0xfffffffffffffffc
  008e4:    	or     rdi,rax
  008e7:    	rol    rdi,0x3d
  008eb:    	movq   xmm3,rdi
  008f0:    	jmp    0x907
  008f5:    	call   0xffff2ca0
  008fa:    	test   rax,rax
  008fd:    	je     0x3705f
  00903:    	movq   xmm3,xmm0
  00907:    	mulsd  xmm3,xmm8
:00046 %13 = %13 + %14                      [Float][Float]
  0090c:    	addsd  xmm6,xmm3
:00047 %14 = dynvar(2, %2)
  00910:    	mov    rax,QWORD PTR [r14-0x18]
  00914:    	mov    rax,QWORD PTR [rax]
  00917:    	mov    rax,QWORD PTR [rax-0x28]
  0091b: ff 	mov    QWORD PTR [r14-0xa0],rax
:00048 %15 = 2: i32
  00922: ff 	mov    QWORD PTR [r14-0xa8],0x5
:00049 %14 = %14.[%15]                      [Array][Integer]
  0092d: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00934: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  0093b: 00 	test   rdi,0x7
  00942:    	jne    0x370b3
  00948:    	cmp    DWORD PTR [rdi+0x4],0xb
  0094c:    	jne    0x370b3
  00952: 00 	test   rsi,0x1
  00959:    	je     0x370b3
  0095f:    	sar    rsi,1
  00962:    	sub    rsp,0x30
  00966:    	movq   QWORD PTR [rsp],xmm2
  0096b:    	movq   QWORD PTR [rsp+0x8],xmm4
  00971:    	movq   QWORD PTR [rsp+0x10],xmm5
  00977:    	movq   QWORD PTR [rsp+0x18],xmm6
  0097d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00983: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0098a: 78 	movabs rax,0x557860b06070
  00994:    	call   rax
  00996:    	movq   xmm2,QWORD PTR [rsp]
  0099b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  009a1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009a7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  009ad:    	movq   xmm7,QWORD PTR [rsp+0x20]
  009b3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  009ba:    	add    rsp,0x30
  009be: 78 	movabs r13,0x557861f86370
  009c8:    	test   rax,rax
  009cb:    	je     0xffff2c47
  009d1: ff 	mov    QWORD PTR [r14-0xa0],rax
:00050 %14 = %14.call x()                   [Vec]
  009d8: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  009df: 00 	test   rdi,0x7
  009e6:    	jne    0x37107
  009ec:    	cmp    DWORD PTR [rdi+0x4],0x2b
  009f0:    	jne    0x37107
  009f6: 26 	cmp    DWORD PTR [rip+0xffffffffffff56e2],0x26        # 0xffff60df
  009fd:    	jne    0x37107
  00a03:    	mov    esi,DWORD PTR [rip+0x1cc6]        # 0x26cf
  00a09:    	cmp    esi,0xffffffff
  00a0c:    	je     0x3715b
  00a12:    	cmp    WORD PTR [rdi+0x2],0x3
  00a17:    	jne    0xa30
  00a1d:    	cmp    esi,0x6
  00a20:    	jge    0xa30
  00a26:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a2b:    	jmp    0xa8c
  00a30:    	sub    rsp,0x30
  00a34:    	movq   QWORD PTR [rsp],xmm2
  00a39:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a3f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a45:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a4b:    	movq   QWORD PTR [rsp+0x20],xmm7
  00a51: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00a58: 78 	movabs rax,0x557860b3bf40
  00a62:    	call   rax
  00a64:    	movq   xmm2,QWORD PTR [rsp]
  00a69:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a6f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a75:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a7b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00a81: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00a88:    	add    rsp,0x30
  00a8c: ff 	mov    QWORD PTR [r14-0xa0],rax
:00051 
:00052 %14 = %6 * %14                       [Float][Float]
  00a93: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00a9a: 00 	test   rdi,0x1
  00aa1:    	jne    0x371d4
  00aa7: 00 	test   rdi,0x2
  00aae:    	je     0xaea
  00ab4:    	xorps  xmm3,xmm3
  00ab7: 00 	movabs rax,0x8000000000000002
  00ac1:    	cmp    rdi,rax
  00ac4:    	je     0xafc
  00aca:    	mov    rax,rdi
  00acd:    	sar    rax,0x3f
  00ad1:    	add    rax,0x2
  00ad5:    	and    rdi,0xfffffffffffffffc
  00ad9:    	or     rdi,rax
  00adc:    	rol    rdi,0x3d
  00ae0:    	movq   xmm3,rdi
  00ae5:    	jmp    0xafc
  00aea:    	call   0xffff2ca0
  00aef:    	test   rax,rax
  00af2:    	je     0x371d4
  00af8:    	movq   xmm3,xmm0
  00afc:    	mulsd  xmm3,xmm2
:00053 %7 = %13 + %14                       [Float][Float]
  00b00:    	movq   xmm9,xmm6
  00b05:    	addsd  xmm9,xmm3
:00054 %13 = dynvar(2, %2)
  00b0a:    	mov    rax,QWORD PTR [r14-0x18]
  00b0e:    	mov    rax,QWORD PTR [rax]
  00b11:    	mov    rax,QWORD PTR [rax-0x28]
  00b15: ff 	mov    QWORD PTR [r14-0x98],rax
:00055 %14 = 0: i32
  00b1c: ff 	mov    QWORD PTR [r14-0xa0],0x1
:00056 %13 = %13.[%14]                      [Array][Integer]
  00b27: ff 	mov    rdi,QWORD PTR [r14-0x98]
  00b2e: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  00b35: 00 	test   rdi,0x7
  00b3c:    	jne    0x37228
  00b42:    	cmp    DWORD PTR [rdi+0x4],0xb
  00b46:    	jne    0x37228
  00b4c: 00 	test   rsi,0x1
  00b53:    	je     0x37228
  00b59:    	sar    rsi,1
  00b5c:    	sub    rsp,0x30
  00b60:    	movq   QWORD PTR [rsp],xmm2
  00b65:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b6b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b71:    	movq   QWORD PTR [rsp+0x18],xmm7
  00b77: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00b7e: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00b85: 78 	movabs rax,0x557860b06070
  00b8f:    	call   rax
  00b91:    	movq   xmm2,QWORD PTR [rsp]
  00b96:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b9c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ba2:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ba8: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00baf: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00bb6:    	add    rsp,0x30
  00bba: 78 	movabs r13,0x557861f863e0
  00bc4:    	test   rax,rax
  00bc7:    	je     0xffff2c47
  00bcd: ff 	mov    QWORD PTR [r14-0x98],rax
:00057 %13 = %13.call y()                   [Vec]
  00bd4: ff 	mov    rdi,QWORD PTR [r14-0x98]
  00bdb: 00 	test   rdi,0x7
  00be2:    	jne    0x3727a
  00be8:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00bec:    	jne    0x3727a
  00bf2: 26 	cmp    DWORD PTR [rip+0xffffffffffff54e6],0x26        # 0xffff60df
  00bf9:    	jne    0x3727a
  00bff:    	mov    esi,DWORD PTR [rip+0x1ad2]        # 0x26d7
  00c05:    	cmp    esi,0xffffffff
  00c08:    	je     0x372cc
  00c0e:    	cmp    WORD PTR [rdi+0x2],0x3
  00c13:    	jne    0xc2c
  00c19:    	cmp    esi,0x6
  00c1c:    	jge    0xc2c
  00c22:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c27:    	jmp    0xc8a
  00c2c:    	sub    rsp,0x30
  00c30:    	movq   QWORD PTR [rsp],xmm2
  00c35:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c3b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c41:    	movq   QWORD PTR [rsp+0x18],xmm7
  00c47: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00c4e: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00c55: 78 	movabs rax,0x557860b3bf40
  00c5f:    	call   rax
  00c61:    	movq   xmm2,QWORD PTR [rsp]
  00c66:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c6c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c72:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00c78: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00c7f: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00c86:    	add    rsp,0x30
  00c8a: ff 	mov    QWORD PTR [r14-0x98],rax
:00058 
:00059 %13 = %4 * %13                       [Float][Float]
  00c91: ff 	mov    rdi,QWORD PTR [r14-0x98]
  00c98: 00 	test   rdi,0x1
  00c9f:    	jne    0x37347
  00ca5: 00 	test   rdi,0x2
  00cac:    	je     0xce8
  00cb2:    	xorps  xmm3,xmm3
  00cb5: 00 	movabs rax,0x8000000000000002
  00cbf:    	cmp    rdi,rax
  00cc2:    	je     0xcfa
  00cc8:    	mov    rax,rdi
  00ccb:    	sar    rax,0x3f
  00ccf:    	add    rax,0x2
  00cd3:    	and    rdi,0xfffffffffffffffc
  00cd7:    	or     rdi,rax
  00cda:    	rol    rdi,0x3d
  00cde:    	movq   xmm3,rdi
  00ce3:    	jmp    0xcfa
  00ce8:    	call   0xffff2ca0
  00ced:    	test   rax,rax
  00cf0:    	je     0x37347
  00cf6:    	movq   xmm3,xmm0
  00cfa:    	mulsd  xmm3,xmm7
:00060 %14 = dynvar(2, %2)
  00cfe:    	mov    rax,QWORD PTR [r14-0x18]
  00d02:    	mov    rax,QWORD PTR [rax]
  00d05:    	mov    rax,QWORD PTR [rax-0x28]
  00d09: ff 	mov    QWORD PTR [r14-0xa0],rax
:00061 %15 = 1: i32
  00d10: ff 	mov    QWORD PTR [r14-0xa8],0x3
:00062 %14 = %14.[%15]                      [Array][Integer]
  00d1b: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00d22: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00d29: 00 	test   rdi,0x7
  00d30:    	jne    0x37399
  00d36:    	cmp    DWORD PTR [rdi+0x4],0xb
  00d3a:    	jne    0x37399
  00d40: 00 	test   rsi,0x1
  00d47:    	je     0x37399
  00d4d:    	sar    rsi,1
  00d50:    	sub    rsp,0x40
  00d54:    	movq   QWORD PTR [rsp],xmm2
  00d59:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d5f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d65:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d6b:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d71: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00d78: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00d7f: 78 	movabs rax,0x557860b06070
  00d89:    	call   rax
  00d8b:    	movq   xmm2,QWORD PTR [rsp]
  00d90:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d96:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d9c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00da2:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00da8: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00daf: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00db6:    	add    rsp,0x40
  00dba: 78 	movabs r13,0x557861f86440
  00dc4:    	test   rax,rax
  00dc7:    	je     0xffff2c47
  00dcd: ff 	mov    QWORD PTR [r14-0xa0],rax
:00063 %14 = %14.call y()                   [Vec]
  00dd4: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00ddb: 00 	test   rdi,0x7
  00de2:    	jne    0x373fb
  00de8:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00dec:    	jne    0x373fb
  00df2: 26 	cmp    DWORD PTR [rip+0xffffffffffff52e6],0x26        # 0xffff60df
  00df9:    	jne    0x373fb
  00dff:    	mov    esi,DWORD PTR [rip+0x18da]        # 0x26df
  00e05:    	cmp    esi,0xffffffff
  00e08:    	je     0x3745d
  00e0e:    	cmp    WORD PTR [rdi+0x2],0x3
  00e13:    	jne    0xe2c
  00e19:    	cmp    esi,0x6
  00e1c:    	jge    0xe2c
  00e22:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e27:    	jmp    0xe96
  00e2c:    	sub    rsp,0x40
  00e30:    	movq   QWORD PTR [rsp],xmm2
  00e35:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e3b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e41:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e47:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e4d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00e54: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00e5b: 78 	movabs rax,0x557860b3bf40
  00e65:    	call   rax
  00e67:    	movq   xmm2,QWORD PTR [rsp]
  00e6c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e72:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e78:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e7e:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e84: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00e8b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00e92:    	add    rsp,0x40
  00e96: ff 	mov    QWORD PTR [r14-0xa0],rax
:00064 
:00065 %14 = %5 * %14                       [Float][Float]
  00e9d: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00ea4: 00 	test   rdi,0x1
  00eab:    	jne    0x374e4
  00eb1: 00 	test   rdi,0x2
  00eb8:    	je     0xef4
  00ebe:    	xorps  xmm6,xmm6
  00ec1: 00 	movabs rax,0x8000000000000002
  00ecb:    	cmp    rdi,rax
  00ece:    	je     0xf06
  00ed4:    	mov    rax,rdi
  00ed7:    	sar    rax,0x3f
  00edb:    	add    rax,0x2
  00edf:    	and    rdi,0xfffffffffffffffc
  00ee3:    	or     rdi,rax
  00ee6:    	rol    rdi,0x3d
  00eea:    	movq   xmm6,rdi
  00eef:    	jmp    0xf06
  00ef4:    	call   0xffff2ca0
  00ef9:    	test   rax,rax
  00efc:    	je     0x374e4
  00f02:    	movq   xmm6,xmm0
  00f06:    	mulsd  xmm6,xmm8
:00066 %13 = %13 + %14                      [Float][Float]
  00f0b:    	addsd  xmm3,xmm6
:00067 %14 = dynvar(2, %2)
  00f0f:    	mov    rax,QWORD PTR [r14-0x18]
  00f13:    	mov    rax,QWORD PTR [rax]
  00f16:    	mov    rax,QWORD PTR [rax-0x28]
  00f1a: ff 	mov    QWORD PTR [r14-0xa0],rax
:00068 %15 = 2: i32
  00f21: ff 	mov    QWORD PTR [r14-0xa8],0x5
:00069 %14 = %14.[%15]                      [Array][Integer]
  00f2c: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00f33: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00f3a: 00 	test   rdi,0x7
  00f41:    	jne    0x37546
  00f47:    	cmp    DWORD PTR [rdi+0x4],0xb
  00f4b:    	jne    0x37546
  00f51: 00 	test   rsi,0x1
  00f58:    	je     0x37546
  00f5e:    	sar    rsi,1
  00f61:    	sub    rsp,0x40
  00f65:    	movq   QWORD PTR [rsp],xmm2
  00f6a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f70:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f76:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f7c:    	movq   QWORD PTR [rsp+0x20],xmm7
  00f82: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00f89: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00f90: 78 	movabs rax,0x557860b06070
  00f9a:    	call   rax
  00f9c:    	movq   xmm2,QWORD PTR [rsp]
  00fa1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fa7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fad:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fb3:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00fb9: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00fc0: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00fc7:    	add    rsp,0x40
  00fcb: 78 	movabs r13,0x557861f864b0
  00fd5:    	test   rax,rax
  00fd8:    	je     0xffff2c47
  00fde: ff 	mov    QWORD PTR [r14-0xa0],rax
:00070 %14 = %14.call y()                   [Vec]
  00fe5: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00fec: 00 	test   rdi,0x7
  00ff3:    	jne    0x375a8
  00ff9:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00ffd:    	jne    0x375a8
  01003: 26 	cmp    DWORD PTR [rip+0xffffffffffff50d5],0x26        # 0xffff60df
  0100a:    	jne    0x375a8
  01010:    	mov    esi,DWORD PTR [rip+0x16d1]        # 0x26e7
  01016:    	cmp    esi,0xffffffff
  01019:    	je     0x3760a
  0101f:    	cmp    WORD PTR [rdi+0x2],0x3
  01024:    	jne    0x103d
  0102a:    	cmp    esi,0x6
  0102d:    	jge    0x103d
  01033:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01038:    	jmp    0x10a7
  0103d:    	sub    rsp,0x40
  01041:    	movq   QWORD PTR [rsp],xmm2
  01046:    	movq   QWORD PTR [rsp+0x8],xmm3
  0104c:    	movq   QWORD PTR [rsp+0x10],xmm4
  01052:    	movq   QWORD PTR [rsp+0x18],xmm5
  01058:    	movq   QWORD PTR [rsp+0x20],xmm7
  0105e: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01065: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0106c: 78 	movabs rax,0x557860b3bf40
  01076:    	call   rax
  01078:    	movq   xmm2,QWORD PTR [rsp]
  0107d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01083:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01089:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0108f:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01095: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0109c: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  010a3:    	add    rsp,0x40
  010a7: ff 	mov    QWORD PTR [r14-0xa0],rax
:00071 
:00072 %14 = %6 * %14                       [Float][Float]
  010ae: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  010b5: 00 	test   rdi,0x1
  010bc:    	jne    0x37691
  010c2: 00 	test   rdi,0x2
  010c9:    	je     0x1105
  010cf:    	xorps  xmm6,xmm6
  010d2: 00 	movabs rax,0x8000000000000002
  010dc:    	cmp    rdi,rax
  010df:    	je     0x1117
  010e5:    	mov    rax,rdi
  010e8:    	sar    rax,0x3f
  010ec:    	add    rax,0x2
  010f0:    	and    rdi,0xfffffffffffffffc
  010f4:    	or     rdi,rax
  010f7:    	rol    rdi,0x3d
  010fb:    	movq   xmm6,rdi
  01100:    	jmp    0x1117
  01105:    	call   0xffff2ca0
  0110a:    	test   rax,rax
  0110d:    	je     0x37691
  01113:    	movq   xmm6,xmm0
  01117:    	mulsd  xmm6,xmm2
:00073 %8 = %13 + %14                       [Float][Float]
  0111b:    	movq   xmm10,xmm3
  01120:    	addsd  xmm10,xmm6
:00074 %13 = dynvar(2, %2)
  01125:    	mov    rax,QWORD PTR [r14-0x18]
  01129:    	mov    rax,QWORD PTR [rax]
  0112c:    	mov    rax,QWORD PTR [rax-0x28]
  01130: ff 	mov    QWORD PTR [r14-0x98],rax
:00075 %14 = 0: i32
  01137: ff 	mov    QWORD PTR [r14-0xa0],0x1
:00076 %13 = %13.[%14]                      [Array][Integer]
  01142: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01149: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  01150: 00 	test   rdi,0x7
  01157:    	jne    0x376f3
  0115d:    	cmp    DWORD PTR [rdi+0x4],0xb
  01161:    	jne    0x376f3
  01167: 00 	test   rsi,0x1
  0116e:    	je     0x376f3
  01174:    	sar    rsi,1
  01177:    	sub    rsp,0x40
  0117b:    	movq   QWORD PTR [rsp],xmm2
  01180:    	movq   QWORD PTR [rsp+0x8],xmm4
  01186:    	movq   QWORD PTR [rsp+0x10],xmm5
  0118c:    	movq   QWORD PTR [rsp+0x18],xmm7
  01192: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01199: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  011a0: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  011a7: 78 	movabs rax,0x557860b06070
  011b1:    	call   rax
  011b3:    	movq   xmm2,QWORD PTR [rsp]
  011b8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011be:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011c4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  011ca: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  011d1: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  011d8: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  011df:    	add    rsp,0x40
  011e3: 78 	movabs r13,0x557861f86520
  011ed:    	test   rax,rax
  011f0:    	je     0xffff2c47
  011f6: ff 	mov    QWORD PTR [r14-0x98],rax
:00077 %13 = %13.call z()                   [Vec]
  011fd: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01204: 00 	test   rdi,0x7
  0120b:    	jne    0x37753
  01211:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01215:    	jne    0x37753
  0121b: 26 	cmp    DWORD PTR [rip+0xffffffffffff4ebd],0x26        # 0xffff60df
  01222:    	jne    0x37753
  01228:    	mov    esi,DWORD PTR [rip+0x14c1]        # 0x26ef
  0122e:    	cmp    esi,0xffffffff
  01231:    	je     0x377b3
  01237:    	cmp    WORD PTR [rdi+0x2],0x3
  0123c:    	jne    0x1255
  01242:    	cmp    esi,0x6
  01245:    	jge    0x1255
  0124b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01250:    	jmp    0x12c1
  01255:    	sub    rsp,0x40
  01259:    	movq   QWORD PTR [rsp],xmm2
  0125e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01264:    	movq   QWORD PTR [rsp+0x10],xmm5
  0126a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01270: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01277: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0127e: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01285: 78 	movabs rax,0x557860b3bf40
  0128f:    	call   rax
  01291:    	movq   xmm2,QWORD PTR [rsp]
  01296:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0129c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012a2:    	movq   xmm7,QWORD PTR [rsp+0x18]
  012a8: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  012af: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  012b6: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  012bd:    	add    rsp,0x40
  012c1: ff 	mov    QWORD PTR [r14-0x98],rax
:00078 
:00079 %13 = %4 * %13                       [Float][Float]
  012c8: ff 	mov    rdi,QWORD PTR [r14-0x98]
  012cf: 00 	test   rdi,0x1
  012d6:    	jne    0x3783c
  012dc: 00 	test   rdi,0x2
  012e3:    	je     0x131f
  012e9:    	xorps  xmm3,xmm3
  012ec: 00 	movabs rax,0x8000000000000002
  012f6:    	cmp    rdi,rax
  012f9:    	je     0x1331
  012ff:    	mov    rax,rdi
  01302:    	sar    rax,0x3f
  01306:    	add    rax,0x2
  0130a:    	and    rdi,0xfffffffffffffffc
  0130e:    	or     rdi,rax
  01311:    	rol    rdi,0x3d
  01315:    	movq   xmm3,rdi
  0131a:    	jmp    0x1331
  0131f:    	call   0xffff2ca0
  01324:    	test   rax,rax
  01327:    	je     0x3783c
  0132d:    	movq   xmm3,xmm0
  01331:    	mulsd  xmm3,xmm7
:00080 %14 = dynvar(2, %2)
  01335:    	mov    rax,QWORD PTR [r14-0x18]
  01339:    	mov    rax,QWORD PTR [rax]
  0133c:    	mov    rax,QWORD PTR [rax-0x28]
  01340: ff 	mov    QWORD PTR [r14-0xa0],rax
:00081 %15 = 1: i32
  01347: ff 	mov    QWORD PTR [r14-0xa8],0x3
:00082 %14 = %14.[%15]                      [Array][Integer]
  01352: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01359: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  01360: 00 	test   rdi,0x7
  01367:    	jne    0x3789c
  0136d:    	cmp    DWORD PTR [rdi+0x4],0xb
  01371:    	jne    0x3789c
  01377: 00 	test   rsi,0x1
  0137e:    	je     0x3789c
  01384:    	sar    rsi,1
  01387:    	sub    rsp,0x40
  0138b:    	movq   QWORD PTR [rsp],xmm2
  01390:    	movq   QWORD PTR [rsp+0x8],xmm3
  01396:    	movq   QWORD PTR [rsp+0x10],xmm4
  0139c:    	movq   QWORD PTR [rsp+0x18],xmm5
  013a2:    	movq   QWORD PTR [rsp+0x20],xmm7
  013a8: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  013af: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  013b6: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  013bd: 78 	movabs rax,0x557860b06070
  013c7:    	call   rax
  013c9:    	movq   xmm2,QWORD PTR [rsp]
  013ce:    	movq   xmm3,QWORD PTR [rsp+0x8]
  013d4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  013da:    	movq   xmm5,QWORD PTR [rsp+0x18]
  013e0:    	movq   xmm7,QWORD PTR [rsp+0x20]
  013e6: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  013ed: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  013f4: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  013fb:    	add    rsp,0x40
  013ff: 78 	movabs r13,0x557861f86580
  01409:    	test   rax,rax
  0140c:    	je     0xffff2c47
  01412: ff 	mov    QWORD PTR [r14-0xa0],rax
:00083 %14 = %14.call z()                   [Vec]
  01419: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01420: 00 	test   rdi,0x7
  01427:    	jne    0x3790c
  0142d:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01431:    	jne    0x3790c
  01437: 26 	cmp    DWORD PTR [rip+0xffffffffffff4ca1],0x26        # 0xffff60df
  0143e:    	jne    0x3790c
  01444:    	mov    esi,DWORD PTR [rip+0x12ad]        # 0x26f7
  0144a:    	cmp    esi,0xffffffff
  0144d:    	je     0x3797c
  01453:    	cmp    WORD PTR [rdi+0x2],0x3
  01458:    	jne    0x1471
  0145e:    	cmp    esi,0x6
  01461:    	jge    0x1471
  01467:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0146c:    	jmp    0x14e9
  01471:    	sub    rsp,0x40
  01475:    	movq   QWORD PTR [rsp],xmm2
  0147a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01480:    	movq   QWORD PTR [rsp+0x10],xmm4
  01486:    	movq   QWORD PTR [rsp+0x18],xmm5
  0148c:    	movq   QWORD PTR [rsp+0x20],xmm7
  01492: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01499: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  014a0: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  014a7: 78 	movabs rax,0x557860b3bf40
  014b1:    	call   rax
  014b3:    	movq   xmm2,QWORD PTR [rsp]
  014b8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  014be:    	movq   xmm4,QWORD PTR [rsp+0x10]
  014c4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  014ca:    	movq   xmm7,QWORD PTR [rsp+0x20]
  014d0: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  014d7: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  014de: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  014e5:    	add    rsp,0x40
  014e9: ff 	mov    QWORD PTR [r14-0xa0],rax
:00084 
:00085 %14 = %5 * %14                       [Float][Float]
  014f0: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  014f7: 00 	test   rdi,0x1
  014fe:    	jne    0x37a11
  01504: 00 	test   rdi,0x2
  0150b:    	je     0x1547
  01511:    	xorps  xmm6,xmm6
  01514: 00 	movabs rax,0x8000000000000002
  0151e:    	cmp    rdi,rax
  01521:    	je     0x1559
  01527:    	mov    rax,rdi
  0152a:    	sar    rax,0x3f
  0152e:    	add    rax,0x2
  01532:    	and    rdi,0xfffffffffffffffc
  01536:    	or     rdi,rax
  01539:    	rol    rdi,0x3d
  0153d:    	movq   xmm6,rdi
  01542:    	jmp    0x1559
  01547:    	call   0xffff2ca0
  0154c:    	test   rax,rax
  0154f:    	je     0x37a11
  01555:    	movq   xmm6,xmm0
  01559:    	mulsd  xmm6,xmm8
:00086 %13 = %13 + %14                      [Float][Float]
  0155e:    	addsd  xmm3,xmm6
:00087 %14 = dynvar(2, %2)
  01562:    	mov    rax,QWORD PTR [r14-0x18]
  01566:    	mov    rax,QWORD PTR [rax]
  01569:    	mov    rax,QWORD PTR [rax-0x28]
  0156d: ff 	mov    QWORD PTR [r14-0xa0],rax
:00088 %15 = 2: i32
  01574: ff 	mov    QWORD PTR [r14-0xa8],0x5
:00089 %14 = %14.[%15]                      [Array][Integer]
  0157f: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01586: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  0158d: 00 	test   rdi,0x7
  01594:    	jne    0x37a81
  0159a:    	cmp    DWORD PTR [rdi+0x4],0xb
  0159e:    	jne    0x37a81
  015a4: 00 	test   rsi,0x1
  015ab:    	je     0x37a81
  015b1:    	sar    rsi,1
  015b4:    	sub    rsp,0x40
  015b8:    	movq   QWORD PTR [rsp],xmm2
  015bd:    	movq   QWORD PTR [rsp+0x8],xmm3
  015c3:    	movq   QWORD PTR [rsp+0x10],xmm4
  015c9:    	movq   QWORD PTR [rsp+0x18],xmm5
  015cf:    	movq   QWORD PTR [rsp+0x20],xmm7
  015d5: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  015dc: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  015e3: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  015ea: 78 	movabs rax,0x557860b06070
  015f4:    	call   rax
  015f6:    	movq   xmm2,QWORD PTR [rsp]
  015fb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01601:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01607:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0160d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01613: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0161a: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01621: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01628:    	add    rsp,0x40
  0162c: 78 	movabs r13,0x557861f865f0
  01636:    	test   rax,rax
  01639:    	je     0xffff2c47
  0163f: ff 	mov    QWORD PTR [r14-0xa0],rax
:00090 %14 = %14.call z()                   [Vec]
  01646: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0164d: 00 	test   rdi,0x7
  01654:    	jne    0x37af1
  0165a:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0165e:    	jne    0x37af1
  01664: 26 	cmp    DWORD PTR [rip+0xffffffffffff4a74],0x26        # 0xffff60df
  0166b:    	jne    0x37af1
  01671:    	mov    esi,DWORD PTR [rip+0x1088]        # 0x26ff
  01677:    	cmp    esi,0xffffffff
  0167a:    	je     0x37b61
  01680:    	cmp    WORD PTR [rdi+0x2],0x3
  01685:    	jne    0x169e
  0168b:    	cmp    esi,0x6
  0168e:    	jge    0x169e
  01694:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01699:    	jmp    0x1716
  0169e:    	sub    rsp,0x40
  016a2:    	movq   QWORD PTR [rsp],xmm2
  016a7:    	movq   QWORD PTR [rsp+0x8],xmm3
  016ad:    	movq   QWORD PTR [rsp+0x10],xmm4
  016b3:    	movq   QWORD PTR [rsp+0x18],xmm5
  016b9:    	movq   QWORD PTR [rsp+0x20],xmm7
  016bf: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  016c6: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  016cd: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  016d4: 78 	movabs rax,0x557860b3bf40
  016de:    	call   rax
  016e0:    	movq   xmm2,QWORD PTR [rsp]
  016e5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016eb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  016f1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  016f7:    	movq   xmm7,QWORD PTR [rsp+0x20]
  016fd: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01704: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0170b: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01712:    	add    rsp,0x40
  01716: ff 	mov    QWORD PTR [r14-0xa0],rax
:00091 
:00092 %14 = %6 * %14                       [Float][Float]
  0171d: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01724: 00 	test   rdi,0x1
  0172b:    	jne    0x37bf6
  01731: 00 	test   rdi,0x2
  01738:    	je     0x1774
  0173e:    	xorps  xmm6,xmm6
  01741: 00 	movabs rax,0x8000000000000002
  0174b:    	cmp    rdi,rax
  0174e:    	je     0x1786
  01754:    	mov    rax,rdi
  01757:    	sar    rax,0x3f
  0175b:    	add    rax,0x2
  0175f:    	and    rdi,0xfffffffffffffffc
  01763:    	or     rdi,rax
  01766:    	rol    rdi,0x3d
  0176a:    	movq   xmm6,rdi
  0176f:    	jmp    0x1786
  01774:    	call   0xffff2ca0
  01779:    	test   rax,rax
  0177c:    	je     0x37bf6
  01782:    	movq   xmm6,xmm0
  01786:    	mulsd  xmm6,xmm2
:00093 %9 = %13 + %14                       [Float][Float]
  0178a:    	movq   xmm11,xmm3
  0178f:    	addsd  xmm11,xmm6
:00094 %13 = const[Vec]                     [Vec]
  01794: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff4958]        # 0xffff60f3
  0179b: 00 	cmp    rax,QWORD PTR [rip+0xf71]        # 0x2713
  017a2:    	jne    0x37c66
  017a8: 00 	mov    rax,QWORD PTR [rip+0xf54]        # 0x2703
  017af: ff 	mov    QWORD PTR [r14-0x98],rax
:00095 %14 = %7
:00096 %15 = %8
:00097 %16 = %9
:00098 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
  017b6:    	movq   xmm0,xmm9
  017bb:    	call   0xffff2dc4
  017c0: ff 	mov    QWORD PTR [r14-0xa0],rax
  017c7:    	movq   xmm0,xmm10
  017cc:    	call   0xffff2dc4
  017d1: ff 	mov    QWORD PTR [r14-0xa8],rax
  017d8:    	movq   xmm0,xmm11
  017dd:    	call   0xffff2dc4
  017e2: ff 	mov    QWORD PTR [r14-0xb0],rax
  017e9: ff 	mov    rdi,QWORD PTR [r14-0x98]
  017f0: 00 	test   rdi,0x7
  017f7:    	jne    0x37d26
  017fd:    	cmp    DWORD PTR [rdi+0x4],0x2c
  01801:    	jne    0x37d26
  01807: 26 	cmp    DWORD PTR [rip+0xffffffffffff48d1],0x26        # 0xffff60df
  0180e:    	jne    0x37d26
  01814: 00 	mov    r9,0x0
  0181b:    	sub    rsp,0x40
  0181f:    	movq   QWORD PTR [rsp],xmm2
  01824:    	movq   QWORD PTR [rsp+0x8],xmm4
  0182a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01830:    	movq   QWORD PTR [rsp+0x18],xmm7
  01836: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0183d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01844: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0184b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01852:    	mov    rdx,rdi
  01855:    	mov    QWORD PTR [rsp-0x40],rcx
  0185a: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01863: ff 	lea    rcx,[r14-0xa0]
  0186a: 00 	mov    r8,0x3
  01871:    	mov    rsi,QWORD PTR [rbx]
  01874:    	mov    QWORD PTR [rsp-0x18],rsi
  01879:    	lea    rsi,[rsp-0x18]
  0187e:    	mov    QWORD PTR [rbx],rsi
  01881:    	lea    r14,[rsp-0x10]
  01886:    	mov    QWORD PTR [rsp-0x20],r14
  0188b:    	call   0x37d94
  01890:    	lea    r14,[rbp-0x8]
  01894:    	mov    QWORD PTR [rbx],r14
  01897:    	mov    r14,QWORD PTR [rbp-0x10]
  0189b:    	movq   xmm2,QWORD PTR [rsp]
  018a0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018a6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  018ac:    	movq   xmm7,QWORD PTR [rsp+0x18]
  018b2: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  018b9: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  018c0: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  018c7: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  018ce:    	add    rsp,0x40
  018d2: 78 	movabs r13,0x557861f86690
  018dc:    	test   rax,rax
  018df:    	je     0xffff2c47
  018e5:    	mov    QWORD PTR [r14-0x80],rax
:00099 
:00100 %13 = const[Ray]                     [Ray]
  018e9: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff4803]        # 0xffff60f3
  018f0: 00 	cmp    rax,QWORD PTR [rip+0xe3c]        # 0x2733
  018f7:    	jne    0x37dc6
  018fd: 00 	mov    rax,QWORD PTR [rip+0xe1f]        # 0x2723
  01904: ff 	mov    QWORD PTR [r14-0x98],rax
:00101 %14 = dynvar(2, %7)
  0190b:    	mov    rax,QWORD PTR [r14-0x18]
  0190f:    	mov    rax,QWORD PTR [rax]
  01912:    	mov    rax,QWORD PTR [rax-0x50]
  01916: ff 	mov    QWORD PTR [r14-0xa0],rax
:00102 %15 = %10
  0191d:    	mov    rax,QWORD PTR [r14-0x80]
  01921: ff 	mov    QWORD PTR [r14-0xa8],rax
:00103 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
  01928: ff 	mov    rdi,QWORD PTR [r14-0x98]
  0192f: 00 	test   rdi,0x7
  01936:    	jne    0x37e7a
  0193c:    	cmp    DWORD PTR [rdi+0x4],0x32
  01940:    	jne    0x37e7a
  01946: 26 	cmp    DWORD PTR [rip+0xffffffffffff4792],0x26        # 0xffff60df
  0194d:    	jne    0x37e7a
  01953: 00 	mov    r9,0x0
  0195a:    	sub    rsp,0x40
  0195e:    	movq   QWORD PTR [rsp],xmm2
  01963:    	movq   QWORD PTR [rsp+0x8],xmm4
  01969:    	movq   QWORD PTR [rsp+0x10],xmm5
  0196f:    	movq   QWORD PTR [rsp+0x18],xmm7
  01975: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0197c: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01983: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0198a: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01991:    	mov    rdx,rdi
  01994:    	mov    QWORD PTR [rsp-0x40],rcx
  01999: 00 	mov    QWORD PTR [rsp-0x28],0x0
  019a2: ff 	lea    rcx,[r14-0xa0]
  019a9: 00 	mov    r8,0x2
  019b0:    	mov    rsi,QWORD PTR [rbx]
  019b3:    	mov    QWORD PTR [rsp-0x18],rsi
  019b8:    	lea    rsi,[rsp-0x18]
  019bd:    	mov    QWORD PTR [rbx],rsi
  019c0:    	lea    r14,[rsp-0x10]
  019c5:    	mov    QWORD PTR [rsp-0x20],r14
  019ca:    	call   0x37ee8
  019cf:    	lea    r14,[rbp-0x8]
  019d3:    	mov    QWORD PTR [rbx],r14
  019d6:    	mov    r14,QWORD PTR [rbp-0x10]
  019da:    	movq   xmm2,QWORD PTR [rsp]
  019df:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019e5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  019eb:    	movq   xmm7,QWORD PTR [rsp+0x18]
  019f1: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  019f8: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  019ff: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a06: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a0d:    	add    rsp,0x40
  01a11: 78 	movabs r13,0x557861f866e0
  01a1b:    	test   rax,rax
  01a1e:    	je     0xffff2c47
  01a24: ff 	mov    QWORD PTR [r14-0x88],rax
:00104 
:00105 %13 = const[Isect]                   [Isect]
  01a2b: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff46c1]        # 0xffff60f3
  01a32: 00 	cmp    rax,QWORD PTR [rip+0xd1a]        # 0x2753
  01a39:    	jne    0x37f1a
  01a3f: 00 	mov    rax,QWORD PTR [rip+0xcfd]        # 0x2743
  01a46: ff 	mov    QWORD PTR [r14-0x98],rax
:00106 %12 = %13.call new()                 [#<Class:Isect>]
  01a4d: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01a54: 00 	test   rdi,0x7
  01a5b:    	jne    0x37fce
  01a61:    	cmp    DWORD PTR [rdi+0x4],0x34
  01a65:    	jne    0x37fce
  01a6b: 26 	cmp    DWORD PTR [rip+0xffffffffffff466d],0x26        # 0xffff60df
  01a72:    	jne    0x37fce
  01a78: 00 	mov    r9,0x0
  01a7f:    	sub    rsp,0x40
  01a83:    	movq   QWORD PTR [rsp],xmm2
  01a88:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a8e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01a94:    	movq   QWORD PTR [rsp+0x18],xmm7
  01a9a: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01aa1: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01aa8: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01aaf: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ab6:    	mov    rdx,rdi
  01ab9:    	mov    QWORD PTR [rsp-0x40],rcx
  01abe: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01ac7: ff 	lea    rcx,[r14-0xa0]
  01ace: 00 	mov    r8,0x0
  01ad5:    	mov    rsi,QWORD PTR [rbx]
  01ad8:    	mov    QWORD PTR [rsp-0x18],rsi
  01add:    	lea    rsi,[rsp-0x18]
  01ae2:    	mov    QWORD PTR [rbx],rsi
  01ae5:    	lea    r14,[rsp-0x10]
  01aea:    	mov    QWORD PTR [rsp-0x20],r14
  01aef:    	call   0x3803c
  01af4:    	lea    r14,[rbp-0x8]
  01af8:    	mov    QWORD PTR [rbx],r14
  01afb:    	mov    r14,QWORD PTR [rbp-0x10]
  01aff:    	movq   xmm2,QWORD PTR [rsp]
  01b04:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b0a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01b10:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b16: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01b1d: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01b24: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01b2b: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01b32:    	add    rsp,0x40
  01b36: 78 	movabs r13,0x557861f86710
  01b40:    	test   rax,rax
  01b43:    	je     0xffff2c47
  01b49: ff 	mov    QWORD PTR [r14-0x90],rax
:00107 
:00108 %13 = @spheres: Scene[IvarId(0)]
  01b50:    	mov    rdi,QWORD PTR [r14-0x30]
  01b54:    	mov    rax,QWORD PTR [rdi+0x10]
  01b58: ff 	mov    QWORD PTR [r14-0x98],rax
:00109 %14 = 0: i32
  01b5f: ff 	mov    QWORD PTR [r14-0xa0],0x1
:00110 %13 = %13.[%14]                      [Array][Integer]
  01b6a: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01b71: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  01b78: 00 	test   rdi,0x7
  01b7f:    	jne    0x3806e
  01b85:    	cmp    DWORD PTR [rdi+0x4],0xb
  01b89:    	jne    0x3806e
  01b8f: 00 	test   rsi,0x1
  01b96:    	je     0x3806e
  01b9c:    	sar    rsi,1
  01b9f:    	sub    rsp,0x40
  01ba3:    	movq   QWORD PTR [rsp],xmm2
  01ba8:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bae:    	movq   QWORD PTR [rsp+0x10],xmm5
  01bb4:    	movq   QWORD PTR [rsp+0x18],xmm7
  01bba: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01bc1: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01bc8: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01bcf: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01bd6: 78 	movabs rax,0x557860b06070
  01be0:    	call   rax
  01be2:    	movq   xmm2,QWORD PTR [rsp]
  01be7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bed:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01bf3:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01bf9: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c00: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c07: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c0e: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c15:    	add    rsp,0x40
  01c19: 78 	movabs r13,0x557861f86740
  01c23:    	test   rax,rax
  01c26:    	je     0xffff2c47
  01c2c: ff 	mov    QWORD PTR [r14-0x98],rax
:00111 %14 = %11
  01c33: ff 	mov    rax,QWORD PTR [r14-0x88]
  01c3a: ff 	mov    QWORD PTR [r14-0xa0],rax
:00112 %15 = %12
  01c41: ff 	mov    rax,QWORD PTR [r14-0x90]
  01c48: ff 	mov    QWORD PTR [r14-0xa8],rax
:00113 _ = %13.call intersect(%14; 2)       [Sphere]
  01c4f: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01c56: 00 	test   rdi,0x7
  01c5d:    	jne    0x380dc
  01c63:    	cmp    DWORD PTR [rdi+0x4],0x2d
  01c67:    	jne    0x380dc
  01c6d: 26 	cmp    DWORD PTR [rip+0xffffffffffff446b],0x26        # 0xffff60df
  01c74:    	jne    0x380dc
  01c7a:    	sub    rsp,0x40
  01c7e:    	movq   QWORD PTR [rsp],xmm2
  01c83:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c89:    	movq   QWORD PTR [rsp+0x10],xmm5
  01c8f:    	movq   QWORD PTR [rsp+0x18],xmm7
  01c95: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01c9c: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ca3: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01caa: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01cb1: 00 	cmp    DWORD PTR [rip+0xffffffffffff442b],0x0        # 0xffff60e3
  01cb8:    	je     0x1cd0
  01cbe:    	mov    rdi,r12
  01cc1:    	mov    rsi,QWORD PTR [rbx]
  01cc4: 78 	movabs rax,0x557860afd140
  01cce:    	call   rax
  01cd0: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01cd9: ff 	mov    rax,QWORD PTR [r14-0x98]
  01ce0:    	mov    QWORD PTR [rsp-0x40],rax
  01ce5: 00 	mov    rdi,0x2
  01cec: ff 	mov    rax,QWORD PTR [r14-0xa0]
  01cf3:    	mov    QWORD PTR [rsp-0x48],rax
  01cf8: ff 	mov    rax,QWORD PTR [r14-0xa8]
  01cff:    	mov    QWORD PTR [rsp-0x50],rax
  01d04: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01d0d: 0e 	movabs rax,0x1000e00000061
  01d17:    	mov    QWORD PTR [rsp-0x30],rax
  01d1c: 78 	movabs r13,0x557861f78680
  01d26:    	mov    rsi,QWORD PTR [rbx]
  01d29:    	mov    QWORD PTR [rsp-0x18],rsi
  01d2e:    	lea    rsi,[rsp-0x18]
  01d33:    	mov    QWORD PTR [rbx],rsi
  01d36:    	lea    r14,[rsp-0x10]
  01d3b:    	mov    QWORD PTR [rsp-0x20],r14
  01d40:    	call   0xffff6c9f
  01d45:    	lea    r14,[rbp-0x8]
  01d49:    	mov    QWORD PTR [rbx],r14
  01d4c:    	mov    r14,QWORD PTR [rbp-0x10]
  01d50:    	movq   xmm2,QWORD PTR [rsp]
  01d55:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d5b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01d61:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01d67: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01d6e: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01d75: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01d7c: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01d83:    	add    rsp,0x40
  01d87: 78 	movabs r13,0x557861f86780
  01d91:    	test   rax,rax
  01d94:    	je     0xffff2c47
:00114 
:00115 %13 = @spheres: Scene[IvarId(0)]
  01d9a:    	mov    rdi,QWORD PTR [r14-0x30]
  01d9e:    	mov    rax,QWORD PTR [rdi+0x10]
  01da2: ff 	mov    QWORD PTR [r14-0x98],rax
:00116 %14 = 1: i32
  01da9: ff 	mov    QWORD PTR [r14-0xa0],0x3
:00117 %13 = %13.[%14]                      [Array][Integer]
  01db4: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01dbb: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  01dc2: 00 	test   rdi,0x7
  01dc9:    	jne    0x3814a
  01dcf:    	cmp    DWORD PTR [rdi+0x4],0xb
  01dd3:    	jne    0x3814a
  01dd9: 00 	test   rsi,0x1
  01de0:    	je     0x3814a
  01de6:    	sar    rsi,1
  01de9:    	sub    rsp,0x40
  01ded:    	movq   QWORD PTR [rsp],xmm2
  01df2:    	movq   QWORD PTR [rsp+0x8],xmm4
  01df8:    	movq   QWORD PTR [rsp+0x10],xmm5
  01dfe:    	movq   QWORD PTR [rsp+0x18],xmm7
  01e04: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01e0b: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01e12: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01e19: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01e20: 78 	movabs rax,0x557860b06070
  01e2a:    	call   rax
  01e2c:    	movq   xmm2,QWORD PTR [rsp]
  01e31:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e37:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e3d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e43: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e4a: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e51: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e58: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e5f:    	add    rsp,0x40
  01e63: 78 	movabs r13,0x557861f867b0
  01e6d:    	test   rax,rax
  01e70:    	je     0xffff2c47
  01e76: ff 	mov    QWORD PTR [r14-0x98],rax
:00118 %14 = %11
  01e7d: ff 	mov    rax,QWORD PTR [r14-0x88]
  01e84: ff 	mov    QWORD PTR [r14-0xa0],rax
:00119 %15 = %12
  01e8b: ff 	mov    rax,QWORD PTR [r14-0x90]
  01e92: ff 	mov    QWORD PTR [r14-0xa8],rax
:00120 _ = %13.call intersect(%14; 2)       [Sphere]
  01e99: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01ea0: 00 	test   rdi,0x7
  01ea7:    	jne    0x381b8
  01ead:    	cmp    DWORD PTR [rdi+0x4],0x2d
  01eb1:    	jne    0x381b8
  01eb7: 26 	cmp    DWORD PTR [rip+0xffffffffffff4221],0x26        # 0xffff60df
  01ebe:    	jne    0x381b8
  01ec4:    	sub    rsp,0x40
  01ec8:    	movq   QWORD PTR [rsp],xmm2
  01ecd:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ed3:    	movq   QWORD PTR [rsp+0x10],xmm5
  01ed9:    	movq   QWORD PTR [rsp+0x18],xmm7
  01edf: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01ee6: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01eed: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ef4: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01efb: 00 	cmp    DWORD PTR [rip+0xffffffffffff41e1],0x0        # 0xffff60e3
  01f02:    	je     0x1f1a
  01f08:    	mov    rdi,r12
  01f0b:    	mov    rsi,QWORD PTR [rbx]
  01f0e: 78 	movabs rax,0x557860afd140
  01f18:    	call   rax
  01f1a: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01f23: ff 	mov    rax,QWORD PTR [r14-0x98]
  01f2a:    	mov    QWORD PTR [rsp-0x40],rax
  01f2f: 00 	mov    rdi,0x2
  01f36: ff 	mov    rax,QWORD PTR [r14-0xa0]
  01f3d:    	mov    QWORD PTR [rsp-0x48],rax
  01f42: ff 	mov    rax,QWORD PTR [r14-0xa8]
  01f49:    	mov    QWORD PTR [rsp-0x50],rax
  01f4e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01f57: 0e 	movabs rax,0x1000e00000061
  01f61:    	mov    QWORD PTR [rsp-0x30],rax
  01f66: 78 	movabs r13,0x557861f78680
  01f70:    	mov    rsi,QWORD PTR [rbx]
  01f73:    	mov    QWORD PTR [rsp-0x18],rsi
  01f78:    	lea    rsi,[rsp-0x18]
  01f7d:    	mov    QWORD PTR [rbx],rsi
  01f80:    	lea    r14,[rsp-0x10]
  01f85:    	mov    QWORD PTR [rsp-0x20],r14
  01f8a:    	call   0xffff6c9f
  01f8f:    	lea    r14,[rbp-0x8]
  01f93:    	mov    QWORD PTR [rbx],r14
  01f96:    	mov    r14,QWORD PTR [rbp-0x10]
  01f9a:    	movq   xmm2,QWORD PTR [rsp]
  01f9f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01fa5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01fab:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01fb1: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01fb8: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01fbf: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01fc6: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01fcd:    	add    rsp,0x40
  01fd1: 78 	movabs r13,0x557861f867f0
  01fdb:    	test   rax,rax
  01fde:    	je     0xffff2c47
:00121 
:00122 %13 = @spheres: Scene[IvarId(0)]
  01fe4:    	mov    rdi,QWORD PTR [r14-0x30]
  01fe8:    	mov    rax,QWORD PTR [rdi+0x10]
  01fec: ff 	mov    QWORD PTR [r14-0x98],rax
:00123 %14 = 2: i32
  01ff3: ff 	mov    QWORD PTR [r14-0xa0],0x5
:00124 %13 = %13.[%14]                      [Array][Integer]
  01ffe: ff 	mov    rdi,QWORD PTR [r14-0x98]
  02005: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  0200c: 00 	test   rdi,0x7
  02013:    	jne    0x38226
  02019:    	cmp    DWORD PTR [rdi+0x4],0xb
  0201d:    	jne    0x38226
  02023: 00 	test   rsi,0x1
  0202a:    	je     0x38226
  02030:    	sar    rsi,1
  02033:    	sub    rsp,0x40
  02037:    	movq   QWORD PTR [rsp],xmm2
  0203c:    	movq   QWORD PTR [rsp+0x8],xmm4
  02042:    	movq   QWORD PTR [rsp+0x10],xmm5
  02048:    	movq   QWORD PTR [rsp+0x18],xmm7
  0204e: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02055: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0205c: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02063: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  0206a: 78 	movabs rax,0x557860b06070
  02074:    	call   rax
  02076:    	movq   xmm2,QWORD PTR [rsp]
  0207b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02081:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02087:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0208d: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02094: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0209b: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  020a2: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  020a9:    	add    rsp,0x40
  020ad: 78 	movabs r13,0x557861f86820
  020b7:    	test   rax,rax
  020ba:    	je     0xffff2c47
  020c0: ff 	mov    QWORD PTR [r14-0x98],rax
:00125 %14 = %11
  020c7: ff 	mov    rax,QWORD PTR [r14-0x88]
  020ce: ff 	mov    QWORD PTR [r14-0xa0],rax
:00126 %15 = %12
  020d5: ff 	mov    rax,QWORD PTR [r14-0x90]
  020dc: ff 	mov    QWORD PTR [r14-0xa8],rax
:00127 _ = %13.call intersect(%14; 2)       [Sphere]
  020e3: ff 	mov    rdi,QWORD PTR [r14-0x98]
  020ea: 00 	test   rdi,0x7
  020f1:    	jne    0x38294
  020f7:    	cmp    DWORD PTR [rdi+0x4],0x2d
  020fb:    	jne    0x38294
  02101: 26 	cmp    DWORD PTR [rip+0xffffffffffff3fd7],0x26        # 0xffff60df
  02108:    	jne    0x38294
  0210e:    	sub    rsp,0x40
  02112:    	movq   QWORD PTR [rsp],xmm2
  02117:    	movq   QWORD PTR [rsp+0x8],xmm4
  0211d:    	movq   QWORD PTR [rsp+0x10],xmm5
  02123:    	movq   QWORD PTR [rsp+0x18],xmm7
  02129: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02130: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02137: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0213e: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02145: 00 	cmp    DWORD PTR [rip+0xffffffffffff3f97],0x0        # 0xffff60e3
  0214c:    	je     0x2164
  02152:    	mov    rdi,r12
  02155:    	mov    rsi,QWORD PTR [rbx]
  02158: 78 	movabs rax,0x557860afd140
  02162:    	call   rax
  02164: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0216d: ff 	mov    rax,QWORD PTR [r14-0x98]
  02174:    	mov    QWORD PTR [rsp-0x40],rax
  02179: 00 	mov    rdi,0x2
  02180: ff 	mov    rax,QWORD PTR [r14-0xa0]
  02187:    	mov    QWORD PTR [rsp-0x48],rax
  0218c: ff 	mov    rax,QWORD PTR [r14-0xa8]
  02193:    	mov    QWORD PTR [rsp-0x50],rax
  02198: 00 	mov    QWORD PTR [rsp-0x38],0x0
  021a1: 0e 	movabs rax,0x1000e00000061
  021ab:    	mov    QWORD PTR [rsp-0x30],rax
  021b0: 78 	movabs r13,0x557861f78680
  021ba:    	mov    rsi,QWORD PTR [rbx]
  021bd:    	mov    QWORD PTR [rsp-0x18],rsi
  021c2:    	lea    rsi,[rsp-0x18]
  021c7:    	mov    QWORD PTR [rbx],rsi
  021ca:    	lea    r14,[rsp-0x10]
  021cf:    	mov    QWORD PTR [rsp-0x20],r14
  021d4:    	call   0xffff6c9f
  021d9:    	lea    r14,[rbp-0x8]
  021dd:    	mov    QWORD PTR [rbx],r14
  021e0:    	mov    r14,QWORD PTR [rbp-0x10]
  021e4:    	movq   xmm2,QWORD PTR [rsp]
  021e9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  021ef:    	movq   xmm5,QWORD PTR [rsp+0x10]
  021f5:    	movq   xmm7,QWORD PTR [rsp+0x18]
  021fb: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02202: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02209: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02210: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02217:    	add    rsp,0x40
  0221b: 78 	movabs r13,0x557861f86860
  02225:    	test   rax,rax
  02228:    	je     0xffff2c47
:00128 
:00129 %13 = @plane: Scene[IvarId(1)]
  0222e:    	mov    rdi,QWORD PTR [r14-0x30]
  02232:    	mov    rax,QWORD PTR [rdi+0x18]
  02236: ff 	mov    QWORD PTR [r14-0x98],rax
:00130 %14 = %11
  0223d: ff 	mov    rax,QWORD PTR [r14-0x88]
  02244: ff 	mov    QWORD PTR [r14-0xa0],rax
:00131 %15 = %12
  0224b: ff 	mov    rax,QWORD PTR [r14-0x90]
  02252: ff 	mov    QWORD PTR [r14-0xa8],rax
:00132 _ = %13.call intersect(%14; 2)       [Plane]
  02259: ff 	mov    rdi,QWORD PTR [r14-0x98]
  02260: 00 	test   rdi,0x7
  02267:    	jne    0x38302
  0226d:    	cmp    DWORD PTR [rdi+0x4],0x2f
  02271:    	jne    0x38302
  02277: 26 	cmp    DWORD PTR [rip+0xffffffffffff3e61],0x26        # 0xffff60df
  0227e:    	jne    0x38302
  02284:    	sub    rsp,0x40
  02288:    	movq   QWORD PTR [rsp],xmm2
  0228d:    	movq   QWORD PTR [rsp+0x8],xmm4
  02293:    	movq   QWORD PTR [rsp+0x10],xmm5
  02299:    	movq   QWORD PTR [rsp+0x18],xmm7
  0229f: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  022a6: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  022ad: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  022b4: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  022bb: 00 	cmp    DWORD PTR [rip+0xffffffffffff3e21],0x0        # 0xffff60e3
  022c2:    	je     0x22da
  022c8:    	mov    rdi,r12
  022cb:    	mov    rsi,QWORD PTR [rbx]
  022ce: 78 	movabs rax,0x557860afd140
  022d8:    	call   rax
  022da: 00 	mov    QWORD PTR [rsp-0x28],0x0
  022e3: ff 	mov    rax,QWORD PTR [r14-0x98]
  022ea:    	mov    QWORD PTR [rsp-0x40],rax
  022ef: 00 	mov    rdi,0x2
  022f6: ff 	mov    rax,QWORD PTR [r14-0xa0]
  022fd:    	mov    QWORD PTR [rsp-0x48],rax
  02302: ff 	mov    rax,QWORD PTR [r14-0xa8]
  02309:    	mov    QWORD PTR [rsp-0x50],rax
  0230e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  02317: 0c 	movabs rax,0x1000c00000063
  02321:    	mov    QWORD PTR [rsp-0x30],rax
  02326: 78 	movabs r13,0x557861fb0c30
  02330:    	mov    rsi,QWORD PTR [rbx]
  02333:    	mov    QWORD PTR [rsp-0x18],rsi
  02338:    	lea    rsi,[rsp-0x18]
  0233d:    	mov    QWORD PTR [rbx],rsi
  02340:    	lea    r14,[rsp-0x10]
  02345:    	mov    QWORD PTR [rsp-0x20],r14
  0234a:    	call   0xffff726b
  0234f:    	lea    r14,[rbp-0x8]
  02353:    	mov    QWORD PTR [rbx],r14
  02356:    	mov    r14,QWORD PTR [rbp-0x10]
  0235a:    	movq   xmm2,QWORD PTR [rsp]
  0235f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02365:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0236b:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02371: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02378: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0237f: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02386: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0238d:    	add    rsp,0x40
  02391: 78 	movabs r13,0x557861f868b0
  0239b:    	test   rax,rax
  0239e:    	je     0xffff2c47
:00133 
:00134 %13 = %12.call hit()                 [Isect]
  023a4: ff 	mov    rdi,QWORD PTR [r14-0x90]
  023ab: 00 	test   rdi,0x7
  023b2:    	jne    0x38370
  023b8:    	cmp    DWORD PTR [rdi+0x4],0x33
  023bc:    	jne    0x38370
  023c2: 26 	cmp    DWORD PTR [rip+0xffffffffffff3d16],0x26        # 0xffff60df
  023c9:    	jne    0x38370
  023cf:    	mov    esi,DWORD PTR [rip+0x38a]        # 0x275f
  023d5:    	cmp    esi,0xffffffff
  023d8:    	je     0x383de
  023de:    	cmp    WORD PTR [rdi+0x2],0x3
  023e3:    	jne    0x23fc
  023e9:    	cmp    esi,0x6
  023ec:    	jge    0x23fc
  023f2:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  023f7:    	jmp    0x2476
  023fc:    	sub    rsp,0x40
  02400:    	movq   QWORD PTR [rsp],xmm2
  02405:    	movq   QWORD PTR [rsp+0x8],xmm4
  0240b:    	movq   QWORD PTR [rsp+0x10],xmm5
  02411:    	movq   QWORD PTR [rsp+0x18],xmm7
  02417: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0241e: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02425: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0242c: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02433: 78 	movabs rax,0x557860b3bf40
  0243d:    	call   rax
  0243f:    	movq   xmm2,QWORD PTR [rsp]
  02444:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0244a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02450:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02456: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  0245d: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02464: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  0246b: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02472:    	add    rsp,0x40
  02476: ff 	mov    QWORD PTR [r14-0x98],rax
:00135 
:00136 condnotbr %13 =>:00142
  0247d: ff 	mov    rax,QWORD PTR [r14-0x98]
  02484:    	or     rax,0x10
  02488:    	cmp    rax,0x14
  0248c:    	je     0x25b4
:00137 %13 = dynvar(2, %6)
  02492:    	mov    rax,QWORD PTR [r14-0x18]
  02496:    	mov    rax,QWORD PTR [rax]
  02499:    	mov    rax,QWORD PTR [rax-0x48]
  0249d: ff 	mov    QWORD PTR [r14-0x98],rax
:00138 %14 = literal[1.0]
  024a4: 00 	movq   xmm3,QWORD PTR [rip+0x2b7]        # 0x2763
  024ac: 00 	movabs rax,0xff80000000000002
  024b6: ff 	mov    QWORD PTR [r14-0xa0],rax
:00139 %13 = %13 + %14                      [<INVALID>][<INVALID>]
  024bd: 00 	cmp    DWORD PTR [rip+0x2a7],0x0        # 0x276b
  024c4:    	jl     0x38475
  024ca:    	je     0x384e3
  024d0: 01 	sub    DWORD PTR [rip+0x294],0x1        # 0x276b
  024d7:    	xor    rdi,rdi
  024da:    	jmp    0x38475
  024df: ff 	mov    rdi,QWORD PTR [r14-0x98]
  024e6: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  024ed:    	sub    rsp,0x50
  024f1:    	movq   QWORD PTR [rsp],xmm2
  024f6:    	movq   QWORD PTR [rsp+0x8],xmm3
  024fc:    	movq   QWORD PTR [rsp+0x10],xmm4
  02502:    	movq   QWORD PTR [rsp+0x18],xmm5
  02508:    	movq   QWORD PTR [rsp+0x20],xmm7
  0250e: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  02515: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0251c: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  02523: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0252a:    	mov    rdx,rdi
  0252d:    	mov    rcx,rsi
  02530:    	mov    rdi,rbx
  02533:    	mov    rsi,r12
  02536: 78 	movabs rax,0x557860aa8800
  02540:    	call   rax
  02542:    	movq   xmm2,QWORD PTR [rsp]
  02547:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0254d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02553:    	movq   xmm5,QWORD PTR [rsp+0x18]
  02559:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0255f: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  02566: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0256d: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  02574: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  0257b:    	add    rsp,0x50
  0257f: 78 	movabs r13,0x557861f86910
  02589:    	test   rax,rax
  0258c:    	je     0xffff2c47
  02592: ff 	mov    QWORD PTR [r14-0x98],rax
:00140 dynvar(2, %6) = %13
  02599:    	mov    rax,QWORD PTR [r14-0x18]
  0259d:    	mov    rax,QWORD PTR [rax]
  025a0: ff 	mov    rdi,QWORD PTR [r14-0x98]
  025a7:    	mov    QWORD PTR [rax-0x48],rdi
:00141 ret %13
  025ab: ff 	mov    rax,QWORD PTR [r14-0x98]
  025b2:    	leave  
  025b3:    	ret    
:00142 %13 = literal[0.0]
  025b4: 00 	movq   xmm3,QWORD PTR [rip+0x1b7]        # 0x2773
  025bc: 00 	movabs rax,0x8000000000000002
  025c6: ff 	mov    QWORD PTR [r14-0x98],rax
:00143 ret %13
  025cd: ff 	mov    rax,QWORD PTR [r14-0x98]
  025d4:    	leave  
  025d5:    	ret    
==> start whole compile: intersect FuncId(97) self_class:Sphere start:[00000] bytecode:0x557861f78680
<== finished compile. elapsed:120.7µs
offset:Pos(64344) code: 6579 bytes  data: 261 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xa0
  0000e:    	cmp    edx,0x2
  00011:    	jne    0x35d84
  00017: 00 	mov    rax,0x4
  0001e:    	mov    QWORD PTR [r14-0x48],rax
  00022:    	mov    QWORD PTR [r14-0x50],rax
  00026:    	mov    QWORD PTR [r14-0x58],rax
  0002a:    	mov    QWORD PTR [r14-0x60],rax
  0002e:    	mov    QWORD PTR [r14-0x68],rax
  00032:    	mov    QWORD PTR [r14-0x70],rax
  00036:    	mov    QWORD PTR [r14-0x78],rax
  0003a:    	mov    QWORD PTR [r14-0x80],rax
  0003e: ff 	mov    QWORD PTR [r14-0x88],rax
  00045: ff 	mov    QWORD PTR [r14-0x90],rax
  0004c: ff 	mov    QWORD PTR [r14-0x98],rax
  00053:    	mov    rdi,QWORD PTR [r14-0x30]
  00057: 00 	test   rdi,0x7
  0005e:    	jne    0x35d93
  00064:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00068:    	jne    0x35d93
:00000 init_method reg:14 arg:2 pos:2 req:2 block:0 stack_offset:10
:00001 %9 = %1.call org()                   [Ray]
  0006e:    	mov    rdi,QWORD PTR [r14-0x38]
  00072: 00 	test   rdi,0x7
  00079:    	jne    0x35da2
  0007f:    	cmp    DWORD PTR [rdi+0x4],0x31
  00083:    	jne    0x35da2
  00089: 26 	cmp    DWORD PTR [rip+0xffffffffffff38d4],0x26        # 0xffff3964
  00090:    	jne    0x35da2
  00096:    	mov    esi,DWORD PTR [rip+0x191b]        # 0x19b7
  0009c:    	cmp    esi,0xffffffff
  0009f:    	je     0x35db1
  000a5:    	cmp    WORD PTR [rdi+0x2],0x3
  000aa:    	jne    0xc3
  000b0:    	cmp    esi,0x6
  000b3:    	jge    0xc3
  000b9:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000be:    	jmp    0xcf
  000c3: 78 	movabs rax,0x557860b3bf40
  000cd:    	call   rax
  000cf:    	mov    QWORD PTR [r14-0x78],rax
:00002 
:00003 %10 = @center: Sphere[IvarId(0)]
  000d3:    	mov    rdi,QWORD PTR [r14-0x30]
  000d7:    	mov    rax,QWORD PTR [rdi+0x10]
  000db:    	mov    QWORD PTR [r14-0x80],rax
:00004 %3 = %9.call vsub(%10; 1)            [Vec]
  000df:    	mov    rdi,QWORD PTR [r14-0x78]
  000e3: 00 	test   rdi,0x7
  000ea:    	jne    0x35dda
  000f0:    	cmp    DWORD PTR [rdi+0x4],0x2b
  000f4:    	jne    0x35dda
  000fa: 26 	cmp    DWORD PTR [rip+0xffffffffffff3863],0x26        # 0xffff3964
  00101:    	jne    0x35dda
  00107: 00 	cmp    DWORD PTR [rip+0xffffffffffff385a],0x0        # 0xffff3968
  0010e:    	je     0x126
  00114:    	mov    rdi,r12
  00117:    	mov    rsi,QWORD PTR [rbx]
  0011a: 78 	movabs rax,0x557860afd140
  00124:    	call   rax
  00126: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0012f:    	mov    rax,QWORD PTR [r14-0x78]
  00133:    	mov    QWORD PTR [rsp-0x40],rax
  00138: 00 	mov    rdi,0x1
  0013f:    	mov    rax,QWORD PTR [r14-0x80]
  00143:    	mov    QWORD PTR [rsp-0x48],rax
  00148: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00151: 07 	movabs rax,0x100070000005b
  0015b:    	mov    QWORD PTR [rsp-0x30],rax
  00160: 78 	movabs r13,0x557861ff1450
  0016a:    	mov    rsi,QWORD PTR [rbx]
  0016d:    	mov    QWORD PTR [rsp-0x18],rsi
  00172:    	lea    rsi,[rsp-0x18]
  00177:    	mov    QWORD PTR [rbx],rsi
  0017a:    	lea    r14,[rsp-0x10]
  0017f:    	mov    QWORD PTR [rsp-0x20],r14
  00184:    	call   0xffff45b2
  00189:    	lea    r14,[rbp-0x8]
  0018d:    	mov    QWORD PTR [rbx],r14
  00190:    	mov    r14,QWORD PTR [rbp-0x10]
  00194: 78 	movabs r13,0x557861f786e0
  0019e:    	test   rax,rax
  001a1:    	je     0xffff04cc
  001a7:    	mov    QWORD PTR [r14-0x48],rax
:00005 
:00006 %9 = %1.call dir()                   [Ray]
  001ab:    	mov    rdi,QWORD PTR [r14-0x38]
  001af: 00 	test   rdi,0x7
  001b6:    	jne    0x35de9
  001bc:    	cmp    DWORD PTR [rdi+0x4],0x31
  001c0:    	jne    0x35de9
  001c6: 26 	cmp    DWORD PTR [rip+0xffffffffffff3797],0x26        # 0xffff3964
  001cd:    	jne    0x35de9
  001d3:    	mov    esi,DWORD PTR [rip+0x17e6]        # 0x19bf
  001d9:    	cmp    esi,0xffffffff
  001dc:    	je     0x35df8
  001e2:    	cmp    WORD PTR [rdi+0x2],0x3
  001e7:    	jne    0x200
  001ed:    	cmp    esi,0x6
  001f0:    	jge    0x200
  001f6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  001fb:    	jmp    0x20c
  00200: 78 	movabs rax,0x557860b3bf40
  0020a:    	call   rax
  0020c:    	mov    QWORD PTR [r14-0x78],rax
:00007 
:00008 %4 = %3.call vdot(%9; 1)             [Vec]
  00210:    	mov    rdi,QWORD PTR [r14-0x48]
  00214: 00 	test   rdi,0x7
  0021b:    	jne    0x35e21
  00221:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00225:    	jne    0x35e21
  0022b: 26 	cmp    DWORD PTR [rip+0xffffffffffff3732],0x26        # 0xffff3964
  00232:    	jne    0x35e21
  00238: 00 	cmp    DWORD PTR [rip+0xffffffffffff3729],0x0        # 0xffff3968
  0023f:    	je     0x257
  00245:    	mov    rdi,r12
  00248:    	mov    rsi,QWORD PTR [rbx]
  0024b: 78 	movabs rax,0x557860afd140
  00255:    	call   rax
  00257: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00260:    	mov    rax,QWORD PTR [r14-0x48]
  00264:    	mov    QWORD PTR [rsp-0x40],rax
  00269: 00 	mov    rdi,0x1
  00270:    	mov    rax,QWORD PTR [r14-0x78]
  00274:    	mov    QWORD PTR [rsp-0x48],rax
  00279: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00282: 05 	movabs rax,0x100050000005d
  0028c:    	mov    QWORD PTR [rsp-0x30],rax
  00291: 78 	movabs r13,0x557861fb69b0
  0029b:    	mov    rsi,QWORD PTR [rbx]
  0029e:    	mov    QWORD PTR [rsp-0x18],rsi
  002a3:    	lea    rsi,[rsp-0x18]
  002a8:    	mov    QWORD PTR [rbx],rsi
  002ab:    	lea    r14,[rsp-0x10]
  002b0:    	mov    QWORD PTR [rsp-0x20],r14
  002b5:    	call   0xffff4640
  002ba:    	lea    r14,[rbp-0x8]
  002be:    	mov    QWORD PTR [rbx],r14
  002c1:    	mov    r14,QWORD PTR [rbp-0x10]
  002c5: 78 	movabs r13,0x557861f78720
  002cf:    	test   rax,rax
  002d2:    	je     0xffff04cc
  002d8:    	mov    QWORD PTR [r14-0x50],rax
:00009 
:00010 %9 = %3
  002dc:    	mov    rax,QWORD PTR [r14-0x48]
  002e0:    	mov    QWORD PTR [r14-0x78],rax
:00011 %9 = %3.call vdot(%9; 1)             [Vec]
  002e4:    	mov    rdi,QWORD PTR [r14-0x48]
  002e8: 00 	test   rdi,0x7
  002ef:    	jne    0x35e30
  002f5:    	cmp    DWORD PTR [rdi+0x4],0x2b
  002f9:    	jne    0x35e30
  002ff: 26 	cmp    DWORD PTR [rip+0xffffffffffff365e],0x26        # 0xffff3964
  00306:    	jne    0x35e30
  0030c: 00 	cmp    DWORD PTR [rip+0xffffffffffff3655],0x0        # 0xffff3968
  00313:    	je     0x32b
  00319:    	mov    rdi,r12
  0031c:    	mov    rsi,QWORD PTR [rbx]
  0031f: 78 	movabs rax,0x557860afd140
  00329:    	call   rax
  0032b: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00334:    	mov    rax,QWORD PTR [r14-0x48]
  00338:    	mov    QWORD PTR [rsp-0x40],rax
  0033d: 00 	mov    rdi,0x1
  00344:    	mov    rax,QWORD PTR [r14-0x78]
  00348:    	mov    QWORD PTR [rsp-0x48],rax
  0034d: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00356: 05 	movabs rax,0x100050000005d
  00360:    	mov    QWORD PTR [rsp-0x30],rax
  00365: 78 	movabs r13,0x557861fb69b0
  0036f:    	mov    rsi,QWORD PTR [rbx]
  00372:    	mov    QWORD PTR [rsp-0x18],rsi
  00377:    	lea    rsi,[rsp-0x18]
  0037c:    	mov    QWORD PTR [rbx],rsi
  0037f:    	lea    r14,[rsp-0x10]
  00384:    	mov    QWORD PTR [rsp-0x20],r14
  00389:    	call   0xffff4640
  0038e:    	lea    r14,[rbp-0x8]
  00392:    	mov    QWORD PTR [rbx],r14
  00395:    	mov    r14,QWORD PTR [rbp-0x10]
  00399: 78 	movabs r13,0x557861f78750
  003a3:    	test   rax,rax
  003a6:    	je     0xffff04cc
  003ac:    	mov    QWORD PTR [r14-0x78],rax
:00012 
:00013 %10 = @radius: Sphere[IvarId(1)]
  003b0:    	mov    rdi,QWORD PTR [r14-0x30]
  003b4:    	mov    rax,QWORD PTR [rdi+0x18]
  003b8:    	mov    QWORD PTR [r14-0x80],rax
:00014 %11 = @radius: Sphere[IvarId(1)]
  003bc:    	mov    rdi,QWORD PTR [r14-0x30]
  003c0:    	mov    rax,QWORD PTR [rdi+0x18]
  003c4: ff 	mov    QWORD PTR [r14-0x88],rax
:00015 %10 = %10 * %11                      [Float][Float]
  003cb:    	mov    rdi,QWORD PTR [r14-0x80]
  003cf: 00 	test   rdi,0x1
  003d6:    	jne    0x35e3f
  003dc: 00 	test   rdi,0x2
  003e3:    	je     0x41f
  003e9:    	xorps  xmm2,xmm2
  003ec: 00 	movabs rax,0x8000000000000002
  003f6:    	cmp    rdi,rax
  003f9:    	je     0x431
  003ff:    	mov    rax,rdi
  00402:    	sar    rax,0x3f
  00406:    	add    rax,0x2
  0040a:    	and    rdi,0xfffffffffffffffc
  0040e:    	or     rdi,rax
  00411:    	rol    rdi,0x3d
  00415:    	movq   xmm2,rdi
  0041a:    	jmp    0x431
  0041f:    	call   0xffff0525
  00424:    	test   rax,rax
  00427:    	je     0x35e3f
  0042d:    	movq   xmm2,xmm0
  00431: ff 	mov    rdi,QWORD PTR [r14-0x88]
  00438: 00 	test   rdi,0x1
  0043f:    	jne    0x35e4e
  00445: 00 	test   rdi,0x2
  0044c:    	je     0x488
  00452:    	xorps  xmm3,xmm3
  00455: 00 	movabs rax,0x8000000000000002
  0045f:    	cmp    rdi,rax
  00462:    	je     0x49a
  00468:    	mov    rax,rdi
  0046b:    	sar    rax,0x3f
  0046f:    	add    rax,0x2
  00473:    	and    rdi,0xfffffffffffffffc
  00477:    	or     rdi,rax
  0047a:    	rol    rdi,0x3d
  0047e:    	movq   xmm3,rdi
  00483:    	jmp    0x49a
  00488:    	call   0xffff0525
  0048d:    	test   rax,rax
  00490:    	je     0x35e4e
  00496:    	movq   xmm3,xmm0
  0049a:    	mulsd  xmm2,xmm3
:00016 %5 = %9 - %10                        [Float][Float]
  0049e:    	mov    rdi,QWORD PTR [r14-0x78]
  004a2: 00 	test   rdi,0x1
  004a9:    	jne    0x35e5d
  004af: 00 	test   rdi,0x2
  004b6:    	je     0x4f2
  004bc:    	xorps  xmm4,xmm4
  004bf: 00 	movabs rax,0x8000000000000002
  004c9:    	cmp    rdi,rax
  004cc:    	je     0x504
  004d2:    	mov    rax,rdi
  004d5:    	sar    rax,0x3f
  004d9:    	add    rax,0x2
  004dd:    	and    rdi,0xfffffffffffffffc
  004e1:    	or     rdi,rax
  004e4:    	rol    rdi,0x3d
  004e8:    	movq   xmm4,rdi
  004ed:    	jmp    0x504
  004f2:    	call   0xffff0525
  004f7:    	test   rax,rax
  004fa:    	je     0x35e5d
  00500:    	movq   xmm4,xmm0
  00504:    	movq   xmm5,xmm4
  00508:    	subsd  xmm5,xmm2
:00017 %9 = %4 * %4                         [Float][Float]
  0050c:    	mov    rdi,QWORD PTR [r14-0x50]
  00510: 00 	test   rdi,0x1
  00517:    	jne    0x35e79
  0051d: 00 	test   rdi,0x2
  00524:    	je     0x560
  0052a:    	xorps  xmm6,xmm6
  0052d: 00 	movabs rax,0x8000000000000002
  00537:    	cmp    rdi,rax
  0053a:    	je     0x572
  00540:    	mov    rax,rdi
  00543:    	sar    rax,0x3f
  00547:    	add    rax,0x2
  0054b:    	and    rdi,0xfffffffffffffffc
  0054f:    	or     rdi,rax
  00552:    	rol    rdi,0x3d
  00556:    	movq   xmm6,rdi
  0055b:    	jmp    0x572
  00560:    	call   0xffff0525
  00565:    	test   rax,rax
  00568:    	je     0x35e79
  0056e:    	movq   xmm6,xmm0
  00572:    	movq   xmm4,xmm6
  00576:    	mulsd  xmm4,xmm6
:00018 %6 = %9 - %5                         [Float][Float]
  0057a:    	movq   xmm7,xmm4
  0057e:    	subsd  xmm7,xmm5
:00019 %9 = literal[0.0]
  00582: 00 	movq   xmm4,QWORD PTR [rip+0x143e]        # 0x19c8
  0058a: 00 	movabs rax,0x8000000000000002
  00594:    	mov    QWORD PTR [r14-0x78],rax
:00020 _%9 = %6 > %9                        [Float][Float]
:00021 condnotbr _%9 =>:00087
  00598:    	ucomisd xmm7,xmm4
  0059c:    	jbe    0x36fd5
:00022 %9 = %4
:00023 %9 = neg %9                          [Float]
  005a2:    	movq   xmm4,xmm6
  005a6: 00 	xorps  xmm4,XMMWORD PTR [rip+0x142b]        # 0x19d8
:00024 %10 = const[Math]                    [Math]
  005ad: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff33c4]        # 0xffff3978
  005b4: 00 	cmp    rax,QWORD PTR [rip+0x143d]        # 0x19f8
  005bb:    	jne    0x35ea2
  005c1: 00 	mov    rax,QWORD PTR [rip+0x1420]        # 0x19e8
  005c8:    	mov    QWORD PTR [r14-0x80],rax
:00025 %11 = %6
:00026 %10 = %10.call sqrt(%11; 1)          [#<Class:Math>]
  005cc:    	mov    rdi,QWORD PTR [r14-0x80]
  005d0: 00 	test   rdi,0x7
  005d7:    	jne    0x35f2a
  005dd:    	cmp    DWORD PTR [rdi+0x4],0x24
  005e1:    	jne    0x35f2a
  005e7: 26 	cmp    DWORD PTR [rip+0xffffffffffff3376],0x26        # 0xffff3964
  005ee:    	jne    0x35f2a
  005f4:    	sqrtsd xmm2,xmm7
:00027 
:00028 %7 = %9 - %10                        [Float][Float]
  005f8:    	movq   xmm3,xmm4
  005fc:    	subsd  xmm3,xmm2
:00029 %9 = literal[0.0]
  00600: 00 	movq   xmm4,QWORD PTR [rip+0x1400]        # 0x1a08
  00608: 00 	movabs rax,0x8000000000000002
  00612:    	mov    QWORD PTR [r14-0x78],rax
:00030 _%9 = %7 > %9                        [Float][Float]
:00031 condnotbr _%9 =>:00086
  00616:    	ucomisd xmm3,xmm4
  0061a:    	jbe    0x36ec9
:00032 %9 = %2.call t()                     [Isect]
  00620:    	mov    rdi,QWORD PTR [r14-0x40]
  00624: 00 	test   rdi,0x7
  0062b:    	jne    0x35f67
  00631:    	cmp    DWORD PTR [rdi+0x4],0x33
  00635:    	jne    0x35f67
  0063b: 26 	cmp    DWORD PTR [rip+0xffffffffffff3322],0x26        # 0xffff3964
  00642:    	jne    0x35f67
  00648:    	mov    esi,DWORD PTR [rip+0x13c6]        # 0x1a14
  0064e:    	cmp    esi,0xffffffff
  00651:    	je     0x35fb1
  00657:    	cmp    WORD PTR [rdi+0x2],0x3
  0065c:    	jne    0x675
  00662:    	cmp    esi,0x6
  00665:    	jge    0x675
  0066b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00670:    	jmp    0x6c3
  00675:    	sub    rsp,0x30
  00679:    	movq   QWORD PTR [rsp],xmm2
  0067e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00684:    	movq   QWORD PTR [rsp+0x10],xmm5
  0068a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00690:    	movq   QWORD PTR [rsp+0x20],xmm7
  00696: 78 	movabs rax,0x557860b3bf40
  006a0:    	call   rax
  006a2:    	movq   xmm2,QWORD PTR [rsp]
  006a7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006ad:    	movq   xmm5,QWORD PTR [rsp+0x10]
  006b3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  006b9:    	movq   xmm7,QWORD PTR [rsp+0x20]
  006bf:    	add    rsp,0x30
  006c3:    	mov    QWORD PTR [r14-0x78],rax
:00033 
:00034 _%9 = %7 < %9                        [Float][Float]
:00035 condnotbr _%9 =>:00086
  006c7:    	mov    rdi,QWORD PTR [r14-0x78]
  006cb: 00 	test   rdi,0x1
  006d2:    	jne    0x3601c
  006d8: 00 	test   rdi,0x2
  006df:    	je     0x71b
  006e5:    	xorps  xmm4,xmm4
  006e8: 00 	movabs rax,0x8000000000000002
  006f2:    	cmp    rdi,rax
  006f5:    	je     0x72d
  006fb:    	mov    rax,rdi
  006fe:    	sar    rax,0x3f
  00702:    	add    rax,0x2
  00706:    	and    rdi,0xfffffffffffffffc
  0070a:    	or     rdi,rax
  0070d:    	rol    rdi,0x3d
  00711:    	movq   xmm4,rdi
  00716:    	jmp    0x72d
  0071b:    	call   0xffff0525
  00720:    	test   rax,rax
  00723:    	je     0x3601c
  00729:    	movq   xmm4,xmm0
  0072d:    	ucomisd xmm3,xmm4
  00731:    	jae    0x36f26
:00036 _ = %2.call t=(%7; 1)                [Isect]
  00737:    	movq   xmm0,xmm3
  0073b:    	call   0xffff0649
  00740:    	mov    QWORD PTR [r14-0x68],rax
  00744:    	mov    rdi,QWORD PTR [r14-0x40]
  00748: 00 	test   rdi,0x7
  0074f:    	jne    0x36066
  00755:    	cmp    DWORD PTR [rdi+0x4],0x33
  00759:    	jne    0x36066
  0075f: 26 	cmp    DWORD PTR [rip+0xffffffffffff31fe],0x26        # 0xffff3964
  00766:    	jne    0x36066
  0076c:    	mov    esi,DWORD PTR [rip+0x12aa]        # 0x1a1c
  00772:    	cmp    esi,0xffffffff
  00775:    	je     0x360a3
  0077b:    	cmp    WORD PTR [rdi+0x2],0x3
  00780:    	jne    0x79d
  00786:    	cmp    esi,0x6
  00789:    	jge    0x79d
  0078f:    	mov    rax,QWORD PTR [r14-0x68]
  00793:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00798:    	jmp    0x80e
  0079d:    	sub    rsp,0x30
  007a1:    	movq   QWORD PTR [rsp],xmm2
  007a6:    	movq   QWORD PTR [rsp+0x8],xmm3
  007ac:    	movq   QWORD PTR [rsp+0x10],xmm4
  007b2:    	movq   QWORD PTR [rsp+0x18],xmm5
  007b8:    	movq   QWORD PTR [rsp+0x20],xmm6
  007be:    	movq   QWORD PTR [rsp+0x28],xmm7
  007c4:    	mov    rdx,QWORD PTR [r14-0x68]
  007c8: 78 	movabs rax,0x557860b3c1c0
  007d2:    	call   rax
  007d4:    	movq   xmm2,QWORD PTR [rsp]
  007d9:    	movq   xmm3,QWORD PTR [rsp+0x8]
  007df:    	movq   xmm4,QWORD PTR [rsp+0x10]
  007e5:    	movq   xmm5,QWORD PTR [rsp+0x18]
  007eb:    	movq   xmm6,QWORD PTR [rsp+0x20]
  007f1:    	movq   xmm7,QWORD PTR [rsp+0x28]
  007f7:    	add    rsp,0x30
  007fb: 78 	movabs r13,0x557861f788e0
  00805:    	test   rax,rax
  00808:    	je     0xffff04cc
:00037 
:00038 %9 = literal[true]
  0080e: 00 	mov    rax,0x1c
  00815:    	mov    QWORD PTR [r14-0x78],rax
:00039 _ = %2.call hit=(%9; 1)              [Isect]
  00819:    	mov    rdi,QWORD PTR [r14-0x40]
  0081d: 00 	test   rdi,0x7
  00824:    	jne    0x36121
  0082a:    	cmp    DWORD PTR [rdi+0x4],0x33
  0082e:    	jne    0x36121
  00834: 26 	cmp    DWORD PTR [rip+0xffffffffffff3129],0x26        # 0xffff3964
  0083b:    	jne    0x36121
  00841:    	mov    esi,DWORD PTR [rip+0x11dd]        # 0x1a24
  00847:    	cmp    esi,0xffffffff
  0084a:    	je     0x3615e
  00850:    	cmp    WORD PTR [rdi+0x2],0x3
  00855:    	jne    0x872
  0085b:    	cmp    esi,0x6
  0085e:    	jge    0x872
  00864:    	mov    rax,QWORD PTR [r14-0x78]
  00868:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0086d:    	jmp    0x8d7
  00872:    	sub    rsp,0x30
  00876:    	movq   QWORD PTR [rsp],xmm2
  0087b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00881:    	movq   QWORD PTR [rsp+0x10],xmm5
  00887:    	movq   QWORD PTR [rsp+0x18],xmm6
  0088d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00893:    	mov    rdx,QWORD PTR [r14-0x78]
  00897: 78 	movabs rax,0x557860b3c1c0
  008a1:    	call   rax
  008a3:    	movq   xmm2,QWORD PTR [rsp]
  008a8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  008ae:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008b4:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008ba:    	movq   xmm7,QWORD PTR [rsp+0x20]
  008c0:    	add    rsp,0x30
  008c4: 78 	movabs r13,0x557861f78910
  008ce:    	test   rax,rax
  008d1:    	je     0xffff04cc
:00040 
:00041 %9 = const[Vec]                      [Vec]
  008d7: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff309a]        # 0xffff3978
  008de: 00 	cmp    rax,QWORD PTR [rip+0x1153]        # 0x1a38
  008e5:    	jne    0x361d0
  008eb: 00 	mov    rax,QWORD PTR [rip+0x1136]        # 0x1a28
  008f2:    	mov    QWORD PTR [r14-0x78],rax
:00042 %10 = %1.call org()                  [Ray]
  008f6:    	mov    rdi,QWORD PTR [r14-0x38]
  008fa: 00 	test   rdi,0x7
  00901:    	jne    0x36258
  00907:    	cmp    DWORD PTR [rdi+0x4],0x31
  0090b:    	jne    0x36258
  00911: 26 	cmp    DWORD PTR [rip+0xffffffffffff304c],0x26        # 0xffff3964
  00918:    	jne    0x36258
  0091e:    	mov    esi,DWORD PTR [rip+0x1120]        # 0x1a44
  00924:    	cmp    esi,0xffffffff
  00927:    	je     0x36288
  0092d:    	cmp    WORD PTR [rdi+0x2],0x3
  00932:    	jne    0x94b
  00938:    	cmp    esi,0x6
  0093b:    	jge    0x94b
  00941:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00946:    	jmp    0x98d
  0094b:    	sub    rsp,0x20
  0094f:    	movq   QWORD PTR [rsp],xmm3
  00954:    	movq   QWORD PTR [rsp+0x8],xmm5
  0095a:    	movq   QWORD PTR [rsp+0x10],xmm6
  00960:    	movq   QWORD PTR [rsp+0x18],xmm7
  00966: 78 	movabs rax,0x557860b3bf40
  00970:    	call   rax
  00972:    	movq   xmm3,QWORD PTR [rsp]
  00977:    	movq   xmm5,QWORD PTR [rsp+0x8]
  0097d:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00983:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00989:    	add    rsp,0x20
  0098d:    	mov    QWORD PTR [r14-0x80],rax
:00043 
:00044 %10 = %10.call x()                   [Vec]
  00991:    	mov    rdi,QWORD PTR [r14-0x80]
  00995: 00 	test   rdi,0x7
  0099c:    	jne    0x362e7
  009a2:    	cmp    DWORD PTR [rdi+0x4],0x2b
  009a6:    	jne    0x362e7
  009ac: 26 	cmp    DWORD PTR [rip+0xffffffffffff2fb1],0x26        # 0xffff3964
  009b3:    	jne    0x362e7
  009b9:    	mov    esi,DWORD PTR [rip+0x108d]        # 0x1a4c
  009bf:    	cmp    esi,0xffffffff
  009c2:    	je     0x36317
  009c8:    	cmp    WORD PTR [rdi+0x2],0x3
  009cd:    	jne    0x9e6
  009d3:    	cmp    esi,0x6
  009d6:    	jge    0x9e6
  009dc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  009e1:    	jmp    0xa28
  009e6:    	sub    rsp,0x20
  009ea:    	movq   QWORD PTR [rsp],xmm3
  009ef:    	movq   QWORD PTR [rsp+0x8],xmm5
  009f5:    	movq   QWORD PTR [rsp+0x10],xmm6
  009fb:    	movq   QWORD PTR [rsp+0x18],xmm7
  00a01: 78 	movabs rax,0x557860b3bf40
  00a0b:    	call   rax
  00a0d:    	movq   xmm3,QWORD PTR [rsp]
  00a12:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00a18:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00a1e:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00a24:    	add    rsp,0x20
  00a28:    	mov    QWORD PTR [r14-0x80],rax
:00045 
:00046 %11 = %1.call dir()                  [Ray]
  00a2c:    	mov    rdi,QWORD PTR [r14-0x38]
  00a30: 00 	test   rdi,0x7
  00a37:    	jne    0x36376
  00a3d:    	cmp    DWORD PTR [rdi+0x4],0x31
  00a41:    	jne    0x36376
  00a47: 26 	cmp    DWORD PTR [rip+0xffffffffffff2f16],0x26        # 0xffff3964
  00a4e:    	jne    0x36376
  00a54:    	mov    esi,DWORD PTR [rip+0xffa]        # 0x1a54
  00a5a:    	cmp    esi,0xffffffff
  00a5d:    	je     0x3639f
  00a63:    	cmp    WORD PTR [rdi+0x2],0x3
  00a68:    	jne    0xa81
  00a6e:    	cmp    esi,0x6
  00a71:    	jge    0xa81
  00a77:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a7c:    	jmp    0xac3
  00a81:    	sub    rsp,0x20
  00a85:    	movq   QWORD PTR [rsp],xmm3
  00a8a:    	movq   QWORD PTR [rsp+0x8],xmm5
  00a90:    	movq   QWORD PTR [rsp+0x10],xmm6
  00a96:    	movq   QWORD PTR [rsp+0x18],xmm7
  00a9c: 78 	movabs rax,0x557860b3bf40
  00aa6:    	call   rax
  00aa8:    	movq   xmm3,QWORD PTR [rsp]
  00aad:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00ab3:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00ab9:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00abf:    	add    rsp,0x20
  00ac3: ff 	mov    QWORD PTR [r14-0x88],rax
:00047 
:00048 %11 = %11.call x()                   [Vec]
  00aca: ff 	mov    rdi,QWORD PTR [r14-0x88]
  00ad1: 00 	test   rdi,0x7
  00ad8:    	jne    0x363fe
  00ade:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00ae2:    	jne    0x363fe
  00ae8: 26 	cmp    DWORD PTR [rip+0xffffffffffff2e75],0x26        # 0xffff3964
  00aef:    	jne    0x363fe
  00af5:    	mov    esi,DWORD PTR [rip+0xf61]        # 0x1a5c
  00afb:    	cmp    esi,0xffffffff
  00afe:    	je     0x36427
  00b04:    	cmp    WORD PTR [rdi+0x2],0x3
  00b09:    	jne    0xb22
  00b0f:    	cmp    esi,0x6
  00b12:    	jge    0xb22
  00b18:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b1d:    	jmp    0xb64
  00b22:    	sub    rsp,0x20
  00b26:    	movq   QWORD PTR [rsp],xmm3
  00b2b:    	movq   QWORD PTR [rsp+0x8],xmm5
  00b31:    	movq   QWORD PTR [rsp+0x10],xmm6
  00b37:    	movq   QWORD PTR [rsp+0x18],xmm7
  00b3d: 78 	movabs rax,0x557860b3bf40
  00b47:    	call   rax
  00b49:    	movq   xmm3,QWORD PTR [rsp]
  00b4e:    	movq   xmm5,QWORD PTR [rsp+0x8]
  00b54:    	movq   xmm6,QWORD PTR [rsp+0x10]
  00b5a:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00b60:    	add    rsp,0x20
  00b64: ff 	mov    QWORD PTR [r14-0x88],rax
:00049 
:00050 %11 = %11 * %7                       [Float][Float]
  00b6b: ff 	mov    rdi,QWORD PTR [r14-0x88]
  00b72: 00 	test   rdi,0x1
  00b79:    	jne    0x36486
  00b7f: 00 	test   rdi,0x2
  00b86:    	je     0xbc2
  00b8c:    	xorps  xmm2,xmm2
  00b8f: 00 	movabs rax,0x8000000000000002
  00b99:    	cmp    rdi,rax
  00b9c:    	je     0xbd4
  00ba2:    	mov    rax,rdi
  00ba5:    	sar    rax,0x3f
  00ba9:    	add    rax,0x2
  00bad:    	and    rdi,0xfffffffffffffffc
  00bb1:    	or     rdi,rax
  00bb4:    	rol    rdi,0x3d
  00bb8:    	movq   xmm2,rdi
  00bbd:    	jmp    0xbd4
  00bc2:    	call   0xffff0525
  00bc7:    	test   rax,rax
  00bca:    	je     0x36486
  00bd0:    	movq   xmm2,xmm0
  00bd4:    	mulsd  xmm2,xmm3
:00051 %10 = %10 + %11                      [Float][Float]
  00bd8:    	mov    rdi,QWORD PTR [r14-0x80]
  00bdc: 00 	test   rdi,0x1
  00be3:    	jne    0x364af
  00be9: 00 	test   rdi,0x2
  00bf0:    	je     0xc2c
  00bf6:    	xorps  xmm4,xmm4
  00bf9: 00 	movabs rax,0x8000000000000002
  00c03:    	cmp    rdi,rax
  00c06:    	je     0xc3e
  00c0c:    	mov    rax,rdi
  00c0f:    	sar    rax,0x3f
  00c13:    	add    rax,0x2
  00c17:    	and    rdi,0xfffffffffffffffc
  00c1b:    	or     rdi,rax
  00c1e:    	rol    rdi,0x3d
  00c22:    	movq   xmm4,rdi
  00c27:    	jmp    0xc3e
  00c2c:    	call   0xffff0525
  00c31:    	test   rax,rax
  00c34:    	je     0x364af
  00c3a:    	movq   xmm4,xmm0
  00c3e:    	addsd  xmm4,xmm2
:00052 %11 = %1.call org()                  [Ray]
  00c42:    	mov    rdi,QWORD PTR [r14-0x38]
  00c46: 00 	test   rdi,0x7
  00c4d:    	jne    0x364e8
  00c53:    	cmp    DWORD PTR [rdi+0x4],0x31
  00c57:    	jne    0x364e8
  00c5d: 26 	cmp    DWORD PTR [rip+0xffffffffffff2d00],0x26        # 0xffff3964
  00c64:    	jne    0x364e8
  00c6a:    	mov    esi,DWORD PTR [rip+0xdf4]        # 0x1a64
  00c70:    	cmp    esi,0xffffffff
  00c73:    	je     0x3651e
  00c79:    	cmp    WORD PTR [rdi+0x2],0x3
  00c7e:    	jne    0xc97
  00c84:    	cmp    esi,0x6
  00c87:    	jge    0xc97
  00c8d:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c92:    	jmp    0xce5
  00c97:    	sub    rsp,0x30
  00c9b:    	movq   QWORD PTR [rsp],xmm3
  00ca0:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ca6:    	movq   QWORD PTR [rsp+0x10],xmm5
  00cac:    	movq   QWORD PTR [rsp+0x18],xmm6
  00cb2:    	movq   QWORD PTR [rsp+0x20],xmm7
  00cb8: 78 	movabs rax,0x557860b3bf40
  00cc2:    	call   rax
  00cc4:    	movq   xmm3,QWORD PTR [rsp]
  00cc9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ccf:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00cd5:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00cdb:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00ce1:    	add    rsp,0x30
  00ce5: ff 	mov    QWORD PTR [r14-0x88],rax
:00053 
:00054 %11 = %11.call y()                   [Vec]
  00cec: ff 	mov    rdi,QWORD PTR [r14-0x88]
  00cf3: 00 	test   rdi,0x7
  00cfa:    	jne    0x36589
  00d00:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00d04:    	jne    0x36589
  00d0a: 26 	cmp    DWORD PTR [rip+0xffffffffffff2c53],0x26        # 0xffff3964
  00d11:    	jne    0x36589
  00d17:    	mov    esi,DWORD PTR [rip+0xd4f]        # 0x1a6c
  00d1d:    	cmp    esi,0xffffffff
  00d20:    	je     0x365bf
  00d26:    	cmp    WORD PTR [rdi+0x2],0x3
  00d2b:    	jne    0xd44
  00d31:    	cmp    esi,0x6
  00d34:    	jge    0xd44
  00d3a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d3f:    	jmp    0xd92
  00d44:    	sub    rsp,0x30
  00d48:    	movq   QWORD PTR [rsp],xmm3
  00d4d:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d53:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d59:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d5f:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d65: 78 	movabs rax,0x557860b3bf40
  00d6f:    	call   rax
  00d71:    	movq   xmm3,QWORD PTR [rsp]
  00d76:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00d7c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00d82:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00d88:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00d8e:    	add    rsp,0x30
  00d92: ff 	mov    QWORD PTR [r14-0x88],rax
:00055 
:00056 %12 = %1.call dir()                  [Ray]
  00d99:    	mov    rdi,QWORD PTR [r14-0x38]
  00d9d: 00 	test   rdi,0x7
  00da4:    	jne    0x3662a
  00daa:    	cmp    DWORD PTR [rdi+0x4],0x31
  00dae:    	jne    0x3662a
  00db4: 26 	cmp    DWORD PTR [rip+0xffffffffffff2ba9],0x26        # 0xffff3964
  00dbb:    	jne    0x3662a
  00dc1:    	mov    esi,DWORD PTR [rip+0xcad]        # 0x1a74
  00dc7:    	cmp    esi,0xffffffff
  00dca:    	je     0x36660
  00dd0:    	cmp    WORD PTR [rdi+0x2],0x3
  00dd5:    	jne    0xdee
  00ddb:    	cmp    esi,0x6
  00dde:    	jge    0xdee
  00de4:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00de9:    	jmp    0xe3c
  00dee:    	sub    rsp,0x30
  00df2:    	movq   QWORD PTR [rsp],xmm3
  00df7:    	movq   QWORD PTR [rsp+0x8],xmm4
  00dfd:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e03:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e09:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e0f: 78 	movabs rax,0x557860b3bf40
  00e19:    	call   rax
  00e1b:    	movq   xmm3,QWORD PTR [rsp]
  00e20:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e26:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e2c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e32:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e38:    	add    rsp,0x30
  00e3c: ff 	mov    QWORD PTR [r14-0x90],rax
:00057 
:00058 %12 = %12.call y()                   [Vec]
  00e43: ff 	mov    rdi,QWORD PTR [r14-0x90]
  00e4a: 00 	test   rdi,0x7
  00e51:    	jne    0x366cb
  00e57:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00e5b:    	jne    0x366cb
  00e61: 26 	cmp    DWORD PTR [rip+0xffffffffffff2afc],0x26        # 0xffff3964
  00e68:    	jne    0x366cb
  00e6e:    	mov    esi,DWORD PTR [rip+0xc08]        # 0x1a7c
  00e74:    	cmp    esi,0xffffffff
  00e77:    	je     0x36701
  00e7d:    	cmp    WORD PTR [rdi+0x2],0x3
  00e82:    	jne    0xe9b
  00e88:    	cmp    esi,0x6
  00e8b:    	jge    0xe9b
  00e91:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e96:    	jmp    0xee9
  00e9b:    	sub    rsp,0x30
  00e9f:    	movq   QWORD PTR [rsp],xmm3
  00ea4:    	movq   QWORD PTR [rsp+0x8],xmm4
  00eaa:    	movq   QWORD PTR [rsp+0x10],xmm5
  00eb0:    	movq   QWORD PTR [rsp+0x18],xmm6
  00eb6:    	movq   QWORD PTR [rsp+0x20],xmm7
  00ebc: 78 	movabs rax,0x557860b3bf40
  00ec6:    	call   rax
  00ec8:    	movq   xmm3,QWORD PTR [rsp]
  00ecd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00ed3:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ed9:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00edf:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00ee5:    	add    rsp,0x30
  00ee9: ff 	mov    QWORD PTR [r14-0x90],rax
:00059 
:00060 %12 = %12 * %7                       [Float][Float]
  00ef0: ff 	mov    rdi,QWORD PTR [r14-0x90]
  00ef7: 00 	test   rdi,0x1
  00efe:    	jne    0x3676c
  00f04: 00 	test   rdi,0x2
  00f0b:    	je     0xf47
  00f11:    	xorps  xmm2,xmm2
  00f14: 00 	movabs rax,0x8000000000000002
  00f1e:    	cmp    rdi,rax
  00f21:    	je     0xf59
  00f27:    	mov    rax,rdi
  00f2a:    	sar    rax,0x3f
  00f2e:    	add    rax,0x2
  00f32:    	and    rdi,0xfffffffffffffffc
  00f36:    	or     rdi,rax
  00f39:    	rol    rdi,0x3d
  00f3d:    	movq   xmm2,rdi
  00f42:    	jmp    0xf59
  00f47:    	call   0xffff0525
  00f4c:    	test   rax,rax
  00f4f:    	je     0x3676c
  00f55:    	movq   xmm2,xmm0
  00f59:    	mulsd  xmm2,xmm3
:00061 %11 = %11 + %12                      [Float][Float]
  00f5d: ff 	mov    rdi,QWORD PTR [r14-0x88]
  00f64: 00 	test   rdi,0x1
  00f6b:    	jne    0x367a2
  00f71: 00 	test   rdi,0x2
  00f78:    	je     0xfb5
  00f7e:    	xorps  xmm8,xmm8
  00f82: 00 	movabs rax,0x8000000000000002
  00f8c:    	cmp    rdi,rax
  00f8f:    	je     0xfc8
  00f95:    	mov    rax,rdi
  00f98:    	sar    rax,0x3f
  00f9c:    	add    rax,0x2
  00fa0:    	and    rdi,0xfffffffffffffffc
  00fa4:    	or     rdi,rax
  00fa7:    	rol    rdi,0x3d
  00fab:    	movq   xmm8,rdi
  00fb0:    	jmp    0xfc8
  00fb5:    	call   0xffff0525
  00fba:    	test   rax,rax
  00fbd:    	je     0x367a2
  00fc3:    	movq   xmm8,xmm0
  00fc8:    	addsd  xmm8,xmm2
:00062 %12 = %1.call org()                  [Ray]
  00fcd:    	mov    rdi,QWORD PTR [r14-0x38]
  00fd1: 00 	test   rdi,0x7
  00fd8:    	jne    0x367e8
  00fde:    	cmp    DWORD PTR [rdi+0x4],0x31
  00fe2:    	jne    0x367e8
  00fe8: 26 	cmp    DWORD PTR [rip+0xffffffffffff2975],0x26        # 0xffff3964
  00fef:    	jne    0x367e8
  00ff5:    	mov    esi,DWORD PTR [rip+0xa89]        # 0x1a84
  00ffb:    	cmp    esi,0xffffffff
  00ffe:    	je     0x3682f
  01004:    	cmp    WORD PTR [rdi+0x2],0x3
  01009:    	jne    0x1022
  0100f:    	cmp    esi,0x6
  01012:    	jge    0x1022
  01018:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0101d:    	jmp    0x107e
  01022:    	sub    rsp,0x30
  01026:    	movq   QWORD PTR [rsp],xmm3
  0102b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01031:    	movq   QWORD PTR [rsp+0x10],xmm5
  01037:    	movq   QWORD PTR [rsp+0x18],xmm6
  0103d:    	movq   QWORD PTR [rsp+0x20],xmm7
  01043: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0104a: 78 	movabs rax,0x557860b3bf40
  01054:    	call   rax
  01056:    	movq   xmm3,QWORD PTR [rsp]
  0105b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01061:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01067:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0106d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01073: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0107a:    	add    rsp,0x30
  0107e: ff 	mov    QWORD PTR [r14-0x90],rax
:00063 
:00064 %12 = %12.call z()                   [Vec]
  01085: ff 	mov    rdi,QWORD PTR [r14-0x90]
  0108c: 00 	test   rdi,0x7
  01093:    	jne    0x368a8
  01099:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0109d:    	jne    0x368a8
  010a3: 26 	cmp    DWORD PTR [rip+0xffffffffffff28ba],0x26        # 0xffff3964
  010aa:    	jne    0x368a8
  010b0:    	mov    esi,DWORD PTR [rip+0x9d6]        # 0x1a8c
  010b6:    	cmp    esi,0xffffffff
  010b9:    	je     0x368ef
  010bf:    	cmp    WORD PTR [rdi+0x2],0x3
  010c4:    	jne    0x10dd
  010ca:    	cmp    esi,0x6
  010cd:    	jge    0x10dd
  010d3:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  010d8:    	jmp    0x1139
  010dd:    	sub    rsp,0x30
  010e1:    	movq   QWORD PTR [rsp],xmm3
  010e6:    	movq   QWORD PTR [rsp+0x8],xmm4
  010ec:    	movq   QWORD PTR [rsp+0x10],xmm5
  010f2:    	movq   QWORD PTR [rsp+0x18],xmm6
  010f8:    	movq   QWORD PTR [rsp+0x20],xmm7
  010fe: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01105: 78 	movabs rax,0x557860b3bf40
  0110f:    	call   rax
  01111:    	movq   xmm3,QWORD PTR [rsp]
  01116:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0111c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01122:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01128:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0112e: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01135:    	add    rsp,0x30
  01139: ff 	mov    QWORD PTR [r14-0x90],rax
:00065 
:00066 %13 = %1.call dir()                  [Ray]
  01140:    	mov    rdi,QWORD PTR [r14-0x38]
  01144: 00 	test   rdi,0x7
  0114b:    	jne    0x36968
  01151:    	cmp    DWORD PTR [rdi+0x4],0x31
  01155:    	jne    0x36968
  0115b: 26 	cmp    DWORD PTR [rip+0xffffffffffff2802],0x26        # 0xffff3964
  01162:    	jne    0x36968
  01168:    	mov    esi,DWORD PTR [rip+0x926]        # 0x1a94
  0116e:    	cmp    esi,0xffffffff
  01171:    	je     0x369af
  01177:    	cmp    WORD PTR [rdi+0x2],0x3
  0117c:    	jne    0x1195
  01182:    	cmp    esi,0x6
  01185:    	jge    0x1195
  0118b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01190:    	jmp    0x11f1
  01195:    	sub    rsp,0x30
  01199:    	movq   QWORD PTR [rsp],xmm3
  0119e:    	movq   QWORD PTR [rsp+0x8],xmm4
  011a4:    	movq   QWORD PTR [rsp+0x10],xmm5
  011aa:    	movq   QWORD PTR [rsp+0x18],xmm6
  011b0:    	movq   QWORD PTR [rsp+0x20],xmm7
  011b6: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  011bd: 78 	movabs rax,0x557860b3bf40
  011c7:    	call   rax
  011c9:    	movq   xmm3,QWORD PTR [rsp]
  011ce:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011d4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011da:    	movq   xmm6,QWORD PTR [rsp+0x18]
  011e0:    	movq   xmm7,QWORD PTR [rsp+0x20]
  011e6: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  011ed:    	add    rsp,0x30
  011f1: ff 	mov    QWORD PTR [r14-0x98],rax
:00067 
:00068 %13 = %13.call z()                   [Vec]
  011f8: ff 	mov    rdi,QWORD PTR [r14-0x98]
  011ff: 00 	test   rdi,0x7
  01206:    	jne    0x36a28
  0120c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01210:    	jne    0x36a28
  01216: 26 	cmp    DWORD PTR [rip+0xffffffffffff2747],0x26        # 0xffff3964
  0121d:    	jne    0x36a28
  01223:    	mov    esi,DWORD PTR [rip+0x873]        # 0x1a9c
  01229:    	cmp    esi,0xffffffff
  0122c:    	je     0x36a6f
  01232:    	cmp    WORD PTR [rdi+0x2],0x3
  01237:    	jne    0x1250
  0123d:    	cmp    esi,0x6
  01240:    	jge    0x1250
  01246:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0124b:    	jmp    0x12ac
  01250:    	sub    rsp,0x30
  01254:    	movq   QWORD PTR [rsp],xmm3
  01259:    	movq   QWORD PTR [rsp+0x8],xmm4
  0125f:    	movq   QWORD PTR [rsp+0x10],xmm5
  01265:    	movq   QWORD PTR [rsp+0x18],xmm6
  0126b:    	movq   QWORD PTR [rsp+0x20],xmm7
  01271: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01278: 78 	movabs rax,0x557860b3bf40
  01282:    	call   rax
  01284:    	movq   xmm3,QWORD PTR [rsp]
  01289:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0128f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01295:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0129b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  012a1: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  012a8:    	add    rsp,0x30
  012ac: ff 	mov    QWORD PTR [r14-0x98],rax
:00069 
:00070 %13 = %13 * %7                       [Float][Float]
  012b3: ff 	mov    rdi,QWORD PTR [r14-0x98]
  012ba: 00 	test   rdi,0x1
  012c1:    	jne    0x36ae8
  012c7: 00 	test   rdi,0x2
  012ce:    	je     0x130a
  012d4:    	xorps  xmm2,xmm2
  012d7: 00 	movabs rax,0x8000000000000002
  012e1:    	cmp    rdi,rax
  012e4:    	je     0x131c
  012ea:    	mov    rax,rdi
  012ed:    	sar    rax,0x3f
  012f1:    	add    rax,0x2
  012f5:    	and    rdi,0xfffffffffffffffc
  012f9:    	or     rdi,rax
  012fc:    	rol    rdi,0x3d
  01300:    	movq   xmm2,rdi
  01305:    	jmp    0x131c
  0130a:    	call   0xffff0525
  0130f:    	test   rax,rax
  01312:    	je     0x36ae8
  01318:    	movq   xmm2,xmm0
  0131c:    	mulsd  xmm2,xmm3
:00071 %12 = %12 + %13                      [Float][Float]
  01320: ff 	mov    rdi,QWORD PTR [r14-0x90]
  01327: 00 	test   rdi,0x1
  0132e:    	jne    0x36b2f
  01334: 00 	test   rdi,0x2
  0133b:    	je     0x1378
  01341:    	xorps  xmm9,xmm9
  01345: 00 	movabs rax,0x8000000000000002
  0134f:    	cmp    rdi,rax
  01352:    	je     0x138b
  01358:    	mov    rax,rdi
  0135b:    	sar    rax,0x3f
  0135f:    	add    rax,0x2
  01363:    	and    rdi,0xfffffffffffffffc
  01367:    	or     rdi,rax
  0136a:    	rol    rdi,0x3d
  0136e:    	movq   xmm9,rdi
  01373:    	jmp    0x138b
  01378:    	call   0xffff0525
  0137d:    	test   rax,rax
  01380:    	je     0x36b2f
  01386:    	movq   xmm9,xmm0
  0138b:    	addsd  xmm9,xmm2
:00072 %9 = %9.call new(%10; 3)             [#<Class:Vec>]
  01390:    	movq   xmm0,xmm4
  01394:    	call   0xffff0649
  01399:    	mov    QWORD PTR [r14-0x80],rax
  0139d:    	movq   xmm0,xmm8
  013a2:    	call   0xffff0649
  013a7: ff 	mov    QWORD PTR [r14-0x88],rax
  013ae:    	movq   xmm0,xmm9
  013b3:    	call   0xffff0649
  013b8: ff 	mov    QWORD PTR [r14-0x90],rax
  013bf:    	mov    rdi,QWORD PTR [r14-0x78]
  013c3: 00 	test   rdi,0x7
  013ca:    	jne    0x36b86
  013d0:    	cmp    DWORD PTR [rdi+0x4],0x2c
  013d4:    	jne    0x36b86
  013da: 26 	cmp    DWORD PTR [rip+0xffffffffffff2583],0x26        # 0xffff3964
  013e1:    	jne    0x36b86
  013e7: 00 	mov    r9,0x0
  013ee:    	sub    rsp,0x40
  013f2:    	movq   QWORD PTR [rsp],xmm2
  013f7:    	movq   QWORD PTR [rsp+0x8],xmm3
  013fd:    	movq   QWORD PTR [rsp+0x10],xmm4
  01403:    	movq   QWORD PTR [rsp+0x18],xmm5
  01409:    	movq   QWORD PTR [rsp+0x20],xmm6
  0140f:    	movq   QWORD PTR [rsp+0x28],xmm7
  01415: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0141c: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01423:    	mov    rdx,rdi
  01426:    	mov    QWORD PTR [rsp-0x40],rcx
  0142b: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01434:    	lea    rcx,[r14-0x80]
  01438: 00 	mov    r8,0x3
  0143f:    	mov    rsi,QWORD PTR [rbx]
  01442:    	mov    QWORD PTR [rsp-0x18],rsi
  01447:    	lea    rsi,[rsp-0x18]
  0144c:    	mov    QWORD PTR [rbx],rsi
  0144f:    	lea    r14,[rsp-0x10]
  01454:    	mov    QWORD PTR [rsp-0x20],r14
  01459:    	call   0x36bbf
  0145e:    	lea    r14,[rbp-0x8]
  01462:    	mov    QWORD PTR [rbx],r14
  01465:    	mov    r14,QWORD PTR [rbp-0x10]
  01469:    	movq   xmm2,QWORD PTR [rsp]
  0146e:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01474:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0147a:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01480:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01486:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0148c: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01493: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0149a:    	add    rsp,0x40
  0149e: 78 	movabs r13,0x557861f78b20
  014a8:    	test   rax,rax
  014ab:    	je     0xffff04cc
  014b1:    	mov    QWORD PTR [r14-0x78],rax
:00073 
:00074 _ = %2.call pl=(%9; 1)               [Isect]
  014b5:    	mov    rdi,QWORD PTR [r14-0x40]
  014b9: 00 	test   rdi,0x7
  014c0:    	jne    0x36bf1
  014c6:    	cmp    DWORD PTR [rdi+0x4],0x33
  014ca:    	jne    0x36bf1
  014d0: 26 	cmp    DWORD PTR [rip+0xffffffffffff248d],0x26        # 0xffff3964
  014d7:    	jne    0x36bf1
  014dd:    	mov    esi,DWORD PTR [rip+0x5c1]        # 0x1aa4
  014e3:    	cmp    esi,0xffffffff
  014e6:    	je     0x36c2a
  014ec:    	cmp    WORD PTR [rdi+0x2],0x3
  014f1:    	jne    0x150e
  014f7:    	cmp    esi,0x6
  014fa:    	jge    0x150e
  01500:    	mov    rax,QWORD PTR [r14-0x78]
  01504:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01509:    	jmp    0x159b
  0150e:    	sub    rsp,0x40
  01512:    	movq   QWORD PTR [rsp],xmm2
  01517:    	movq   QWORD PTR [rsp+0x8],xmm3
  0151d:    	movq   QWORD PTR [rsp+0x10],xmm4
  01523:    	movq   QWORD PTR [rsp+0x18],xmm5
  01529:    	movq   QWORD PTR [rsp+0x20],xmm6
  0152f:    	movq   QWORD PTR [rsp+0x28],xmm7
  01535: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0153c: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01543:    	mov    rdx,QWORD PTR [r14-0x78]
  01547: 78 	movabs rax,0x557860b3c1c0
  01551:    	call   rax
  01553:    	movq   xmm2,QWORD PTR [rsp]
  01558:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0155e:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01564:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0156a:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01570:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01576: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0157d: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01584:    	add    rsp,0x40
  01588: 78 	movabs r13,0x557861f78b40
  01592:    	test   rax,rax
  01595:    	je     0xffff04cc
:00075 
:00076 %9 = %2.call pl()                    [Isect]
  0159b:    	mov    rdi,QWORD PTR [r14-0x40]
  0159f: 00 	test   rdi,0x7
  015a6:    	jne    0x36cc4
  015ac:    	cmp    DWORD PTR [rdi+0x4],0x33
  015b0:    	jne    0x36cc4
  015b6: 26 	cmp    DWORD PTR [rip+0xffffffffffff23a7],0x26        # 0xffff3964
  015bd:    	jne    0x36cc4
  015c3:    	mov    esi,DWORD PTR [rip+0x4e3]        # 0x1aac
  015c9:    	cmp    esi,0xffffffff
  015cc:    	je     0x36cfd
  015d2:    	cmp    WORD PTR [rdi+0x2],0x3
  015d7:    	jne    0x15f0
  015dd:    	cmp    esi,0x6
  015e0:    	jge    0x15f0
  015e6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  015eb:    	jmp    0x1666
  015f0:    	sub    rsp,0x40
  015f4:    	movq   QWORD PTR [rsp],xmm2
  015f9:    	movq   QWORD PTR [rsp+0x8],xmm3
  015ff:    	movq   QWORD PTR [rsp+0x10],xmm4
  01605:    	movq   QWORD PTR [rsp+0x18],xmm5
  0160b:    	movq   QWORD PTR [rsp+0x20],xmm6
  01611:    	movq   QWORD PTR [rsp+0x28],xmm7
  01617: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0161e: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01625: 78 	movabs rax,0x557860b3bf40
  0162f:    	call   rax
  01631:    	movq   xmm2,QWORD PTR [rsp]
  01636:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0163c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01642:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01648:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0164e:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01654: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0165b: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01662:    	add    rsp,0x40
  01666:    	mov    QWORD PTR [r14-0x78],rax
:00077 
:00078 %10 = @center: Sphere[IvarId(0)]
  0166a:    	mov    rdi,QWORD PTR [r14-0x30]
  0166e:    	mov    rax,QWORD PTR [rdi+0x10]
  01672:    	mov    QWORD PTR [r14-0x80],rax
:00079 %8 = %9.call vsub(%10; 1)            [Vec]
  01676:    	mov    rdi,QWORD PTR [r14-0x78]
  0167a: 00 	test   rdi,0x7
  01681:    	jne    0x36d90
  01687:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0168b:    	jne    0x36d90
  01691: 26 	cmp    DWORD PTR [rip+0xffffffffffff22cc],0x26        # 0xffff3964
  01698:    	jne    0x36d90
  0169e:    	sub    rsp,0x40
  016a2:    	movq   QWORD PTR [rsp],xmm2
  016a7:    	movq   QWORD PTR [rsp+0x8],xmm3
  016ad:    	movq   QWORD PTR [rsp+0x10],xmm5
  016b3:    	movq   QWORD PTR [rsp+0x18],xmm6
  016b9:    	movq   QWORD PTR [rsp+0x20],xmm7
  016bf: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  016c6: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  016cd: 00 	cmp    DWORD PTR [rip+0xffffffffffff2294],0x0        # 0xffff3968
  016d4:    	je     0x16ec
  016da:    	mov    rdi,r12
  016dd:    	mov    rsi,QWORD PTR [rbx]
  016e0: 78 	movabs rax,0x557860afd140
  016ea:    	call   rax
  016ec: 00 	mov    QWORD PTR [rsp-0x28],0x0
  016f5:    	mov    rax,QWORD PTR [r14-0x78]
  016f9:    	mov    QWORD PTR [rsp-0x40],rax
  016fe: 00 	mov    rdi,0x1
  01705:    	mov    rax,QWORD PTR [r14-0x80]
  01709:    	mov    QWORD PTR [rsp-0x48],rax
  0170e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01717: 07 	movabs rax,0x100070000005b
  01721:    	mov    QWORD PTR [rsp-0x30],rax
  01726: 78 	movabs r13,0x557861ff1450
  01730:    	mov    rsi,QWORD PTR [rbx]
  01733:    	mov    QWORD PTR [rsp-0x18],rsi
  01738:    	lea    rsi,[rsp-0x18]
  0173d:    	mov    QWORD PTR [rbx],rsi
  01740:    	lea    r14,[rsp-0x10]
  01745:    	mov    QWORD PTR [rsp-0x20],r14
  0174a:    	call   0xffff45b2
  0174f:    	lea    r14,[rbp-0x8]
  01753:    	mov    QWORD PTR [rbx],r14
  01756:    	mov    r14,QWORD PTR [rbp-0x10]
  0175a:    	movq   xmm2,QWORD PTR [rsp]
  0175f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01765:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0176b:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01771:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01777: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0177e: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01785:    	add    rsp,0x40
  01789: 78 	movabs r13,0x557861f78b90
  01793:    	test   rax,rax
  01796:    	je     0xffff04cc
  0179c:    	mov    QWORD PTR [r14-0x70],rax
:00080 
:00081 %9 = %8.call vnormalize()            [Vec]
  017a0:    	mov    rdi,QWORD PTR [r14-0x70]
  017a4: 00 	test   rdi,0x7
  017ab:    	jne    0x36dc9
  017b1:    	cmp    DWORD PTR [rdi+0x4],0x2b
  017b5:    	jne    0x36dc9
  017bb: 26 	cmp    DWORD PTR [rip+0xffffffffffff21a2],0x26        # 0xffff3964
  017c2:    	jne    0x36dc9
  017c8:    	sub    rsp,0x40
  017cc:    	movq   QWORD PTR [rsp],xmm2
  017d1:    	movq   QWORD PTR [rsp+0x8],xmm3
  017d7:    	movq   QWORD PTR [rsp+0x10],xmm5
  017dd:    	movq   QWORD PTR [rsp+0x18],xmm6
  017e3:    	movq   QWORD PTR [rsp+0x20],xmm7
  017e9: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  017f0: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  017f7: 00 	cmp    DWORD PTR [rip+0xffffffffffff216a],0x0        # 0xffff3968
  017fe:    	je     0x1816
  01804:    	mov    rdi,r12
  01807:    	mov    rsi,QWORD PTR [rbx]
  0180a: 78 	movabs rax,0x557860afd140
  01814:    	call   rax
  01816: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0181f:    	mov    rax,QWORD PTR [r14-0x70]
  01823:    	mov    QWORD PTR [rsp-0x40],rax
  01828: 00 	mov    rdi,0x0
  0182f: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01838: 07 	movabs rax,0x100070000005f
  01842:    	mov    QWORD PTR [rsp-0x30],rax
  01847: 78 	movabs r13,0x557861f90e80
  01851:    	mov    rsi,QWORD PTR [rbx]
  01854:    	mov    QWORD PTR [rsp-0x18],rsi
  01859:    	lea    rsi,[rsp-0x18]
  0185e:    	mov    QWORD PTR [rbx],rsi
  01861:    	lea    r14,[rsp-0x10]
  01866:    	mov    QWORD PTR [rsp-0x20],r14
  0186b:    	call   0xffff422b
  01870:    	lea    r14,[rbp-0x8]
  01874:    	mov    QWORD PTR [rbx],r14
  01877:    	mov    r14,QWORD PTR [rbp-0x10]
  0187b:    	movq   xmm2,QWORD PTR [rsp]
  01880:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01886:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0188c:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01892:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01898: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0189f: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  018a6:    	add    rsp,0x40
  018aa: 78 	movabs r13,0x557861f78bb0
  018b4:    	test   rax,rax
  018b7:    	je     0xffff04cc
  018bd:    	mov    QWORD PTR [r14-0x78],rax
:00082 
:00083 _ = %2.call n=(%9; 1)                [Isect]
  018c1:    	mov    rdi,QWORD PTR [r14-0x40]
  018c5: 00 	test   rdi,0x7
  018cc:    	jne    0x36e02
  018d2:    	cmp    DWORD PTR [rdi+0x4],0x33
  018d6:    	jne    0x36e02
  018dc: 26 	cmp    DWORD PTR [rip+0xffffffffffff2081],0x26        # 0xffff3964
  018e3:    	jne    0x36e02
  018e9:    	mov    esi,DWORD PTR [rip+0x1c5]        # 0x1ab4
  018ef:    	cmp    esi,0xffffffff
  018f2:    	je     0x36e3b
  018f8:    	cmp    WORD PTR [rdi+0x2],0x3
  018fd:    	jne    0x191a
  01903:    	cmp    esi,0x6
  01906:    	jge    0x191a
  0190c:    	mov    rax,QWORD PTR [r14-0x78]
  01910:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01915:    	jmp    0x199b
  0191a:    	sub    rsp,0x40
  0191e:    	movq   QWORD PTR [rsp],xmm2
  01923:    	movq   QWORD PTR [rsp+0x8],xmm3
  01929:    	movq   QWORD PTR [rsp+0x10],xmm5
  0192f:    	movq   QWORD PTR [rsp+0x18],xmm6
  01935:    	movq   QWORD PTR [rsp+0x20],xmm7
  0193b: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01942: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  01949:    	mov    rdx,QWORD PTR [r14-0x78]
  0194d: 78 	movabs rax,0x557860b3c1c0
  01957:    	call   rax
  01959:    	movq   xmm2,QWORD PTR [rsp]
  0195e:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01964:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0196a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01970:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01976: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0197d: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01984:    	add    rsp,0x40
  01988: 78 	movabs r13,0x557861f78bd0
  01992:    	test   rax,rax
  01995:    	je     0xffff04cc
:00084 
:00085 br =>:00086
  0199b:    	jmp    0x36f83
:00086 br =>:00087
  019a0:    	jmp    0x37015
:00087 %9 = nil
  019a5: 00 	mov    QWORD PTR [r14-0x78],0x4
:00088 ret %9
  019ad:    	mov    rax,QWORD PTR [r14-0x78]
  019b1:    	leave  
  019b2:    	ret    
==> start whole compile: <unnamed> FuncId(105) self_class:Scene start:[00000] bytecode:0x557861fe00f0
<== finished compile. elapsed:20.4µs
offset:Pos(71184) code: 257 bytes  data: 0 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x50
  0000b: cmp    edx,0x1
  0000e: jge    0x3a
  00014: mov    eax,0x1
  00019: sub    eax,edx
  0001b: test   rax,rax
  0001e: je     0x3a
  00024: lea    rdi,[r14-0x40]
  00028: mov    QWORD PTR [rdi+rax*8],0x4
  00030: sub    rax,0x1
  00034: jne    0x28
  0003a: mov    QWORD PTR [r14-0x40],0x4
  00042: mov    QWORD PTR [r14-0x48],0x4
  0004a: mov    rdi,QWORD PTR [r14-0x30]
  0004e: test   rdi,0x7
  00055: jne    0x355a3
  0005b: cmp    DWORD PTR [rdi+0x4],0x35
  0005f: jne    0x355a3
:00000 init_block reg:4 arg:1 pos:1 req:1 block:0 stack_offset:5
:00001 %2 = dynvar(1, %3)
  00065: mov    rax,QWORD PTR [r14-0x18]
  00069: mov    rax,QWORD PTR [rax-0x30]
  0006d: mov    QWORD PTR [r14-0x40],rax
:00002 %3 = literal[7012353]
  00071: mov    rax,0xd60003
  00078: mov    QWORD PTR [r14-0x48],rax
:00003 %2 = %2.call times(&%3)              [Integer]
  0007c: mov    rdi,QWORD PTR [r14-0x40]
  00080: test   rdi,0x1
  00087: je     0x355b2
  0008d: cmp    DWORD PTR [rip+0xffffffffffff1e18],0x26        # 0xffff1eac
  00094: jne    0x355b2
  0009a: mov    r9,QWORD PTR [r14-0x48]
  0009e: mov    rdx,rdi
  000a1: mov    QWORD PTR [rsp-0x40],rcx
  000a6: mov    QWORD PTR [rsp-0x28],0x0
  000af: lea    rcx,[r14-0x50]
  000b3: mov    r8,0x0
  000ba: mov    rsi,QWORD PTR [rbx]
  000bd: mov    QWORD PTR [rsp-0x18],rsi
  000c2: lea    rsi,[rsp-0x18]
  000c7: mov    QWORD PTR [rbx],rsi
  000ca: lea    r14,[rsp-0x10]
  000cf: mov    QWORD PTR [rsp-0x20],r14
  000d4: call   0x355c1
  000d9: lea    r14,[rbp-0x8]
  000dd: mov    QWORD PTR [rbx],r14
  000e0: mov    r14,QWORD PTR [rbp-0x10]
  000e4: movabs r13,0x557861fe0140
  000ee: test   rax,rax
  000f1: je     0xfffeea14
  000f7: mov    QWORD PTR [r14-0x40],rax
:00004 
:00005 ret %2
  000fb: mov    rax,QWORD PTR [r14-0x40]
  000ff: leave  
  00100: ret    
==> start whole compile: vcross FuncId(92) self_class:Vec start:[00000] bytecode:0x557861f71470
<== finished compile. elapsed:48.5µs
offset:Pos(71441) code: 2436 bytes  data: 83 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0x70
  0000b: cmp    edx,0x1
  0000e: jne    0x354f2
  00014: mov    rax,0x4
  0001b: mov    QWORD PTR [r14-0x40],rax
  0001f: mov    QWORD PTR [r14-0x48],rax
  00023: mov    QWORD PTR [r14-0x50],rax
  00027: mov    QWORD PTR [r14-0x58],rax
  0002b: mov    QWORD PTR [r14-0x60],rax
  0002f: mov    QWORD PTR [r14-0x68],rax
  00033: mov    rdi,QWORD PTR [r14-0x30]
  00037: test   rdi,0x7
  0003e: jne    0x35501
  00044: cmp    DWORD PTR [rdi+0x4],0x2b
  00048: jne    0x35501
:00000 init_method reg:8 arg:1 pos:1 req:1 block:0 stack_offset:7
:00001 %2 = const[Vec]                      [Vec]
  0004e: mov    rax,QWORD PTR [rip+0xffffffffffff1d6a]        # 0xffff1dbf
  00055: cmp    rax,QWORD PTR [rip+0x943]        # 0x99f
  0005c: jne    0x35510
  00062: mov    rax,QWORD PTR [rip+0x926]        # 0x98f
  00069: mov    QWORD PTR [r14-0x40],rax
:00002 %3 = @y: Vec[IvarId(1)]
  0006d: mov    rdi,QWORD PTR [r14-0x30]
  00071: mov    rax,QWORD PTR [rdi+0x18]
  00075: mov    QWORD PTR [r14-0x48],rax
:00003 %4 = %1.call z()                     [Vec]
  00079: mov    rdi,QWORD PTR [r14-0x38]
  0007d: test   rdi,0x7
  00084: jne    0x35556
  0008a: cmp    DWORD PTR [rdi+0x4],0x2b
  0008e: jne    0x35556
  00094: cmp    DWORD PTR [rip+0xffffffffffff1d10],0x26        # 0xffff1dab
  0009b: jne    0x35556
  000a1: mov    esi,DWORD PTR [rip+0x904]        # 0x9ab
  000a7: cmp    esi,0xffffffff
  000aa: je     0x35565
  000b0: cmp    WORD PTR [rdi+0x2],0x3
  000b5: jne    0xce
  000bb: cmp    esi,0x6
  000be: jge    0xce
  000c4: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000c9: jmp    0xda
  000ce: movabs rax,0x557860b3bf40
  000d8: call   rax
  000da: mov    QWORD PTR [r14-0x50],rax
:00004 
:00005 %3 = %3 * %4                         [Float][Float]
  000de: mov    rdi,QWORD PTR [r14-0x48]
  000e2: test   rdi,0x1
  000e9: jne    0x3558e
  000ef: test   rdi,0x2
  000f6: je     0x132
  000fc: xorps  xmm2,xmm2
  000ff: movabs rax,0x8000000000000002
  00109: cmp    rdi,rax
  0010c: je     0x144
  00112: mov    rax,rdi
  00115: sar    rax,0x3f
  00119: add    rax,0x2
  0011d: and    rdi,0xfffffffffffffffc
  00121: or     rdi,rax
  00124: rol    rdi,0x3d
  00128: movq   xmm2,rdi
  0012d: jmp    0x144
  00132: call   0xfffee96c
  00137: test   rax,rax
  0013a: je     0x3558e
  00140: movq   xmm2,xmm0
  00144: mov    rdi,QWORD PTR [r14-0x50]
  00148: test   rdi,0x1
  0014f: jne    0x3559d
  00155: test   rdi,0x2
  0015c: je     0x198
  00162: xorps  xmm3,xmm3
  00165: movabs rax,0x8000000000000002
  0016f: cmp    rdi,rax
  00172: je     0x1aa
  00178: mov    rax,rdi
  0017b: sar    rax,0x3f
  0017f: add    rax,0x2
  00183: and    rdi,0xfffffffffffffffc
  00187: or     rdi,rax
  0018a: rol    rdi,0x3d
  0018e: movq   xmm3,rdi
  00193: jmp    0x1aa
  00198: call   0xfffee96c
  0019d: test   rax,rax
  001a0: je     0x3559d
  001a6: movq   xmm3,xmm0
  001aa: mulsd  xmm2,xmm3
:00006 %4 = @z: Vec[IvarId(2)]
  001ae: mov    rdi,QWORD PTR [r14-0x30]
  001b2: mov    rax,QWORD PTR [rdi+0x20]
  001b6: mov    QWORD PTR [r14-0x50],rax
:00007 %5 = %1.call y()                     [Vec]
  001ba: mov    rdi,QWORD PTR [r14-0x38]
  001be: test   rdi,0x7
  001c5: jne    0x355ac
  001cb: cmp    DWORD PTR [rdi+0x4],0x2b
  001cf: jne    0x355ac
  001d5: cmp    DWORD PTR [rip+0xffffffffffff1bcf],0x26        # 0xffff1dab
  001dc: jne    0x355ac
  001e2: mov    esi,DWORD PTR [rip+0x7cb]        # 0x9b3
  001e8: cmp    esi,0xffffffff
  001eb: je     0x355c8
  001f1: cmp    WORD PTR [rdi+0x2],0x3
  001f6: jne    0x20f
  001fc: cmp    esi,0x6
  001ff: jge    0x20f
  00205: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0020a: jmp    0x22d
  0020f: sub    rsp,0x10
  00213: movq   QWORD PTR [rsp],xmm2
  00218: movabs rax,0x557860b3bf40
  00222: call   rax
  00224: movq   xmm2,QWORD PTR [rsp]
  00229: add    rsp,0x10
  0022d: mov    QWORD PTR [r14-0x58],rax
:00008 
:00009 %4 = %4 * %5                         [Float][Float]
  00231: mov    rdi,QWORD PTR [r14-0x50]
  00235: test   rdi,0x1
  0023c: jne    0x35603
  00242: test   rdi,0x2
  00249: je     0x285
  0024f: xorps  xmm3,xmm3
  00252: movabs rax,0x8000000000000002
  0025c: cmp    rdi,rax
  0025f: je     0x297
  00265: mov    rax,rdi
  00268: sar    rax,0x3f
  0026c: add    rax,0x2
  00270: and    rdi,0xfffffffffffffffc
  00274: or     rdi,rax
  00277: rol    rdi,0x3d
  0027b: movq   xmm3,rdi
  00280: jmp    0x297
  00285: call   0xfffee96c
  0028a: test   rax,rax
  0028d: je     0x35603
  00293: movq   xmm3,xmm0
  00297: mov    rdi,QWORD PTR [r14-0x58]
  0029b: test   rdi,0x1
  002a2: jne    0x3561f
  002a8: test   rdi,0x2
  002af: je     0x2eb
  002b5: xorps  xmm4,xmm4
  002b8: movabs rax,0x8000000000000002
  002c2: cmp    rdi,rax
  002c5: je     0x2fd
  002cb: mov    rax,rdi
  002ce: sar    rax,0x3f
  002d2: add    rax,0x2
  002d6: and    rdi,0xfffffffffffffffc
  002da: or     rdi,rax
  002dd: rol    rdi,0x3d
  002e1: movq   xmm4,rdi
  002e6: jmp    0x2fd
  002eb: call   0xfffee96c
  002f0: test   rax,rax
  002f3: je     0x3561f
  002f9: movq   xmm4,xmm0
  002fd: mulsd  xmm3,xmm4
:00010 %3 = %3 - %4                         [Float][Float]
  00301: subsd  xmm2,xmm3
:00011 %4 = @z: Vec[IvarId(2)]
  00305: mov    rdi,QWORD PTR [r14-0x30]
  00309: mov    rax,QWORD PTR [rdi+0x20]
  0030d: mov    QWORD PTR [r14-0x50],rax
:00012 %5 = %1.call x()                     [Vec]
  00311: mov    rdi,QWORD PTR [r14-0x38]
  00315: test   rdi,0x7
  0031c: jne    0x3563b
  00322: cmp    DWORD PTR [rdi+0x4],0x2b
  00326: jne    0x3563b
  0032c: cmp    DWORD PTR [rip+0xffffffffffff1a78],0x26        # 0xffff1dab
  00333: jne    0x3563b
  00339: mov    esi,DWORD PTR [rip+0x67c]        # 0x9bb
  0033f: cmp    esi,0xffffffff
  00342: je     0x35657
  00348: cmp    WORD PTR [rdi+0x2],0x3
  0034d: jne    0x366
  00353: cmp    esi,0x6
  00356: jge    0x366
  0035c: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00361: jmp    0x384
  00366: sub    rsp,0x10
  0036a: movq   QWORD PTR [rsp],xmm2
  0036f: movabs rax,0x557860b3bf40
  00379: call   rax
  0037b: movq   xmm2,QWORD PTR [rsp]
  00380: add    rsp,0x10
  00384: mov    QWORD PTR [r14-0x58],rax
:00013 
:00014 %4 = %4 * %5                         [Float][Float]
  00388: mov    rdi,QWORD PTR [r14-0x50]
  0038c: test   rdi,0x1
  00393: jne    0x35692
  00399: test   rdi,0x2
  003a0: je     0x3dc
  003a6: xorps  xmm3,xmm3
  003a9: movabs rax,0x8000000000000002
  003b3: cmp    rdi,rax
  003b6: je     0x3ee
  003bc: mov    rax,rdi
  003bf: sar    rax,0x3f
  003c3: add    rax,0x2
  003c7: and    rdi,0xfffffffffffffffc
  003cb: or     rdi,rax
  003ce: rol    rdi,0x3d
  003d2: movq   xmm3,rdi
  003d7: jmp    0x3ee
  003dc: call   0xfffee96c
  003e1: test   rax,rax
  003e4: je     0x35692
  003ea: movq   xmm3,xmm0
  003ee: mov    rdi,QWORD PTR [r14-0x58]
  003f2: test   rdi,0x1
  003f9: jne    0x356ae
  003ff: test   rdi,0x2
  00406: je     0x442
  0040c: xorps  xmm4,xmm4
  0040f: movabs rax,0x8000000000000002
  00419: cmp    rdi,rax
  0041c: je     0x454
  00422: mov    rax,rdi
  00425: sar    rax,0x3f
  00429: add    rax,0x2
  0042d: and    rdi,0xfffffffffffffffc
  00431: or     rdi,rax
  00434: rol    rdi,0x3d
  00438: movq   xmm4,rdi
  0043d: jmp    0x454
  00442: call   0xfffee96c
  00447: test   rax,rax
  0044a: je     0x356ae
  00450: movq   xmm4,xmm0
  00454: mulsd  xmm3,xmm4
:00015 %5 = @x: Vec[IvarId(0)]
  00458: mov    rdi,QWORD PTR [r14-0x30]
  0045c: mov    rax,QWORD PTR [rdi+0x10]
  00460: mov    QWORD PTR [r14-0x58],rax
:00016 %6 = %1.call z()                     [Vec]
  00464: mov    rdi,QWORD PTR [r14-0x38]
  00468: test   rdi,0x7
  0046f: jne    0x356ca
  00475: cmp    DWORD PTR [rdi+0x4],0x2b
  00479: jne    0x356ca
  0047f: cmp    DWORD PTR [rip+0xffffffffffff1925],0x26        # 0xffff1dab
  00486: jne    0x356ca
  0048c: mov    esi,DWORD PTR [rip+0x531]        # 0x9c3
  00492: cmp    esi,0xffffffff
  00495: je     0x356f3
  0049b: cmp    WORD PTR [rdi+0x2],0x3
  004a0: jne    0x4b9
  004a6: cmp    esi,0x6
  004a9: jge    0x4b9
  004af: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  004b4: jmp    0x4e3
  004b9: sub    rsp,0x10
  004bd: movq   QWORD PTR [rsp],xmm2
  004c2: movq   QWORD PTR [rsp+0x8],xmm3
  004c8: movabs rax,0x557860b3bf40
  004d2: call   rax
  004d4: movq   xmm2,QWORD PTR [rsp]
  004d9: movq   xmm3,QWORD PTR [rsp+0x8]
  004df: add    rsp,0x10
  004e3: mov    QWORD PTR [r14-0x60],rax
:00017 
:00018 %5 = %5 * %6                         [Float][Float]
  004e7: mov    rdi,QWORD PTR [r14-0x58]
  004eb: test   rdi,0x1
  004f2: jne    0x3573a
  004f8: test   rdi,0x2
  004ff: je     0x53b
  00505: xorps  xmm4,xmm4
  00508: movabs rax,0x8000000000000002
  00512: cmp    rdi,rax
  00515: je     0x54d
  0051b: mov    rax,rdi
  0051e: sar    rax,0x3f
  00522: add    rax,0x2
  00526: and    rdi,0xfffffffffffffffc
  0052a: or     rdi,rax
  0052d: rol    rdi,0x3d
  00531: movq   xmm4,rdi
  00536: jmp    0x54d
  0053b: call   0xfffee96c
  00540: test   rax,rax
  00543: je     0x3573a
  00549: movq   xmm4,xmm0
  0054d: mov    rdi,QWORD PTR [r14-0x60]
  00551: test   rdi,0x1
  00558: jne    0x35763
  0055e: test   rdi,0x2
  00565: je     0x5a1
  0056b: xorps  xmm5,xmm5
  0056e: movabs rax,0x8000000000000002
  00578: cmp    rdi,rax
  0057b: je     0x5b3
  00581: mov    rax,rdi
  00584: sar    rax,0x3f
  00588: add    rax,0x2
  0058c: and    rdi,0xfffffffffffffffc
  00590: or     rdi,rax
  00593: rol    rdi,0x3d
  00597: movq   xmm5,rdi
  0059c: jmp    0x5b3
  005a1: call   0xfffee96c
  005a6: test   rax,rax
  005a9: je     0x35763
  005af: movq   xmm5,xmm0
  005b3: mulsd  xmm4,xmm5
:00019 %4 = %4 - %5                         [Float][Float]
  005b7: subsd  xmm3,xmm4
:00020 %5 = @x: Vec[IvarId(0)]
  005bb: mov    rdi,QWORD PTR [r14-0x30]
  005bf: mov    rax,QWORD PTR [rdi+0x10]
  005c3: mov    QWORD PTR [r14-0x58],rax
:00021 %6 = %1.call y()                     [Vec]
  005c7: mov    rdi,QWORD PTR [r14-0x38]
  005cb: test   rdi,0x7
  005d2: jne    0x3578c
  005d8: cmp    DWORD PTR [rdi+0x4],0x2b
  005dc: jne    0x3578c
  005e2: cmp    DWORD PTR [rip+0xffffffffffff17c2],0x26        # 0xffff1dab
  005e9: jne    0x3578c
  005ef: mov    esi,DWORD PTR [rip+0x3d6]        # 0x9cb
  005f5: cmp    esi,0xffffffff
  005f8: je     0x357b5
  005fe: cmp    WORD PTR [rdi+0x2],0x3
  00603: jne    0x61c
  00609: cmp    esi,0x6
  0060c: jge    0x61c
  00612: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00617: jmp    0x646
  0061c: sub    rsp,0x10
  00620: movq   QWORD PTR [rsp],xmm2
  00625: movq   QWORD PTR [rsp+0x8],xmm3
  0062b: movabs rax,0x557860b3bf40
  00635: call   rax
  00637: movq   xmm2,QWORD PTR [rsp]
  0063c: movq   xmm3,QWORD PTR [rsp+0x8]
  00642: add    rsp,0x10
  00646: mov    QWORD PTR [r14-0x60],rax
:00022 
:00023 %5 = %5 * %6                         [Float][Float]
  0064a: mov    rdi,QWORD PTR [r14-0x58]
  0064e: test   rdi,0x1
  00655: jne    0x357fc
  0065b: test   rdi,0x2
  00662: je     0x69e
  00668: xorps  xmm4,xmm4
  0066b: movabs rax,0x8000000000000002
  00675: cmp    rdi,rax
  00678: je     0x6b0
  0067e: mov    rax,rdi
  00681: sar    rax,0x3f
  00685: add    rax,0x2
  00689: and    rdi,0xfffffffffffffffc
  0068d: or     rdi,rax
  00690: rol    rdi,0x3d
  00694: movq   xmm4,rdi
  00699: jmp    0x6b0
  0069e: call   0xfffee96c
  006a3: test   rax,rax
  006a6: je     0x357fc
  006ac: movq   xmm4,xmm0
  006b0: mov    rdi,QWORD PTR [r14-0x60]
  006b4: test   rdi,0x1
  006bb: jne    0x35825
  006c1: test   rdi,0x2
  006c8: je     0x704
  006ce: xorps  xmm5,xmm5
  006d1: movabs rax,0x8000000000000002
  006db: cmp    rdi,rax
  006de: je     0x716
  006e4: mov    rax,rdi
  006e7: sar    rax,0x3f
  006eb: add    rax,0x2
  006ef: and    rdi,0xfffffffffffffffc
  006f3: or     rdi,rax
  006f6: rol    rdi,0x3d
  006fa: movq   xmm5,rdi
  006ff: jmp    0x716
  00704: call   0xfffee96c
  00709: test   rax,rax
  0070c: je     0x35825
  00712: movq   xmm5,xmm0
  00716: mulsd  xmm4,xmm5
:00024 %6 = @y: Vec[IvarId(1)]
  0071a: mov    rdi,QWORD PTR [r14-0x30]
  0071e: mov    rax,QWORD PTR [rdi+0x18]
  00722: mov    QWORD PTR [r14-0x60],rax
:00025 %7 = %1.call x()                     [Vec]
  00726: mov    rdi,QWORD PTR [r14-0x38]
  0072a: test   rdi,0x7
  00731: jne    0x3584e
  00737: cmp    DWORD PTR [rdi+0x4],0x2b
  0073b: jne    0x3584e
  00741: cmp    DWORD PTR [rip+0xffffffffffff1663],0x26        # 0xffff1dab
  00748: jne    0x3584e
  0074e: mov    esi,DWORD PTR [rip+0x27f]        # 0x9d3
  00754: cmp    esi,0xffffffff
  00757: je     0x35884
  0075d: cmp    WORD PTR [rdi+0x2],0x3
  00762: jne    0x77b
  00768: cmp    esi,0x6
  0076b: jge    0x77b
  00771: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00776: jmp    0x7b1
  0077b: sub    rsp,0x20
  0077f: movq   QWORD PTR [rsp],xmm2
  00784: movq   QWORD PTR [rsp+0x8],xmm3
  0078a: movq   QWORD PTR [rsp+0x10],xmm4
  00790: movabs rax,0x557860b3bf40
  0079a: call   rax
  0079c: movq   xmm2,QWORD PTR [rsp]
  007a1: movq   xmm3,QWORD PTR [rsp+0x8]
  007a7: movq   xmm4,QWORD PTR [rsp+0x10]
  007ad: add    rsp,0x20
  007b1: mov    QWORD PTR [r14-0x68],rax
:00026 
:00027 %6 = %6 * %7                         [Float][Float]
  007b5: mov    rdi,QWORD PTR [r14-0x60]
  007b9: test   rdi,0x1
  007c0: jne    0x358d7
  007c6: test   rdi,0x2
  007cd: je     0x809
  007d3: xorps  xmm5,xmm5
  007d6: movabs rax,0x8000000000000002
  007e0: cmp    rdi,rax
  007e3: je     0x81b
  007e9: mov    rax,rdi
  007ec: sar    rax,0x3f
  007f0: add    rax,0x2
  007f4: and    rdi,0xfffffffffffffffc
  007f8: or     rdi,rax
  007fb: rol    rdi,0x3d
  007ff: movq   xmm5,rdi
  00804: jmp    0x81b
  00809: call   0xfffee96c
  0080e: test   rax,rax
  00811: je     0x358d7
  00817: movq   xmm5,xmm0
  0081b: mov    rdi,QWORD PTR [r14-0x68]
  0081f: test   rdi,0x1
  00826: jne    0x3590d
  0082c: test   rdi,0x2
  00833: je     0x86f
  00839: xorps  xmm6,xmm6
  0083c: movabs rax,0x8000000000000002
  00846: cmp    rdi,rax
  00849: je     0x881
  0084f: mov    rax,rdi
  00852: sar    rax,0x3f
  00856: add    rax,0x2
  0085a: and    rdi,0xfffffffffffffffc
  0085e: or     rdi,rax
  00861: rol    rdi,0x3d
  00865: movq   xmm6,rdi
  0086a: jmp    0x881
  0086f: call   0xfffee96c
  00874: test   rax,rax
  00877: je     0x3590d
  0087d: movq   xmm6,xmm0
  00881: mulsd  xmm5,xmm6
:00028 %5 = %5 - %6                         [Float][Float]
  00885: subsd  xmm4,xmm5
:00029 %2 = %2.call new(%3; 3)              [#<Class:Vec>]
  00889: movq   xmm0,xmm2
  0088d: call   0xfffeea90
  00892: mov    QWORD PTR [r14-0x48],rax
  00896: movq   xmm0,xmm3
  0089a: call   0xfffeea90
  0089f: mov    QWORD PTR [r14-0x50],rax
  008a3: movq   xmm0,xmm4
  008a7: call   0xfffeea90
  008ac: mov    QWORD PTR [r14-0x58],rax
  008b0: mov    rdi,QWORD PTR [r14-0x40]
  008b4: test   rdi,0x7
  008bb: jne    0x35943
  008c1: cmp    DWORD PTR [rdi+0x4],0x2c
  008c5: jne    0x35943
  008cb: cmp    DWORD PTR [rip+0xffffffffffff14d9],0x26        # 0xffff1dab
  008d2: jne    0x35943
  008d8: mov    r9,0x0
  008df: sub    rsp,0x30
  008e3: movq   QWORD PTR [rsp],xmm2
  008e8: movq   QWORD PTR [rsp+0x8],xmm3
  008ee: movq   QWORD PTR [rsp+0x10],xmm4
  008f4: movq   QWORD PTR [rsp+0x18],xmm5
  008fa: movq   QWORD PTR [rsp+0x20],xmm6
  00900: mov    rdx,rdi
  00903: mov    QWORD PTR [rsp-0x40],rcx
  00908: mov    QWORD PTR [rsp-0x28],0x0
  00911: lea    rcx,[r14-0x48]
  00915: mov    r8,0x3
  0091c: mov    rsi,QWORD PTR [rbx]
  0091f: mov    QWORD PTR [rsp-0x18],rsi
  00924: lea    rsi,[rsp-0x18]
  00929: mov    QWORD PTR [rbx],rsi
  0092c: lea    r14,[rsp-0x10]
  00931: mov    QWORD PTR [rsp-0x20],r14
  00936: call   0x3595f
  0093b: lea    r14,[rbp-0x8]
  0093f: mov    QWORD PTR [rbx],r14
  00942: mov    r14,QWORD PTR [rbp-0x10]
  00946: movq   xmm2,QWORD PTR [rsp]
  0094b: movq   xmm3,QWORD PTR [rsp+0x8]
  00951: movq   xmm4,QWORD PTR [rsp+0x10]
  00957: movq   xmm5,QWORD PTR [rsp+0x18]
  0095d: movq   xmm6,QWORD PTR [rsp+0x20]
  00963: add    rsp,0x30
  00967: movabs r13,0x557861f71660
  00971: test   rax,rax
  00974: je     0xfffee913
  0097a: mov    QWORD PTR [r14-0x40],rax
:00030 
:00031 ret %2
  0097e: mov    rax,QWORD PTR [r14-0x40]
  00982: leave  
  00983: ret    
==> start whole compile: ambient_occlusion FuncId(103) self_class:Scene start:[00000] bytecode:0x557861fc96a0
<== finished compile. elapsed:78.1µs
offset:Pos(73960) code: 4083 bytes  data: 285 bytes
  00000: push   rbp
  00001: mov    rbp,rsp
  00004: mov    rdx,rdi
  00007: sub    rsp,0xa0
  0000e: cmp    edx,0x1
  00011: jne    0x34fba
  00017: mov    rax,0x4
  0001e: mov    QWORD PTR [r14-0x40],rax
  00022: mov    QWORD PTR [r14-0x48],rax
  00026: mov    QWORD PTR [r14-0x50],rax
  0002a: mov    QWORD PTR [r14-0x58],rax
  0002e: mov    QWORD PTR [r14-0x60],rax
  00032: mov    QWORD PTR [r14-0x68],rax
  00036: mov    QWORD PTR [r14-0x70],rax
  0003a: mov    QWORD PTR [r14-0x78],rax
  0003e: mov    QWORD PTR [r14-0x80],rax
  00042: mov    QWORD PTR [r14-0x88],rax
  00049: mov    QWORD PTR [r14-0x90],rax
  00050: mov    rdi,QWORD PTR [r14-0x30]
  00054: test   rdi,0x7
  0005b: jne    0x34fc9
  00061: cmp    DWORD PTR [rdi+0x4],0x35
  00065: jne    0x34fc9
:00000 init_method reg:13 arg:1 pos:1 req:1 block:0 stack_offset:10
:00001 %8 = const[Array]                    [Array]
  0006b: mov    rax,QWORD PTR [rip+0xffffffffffff1376]        # 0xffff13e8
  00072: cmp    rax,QWORD PTR [rip+0xf8f]        # 0x1008
  00079: jne    0x34fd8
  0007f: mov    rax,QWORD PTR [rip+0xf72]        # 0xff8
  00086: mov    QWORD PTR [r14-0x70],rax
:00002 %2 = %8.call new()                   [#<Class:Array>]
  0008a: mov    rdi,QWORD PTR [r14-0x70]
  0008e: test   rdi,0x7
  00095: jne    0x3501e
  0009b: cmp    DWORD PTR [rdi+0x4],0x1e
  0009f: jne    0x3501e
  000a5: cmp    DWORD PTR [rip+0xffffffffffff1328],0x26        # 0xffff13d4
  000ac: jne    0x3501e
  000b2: mov    r9,0x0
  000b9: mov    rdx,rdi
  000bc: mov    QWORD PTR [rsp-0x40],rcx
  000c1: mov    QWORD PTR [rsp-0x28],0x0
  000ca: lea    rcx,[r14-0x78]
  000ce: mov    r8,0x0
  000d5: mov    rsi,QWORD PTR [rbx]
  000d8: mov    QWORD PTR [rsp-0x18],rsi
  000dd: lea    rsi,[rsp-0x18]
  000e2: mov    QWORD PTR [rbx],rsi
  000e5: lea    r14,[rsp-0x10]
  000ea: mov    QWORD PTR [rsp-0x20],r14
  000ef: call   0x3502d
  000f4: lea    r14,[rbp-0x8]
  000f8: mov    QWORD PTR [rbx],r14
  000fb: mov    r14,QWORD PTR [rbp-0x10]
  000ff: movabs r13,0x557861fc96e0
  00109: test   rax,rax
  0010c: je     0xfffedf3c
  00112: mov    QWORD PTR [r14-0x40],rax
:00003 
:00004 %8 = %2
  00116: mov    rax,QWORD PTR [r14-0x40]
  0011a: mov    QWORD PTR [r14-0x70],rax
:00005 %9 = %1.call n()                     [Isect]
  0011e: mov    rdi,QWORD PTR [r14-0x38]
  00122: test   rdi,0x7
  00129: jne    0x3505f
  0012f: cmp    DWORD PTR [rdi+0x4],0x33
  00133: jne    0x3505f
  00139: cmp    DWORD PTR [rip+0xffffffffffff1294],0x26        # 0xffff13d4
  00140: jne    0x3505f
  00146: mov    esi,DWORD PTR [rip+0xec8]        # 0x1014
  0014c: cmp    esi,0xffffffff
  0014f: je     0x3506e
  00155: cmp    WORD PTR [rdi+0x2],0x3
  0015a: jne    0x173
  00160: cmp    esi,0x6
  00163: jge    0x173
  00169: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0016e: jmp    0x17f
  00173: movabs rax,0x557860b3bf40
  0017d: call   rax
  0017f: mov    QWORD PTR [r14-0x78],rax
:00006 
:00007 _ = %0.call otherBasis(%8; 2)        [Scene]
  00183: mov    rdi,QWORD PTR [r14-0x30]
  00187: cmp    DWORD PTR [rip+0xffffffffffff1246],0x26        # 0xffff13d4
  0018e: jne    0x35097
  00194: cmp    DWORD PTR [rip+0xffffffffffff123d],0x0        # 0xffff13d8
  0019b: je     0x1b3
  001a1: mov    rdi,r12
  001a4: mov    rsi,QWORD PTR [rbx]
  001a7: movabs rax,0x557860afd140
  001b1: call   rax
  001b3: mov    QWORD PTR [rsp-0x28],0x0
  001bc: mov    rax,QWORD PTR [r14-0x30]
  001c0: mov    QWORD PTR [rsp-0x40],rax
  001c5: mov    rdi,0x2
  001cc: mov    rax,QWORD PTR [r14-0x70]
  001d0: mov    QWORD PTR [rsp-0x48],rax
  001d5: mov    rax,QWORD PTR [r14-0x78]
  001d9: mov    QWORD PTR [rsp-0x50],rax
  001de: mov    QWORD PTR [rsp-0x38],0x0
  001e7: movabs rax,0x800000057
  001f1: mov    QWORD PTR [rsp-0x30],rax
  001f6: movabs r13,0x557861fbf3a0
  00200: mov    rsi,QWORD PTR [rbx]
  00203: mov    QWORD PTR [rsp-0x18],rsi
  00208: lea    rsi,[rsp-0x18]
  0020d: mov    QWORD PTR [rbx],rsi
  00210: lea    r14,[rsp-0x10]
  00215: mov    QWORD PTR [rsp-0x20],r14
  0021a: call   0xffffb0eb
  0021f: lea    r14,[rbp-0x8]
  00223: mov    QWORD PTR [rbx],r14
  00226: mov    r14,QWORD PTR [rbp-0x10]
  0022a: movabs r13,0x557861fc9730
  00234: test   rax,rax
  00237: je     0xfffedf3c
:00008 
:00009 %3 = const[NAO_SAMPLES]              [8]
  0023d: mov    rax,QWORD PTR [rip+0xffffffffffff11a4]        # 0xffff13e8
  00244: cmp    rax,QWORD PTR [rip+0xddd]        # 0x1028
  0024b: jne    0x350a6
  00251: mov    rax,QWORD PTR [rip+0xdc0]        # 0x1018
  00258: mov    QWORD PTR [r14-0x48],rax
:00010 %4 = const[NAO_SAMPLES]              [8]
  0025c: mov    rax,QWORD PTR [rip+0xffffffffffff1185]        # 0xffff13e8
  00263: cmp    rax,QWORD PTR [rip+0xdde]        # 0x1048
  0026a: jne    0x350ec
  00270: mov    rax,QWORD PTR [rip+0xdc1]        # 0x1038
  00277: mov    QWORD PTR [r14-0x50],rax
:00011 %5 = literal[0.0001]
  0027b: movq   xmm2,QWORD PTR [rip+0xdd5]        # 0x1058
  00283: movabs rax,0xf8d1b71758e2196a
  0028d: mov    QWORD PTR [r14-0x58],rax
:00012 %6 = literal[0.0]
  00291: movq   xmm3,QWORD PTR [rip+0xdcf]        # 0x1068
  00299: movabs rax,0x8000000000000002
  002a3: mov    QWORD PTR [r14-0x60],rax
:00013 %8 = const[Vec]                      [Vec]
  002a7: mov    rax,QWORD PTR [rip+0xffffffffffff113a]        # 0xffff13e8
  002ae: cmp    rax,QWORD PTR [rip+0xdd3]        # 0x1088
  002b5: jne    0x35132
  002bb: mov    rax,QWORD PTR [rip+0xdb6]        # 0x1078
  002c2: mov    QWORD PTR [r14-0x70],rax
:00014 %9 = %1.call pl()                    [Isect]
  002c6: mov    rdi,QWORD PTR [r14-0x38]
  002ca: test   rdi,0x7
  002d1: jne    0x35196
  002d7: cmp    DWORD PTR [rdi+0x4],0x33
  002db: jne    0x35196
  002e1: cmp    DWORD PTR [rip+0xffffffffffff10ec],0x26        # 0xffff13d4
  002e8: jne    0x35196
  002ee: mov    esi,DWORD PTR [rip+0xda0]        # 0x1094
  002f4: cmp    esi,0xffffffff
  002f7: je     0x351a5
  002fd: cmp    WORD PTR [rdi+0x2],0x3
  00302: jne    0x31b
  00308: cmp    esi,0x6
  0030b: jge    0x31b
  00311: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00316: jmp    0x345
  0031b: sub    rsp,0x10
  0031f: movq   QWORD PTR [rsp],xmm2
  00324: movq   QWORD PTR [rsp+0x8],xmm3
  0032a: movabs rax,0x557860b3bf40
  00334: call   rax
  00336: movq   xmm2,QWORD PTR [rsp]
  0033b: movq   xmm3,QWORD PTR [rsp+0x8]
  00341: add    rsp,0x10
  00345: mov    QWORD PTR [r14-0x78],rax
:00015 
:00016 %9 = %9.call x()                     [Vec]
  00349: mov    rdi,QWORD PTR [r14-0x78]
  0034d: test   rdi,0x7
  00354: jne    0x351ec
  0035a: cmp    DWORD PTR [rdi+0x4],0x2b
  0035e: jne    0x351ec
  00364: cmp    DWORD PTR [rip+0xffffffffffff1069],0x26        # 0xffff13d4
  0036b: jne    0x351ec
  00371: mov    esi,DWORD PTR [rip+0xd25]        # 0x109c
  00377: cmp    esi,0xffffffff
  0037a: je     0x351fb
  00380: cmp    WORD PTR [rdi+0x2],0x3
  00385: jne    0x39e
  0038b: cmp    esi,0x6
  0038e: jge    0x39e
  00394: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00399: jmp    0x3c8
  0039e: sub    rsp,0x10
  003a2: movq   QWORD PTR [rsp],xmm2
  003a7: movq   QWORD PTR [rsp+0x8],xmm3
  003ad: movabs rax,0x557860b3bf40
  003b7: call   rax
  003b9: movq   xmm2,QWORD PTR [rsp]
  003be: movq   xmm3,QWORD PTR [rsp+0x8]
  003c4: add    rsp,0x10
  003c8: mov    QWORD PTR [r14-0x78],rax
:00017 
:00018 %10 = %1.call n()                    [Isect]
  003cc: mov    rdi,QWORD PTR [r14-0x38]
  003d0: test   rdi,0x7
  003d7: jne    0x35242
  003dd: cmp    DWORD PTR [rdi+0x4],0x33
  003e1: jne    0x35242
  003e7: cmp    DWORD PTR [rip+0xffffffffffff0fe6],0x26        # 0xffff13d4
  003ee: jne    0x35242
  003f4: mov    esi,DWORD PTR [rip+0xcaa]        # 0x10a4
  003fa: cmp    esi,0xffffffff
  003fd: je     0x35251
  00403: cmp    WORD PTR [rdi+0x2],0x3
  00408: jne    0x421
  0040e: cmp    esi,0x6
  00411: jge    0x421
  00417: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0041c: jmp    0x44b
  00421: sub    rsp,0x10
  00425: movq   QWORD PTR [rsp],xmm2
  0042a: movq   QWORD PTR [rsp+0x8],xmm3
  00430: movabs rax,0x557860b3bf40
  0043a: call   rax
  0043c: movq   xmm2,QWORD PTR [rsp]
  00441: movq   xmm3,QWORD PTR [rsp+0x8]
  00447: add    rsp,0x10
  0044b: mov    QWORD PTR [r14-0x80],rax
:00019 
:00020 %10 = %10.call x()                   [Vec]
  0044f: mov    rdi,QWORD PTR [r14-0x80]
  00453: test   rdi,0x7
  0045a: jne    0x35298
  00460: cmp    DWORD PTR [rdi+0x4],0x2b
  00464: jne    0x35298
  0046a: cmp    DWORD PTR [rip+0xffffffffffff0f63],0x26        # 0xffff13d4
  00471: jne    0x35298
  00477: mov    esi,DWORD PTR [rip+0xc2f]        # 0x10ac
  0047d: cmp    esi,0xffffffff
  00480: je     0x352a7
  00486: cmp    WORD PTR [rdi+0x2],0x3
  0048b: jne    0x4a4
  00491: cmp    esi,0x6
  00494: jge    0x4a4
  0049a: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0049f: jmp    0x4ce
  004a4: sub    rsp,0x10
  004a8: movq   QWORD PTR [rsp],xmm2
  004ad: movq   QWORD PTR [rsp+0x8],xmm3
  004b3: movabs rax,0x557860b3bf40
  004bd: call   rax
  004bf: movq   xmm2,QWORD PTR [rsp]
  004c4: movq   xmm3,QWORD PTR [rsp+0x8]
  004ca: add    rsp,0x10
  004ce: mov    QWORD PTR [r14-0x80],rax
:00021 
:00022 %10 = %5 * %10                       [Float][Float]
  004d2: mov    rdi,QWORD PTR [r14-0x80]
  004d6: test   rdi,0x1
  004dd: jne    0x352ee
  004e3: test   rdi,0x2
  004ea: je     0x526
  004f0: xorps  xmm4,xmm4
  004f3: movabs rax,0x8000000000000002
  004fd: cmp    rdi,rax
  00500: je     0x538
  00506: mov    rax,rdi
  00509: sar    rax,0x3f
  0050d: add    rax,0x2
  00511: and    rdi,0xfffffffffffffffc
  00515: or     rdi,rax
  00518: rol    rdi,0x3d
  0051c: movq   xmm4,rdi
  00521: jmp    0x538
  00526: call   0xfffedf95
  0052b: test   rax,rax
  0052e: je     0x352ee
  00534: movq   xmm4,xmm0
  00538: mulsd  xmm4,xmm2
:00023 %9 = %9 + %10                        [Float][Float]
  0053c: mov    rdi,QWORD PTR [r14-0x78]
  00540: test   rdi,0x1
  00547: jne    0x352fd
  0054d: test   rdi,0x2
  00554: je     0x590
  0055a: xorps  xmm5,xmm5
  0055d: movabs rax,0x8000000000000002
  00567: cmp    rdi,rax
  0056a: je     0x5a2
  00570: mov    rax,rdi
  00573: sar    rax,0x3f
  00577: add    rax,0x2
  0057b: and    rdi,0xfffffffffffffffc
  0057f: or     rdi,rax
  00582: rol    rdi,0x3d
  00586: movq   xmm5,rdi
  0058b: jmp    0x5a2
  00590: call   0xfffedf95
  00595: test   rax,rax
  00598: je     0x352fd
  0059e: movq   xmm5,xmm0
  005a2: addsd  xmm5,xmm4
:00024 %10 = %1.call pl()                   [Isect]
  005a6: mov    rdi,QWORD PTR [r14-0x38]
  005aa: test   rdi,0x7
  005b1: jne    0x35319
  005b7: cmp    DWORD PTR [rdi+0x4],0x33
  005bb: jne    0x35319
  005c1: cmp    DWORD PTR [rip+0xffffffffffff0e0c],0x26        # 0xffff13d4
  005c8: jne    0x35319
  005ce: mov    esi,DWORD PTR [rip+0xae0]        # 0x10b4
  005d4: cmp    esi,0xffffffff
  005d7: je     0x35335
  005dd: cmp    WORD PTR [rdi+0x2],0x3
  005e2: jne    0x5fb
  005e8: cmp    esi,0x6
  005eb: jge    0x5fb
  005f1: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  005f6: jmp    0x631
  005fb: sub    rsp,0x20
  005ff: movq   QWORD PTR [rsp],xmm2
  00604: movq   QWORD PTR [rsp+0x8],xmm3
  0060a: movq   QWORD PTR [rsp+0x10],xmm5
  00610: movabs rax,0x557860b3bf40
  0061a: call   rax
  0061c: movq   xmm2,QWORD PTR [rsp]
  00621: movq   xmm3,QWORD PTR [rsp+0x8]
  00627: movq   xmm5,QWORD PTR [rsp+0x10]
  0062d: add    rsp,0x20
  00631: mov    QWORD PTR [r14-0x80],rax
:00025 
:00026 %10 = %10.call y()                   [Vec]
  00635: mov    rdi,QWORD PTR [r14-0x80]
  00639: test   rdi,0x7
  00640: jne    0x35388
  00646: cmp    DWORD PTR [rdi+0x4],0x2b
  0064a: jne    0x35388
  00650: cmp    DWORD PTR [rip+0xffffffffffff0d7d],0x26        # 0xffff13d4
  00657: jne    0x35388
  0065d: mov    esi,DWORD PTR [rip+0xa59]        # 0x10bc
  00663: cmp    esi,0xffffffff
  00666: je     0x353a4
  0066c: cmp    WORD PTR [rdi+0x2],0x3
  00671: jne    0x68a
  00677: cmp    esi,0x6
  0067a: jge    0x68a
  00680: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00685: jmp    0x6c0
  0068a: sub    rsp,0x20
  0068e: movq   QWORD PTR [rsp],xmm2
  00693: movq   QWORD PTR [rsp+0x8],xmm3
  00699: movq   QWORD PTR [rsp+0x10],xmm5
  0069f: movabs rax,0x557860b3bf40
  006a9: call   rax
  006ab: movq   xmm2,QWORD PTR [rsp]
  006b0: movq   xmm3,QWORD PTR [rsp+0x8]
  006b6: movq   xmm5,QWORD PTR [rsp+0x10]
  006bc: add    rsp,0x20
  006c0: mov    QWORD PTR [r14-0x80],rax
:00027 
:00028 %11 = %1.call n()                    [Isect]
  006c4: mov    rdi,QWORD PTR [r14-0x38]
  006c8: test   rdi,0x7
  006cf: jne    0x353f7
  006d5: cmp    DWORD PTR [rdi+0x4],0x33
  006d9: jne    0x353f7
  006df: cmp    DWORD PTR [rip+0xffffffffffff0cee],0x26        # 0xffff13d4
  006e6: jne    0x353f7
  006ec: mov    esi,DWORD PTR [rip+0x9d2]        # 0x10c4
  006f2: cmp    esi,0xffffffff
  006f5: je     0x35413
  006fb: cmp    WORD PTR [rdi+0x2],0x3
  00700: jne    0x719
  00706: cmp    esi,0x6
  00709: jge    0x719
  0070f: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00714: jmp    0x74f
  00719: sub    rsp,0x20
  0071d: movq   QWORD PTR [rsp],xmm2
  00722: movq   QWORD PTR [rsp+0x8],xmm3
  00728: movq   QWORD PTR [rsp+0x10],xmm5
  0072e: movabs rax,0x557860b3bf40
  00738: call   rax
  0073a: movq   xmm2,QWORD PTR [rsp]
  0073f: movq   xmm3,QWORD PTR [rsp+0x8]
  00745: movq   xmm5,QWORD PTR [rsp+0x10]
  0074b: add    rsp,0x20
  0074f: mov    QWORD PTR [r14-0x88],rax
:00029 
:00030 %11 = %11.call y()                   [Vec]
  00756: mov    rdi,QWORD PTR [r14-0x88]
  0075d: test   rdi,0x7
  00764: jne    0x35466
  0076a: cmp    DWORD PTR [rdi+0x4],0x2b
  0076e: jne    0x35466
  00774: cmp    DWORD PTR [rip+0xffffffffffff0c59],0x26        # 0xffff13d4
  0077b: jne    0x35466
  00781: mov    esi,DWORD PTR [rip+0x945]        # 0x10cc
  00787: cmp    esi,0xffffffff
  0078a: je     0x35482
  00790: cmp    WORD PTR [rdi+0x2],0x3
  00795: jne    0x7ae
  0079b: cmp    esi,0x6
  0079e: jge    0x7ae
  007a4: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  007a9: jmp    0x7e4
  007ae: sub    rsp,0x20
  007b2: movq   QWORD PTR [rsp],xmm2
  007b7: movq   QWORD PTR [rsp+0x8],xmm3
  007bd: movq   QWORD PTR [rsp+0x10],xmm5
  007c3: movabs rax,0x557860b3bf40
  007cd: call   rax
  007cf: movq   xmm2,QWORD PTR [rsp]
  007d4: movq   xmm3,QWORD PTR [rsp+0x8]
  007da: movq   xmm5,QWORD PTR [rsp+0x10]
  007e0: add    rsp,0x20
  007e4: mov    QWORD PTR [r14-0x88],rax
:00031 
:00032 %11 = %5 * %11                       [Float][Float]
  007eb: mov    rdi,QWORD PTR [r14-0x88]
  007f2: test   rdi,0x1
  007f9: jne    0x354d5
  007ff: test   rdi,0x2
  00806: je     0x842
  0080c: xorps  xmm4,xmm4
  0080f: movabs rax,0x8000000000000002
  00819: cmp    rdi,rax
  0081c: je     0x854
  00822: mov    rax,rdi
  00825: sar    rax,0x3f
  00829: add    rax,0x2
  0082d: and    rdi,0xfffffffffffffffc
  00831: or     rdi,rax
  00834: rol    rdi,0x3d
  00838: movq   xmm4,rdi
  0083d: jmp    0x854
  00842: call   0xfffedf95
  00847: test   rax,rax
  0084a: je     0x354d5
  00850: movq   xmm4,xmm0
  00854: mulsd  xmm4,xmm2
:00033 %10 = %10 + %11                      [Float][Float]
  00858: mov    rdi,QWORD PTR [r14-0x80]
  0085c: test   rdi,0x1
  00863: jne    0x354f1
  00869: test   rdi,0x2
  00870: je     0x8ac
  00876: xorps  xmm6,xmm6
  00879: movabs rax,0x8000000000000002
  00883: cmp    rdi,rax
  00886: je     0x8be
  0088c: mov    rax,rdi
  0088f: sar    rax,0x3f
  00893: add    rax,0x2
  00897: and    rdi,0xfffffffffffffffc
  0089b: or     rdi,rax
  0089e: rol    rdi,0x3d
  008a2: movq   xmm6,rdi
  008a7: jmp    0x8be
  008ac: call   0xfffedf95
  008b1: test   rax,rax
  008b4: je     0x354f1
  008ba: movq   xmm6,xmm0
  008be: addsd  xmm6,xmm4
:00034 %11 = %1.call pl()                   [Isect]
  008c2: mov    rdi,QWORD PTR [r14-0x38]
  008c6: test   rdi,0x7
  008cd: jne    0x3551d
  008d3: cmp    DWORD PTR [rdi+0x4],0x33
  008d7: jne    0x3551d
  008dd: cmp    DWORD PTR [rip+0xffffffffffff0af0],0x26        # 0xffff13d4
  008e4: jne    0x3551d
  008ea: mov    esi,DWORD PTR [rip+0x7e4]        # 0x10d4
  008f0: cmp    esi,0xffffffff
  008f3: je     0x35546
  008f9: cmp    WORD PTR [rdi+0x2],0x3
  008fe: jne    0x917
  00904: cmp    esi,0x6
  00907: jge    0x917
  0090d: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00912: jmp    0x959
  00917: sub    rsp,0x20
  0091b: movq   QWORD PTR [rsp],xmm2
  00920: movq   QWORD PTR [rsp+0x8],xmm3
  00926: movq   QWORD PTR [rsp+0x10],xmm5
  0092c: movq   QWORD PTR [rsp+0x18],xmm6
  00932: movabs rax,0x557860b3bf40
  0093c: call   rax
  0093e: movq   xmm2,QWORD PTR [rsp]
  00943: movq   xmm3,QWORD PTR [rsp+0x8]
  00949: movq   xmm5,QWORD PTR [rsp+0x10]
  0094f: movq   xmm6,QWORD PTR [rsp+0x18]
  00955: add    rsp,0x20
  00959: mov    QWORD PTR [r14-0x88],rax
:00035 
:00036 %11 = %11.call z()                   [Vec]
  00960: mov    rdi,QWORD PTR [r14-0x88]
  00967: test   rdi,0x7
  0096e: jne    0x355a5
  00974: cmp    DWORD PTR [rdi+0x4],0x2b
  00978: jne    0x355a5
  0097e: cmp    DWORD PTR [rip+0xffffffffffff0a4f],0x26        # 0xffff13d4
  00985: jne    0x355a5
  0098b: mov    esi,DWORD PTR [rip+0x74b]        # 0x10dc
  00991: cmp    esi,0xffffffff
  00994: je     0x355ce
  0099a: cmp    WORD PTR [rdi+0x2],0x3
  0099f: jne    0x9b8
  009a5: cmp    esi,0x6
  009a8: jge    0x9b8
  009ae: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  009b3: jmp    0x9fa
  009b8: sub    rsp,0x20
  009bc: movq   QWORD PTR [rsp],xmm2
  009c1: movq   QWORD PTR [rsp+0x8],xmm3
  009c7: movq   QWORD PTR [rsp+0x10],xmm5
  009cd: movq   QWORD PTR [rsp+0x18],xmm6
  009d3: movabs rax,0x557860b3bf40
  009dd: call   rax
  009df: movq   xmm2,QWORD PTR [rsp]
  009e4: movq   xmm3,QWORD PTR [rsp+0x8]
  009ea: movq   xmm5,QWORD PTR [rsp+0x10]
  009f0: movq   xmm6,QWORD PTR [rsp+0x18]
  009f6: add    rsp,0x20
  009fa: mov    QWORD PTR [r14-0x88],rax
:00037 
:00038 %12 = %1.call n()                    [Isect]
  00a01: mov    rdi,QWORD PTR [r14-0x38]
  00a05: test   rdi,0x7
  00a0c: jne    0x3562d
  00a12: cmp    DWORD PTR [rdi+0x4],0x33
  00a16: jne    0x3562d
  00a1c: cmp    DWORD PTR [rip+0xffffffffffff09b1],0x26        # 0xffff13d4
  00a23: jne    0x3562d
  00a29: mov    esi,DWORD PTR [rip+0x6b5]        # 0x10e4
  00a2f: cmp    esi,0xffffffff
  00a32: je     0x35656
  00a38: cmp    WORD PTR [rdi+0x2],0x3
  00a3d: jne    0xa56
  00a43: cmp    esi,0x6
  00a46: jge    0xa56
  00a4c: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a51: jmp    0xa98
  00a56: sub    rsp,0x20
  00a5a: movq   QWORD PTR [rsp],xmm2
  00a5f: movq   QWORD PTR [rsp+0x8],xmm3
  00a65: movq   QWORD PTR [rsp+0x10],xmm5
  00a6b: movq   QWORD PTR [rsp+0x18],xmm6
  00a71: movabs rax,0x557860b3bf40
  00a7b: call   rax
  00a7d: movq   xmm2,QWORD PTR [rsp]
  00a82: movq   xmm3,QWORD PTR [rsp+0x8]
  00a88: movq   xmm5,QWORD PTR [rsp+0x10]
  00a8e: movq   xmm6,QWORD PTR [rsp+0x18]
  00a94: add    rsp,0x20
  00a98: mov    QWORD PTR [r14-0x90],rax
:00039 
:00040 %12 = %12.call z()                   [Vec]
  00a9f: mov    rdi,QWORD PTR [r14-0x90]
  00aa6: test   rdi,0x7
  00aad: jne    0x356b5
  00ab3: cmp    DWORD PTR [rdi+0x4],0x2b
  00ab7: jne    0x356b5
  00abd: cmp    DWORD PTR [rip+0xffffffffffff0910],0x26        # 0xffff13d4
  00ac4: jne    0x356b5
  00aca: mov    esi,DWORD PTR [rip+0x61c]        # 0x10ec
  00ad0: cmp    esi,0xffffffff
  00ad3: je     0x356de
  00ad9: cmp    WORD PTR [rdi+0x2],0x3
  00ade: jne    0xaf7
  00ae4: cmp    esi,0x6
  00ae7: jge    0xaf7
  00aed: mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00af2: jmp    0xb39
  00af7: sub    rsp,0x20
  00afb: movq   QWORD PTR [rsp],xmm2
  00b00: movq   QWORD PTR [rsp+0x8],xmm3
  00b06: movq   QWORD PTR [rsp+0x10],xmm5
  00b0c: movq   QWORD PTR [rsp+0x18],xmm6
  00b12: movabs rax,0x557860b3bf40
  00b1c: call   rax
  00b1e: movq   xmm2,QWORD PTR [rsp]
  00b23: movq   xmm3,QWORD PTR [rsp+0x8]
  00b29: movq   xmm5,QWORD PTR [rsp+0x10]
  00b2f: movq   xmm6,QWORD PTR [rsp+0x18]
  00b35: add    rsp,0x20
  00b39: mov    QWORD PTR [r14-0x90],rax
:00041 
:00042 %12 = %5 * %12                       [Float][Float]
  00b40: mov    rdi,QWORD PTR [r14-0x90]
  00b47: test   rdi,0x1
  00b4e: jne    0x3573d
  00b54: test   rdi,0x2
  00b5b: je     0xb97
  00b61: xorps  xmm4,xmm4
  00b64: movabs rax,0x8000000000000002
  00b6e: cmp    rdi,rax
  00b71: je     0xba9
  00b77: mov    rax,rdi
  00b7a: sar    rax,0x3f
  00b7e: add    rax,0x2
  00b82: and    rdi,0xfffffffffffffffc
  00b86: or     rdi,rax
  00b89: rol    rdi,0x3d
  00b8d: movq   xmm4,rdi
  00b92: jmp    0xba9
  00b97: call   0xfffedf95
  00b9c: test   rax,rax
  00b9f: je     0x3573d
  00ba5: movq   xmm4,xmm0
  00ba9: mulsd  xmm4,xmm2
:00043 %11 = %11 + %12                      [Float][Float]
  00bad: mov    rdi,QWORD PTR [r14-0x88]
  00bb4: test   rdi,0x1
  00bbb: jne    0x35766
  00bc1: test   rdi,0x2
  00bc8: je     0xc04
  00bce: xorps  xmm7,xmm7
  00bd1: movabs rax,0x8000000000000002
  00bdb: cmp    rdi,rax
  00bde: je     0xc16
  00be4: mov    rax,rdi
  00be7: sar    rax,0x3f
  00beb: add    rax,0x2
  00bef: and    rdi,0xfffffffffffffffc
  00bf3: or     rdi,rax
  00bf6: rol    rdi,0x3d
  00bfa: movq   xmm7,rdi
  00bff: jmp    0xc16
  00c04: call   0xfffedf95
  00c09: test   rax,rax
  00c0c: je     0x35766
  00c12: movq   xmm7,xmm0
  00c16: addsd  xmm7,xmm4
:00044 %7 = %8.call new(%9; 3)              [#<Class:Vec>]
  00c1a: movq   xmm0,xmm5
  00c1e: call   0xfffee0b9
  00c23: mov    QWORD PTR [r14-0x78],rax
  00c27: movq   xmm0,xmm6
  00c2b: call   0xfffee0b9
  00c30: mov    QWORD PTR [r14-0x80],rax
  00c34: movq   xmm0,xmm7
  00c38: call   0xfffee0b9
  00c3d: mov    QWORD PTR [r14-0x88],rax
  00c44: mov    rdi,QWORD PTR [r14-0x70]
  00c48: test   rdi,0x7
  00c4f: jne    0x3579f
  00c55: cmp    DWORD PTR [rdi+0x4],0x2c
  00c59: jne    0x3579f
  00c5f: cmp    DWORD PTR [rip+0xffffffffffff076e],0x26        # 0xffff13d4
  00c66: jne    0x3579f
  00c6c: mov    r9,0x0
  00c73: sub    rsp,0x30
  00c77: movq   QWORD PTR [rsp],xmm2
  00c7c: movq   QWORD PTR [rsp+0x8],xmm3
  00c82: movq   QWORD PTR [rsp+0x10],xmm4
  00c88: movq   QWORD PTR [rsp+0x18],xmm5
  00c8e: movq   QWORD PTR [rsp+0x20],xmm6
  00c94: movq   QWORD PTR [rsp+0x28],xmm7
  00c9a: mov    rdx,rdi
  00c9d: mov    QWORD PTR [rsp-0x40],rcx
  00ca2: mov    QWORD PTR [rsp-0x28],0x0
  00cab: lea    rcx,[r14-0x78]
  00caf: mov    r8,0x3
  00cb6: mov    rsi,QWORD PTR [rbx]
  00cb9: mov    QWORD PTR [rsp-0x18],rsi
  00cbe: lea    rsi,[rsp-0x18]
  00cc3: mov    QWORD PTR [rbx],rsi
  00cc6: lea    r14,[rsp-0x10]
  00ccb: mov    QWORD PTR [rsp-0x20],r14
  00cd0: call   0x357be
  00cd5: lea    r14,[rbp-0x8]
  00cd9: mov    QWORD PTR [rbx],r14
  00cdc: mov    r14,QWORD PTR [rbp-0x10]
  00ce0: movq   xmm2,QWORD PTR [rsp]
  00ce5: movq   xmm3,QWORD PTR [rsp+0x8]
  00ceb: movq   xmm4,QWORD PTR [rsp+0x10]
  00cf1: movq   xmm5,QWORD PTR [rsp+0x18]
  00cf7: movq   xmm6,QWORD PTR [rsp+0x20]
  00cfd: movq   xmm7,QWORD PTR [rsp+0x28]
  00d03: add    rsp,0x30
  00d07: movabs r13,0x557861fc9980
  00d11: test   rax,rax
  00d14: je     0xfffedf3c
  00d1a: mov    QWORD PTR [r14-0x68],rax
:00045 
:00046 %8 = literal[6881281]
  00d1e: mov    rax,0xd20003
  00d25: mov    QWORD PTR [r14-0x70],rax
:00047 _ = %4.call times(&%8)               [Integer]
  00d29: mov    rdi,QWORD PTR [r14-0x50]
  00d2d: test   rdi,0x1
  00d34: je     0x357f0
  00d3a: cmp    DWORD PTR [rip+0xffffffffffff0693],0x26        # 0xffff13d4
  00d41: jne    0x357f0
  00d47: mov    r9,QWORD PTR [r14-0x70]
  00d4b: sub    rsp,0x20
  00d4f: movq   QWORD PTR [rsp],xmm4
  00d54: movq   QWORD PTR [rsp+0x8],xmm5
  00d5a: movq   QWORD PTR [rsp+0x10],xmm6
  00d60: movq   QWORD PTR [rsp+0x18],xmm7
  00d66: mov    rdx,rdi
  00d69: mov    QWORD PTR [rsp-0x40],rcx
  00d6e: mov    QWORD PTR [rsp-0x28],0x0
  00d77: lea    rcx,[r14-0x78]
  00d7b: mov    r8,0x0
  00d82: mov    rsi,QWORD PTR [rbx]
  00d85: mov    QWORD PTR [rsp-0x18],rsi
  00d8a: lea    rsi,[rsp-0x18]
  00d8f: mov    QWORD PTR [rbx],rsi
  00d92: lea    r14,[rsp-0x10]
  00d97: mov    QWORD PTR [rsp-0x20],r14
  00d9c: call   0x3580f
  00da1: lea    r14,[rbp-0x8]
  00da5: mov    QWORD PTR [rbx],r14
  00da8: mov    r14,QWORD PTR [rbp-0x10]
  00dac: movq   xmm4,QWORD PTR [rsp]
  00db1: movq   xmm5,QWORD PTR [rsp+0x8]
  00db7: movq   xmm6,QWORD PTR [rsp+0x10]
  00dbd: movq   xmm7,QWORD PTR [rsp+0x18]
  00dc3: add    rsp,0x20
  00dc7: movabs r13,0x557861fc99b0
  00dd1: test   rax,rax
  00dd4: je     0xfffedf3c
:00048 
:00049 %8 = %3.call to_f()                  [Integer]
  00dda: mov    rdi,QWORD PTR [r14-0x48]
  00dde: test   rdi,0x1
  00de5: je     0x35841
  00deb: cmp    DWORD PTR [rip+0xffffffffffff05e2],0x26        # 0xffff13d4
  00df2: jne    0x35841
  00df8: sar    rdi,1
  00dfb: cvtsi2sd xmm2,rdi
:00050 
:00051 %9 = %4.call to_f()                  [Integer]
  00e00: mov    rdi,QWORD PTR [r14-0x50]
  00e04: test   rdi,0x1
  00e0b: je     0x35860
  00e11: cmp    DWORD PTR [rip+0xffffffffffff05bc],0x26        # 0xffff13d4
  00e18: jne    0x35860
  00e1e: sar    rdi,1
  00e21: cvtsi2sd xmm3,rdi
:00052 
:00053 %8 = %8 * %9                         [Float][Float]
  00e26: mulsd  xmm2,xmm3
:00054 %8 = %8 - %6                         [Float][Float]
  00e2a: mov    rdi,QWORD PTR [r14-0x60]
  00e2e: test   rdi,0x1
  00e35: jne    0x3588c
  00e3b: test   rdi,0x2
  00e42: je     0xe7e
  00e48: xorps  xmm5,xmm5
  00e4b: movabs rax,0x8000000000000002
  00e55: cmp    rdi,rax
  00e58: je     0xe90
  00e5e: mov    rax,rdi
  00e61: sar    rax,0x3f
  00e65: add    rax,0x2
  00e69: and    rdi,0xfffffffffffffffc
  00e6d: or     rdi,rax
  00e70: rol    rdi,0x3d
  00e74: movq   xmm5,rdi
  00e79: jmp    0xe90
  00e7e: call   0xfffedf95
  00e83: test   rax,rax
  00e86: je     0x3588c
  00e8c: movq   xmm5,xmm0
  00e90: subsd  xmm2,xmm5
:00055 %9 = %3.call to_f()                  [Integer]
  00e94: mov    rdi,QWORD PTR [r14-0x48]
  00e98: test   rdi,0x1
  00e9f: je     0x358c5
  00ea5: cmp    DWORD PTR [rip+0xffffffffffff0528],0x26        # 0xffff13d4
  00eac: jne    0x358c5
  00eb2: sar    rdi,1
  00eb5: cvtsi2sd xmm3,rdi
:00056 
:00057 %10 = %4.call to_f()                 [Integer]
  00eba: mov    rdi,QWORD PTR [r14-0x50]
  00ebe: test   rdi,0x1
  00ec5: je     0x358fe
  00ecb: cmp    DWORD PTR [rip+0xffffffffffff0502],0x26        # 0xffff13d4
  00ed2: jne    0x358fe
  00ed8: sar    rdi,1
  00edb: cvtsi2sd xmm6,rdi
:00058 
:00059 %9 = %9 * %10                        [Float][Float]
  00ee0: mulsd  xmm3,xmm6
:00060 %6 = %8 / %9                         [Float][Float]
  00ee4: movq   xmm5,xmm2
  00ee8: movq   rax,xmm3
  00eed: test   rax,rax
  00ef0: je     0xfffedf61
  00ef6: divsd  xmm5,xmm3
:00061 %8 = const[Vec]                      [Vec]
  00efa: mov    rax,QWORD PTR [rip+0xffffffffffff04e7]        # 0xffff13e8
  00f01: cmp    rax,QWORD PTR [rip+0x200]        # 0x1108
  00f08: jne    0x35937
  00f0e: mov    rax,QWORD PTR [rip+0x1e3]        # 0x10f8
  00f15: mov    QWORD PTR [r14-0x70],rax
:00062 %9 = %6
:00063 %10 = %6
:00064 %11 = %6
:00065 %8 = %8.call new(%9; 3)              [#<Class:Vec>]
  00f19: movq   xmm0,xmm5
  00f1d: call   0xfffee0b9
  00f22: mov    QWORD PTR [r14-0x78],rax
  00f26: movq   xmm0,xmm5
  00f2a: call   0xfffee0b9
  00f2f: mov    QWORD PTR [r14-0x80],rax
  00f33: movq   xmm0,xmm5
  00f37: call   0xfffee0b9
  00f3c: mov    QWORD PTR [r14-0x88],rax
  00f43: mov    rdi,QWORD PTR [r14-0x70]
  00f47: test   rdi,0x7
  00f4e: jne    0x359bf
  00f54: cmp    DWORD PTR [rdi+0x4],0x2c
  00f58: jne    0x359bf
  00f5e: cmp    DWORD PTR [rip+0xffffffffffff046f],0x26        # 0xffff13d4
  00f65: jne    0x359bf
  00f6b: mov    r9,0x0
  00f72: sub    rsp,0x10
  00f76: movq   QWORD PTR [rsp],xmm4
  00f7b: movq   QWORD PTR [rsp+0x8],xmm5
  00f81: mov    rdx,rdi
  00f84: mov    QWORD PTR [rsp-0x40],rcx
  00f89: mov    QWORD PTR [rsp-0x28],0x0
  00f92: lea    rcx,[r14-0x78]
  00f96: mov    r8,0x3
  00f9d: mov    rsi,QWORD PTR [rbx]
  00fa0: mov    QWORD PTR [rsp-0x18],rsi
  00fa5: lea    rsi,[rsp-0x18]
  00faa: mov    QWORD PTR [rbx],rsi
  00fad: lea    r14,[rsp-0x10]
  00fb2: mov    QWORD PTR [rsp-0x20],r14
  00fb7: call   0x359eb
  00fbc: lea    r14,[rbp-0x8]
  00fc0: mov    QWORD PTR [rbx],r14
  00fc3: mov    r14,QWORD PTR [rbp-0x10]
  00fc7: movq   xmm4,QWORD PTR [rsp]
  00fcc: movq   xmm5,QWORD PTR [rsp+0x8]
  00fd2: add    rsp,0x10
  00fd6: movabs r13,0x557861fc9ad0
  00fe0: test   rax,rax
  00fe3: je     0xfffedf3c
  00fe9: mov    QWORD PTR [r14-0x70],rax
:00066 
:00067 ret %8
  00fed: mov    rax,QWORD PTR [r14-0x70]
  00ff1: leave  
  00ff2: ret    
==> start whole compile: otherBasis FuncId(87) self_class:Scene start:[00000] bytecode:0x557861fbf3a0
<== finished compile. elapsed:95.4µs
offset:Pos(78328) code: 6380 bytes  data: 312 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007:    	sub    rsp,0x70
  0000b:    	cmp    edx,0x2
  0000e:    	jne    0x3490d
  00014: 00 	mov    rax,0x4
  0001b:    	mov    QWORD PTR [r14-0x48],rax
  0001f:    	mov    QWORD PTR [r14-0x50],rax
  00023:    	mov    QWORD PTR [r14-0x58],rax
  00027:    	mov    QWORD PTR [r14-0x60],rax
  0002b:    	mov    QWORD PTR [r14-0x68],rax
  0002f:    	mov    rdi,QWORD PTR [r14-0x30]
  00033: 00 	test   rdi,0x7
  0003a:    	jne    0x3491c
  00040:    	cmp    DWORD PTR [rdi+0x4],0x35
  00044:    	jne    0x3491c
:00000 init_method reg:8 arg:2 pos:2 req:2 block:0 stack_offset:7
:00001 %3 = 2: i32
  0004a: 00 	mov    QWORD PTR [r14-0x48],0x5
:00002 %4 = const[Vec]                      [Vec]
  00052: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff027f]        # 0xffff02d8
  00059: 00 	cmp    rax,QWORD PTR [rip+0x18a8]        # 0x1908
  00060:    	jne    0x3492b
  00066: 00 	mov    rax,QWORD PTR [rip+0x188b]        # 0x18f8
  0006d:    	mov    QWORD PTR [r14-0x50],rax
:00003 %5 = %2.call x()                     [Vec]
  00071:    	mov    rdi,QWORD PTR [r14-0x40]
  00075: 00 	test   rdi,0x7
  0007c:    	jne    0x34971
  00082:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00086:    	jne    0x34971
  0008c: 26 	cmp    DWORD PTR [rip+0xffffffffffff0231],0x26        # 0xffff02c4
  00093:    	jne    0x34971
  00099:    	mov    esi,DWORD PTR [rip+0x1875]        # 0x1914
  0009f:    	cmp    esi,0xffffffff
  000a2:    	je     0x34980
  000a8:    	cmp    WORD PTR [rdi+0x2],0x3
  000ad:    	jne    0xc6
  000b3:    	cmp    esi,0x6
  000b6:    	jge    0xc6
  000bc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000c1:    	jmp    0xd2
  000c6: 78 	movabs rax,0x557860b3bf40
  000d0:    	call   rax
  000d2:    	mov    QWORD PTR [r14-0x58],rax
:00004 
:00005 %6 = %2.call y()                     [Vec]
  000d6:    	mov    rdi,QWORD PTR [r14-0x40]
  000da: 00 	test   rdi,0x7
  000e1:    	jne    0x349a9
  000e7:    	cmp    DWORD PTR [rdi+0x4],0x2b
  000eb:    	jne    0x349a9
  000f1: 26 	cmp    DWORD PTR [rip+0xffffffffffff01cc],0x26        # 0xffff02c4
  000f8:    	jne    0x349a9
  000fe:    	mov    esi,DWORD PTR [rip+0x1818]        # 0x191c
  00104:    	cmp    esi,0xffffffff
  00107:    	je     0x349b8
  0010d:    	cmp    WORD PTR [rdi+0x2],0x3
  00112:    	jne    0x12b
  00118:    	cmp    esi,0x6
  0011b:    	jge    0x12b
  00121:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00126:    	jmp    0x137
  0012b: 78 	movabs rax,0x557860b3bf40
  00135:    	call   rax
  00137:    	mov    QWORD PTR [r14-0x60],rax
:00006 
:00007 %7 = %2.call z()                     [Vec]
  0013b:    	mov    rdi,QWORD PTR [r14-0x40]
  0013f: 00 	test   rdi,0x7
  00146:    	jne    0x349e1
  0014c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00150:    	jne    0x349e1
  00156: 26 	cmp    DWORD PTR [rip+0xffffffffffff0167],0x26        # 0xffff02c4
  0015d:    	jne    0x349e1
  00163:    	mov    esi,DWORD PTR [rip+0x17bb]        # 0x1924
  00169:    	cmp    esi,0xffffffff
  0016c:    	je     0x349f0
  00172:    	cmp    WORD PTR [rdi+0x2],0x3
  00177:    	jne    0x190
  0017d:    	cmp    esi,0x6
  00180:    	jge    0x190
  00186:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0018b:    	jmp    0x19c
  00190: 78 	movabs rax,0x557860b3bf40
  0019a:    	call   rax
  0019c:    	mov    QWORD PTR [r14-0x68],rax
:00008 
:00009 %4 = %4.call new(%5; 3)              [#<Class:Vec>]
  001a0:    	mov    rdi,QWORD PTR [r14-0x50]
  001a4: 00 	test   rdi,0x7
  001ab:    	jne    0x34a19
  001b1:    	cmp    DWORD PTR [rdi+0x4],0x2c
  001b5:    	jne    0x34a19
  001bb: 26 	cmp    DWORD PTR [rip+0xffffffffffff0102],0x26        # 0xffff02c4
  001c2:    	jne    0x34a19
  001c8: 00 	mov    r9,0x0
  001cf:    	mov    rdx,rdi
  001d2:    	mov    QWORD PTR [rsp-0x40],rcx
  001d7: 00 	mov    QWORD PTR [rsp-0x28],0x0
  001e0:    	lea    rcx,[r14-0x58]
  001e4: 00 	mov    r8,0x3
  001eb:    	mov    rsi,QWORD PTR [rbx]
  001ee:    	mov    QWORD PTR [rsp-0x18],rsi
  001f3:    	lea    rsi,[rsp-0x18]
  001f8:    	mov    QWORD PTR [rbx],rsi
  001fb:    	lea    r14,[rsp-0x10]
  00200:    	mov    QWORD PTR [rsp-0x20],r14
  00205:    	call   0x34a28
  0020a:    	lea    r14,[rbp-0x8]
  0020e:    	mov    QWORD PTR [rbx],r14
  00211:    	mov    r14,QWORD PTR [rbp-0x10]
  00215: 78 	movabs r13,0x557861fbf450
  0021f:    	test   rax,rax
  00222:    	je     0xfffece2c
  00228:    	mov    QWORD PTR [r14-0x50],rax
:00010 
:00011 %1:.[%3:] = %4
  0022c:    	mov    rdx,QWORD PTR [r14-0x38]
  00230:    	mov    rcx,QWORD PTR [r14-0x48]
  00234:    	mov    r8,QWORD PTR [r14-0x50]
  00238:    	mov    rdi,rbx
  0023b:    	mov    rsi,r12
  0023e: 78 	movabs r9,0x557861fbf458
  00248: 78 	movabs rax,0x557860b060f0
  00252:    	call   rax
  00254: 78 	movabs r13,0x557861fbf460
  0025e:    	test   rax,rax
  00261:    	je     0xfffece2c
:00012 %3 = 1: i32
  00267: 00 	mov    QWORD PTR [r14-0x48],0x3
:00013 %4 = const[Vec]                      [Vec]
  0026f: ff 	mov    rax,QWORD PTR [rip+0xffffffffffff0062]        # 0xffff02d8
  00276: 00 	cmp    rax,QWORD PTR [rip+0x16bb]        # 0x1938
  0027d:    	jne    0x34a5a
  00283: 00 	mov    rax,QWORD PTR [rip+0x169e]        # 0x1928
  0028a:    	mov    QWORD PTR [r14-0x50],rax
:00014 %5 = literal[0.0]
  0028e: 00 	movq   xmm2,QWORD PTR [rip+0x16b2]        # 0x1948
  00296: 00 	movabs rax,0x8000000000000002
  002a0:    	mov    QWORD PTR [r14-0x58],rax
:00015 %6 = literal[0.0]
  002a4: 00 	movq   xmm3,QWORD PTR [rip+0x16ac]        # 0x1958
  002ac: 00 	movabs rax,0x8000000000000002
  002b6:    	mov    QWORD PTR [r14-0x60],rax
:00016 %7 = literal[0.0]
  002ba: 00 	movq   xmm4,QWORD PTR [rip+0x16a6]        # 0x1968
  002c2: 00 	movabs rax,0x8000000000000002
  002cc:    	mov    QWORD PTR [r14-0x68],rax
:00017 %4 = %4.call new(%5; 3)              [#<Class:Vec>]
  002d0:    	mov    rdi,QWORD PTR [r14-0x50]
  002d4: 00 	test   rdi,0x7
  002db:    	jne    0x34aa0
  002e1:    	cmp    DWORD PTR [rdi+0x4],0x2c
  002e5:    	jne    0x34aa0
  002eb: 26 	cmp    DWORD PTR [rip+0xfffffffffffeffd2],0x26        # 0xffff02c4
  002f2:    	jne    0x34aa0
  002f8: 00 	mov    r9,0x0
  002ff:    	sub    rsp,0x20
  00303:    	movq   QWORD PTR [rsp],xmm2
  00308:    	movq   QWORD PTR [rsp+0x8],xmm3
  0030e:    	movq   QWORD PTR [rsp+0x10],xmm4
  00314:    	mov    rdx,rdi
  00317:    	mov    QWORD PTR [rsp-0x40],rcx
  0031c: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00325:    	lea    rcx,[r14-0x58]
  00329: 00 	mov    r8,0x3
  00330:    	mov    rsi,QWORD PTR [rbx]
  00333:    	mov    QWORD PTR [rsp-0x18],rsi
  00338:    	lea    rsi,[rsp-0x18]
  0033d:    	mov    QWORD PTR [rbx],rsi
  00340:    	lea    r14,[rsp-0x10]
  00345:    	mov    QWORD PTR [rsp-0x20],r14
  0034a:    	call   0x34aaf
  0034f:    	lea    r14,[rbp-0x8]
  00353:    	mov    QWORD PTR [rbx],r14
  00356:    	mov    r14,QWORD PTR [rbp-0x10]
  0035a:    	movq   xmm2,QWORD PTR [rsp]
  0035f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00365:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0036b:    	add    rsp,0x20
  0036f: 78 	movabs r13,0x557861fbf4d0
  00379:    	test   rax,rax
  0037c:    	je     0xfffece2c
  00382:    	mov    QWORD PTR [r14-0x50],rax
:00018 
:00019 %1:.[%3:] = %4
  00386:    	sub    rsp,0x20
  0038a:    	movq   QWORD PTR [rsp],xmm2
  0038f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00395:    	movq   QWORD PTR [rsp+0x10],xmm4
  0039b:    	mov    rdx,QWORD PTR [r14-0x38]
  0039f:    	mov    rcx,QWORD PTR [r14-0x48]
  003a3:    	mov    r8,QWORD PTR [r14-0x50]
  003a7:    	mov    rdi,rbx
  003aa:    	mov    rsi,r12
  003ad: 78 	movabs r9,0x557861fbf4d8
  003b7: 78 	movabs rax,0x557860b060f0
  003c1:    	call   rax
  003c3:    	movq   xmm2,QWORD PTR [rsp]
  003c8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  003ce:    	movq   xmm4,QWORD PTR [rsp+0x10]
  003d4:    	add    rsp,0x20
  003d8: 78 	movabs r13,0x557861fbf4e0
  003e2:    	test   rax,rax
  003e5:    	je     0xfffece2c
:00020 %3 = %2.call x()                     [Vec]
  003eb:    	mov    rdi,QWORD PTR [r14-0x40]
  003ef: 00 	test   rdi,0x7
  003f6:    	jne    0x34ae1
  003fc:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00400:    	jne    0x34ae1
  00406: 26 	cmp    DWORD PTR [rip+0xfffffffffffefeb7],0x26        # 0xffff02c4
  0040d:    	jne    0x34ae1
  00413:    	mov    esi,DWORD PTR [rip+0x155b]        # 0x1974
  00419:    	cmp    esi,0xffffffff
  0041c:    	je     0x34af0
  00422:    	cmp    WORD PTR [rdi+0x2],0x3
  00427:    	jne    0x440
  0042d:    	cmp    esi,0x6
  00430:    	jge    0x440
  00436:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0043b:    	jmp    0x476
  00440:    	sub    rsp,0x20
  00444:    	movq   QWORD PTR [rsp],xmm2
  00449:    	movq   QWORD PTR [rsp+0x8],xmm3
  0044f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00455: 78 	movabs rax,0x557860b3bf40
  0045f:    	call   rax
  00461:    	movq   xmm2,QWORD PTR [rsp]
  00466:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0046c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00472:    	add    rsp,0x20
  00476:    	mov    QWORD PTR [r14-0x48],rax
:00021 
:00022 %4 = literal[0.6]
  0047a: 00 	movq   xmm5,QWORD PTR [rip+0x14f6]        # 0x1978
  00482: 99 	movabs rax,0xff1999999999999a
  0048c:    	mov    QWORD PTR [r14-0x50],rax
:00023 _%3 = %3 < %4                        [Float][Float]
:00024 condnotbr _%3 =>:00036
  00490:    	mov    rdi,QWORD PTR [r14-0x48]
  00494: 00 	test   rdi,0x1
  0049b:    	jne    0x34b43
  004a1: 00 	test   rdi,0x2
  004a8:    	je     0x4e4
  004ae:    	xorps  xmm6,xmm6
  004b1: 00 	movabs rax,0x8000000000000002
  004bb:    	cmp    rdi,rax
  004be:    	je     0x4f6
  004c4:    	mov    rax,rdi
  004c7:    	sar    rax,0x3f
  004cb:    	add    rax,0x2
  004cf:    	and    rdi,0xfffffffffffffffc
  004d3:    	or     rdi,rax
  004d6:    	rol    rdi,0x3d
  004da:    	movq   xmm6,rdi
  004df:    	jmp    0x4f6
  004e4:    	call   0xfffece85
  004e9:    	test   rax,rax
  004ec:    	je     0x34b43
  004f2:    	movq   xmm6,xmm0
  004f6:    	ucomisd xmm6,xmm5
  004fa:    	jae    0x34c53
:00025 %3 = %2.call x()                     [Vec]
  00500:    	mov    rdi,QWORD PTR [r14-0x40]
  00504: 00 	test   rdi,0x7
  0050b:    	jne    0x34b52
  00511:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00515:    	jne    0x34b52
  0051b: 26 	cmp    DWORD PTR [rip+0xfffffffffffefda2],0x26        # 0xffff02c4
  00522:    	jne    0x34b52
  00528:    	mov    esi,DWORD PTR [rip+0x1456]        # 0x1984
  0052e:    	cmp    esi,0xffffffff
  00531:    	je     0x34b61
  00537:    	cmp    WORD PTR [rdi+0x2],0x3
  0053c:    	jne    0x555
  00542:    	cmp    esi,0x6
  00545:    	jge    0x555
  0054b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00550:    	jmp    0x597
  00555:    	sub    rsp,0x20
  00559:    	movq   QWORD PTR [rsp],xmm2
  0055e:    	movq   QWORD PTR [rsp+0x8],xmm3
  00564:    	movq   QWORD PTR [rsp+0x10],xmm4
  0056a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00570: 78 	movabs rax,0x557860b3bf40
  0057a:    	call   rax
  0057c:    	movq   xmm2,QWORD PTR [rsp]
  00581:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00587:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0058d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00593:    	add    rsp,0x20
  00597:    	mov    QWORD PTR [r14-0x48],rax
:00026 
:00027 %4 = literal[-0.6]
  0059b: 00 	movq   xmm5,QWORD PTR [rip+0x13e5]        # 0x1988
  005a3: 99 	movabs rax,0xff1999999999999e
  005ad:    	mov    QWORD PTR [r14-0x50],rax
:00028 _%3 = %3 > %4                        [Float][Float]
:00029 condnotbr _%3 =>:00036
  005b1:    	mov    rdi,QWORD PTR [r14-0x48]
  005b5: 00 	test   rdi,0x1
  005bc:    	jne    0x34bc0
  005c2: 00 	test   rdi,0x2
  005c9:    	je     0x605
  005cf:    	xorps  xmm6,xmm6
  005d2: 00 	movabs rax,0x8000000000000002
  005dc:    	cmp    rdi,rax
  005df:    	je     0x617
  005e5:    	mov    rax,rdi
  005e8:    	sar    rax,0x3f
  005ec:    	add    rax,0x2
  005f0:    	and    rdi,0xfffffffffffffffc
  005f4:    	or     rdi,rax
  005f7:    	rol    rdi,0x3d
  005fb:    	movq   xmm6,rdi
  00600:    	jmp    0x617
  00605:    	call   0xfffece85
  0060a:    	test   rax,rax
  0060d:    	je     0x34bc0
  00613:    	movq   xmm6,xmm0
  00617:    	ucomisd xmm6,xmm5
  0061b:    	jbe    0x34c6c
:00030 %3 = 1: i32
  00621: 00 	mov    QWORD PTR [r14-0x48],0x3
:00031 %3 = %1.[%3]                         [Array][Integer]
  00629:    	mov    rdi,QWORD PTR [r14-0x38]
  0062d:    	mov    rsi,QWORD PTR [r14-0x48]
  00631: 00 	test   rdi,0x7
  00638:    	jne    0x34bcf
  0063e:    	cmp    DWORD PTR [rdi+0x4],0xb
  00642:    	jne    0x34bcf
  00648: 00 	test   rsi,0x1
  0064f:    	je     0x34bcf
  00655:    	sar    rsi,1
  00658:    	sub    rsp,0x20
  0065c:    	movq   QWORD PTR [rsp],xmm2
  00661:    	movq   QWORD PTR [rsp+0x8],xmm3
  00667:    	movq   QWORD PTR [rsp+0x10],xmm4
  0066d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00673: 78 	movabs rax,0x557860b06070
  0067d:    	call   rax
  0067f:    	movq   xmm2,QWORD PTR [rsp]
  00684:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0068a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00690:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00696:    	add    rsp,0x20
  0069a: 78 	movabs r13,0x557861fbf5a0
  006a4:    	test   rax,rax
  006a7:    	je     0xfffece2c
  006ad:    	mov    QWORD PTR [r14-0x48],rax
:00032 %4 = literal[1.0]
  006b1: 00 	movq   xmm5,QWORD PTR [rip+0x12df]        # 0x1998
  006b9: 00 	movabs rax,0xff80000000000002
  006c3:    	mov    QWORD PTR [r14-0x50],rax
:00033 _ = %3.call x=(%4; 1)                [Vec]
  006c7:    	mov    rdi,QWORD PTR [r14-0x48]
  006cb: 00 	test   rdi,0x7
  006d2:    	jne    0x34bde
  006d8:    	cmp    DWORD PTR [rdi+0x4],0x2b
  006dc:    	jne    0x34bde
  006e2: 26 	cmp    DWORD PTR [rip+0xfffffffffffefbdb],0x26        # 0xffff02c4
  006e9:    	jne    0x34bde
  006ef:    	mov    esi,DWORD PTR [rip+0x12af]        # 0x19a4
  006f5:    	cmp    esi,0xffffffff
  006f8:    	je     0x34bed
  006fe:    	cmp    WORD PTR [rdi+0x2],0x3
  00703:    	jne    0x720
  00709:    	cmp    esi,0x6
  0070c:    	jge    0x720
  00712:    	mov    rax,QWORD PTR [r14-0x50]
  00716:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0071b:    	jmp    0x779
  00720:    	sub    rsp,0x20
  00724:    	movq   QWORD PTR [rsp],xmm2
  00729:    	movq   QWORD PTR [rsp+0x8],xmm3
  0072f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00735:    	movq   QWORD PTR [rsp+0x18],xmm5
  0073b:    	mov    rdx,QWORD PTR [r14-0x50]
  0073f: 78 	movabs rax,0x557860b3c1c0
  00749:    	call   rax
  0074b:    	movq   xmm2,QWORD PTR [rsp]
  00750:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00756:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0075c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00762:    	add    rsp,0x20
  00766: 78 	movabs r13,0x557861fbf5d0
  00770:    	test   rax,rax
  00773:    	je     0xfffece2c
:00034 
:00035 br =>:00073
  00779:    	jmp    0x350ee
:00036 %3 = %2.call y()                     [<INVALID>]
  0077e: 00 	cmp    DWORD PTR [rip+0x1223],0x0        # 0x19a8
  00785:    	jl     0x34c85
  0078b:    	je     0x34c94
  00791: 01 	sub    DWORD PTR [rip+0x1210],0x1        # 0x19a8
  00798:    	xor    rdi,rdi
  0079b:    	jmp    0x34c85
  007a0:    	sub    rsp,0x20
  007a4:    	movq   QWORD PTR [rsp],xmm2
  007a9:    	movq   QWORD PTR [rsp+0x8],xmm3
  007af:    	movq   QWORD PTR [rsp+0x10],xmm4
  007b5:    	movq   QWORD PTR [rsp+0x18],xmm5
  007bb:    	mov    rdi,QWORD PTR [r14-0x40]
  007bf: 78 	movabs rax,0x557860aa2e20
  007c9:    	call   rax
  007cb:    	mov    r15d,eax
  007ce: 78 	movabs r13,0x557861fbf5f0
  007d8:    	cmp    QWORD PTR [r13+0x8],0x0
  007dd:    	je     0x34cb0
  007e3:    	cmp    r15d,DWORD PTR [r13-0x8]
  007e7:    	jne    0x34cb0
  007ed:    	mov    eax,DWORD PTR [rip+0xfffffffffffefad1]        # 0xffff02c4
  007f3:    	cmp    DWORD PTR [r13-0x4],eax
  007f7:    	jne    0x34cb0
  007fd: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00806:    	mov    rax,QWORD PTR [r14-0x40]
  0080a:    	mov    QWORD PTR [rsp-0x40],rax
  0080f: 00 	mov    rdi,0x0
  00816: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0081f:    	mov    r13,QWORD PTR [r13+0x8]
  00823:    	mov    rax,QWORD PTR [r13+0x8]
  00827:    	mov    QWORD PTR [rsp-0x30],rax
  0082c:    	mov    rax,QWORD PTR [r13+0x0]
  00830:    	mov    r13,QWORD PTR [r13+0x10]
  00834:    	mov    rsi,QWORD PTR [rbx]
  00837:    	mov    QWORD PTR [rsp-0x18],rsi
  0083c:    	lea    rsi,[rsp-0x18]
  00841:    	mov    QWORD PTR [rbx],rsi
  00844:    	lea    r14,[rsp-0x10]
  00849:    	mov    QWORD PTR [rsp-0x20],r14
  0084e:    	call   rax
  00850:    	lea    r14,[rbp-0x8]
  00854:    	mov    QWORD PTR [rbx],r14
  00857:    	mov    r14,QWORD PTR [rbp-0x10]
  0085b:    	movq   xmm2,QWORD PTR [rsp]
  00860:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00866:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0086c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00872:    	add    rsp,0x20
  00876:    	test   rax,rax
  00879:    	je     0x34cf1
  0087f:    	mov    QWORD PTR [r14-0x48],rax
:00037 
:00038 %4 = literal[0.6]
  00883: 00 	movq   xmm5,QWORD PTR [rip+0x112d]        # 0x19b8
  0088b: 99 	movabs rax,0xff1999999999999a
  00895:    	mov    QWORD PTR [r14-0x50],rax
:00039 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00040 condnotbr _%3 =>:00052
  00899:    	mov    rdi,QWORD PTR [r14-0x48]
  0089d:    	mov    rsi,QWORD PTR [r14-0x50]
  008a1: 00 	test   rdi,0x1
  008a8:    	je     0x34d00
  008ae: 00 	test   rsi,0x1
  008b5:    	je     0x34d00
  008bb:    	cmp    rdi,rsi
  008be:    	jge    0x34e4a
:00041 %3 = %2.call y()                     [<INVALID>]
  008c4:    	sub    rsp,0x20
  008c8:    	movq   QWORD PTR [rsp],xmm2
  008cd:    	movq   QWORD PTR [rsp+0x8],xmm3
  008d3:    	movq   QWORD PTR [rsp+0x10],xmm4
  008d9:    	movq   QWORD PTR [rsp+0x18],xmm5
  008df:    	mov    rdi,QWORD PTR [r14-0x40]
  008e3: 78 	movabs rax,0x557860aa2e20
  008ed:    	call   rax
  008ef:    	mov    r15d,eax
  008f2: 78 	movabs r13,0x557861fbf640
  008fc:    	cmp    QWORD PTR [r13+0x8],0x0
  00901:    	je     0x34d55
  00907:    	cmp    r15d,DWORD PTR [r13-0x8]
  0090b:    	jne    0x34d55
  00911:    	mov    eax,DWORD PTR [rip+0xfffffffffffef9ad]        # 0xffff02c4
  00917:    	cmp    DWORD PTR [r13-0x4],eax
  0091b:    	jne    0x34d55
  00921: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0092a:    	mov    rax,QWORD PTR [r14-0x40]
  0092e:    	mov    QWORD PTR [rsp-0x40],rax
  00933: 00 	mov    rdi,0x0
  0093a: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00943:    	mov    r13,QWORD PTR [r13+0x8]
  00947:    	mov    rax,QWORD PTR [r13+0x8]
  0094b:    	mov    QWORD PTR [rsp-0x30],rax
  00950:    	mov    rax,QWORD PTR [r13+0x0]
  00954:    	mov    r13,QWORD PTR [r13+0x10]
  00958:    	mov    rsi,QWORD PTR [rbx]
  0095b:    	mov    QWORD PTR [rsp-0x18],rsi
  00960:    	lea    rsi,[rsp-0x18]
  00965:    	mov    QWORD PTR [rbx],rsi
  00968:    	lea    r14,[rsp-0x10]
  0096d:    	mov    QWORD PTR [rsp-0x20],r14
  00972:    	call   rax
  00974:    	lea    r14,[rbp-0x8]
  00978:    	mov    QWORD PTR [rbx],r14
  0097b:    	mov    r14,QWORD PTR [rbp-0x10]
  0097f:    	movq   xmm2,QWORD PTR [rsp]
  00984:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0098a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00990:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00996:    	add    rsp,0x20
  0099a:    	test   rax,rax
  0099d:    	je     0x34d96
  009a3:    	mov    QWORD PTR [r14-0x48],rax
:00042 
:00043 %4 = literal[-0.6]
  009a7: 00 	movq   xmm5,QWORD PTR [rip+0x1019]        # 0x19c8
  009af: 99 	movabs rax,0xff1999999999999e
  009b9:    	mov    QWORD PTR [r14-0x50],rax
:00044 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00045 condnotbr _%3 =>:00052
  009bd:    	mov    rdi,QWORD PTR [r14-0x48]
  009c1:    	mov    rsi,QWORD PTR [r14-0x50]
  009c5: 00 	test   rdi,0x1
  009cc:    	je     0x34da5
  009d2: 00 	test   rsi,0x1
  009d9:    	je     0x34da5
  009df:    	cmp    rdi,rsi
  009e2:    	jle    0x34e63
:00046 %3 = 1: i32
  009e8: 00 	mov    QWORD PTR [r14-0x48],0x3
:00047 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  009f0:    	sub    rsp,0x20
  009f4:    	movq   QWORD PTR [rsp],xmm2
  009f9:    	movq   QWORD PTR [rsp+0x8],xmm3
  009ff:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a05:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a0b:    	mov    rdi,rbx
  00a0e:    	mov    rsi,r12
  00a11:    	mov    rdx,QWORD PTR [r14-0x38]
  00a15:    	mov    rcx,QWORD PTR [r14-0x48]
  00a19: 78 	movabs r8,0x557861fbf698
  00a23: 78 	movabs rax,0x557860b05f40
  00a2d:    	call   rax
  00a2f:    	movq   xmm2,QWORD PTR [rsp]
  00a34:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00a3a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a40:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a46:    	add    rsp,0x20
  00a4a: 78 	movabs r13,0x557861fbf6a0
  00a54:    	test   rax,rax
  00a57:    	je     0xfffece2c
  00a5d:    	mov    QWORD PTR [r14-0x48],rax
:00048 %4 = literal[1.0]
  00a61: 00 	movq   xmm5,QWORD PTR [rip+0xf6f]        # 0x19d8
  00a69: 00 	movabs rax,0xff80000000000002
  00a73:    	mov    QWORD PTR [r14-0x50],rax
:00049 _ = %3.call y=(%4; 1)                [<INVALID>]
  00a77:    	sub    rsp,0x20
  00a7b:    	movq   QWORD PTR [rsp],xmm2
  00a80:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a86:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a8c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a92:    	mov    rdi,QWORD PTR [r14-0x48]
  00a96: 78 	movabs rax,0x557860aa2e20
  00aa0:    	call   rax
  00aa2:    	mov    r15d,eax
  00aa5: 78 	movabs r13,0x557861fbf6c0
  00aaf:    	cmp    QWORD PTR [r13+0x8],0x0
  00ab4:    	je     0x34dfa
  00aba:    	cmp    r15d,DWORD PTR [r13-0x8]
  00abe:    	jne    0x34dfa
  00ac4:    	mov    eax,DWORD PTR [rip+0xfffffffffffef7fa]        # 0xffff02c4
  00aca:    	cmp    DWORD PTR [r13-0x4],eax
  00ace:    	jne    0x34dfa
  00ad4: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00add:    	mov    rax,QWORD PTR [r14-0x48]
  00ae1:    	mov    QWORD PTR [rsp-0x40],rax
  00ae6: 00 	mov    rdi,0x1
  00aed:    	mov    rax,QWORD PTR [r14-0x50]
  00af1:    	mov    QWORD PTR [rsp-0x48],rax
  00af6: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00aff:    	mov    r13,QWORD PTR [r13+0x8]
  00b03:    	mov    rax,QWORD PTR [r13+0x8]
  00b07:    	mov    QWORD PTR [rsp-0x30],rax
  00b0c:    	mov    rax,QWORD PTR [r13+0x0]
  00b10:    	mov    r13,QWORD PTR [r13+0x10]
  00b14:    	mov    rsi,QWORD PTR [rbx]
  00b17:    	mov    QWORD PTR [rsp-0x18],rsi
  00b1c:    	lea    rsi,[rsp-0x18]
  00b21:    	mov    QWORD PTR [rbx],rsi
  00b24:    	lea    r14,[rsp-0x10]
  00b29:    	mov    QWORD PTR [rsp-0x20],r14
  00b2e:    	call   rax
  00b30:    	lea    r14,[rbp-0x8]
  00b34:    	mov    QWORD PTR [rbx],r14
  00b37:    	mov    r14,QWORD PTR [rbp-0x10]
  00b3b:    	movq   xmm2,QWORD PTR [rsp]
  00b40:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b46:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b4c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b52:    	add    rsp,0x20
  00b56:    	test   rax,rax
  00b59:    	je     0x34e3b
:00050 
:00051 br =>:00073
  00b5f:    	jmp    0x35107
:00052 %3 = %2.call z()                     [<INVALID>]
  00b64: 00 	cmp    DWORD PTR [rip+0xe75],0x0        # 0x19e0
  00b6b:    	jl     0x34e7c
  00b71:    	je     0x34e8b
  00b77: 01 	sub    DWORD PTR [rip+0xe62],0x1        # 0x19e0
  00b7e:    	xor    rdi,rdi
  00b81:    	jmp    0x34e7c
  00b86:    	sub    rsp,0x20
  00b8a:    	movq   QWORD PTR [rsp],xmm2
  00b8f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b95:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b9b:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ba1:    	mov    rdi,QWORD PTR [r14-0x40]
  00ba5: 78 	movabs rax,0x557860aa2e20
  00baf:    	call   rax
  00bb1:    	mov    r15d,eax
  00bb4: 78 	movabs r13,0x557861fbf6f0
  00bbe:    	cmp    QWORD PTR [r13+0x8],0x0
  00bc3:    	je     0x34ea7
  00bc9:    	cmp    r15d,DWORD PTR [r13-0x8]
  00bcd:    	jne    0x34ea7
  00bd3:    	mov    eax,DWORD PTR [rip+0xfffffffffffef6eb]        # 0xffff02c4
  00bd9:    	cmp    DWORD PTR [r13-0x4],eax
  00bdd:    	jne    0x34ea7
  00be3: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00bec:    	mov    rax,QWORD PTR [r14-0x40]
  00bf0:    	mov    QWORD PTR [rsp-0x40],rax
  00bf5: 00 	mov    rdi,0x0
  00bfc: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00c05:    	mov    r13,QWORD PTR [r13+0x8]
  00c09:    	mov    rax,QWORD PTR [r13+0x8]
  00c0d:    	mov    QWORD PTR [rsp-0x30],rax
  00c12:    	mov    rax,QWORD PTR [r13+0x0]
  00c16:    	mov    r13,QWORD PTR [r13+0x10]
  00c1a:    	mov    rsi,QWORD PTR [rbx]
  00c1d:    	mov    QWORD PTR [rsp-0x18],rsi
  00c22:    	lea    rsi,[rsp-0x18]
  00c27:    	mov    QWORD PTR [rbx],rsi
  00c2a:    	lea    r14,[rsp-0x10]
  00c2f:    	mov    QWORD PTR [rsp-0x20],r14
  00c34:    	call   rax
  00c36:    	lea    r14,[rbp-0x8]
  00c3a:    	mov    QWORD PTR [rbx],r14
  00c3d:    	mov    r14,QWORD PTR [rbp-0x10]
  00c41:    	movq   xmm2,QWORD PTR [rsp]
  00c46:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c4c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c52:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c58:    	add    rsp,0x20
  00c5c:    	test   rax,rax
  00c5f:    	je     0x34ee8
  00c65:    	mov    QWORD PTR [r14-0x48],rax
:00053 
:00054 %4 = literal[0.6]
  00c69: 00 	movq   xmm5,QWORD PTR [rip+0xd77]        # 0x19e8
  00c71: 99 	movabs rax,0xff1999999999999a
  00c7b:    	mov    QWORD PTR [r14-0x50],rax
:00055 _%3 = %3 < %4                        [<INVALID>][<INVALID>]
:00056 condnotbr _%3 =>:00068
  00c7f:    	mov    rdi,QWORD PTR [r14-0x48]
  00c83:    	mov    rsi,QWORD PTR [r14-0x50]
  00c87: 00 	test   rdi,0x1
  00c8e:    	je     0x34ef7
  00c94: 00 	test   rsi,0x1
  00c9b:    	je     0x34ef7
  00ca1:    	cmp    rdi,rsi
  00ca4:    	jge    0x35041
:00057 %3 = %2.call z()                     [<INVALID>]
  00caa:    	sub    rsp,0x20
  00cae:    	movq   QWORD PTR [rsp],xmm2
  00cb3:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cb9:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cbf:    	movq   QWORD PTR [rsp+0x18],xmm5
  00cc5:    	mov    rdi,QWORD PTR [r14-0x40]
  00cc9: 78 	movabs rax,0x557860aa2e20
  00cd3:    	call   rax
  00cd5:    	mov    r15d,eax
  00cd8: 78 	movabs r13,0x557861fbf740
  00ce2:    	cmp    QWORD PTR [r13+0x8],0x0
  00ce7:    	je     0x34f4c
  00ced:    	cmp    r15d,DWORD PTR [r13-0x8]
  00cf1:    	jne    0x34f4c
  00cf7:    	mov    eax,DWORD PTR [rip+0xfffffffffffef5c7]        # 0xffff02c4
  00cfd:    	cmp    DWORD PTR [r13-0x4],eax
  00d01:    	jne    0x34f4c
  00d07: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00d10:    	mov    rax,QWORD PTR [r14-0x40]
  00d14:    	mov    QWORD PTR [rsp-0x40],rax
  00d19: 00 	mov    rdi,0x0
  00d20: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00d29:    	mov    r13,QWORD PTR [r13+0x8]
  00d2d:    	mov    rax,QWORD PTR [r13+0x8]
  00d31:    	mov    QWORD PTR [rsp-0x30],rax
  00d36:    	mov    rax,QWORD PTR [r13+0x0]
  00d3a:    	mov    r13,QWORD PTR [r13+0x10]
  00d3e:    	mov    rsi,QWORD PTR [rbx]
  00d41:    	mov    QWORD PTR [rsp-0x18],rsi
  00d46:    	lea    rsi,[rsp-0x18]
  00d4b:    	mov    QWORD PTR [rbx],rsi
  00d4e:    	lea    r14,[rsp-0x10]
  00d53:    	mov    QWORD PTR [rsp-0x20],r14
  00d58:    	call   rax
  00d5a:    	lea    r14,[rbp-0x8]
  00d5e:    	mov    QWORD PTR [rbx],r14
  00d61:    	mov    r14,QWORD PTR [rbp-0x10]
  00d65:    	movq   xmm2,QWORD PTR [rsp]
  00d6a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d70:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d76:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d7c:    	add    rsp,0x20
  00d80:    	test   rax,rax
  00d83:    	je     0x34f8d
  00d89:    	mov    QWORD PTR [r14-0x48],rax
:00058 
:00059 %4 = literal[-0.6]
  00d8d: 00 	movq   xmm5,QWORD PTR [rip+0xc63]        # 0x19f8
  00d95: 99 	movabs rax,0xff1999999999999e
  00d9f:    	mov    QWORD PTR [r14-0x50],rax
:00060 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00061 condnotbr _%3 =>:00068
  00da3:    	mov    rdi,QWORD PTR [r14-0x48]
  00da7:    	mov    rsi,QWORD PTR [r14-0x50]
  00dab: 00 	test   rdi,0x1
  00db2:    	je     0x34f9c
  00db8: 00 	test   rsi,0x1
  00dbf:    	je     0x34f9c
  00dc5:    	cmp    rdi,rsi
  00dc8:    	jle    0x3505a
:00062 %3 = 1: i32
  00dce: 00 	mov    QWORD PTR [r14-0x48],0x3
:00063 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00dd6:    	sub    rsp,0x20
  00dda:    	movq   QWORD PTR [rsp],xmm2
  00ddf:    	movq   QWORD PTR [rsp+0x8],xmm3
  00de5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00deb:    	movq   QWORD PTR [rsp+0x18],xmm5
  00df1:    	mov    rdi,rbx
  00df4:    	mov    rsi,r12
  00df7:    	mov    rdx,QWORD PTR [r14-0x38]
  00dfb:    	mov    rcx,QWORD PTR [r14-0x48]
  00dff: 78 	movabs r8,0x557861fbf798
  00e09: 78 	movabs rax,0x557860b05f40
  00e13:    	call   rax
  00e15:    	movq   xmm2,QWORD PTR [rsp]
  00e1a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e20:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e26:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e2c:    	add    rsp,0x20
  00e30: 78 	movabs r13,0x557861fbf7a0
  00e3a:    	test   rax,rax
  00e3d:    	je     0xfffece2c
  00e43:    	mov    QWORD PTR [r14-0x48],rax
:00064 %4 = literal[1.0]
  00e47: 00 	movq   xmm5,QWORD PTR [rip+0xbb9]        # 0x1a08
  00e4f: 00 	movabs rax,0xff80000000000002
  00e59:    	mov    QWORD PTR [r14-0x50],rax
:00065 _ = %3.call z=(%4; 1)                [<INVALID>]
  00e5d:    	sub    rsp,0x20
  00e61:    	movq   QWORD PTR [rsp],xmm2
  00e66:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e6c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e72:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e78:    	mov    rdi,QWORD PTR [r14-0x48]
  00e7c: 78 	movabs rax,0x557860aa2e20
  00e86:    	call   rax
  00e88:    	mov    r15d,eax
  00e8b: 78 	movabs r13,0x557861fbf7c0
  00e95:    	cmp    QWORD PTR [r13+0x8],0x0
  00e9a:    	je     0x34ff1
  00ea0:    	cmp    r15d,DWORD PTR [r13-0x8]
  00ea4:    	jne    0x34ff1
  00eaa:    	mov    eax,DWORD PTR [rip+0xfffffffffffef414]        # 0xffff02c4
  00eb0:    	cmp    DWORD PTR [r13-0x4],eax
  00eb4:    	jne    0x34ff1
  00eba: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00ec3:    	mov    rax,QWORD PTR [r14-0x48]
  00ec7:    	mov    QWORD PTR [rsp-0x40],rax
  00ecc: 00 	mov    rdi,0x1
  00ed3:    	mov    rax,QWORD PTR [r14-0x50]
  00ed7:    	mov    QWORD PTR [rsp-0x48],rax
  00edc: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00ee5:    	mov    r13,QWORD PTR [r13+0x8]
  00ee9:    	mov    rax,QWORD PTR [r13+0x8]
  00eed:    	mov    QWORD PTR [rsp-0x30],rax
  00ef2:    	mov    rax,QWORD PTR [r13+0x0]
  00ef6:    	mov    r13,QWORD PTR [r13+0x10]
  00efa:    	mov    rsi,QWORD PTR [rbx]
  00efd:    	mov    QWORD PTR [rsp-0x18],rsi
  00f02:    	lea    rsi,[rsp-0x18]
  00f07:    	mov    QWORD PTR [rbx],rsi
  00f0a:    	lea    r14,[rsp-0x10]
  00f0f:    	mov    QWORD PTR [rsp-0x20],r14
  00f14:    	call   rax
  00f16:    	lea    r14,[rbp-0x8]
  00f1a:    	mov    QWORD PTR [rbx],r14
  00f1d:    	mov    r14,QWORD PTR [rbp-0x10]
  00f21:    	movq   xmm2,QWORD PTR [rsp]
  00f26:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f2c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f32:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f38:    	add    rsp,0x20
  00f3c:    	test   rax,rax
  00f3f:    	je     0x35032
:00066 
:00067 br =>:00073
  00f45:    	jmp    0x35120
:00068 %3 = 1: i32
  00f4a: 00 	mov    QWORD PTR [r14-0x48],0x3
:00069 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00f52:    	sub    rsp,0x20
  00f56:    	movq   QWORD PTR [rsp],xmm2
  00f5b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f61:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f67:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f6d:    	mov    rdi,rbx
  00f70:    	mov    rsi,r12
  00f73:    	mov    rdx,QWORD PTR [r14-0x38]
  00f77:    	mov    rcx,QWORD PTR [r14-0x48]
  00f7b: 78 	movabs r8,0x557861fbf7f8
  00f85: 78 	movabs rax,0x557860b05f40
  00f8f:    	call   rax
  00f91:    	movq   xmm2,QWORD PTR [rsp]
  00f96:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f9c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fa2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fa8:    	add    rsp,0x20
  00fac: 78 	movabs r13,0x557861fbf800
  00fb6:    	test   rax,rax
  00fb9:    	je     0xfffece2c
  00fbf:    	mov    QWORD PTR [r14-0x48],rax
:00070 %4 = literal[1.0]
  00fc3: 00 	movq   xmm5,QWORD PTR [rip+0xa4d]        # 0x1a18
  00fcb: 00 	movabs rax,0xff80000000000002
  00fd5:    	mov    QWORD PTR [r14-0x50],rax
:00071 _ = %3.call x=(%4; 1)                [<INVALID>]
  00fd9: 00 	cmp    DWORD PTR [rip+0xa40],0x0        # 0x1a20
  00fe0:    	jl     0x35073
  00fe6:    	je     0x35082
  00fec: 01 	sub    DWORD PTR [rip+0xa2d],0x1        # 0x1a20
  00ff3:    	xor    rdi,rdi
  00ff6:    	jmp    0x35073
  00ffb:    	sub    rsp,0x20
  00fff:    	movq   QWORD PTR [rsp],xmm2
  01004:    	movq   QWORD PTR [rsp+0x8],xmm3
  0100a:    	movq   QWORD PTR [rsp+0x10],xmm4
  01010:    	movq   QWORD PTR [rsp+0x18],xmm5
  01016:    	mov    rdi,QWORD PTR [r14-0x48]
  0101a: 78 	movabs rax,0x557860aa2e20
  01024:    	call   rax
  01026:    	mov    r15d,eax
  01029: 78 	movabs r13,0x557861fbf820
  01033:    	cmp    QWORD PTR [r13+0x8],0x0
  01038:    	je     0x3509e
  0103e:    	cmp    r15d,DWORD PTR [r13-0x8]
  01042:    	jne    0x3509e
  01048:    	mov    eax,DWORD PTR [rip+0xfffffffffffef276]        # 0xffff02c4
  0104e:    	cmp    DWORD PTR [r13-0x4],eax
  01052:    	jne    0x3509e
  01058: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01061:    	mov    rax,QWORD PTR [r14-0x48]
  01065:    	mov    QWORD PTR [rsp-0x40],rax
  0106a: 00 	mov    rdi,0x1
  01071:    	mov    rax,QWORD PTR [r14-0x50]
  01075:    	mov    QWORD PTR [rsp-0x48],rax
  0107a: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01083:    	mov    r13,QWORD PTR [r13+0x8]
  01087:    	mov    rax,QWORD PTR [r13+0x8]
  0108b:    	mov    QWORD PTR [rsp-0x30],rax
  01090:    	mov    rax,QWORD PTR [r13+0x0]
  01094:    	mov    r13,QWORD PTR [r13+0x10]
  01098:    	mov    rsi,QWORD PTR [rbx]
  0109b:    	mov    QWORD PTR [rsp-0x18],rsi
  010a0:    	lea    rsi,[rsp-0x18]
  010a5:    	mov    QWORD PTR [rbx],rsi
  010a8:    	lea    r14,[rsp-0x10]
  010ad:    	mov    QWORD PTR [rsp-0x20],r14
  010b2:    	call   rax
  010b4:    	lea    r14,[rbp-0x8]
  010b8:    	mov    QWORD PTR [rbx],r14
  010bb:    	mov    r14,QWORD PTR [rbp-0x10]
  010bf:    	movq   xmm2,QWORD PTR [rsp]
  010c4:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010ca:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010d0:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010d6:    	add    rsp,0x20
  010da:    	test   rax,rax
  010dd:    	je     0x350df
:00072 
  010e3:    	jmp    0x35139
:00073 %3 = 0: i32
  010e8: 00 	mov    QWORD PTR [r14-0x48],0x1
:00074 %4 = 1: i32
  010f0: 00 	mov    QWORD PTR [r14-0x50],0x3
:00075 %4 = %1.[%4]                         [Array][Integer]
  010f8:    	mov    rdi,QWORD PTR [r14-0x38]
  010fc:    	mov    rsi,QWORD PTR [r14-0x50]
  01100: 00 	test   rdi,0x7
  01107:    	jne    0x35152
  0110d:    	cmp    DWORD PTR [rdi+0x4],0xb
  01111:    	jne    0x35152
  01117: 00 	test   rsi,0x1
  0111e:    	je     0x35152
  01124:    	sar    rsi,1
  01127:    	sub    rsp,0x20
  0112b:    	movq   QWORD PTR [rsp],xmm2
  01130:    	movq   QWORD PTR [rsp+0x8],xmm3
  01136:    	movq   QWORD PTR [rsp+0x10],xmm4
  0113c: 78 	movabs rax,0x557860b06070
  01146:    	call   rax
  01148:    	movq   xmm2,QWORD PTR [rsp]
  0114d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01153:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01159:    	add    rsp,0x20
  0115d: 78 	movabs r13,0x557861fbf860
  01167:    	test   rax,rax
  0116a:    	je     0xfffece2c
  01170:    	mov    QWORD PTR [r14-0x50],rax
:00076 %5 = 2: i32
  01174: 00 	mov    QWORD PTR [r14-0x58],0x5
:00077 %5 = %1.[%5]                         [Array][Integer]
  0117c:    	mov    rdi,QWORD PTR [r14-0x38]
  01180:    	mov    rsi,QWORD PTR [r14-0x58]
  01184: 00 	test   rdi,0x7
  0118b:    	jne    0x35161
  01191:    	cmp    DWORD PTR [rdi+0x4],0xb
  01195:    	jne    0x35161
  0119b: 00 	test   rsi,0x1
  011a2:    	je     0x35161
  011a8:    	sar    rsi,1
  011ab:    	sub    rsp,0x10
  011af:    	movq   QWORD PTR [rsp],xmm3
  011b4:    	movq   QWORD PTR [rsp+0x8],xmm4
  011ba: 78 	movabs rax,0x557860b06070
  011c4:    	call   rax
  011c6:    	movq   xmm3,QWORD PTR [rsp]
  011cb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011d1:    	add    rsp,0x10
  011d5: 78 	movabs r13,0x557861fbf880
  011df:    	test   rax,rax
  011e2:    	je     0xfffece2c
  011e8:    	mov    QWORD PTR [r14-0x58],rax
:00078 %4 = %4.call vcross(%5; 1)           [Vec]
  011ec:    	mov    rdi,QWORD PTR [r14-0x50]
  011f0: 00 	test   rdi,0x7
  011f7:    	jne    0x35170
  011fd:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01201:    	jne    0x35170
  01207: 26 	cmp    DWORD PTR [rip+0xfffffffffffef0b6],0x26        # 0xffff02c4
  0120e:    	jne    0x35170
  01214:    	sub    rsp,0x10
  01218:    	movq   QWORD PTR [rsp],xmm3
  0121d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01223: 00 	cmp    DWORD PTR [rip+0xfffffffffffef09e],0x0        # 0xffff02c8
  0122a:    	je     0x1242
  01230:    	mov    rdi,r12
  01233:    	mov    rsi,QWORD PTR [rbx]
  01236: 78 	movabs rax,0x557860afd140
  01240:    	call   rax
  01242: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0124b:    	mov    rax,QWORD PTR [r14-0x50]
  0124f:    	mov    QWORD PTR [rsp-0x40],rax
  01254: 00 	mov    rdi,0x1
  0125b:    	mov    rax,QWORD PTR [r14-0x58]
  0125f:    	mov    QWORD PTR [rsp-0x48],rax
  01264: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0126d: 08 	movabs rax,0x100080000005c
  01277:    	mov    QWORD PTR [rsp-0x30],rax
  0127c: 78 	movabs r13,0x557861f71470
  01286:    	mov    rsi,QWORD PTR [rbx]
  01289:    	mov    QWORD PTR [rsp-0x18],rsi
  0128e:    	lea    rsi,[rsp-0x18]
  01293:    	mov    QWORD PTR [rbx],rsi
  01296:    	lea    r14,[rsp-0x10]
  0129b:    	mov    QWORD PTR [rsp-0x20],r14
  012a0:    	call   0xffffa02f
  012a5:    	lea    r14,[rbp-0x8]
  012a9:    	mov    QWORD PTR [rbx],r14
  012ac:    	mov    r14,QWORD PTR [rbp-0x10]
  012b0:    	movq   xmm3,QWORD PTR [rsp]
  012b5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012bb:    	add    rsp,0x10
  012bf: 78 	movabs r13,0x557861fbf8a0
  012c9:    	test   rax,rax
  012cc:    	je     0xfffece2c
  012d2:    	mov    QWORD PTR [r14-0x50],rax
:00079 
:00080 %1:.[%3:] = %4
  012d6:    	sub    rsp,0x10
  012da:    	movq   QWORD PTR [rsp],xmm3
  012df:    	movq   QWORD PTR [rsp+0x8],xmm4
  012e5:    	mov    rdx,QWORD PTR [r14-0x38]
  012e9:    	mov    rcx,QWORD PTR [r14-0x48]
  012ed:    	mov    r8,QWORD PTR [r14-0x50]
  012f1:    	mov    rdi,rbx
  012f4:    	mov    rsi,r12
  012f7: 78 	movabs r9,0x557861fbf8a8
  01301: 78 	movabs rax,0x557860b060f0
  0130b:    	call   rax
  0130d:    	movq   xmm3,QWORD PTR [rsp]
  01312:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01318:    	add    rsp,0x10
  0131c: 78 	movabs r13,0x557861fbf8b0
  01326:    	test   rax,rax
  01329:    	je     0xfffece2c
:00081 %3 = 0: i32
  0132f: 00 	mov    QWORD PTR [r14-0x48],0x1
:00082 %4 = 0: i32
  01337: 00 	mov    QWORD PTR [r14-0x50],0x1
:00083 %4 = %1.[%4]                         [Array][Integer]
  0133f:    	mov    rdi,QWORD PTR [r14-0x38]
  01343:    	mov    rsi,QWORD PTR [r14-0x50]
  01347: 00 	test   rdi,0x7
  0134e:    	jne    0x3517f
  01354:    	cmp    DWORD PTR [rdi+0x4],0xb
  01358:    	jne    0x3517f
  0135e: 00 	test   rsi,0x1
  01365:    	je     0x3517f
  0136b:    	sar    rsi,1
  0136e:    	sub    rsp,0x10
  01372:    	movq   QWORD PTR [rsp],xmm3
  01377:    	movq   QWORD PTR [rsp+0x8],xmm4
  0137d: 78 	movabs rax,0x557860b06070
  01387:    	call   rax
  01389:    	movq   xmm3,QWORD PTR [rsp]
  0138e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01394:    	add    rsp,0x10
  01398: 78 	movabs r13,0x557861fbf8e0
  013a2:    	test   rax,rax
  013a5:    	je     0xfffece2c
  013ab:    	mov    QWORD PTR [r14-0x50],rax
:00084 %4 = %4.call vnormalize()            [Vec]
  013af:    	mov    rdi,QWORD PTR [r14-0x50]
  013b3: 00 	test   rdi,0x7
  013ba:    	jne    0x3518e
  013c0:    	cmp    DWORD PTR [rdi+0x4],0x2b
  013c4:    	jne    0x3518e
  013ca: 26 	cmp    DWORD PTR [rip+0xfffffffffffeeef3],0x26        # 0xffff02c4
  013d1:    	jne    0x3518e
  013d7:    	sub    rsp,0x10
  013db:    	movq   QWORD PTR [rsp],xmm3
  013e0:    	movq   QWORD PTR [rsp+0x8],xmm4
  013e6: 00 	cmp    DWORD PTR [rip+0xfffffffffffeeedb],0x0        # 0xffff02c8
  013ed:    	je     0x1405
  013f3:    	mov    rdi,r12
  013f6:    	mov    rsi,QWORD PTR [rbx]
  013f9: 78 	movabs rax,0x557860afd140
  01403:    	call   rax
  01405: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0140e:    	mov    rax,QWORD PTR [r14-0x50]
  01412:    	mov    QWORD PTR [rsp-0x40],rax
  01417: 00 	mov    rdi,0x0
  0141e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01427: 07 	movabs rax,0x100070000005f
  01431:    	mov    QWORD PTR [rsp-0x30],rax
  01436: 78 	movabs r13,0x557861f90e80
  01440:    	mov    rsi,QWORD PTR [rbx]
  01443:    	mov    QWORD PTR [rsp-0x18],rsi
  01448:    	lea    rsi,[rsp-0x18]
  0144d:    	mov    QWORD PTR [rbx],rsi
  01450:    	lea    r14,[rsp-0x10]
  01455:    	mov    QWORD PTR [rsp-0x20],r14
  0145a:    	call   0xffff0b8b
  0145f:    	lea    r14,[rbp-0x8]
  01463:    	mov    QWORD PTR [rbx],r14
  01466:    	mov    r14,QWORD PTR [rbp-0x10]
  0146a:    	movq   xmm3,QWORD PTR [rsp]
  0146f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01475:    	add    rsp,0x10
  01479: 78 	movabs r13,0x557861fbf900
  01483:    	test   rax,rax
  01486:    	je     0xfffece2c
  0148c:    	mov    QWORD PTR [r14-0x50],rax
:00085 
:00086 %1:.[%3:] = %4
  01490:    	sub    rsp,0x10
  01494:    	movq   QWORD PTR [rsp],xmm3
  01499:    	movq   QWORD PTR [rsp+0x8],xmm4
  0149f:    	mov    rdx,QWORD PTR [r14-0x38]
  014a3:    	mov    rcx,QWORD PTR [r14-0x48]
  014a7:    	mov    r8,QWORD PTR [r14-0x50]
  014ab:    	mov    rdi,rbx
  014ae:    	mov    rsi,r12
  014b1: 78 	movabs r9,0x557861fbf908
  014bb: 78 	movabs rax,0x557860b060f0
  014c5:    	call   rax
  014c7:    	movq   xmm3,QWORD PTR [rsp]
  014cc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014d2:    	add    rsp,0x10
  014d6: 78 	movabs r13,0x557861fbf910
  014e0:    	test   rax,rax
  014e3:    	je     0xfffece2c
:00087 %3 = 1: i32
  014e9: 00 	mov    QWORD PTR [r14-0x48],0x3
:00088 %4 = 2: i32
  014f1: 00 	mov    QWORD PTR [r14-0x50],0x5
:00089 %4 = %1.[%4]                         [Array][Integer]
  014f9:    	mov    rdi,QWORD PTR [r14-0x38]
  014fd:    	mov    rsi,QWORD PTR [r14-0x50]
  01501: 00 	test   rdi,0x7
  01508:    	jne    0x3519d
  0150e:    	cmp    DWORD PTR [rdi+0x4],0xb
  01512:    	jne    0x3519d
  01518: 00 	test   rsi,0x1
  0151f:    	je     0x3519d
  01525:    	sar    rsi,1
  01528:    	sub    rsp,0x10
  0152c:    	movq   QWORD PTR [rsp],xmm3
  01531:    	movq   QWORD PTR [rsp+0x8],xmm4
  01537: 78 	movabs rax,0x557860b06070
  01541:    	call   rax
  01543:    	movq   xmm3,QWORD PTR [rsp]
  01548:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0154e:    	add    rsp,0x10
  01552: 78 	movabs r13,0x557861fbf940
  0155c:    	test   rax,rax
  0155f:    	je     0xfffece2c
  01565:    	mov    QWORD PTR [r14-0x50],rax
:00090 %5 = 0: i32
  01569: 00 	mov    QWORD PTR [r14-0x58],0x1
:00091 %5 = %1.[%5]                         [Array][Integer]
  01571:    	mov    rdi,QWORD PTR [r14-0x38]
  01575:    	mov    rsi,QWORD PTR [r14-0x58]
  01579: 00 	test   rdi,0x7
  01580:    	jne    0x351ac
  01586:    	cmp    DWORD PTR [rdi+0x4],0xb
  0158a:    	jne    0x351ac
  01590: 00 	test   rsi,0x1
  01597:    	je     0x351ac
  0159d:    	sar    rsi,1
  015a0:    	sub    rsp,0x10
  015a4:    	movq   QWORD PTR [rsp],xmm3
  015a9:    	movq   QWORD PTR [rsp+0x8],xmm4
  015af: 78 	movabs rax,0x557860b06070
  015b9:    	call   rax
  015bb:    	movq   xmm3,QWORD PTR [rsp]
  015c0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015c6:    	add    rsp,0x10
  015ca: 78 	movabs r13,0x557861fbf960
  015d4:    	test   rax,rax
  015d7:    	je     0xfffece2c
  015dd:    	mov    QWORD PTR [r14-0x58],rax
:00092 %4 = %4.call vcross(%5; 1)           [Vec]
  015e1:    	mov    rdi,QWORD PTR [r14-0x50]
  015e5: 00 	test   rdi,0x7
  015ec:    	jne    0x351bb
  015f2:    	cmp    DWORD PTR [rdi+0x4],0x2b
  015f6:    	jne    0x351bb
  015fc: 26 	cmp    DWORD PTR [rip+0xfffffffffffeecc1],0x26        # 0xffff02c4
  01603:    	jne    0x351bb
  01609:    	sub    rsp,0x10
  0160d:    	movq   QWORD PTR [rsp],xmm3
  01612:    	movq   QWORD PTR [rsp+0x8],xmm4
  01618: 00 	cmp    DWORD PTR [rip+0xfffffffffffeeca9],0x0        # 0xffff02c8
  0161f:    	je     0x1637
  01625:    	mov    rdi,r12
  01628:    	mov    rsi,QWORD PTR [rbx]
  0162b: 78 	movabs rax,0x557860afd140
  01635:    	call   rax
  01637: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01640:    	mov    rax,QWORD PTR [r14-0x50]
  01644:    	mov    QWORD PTR [rsp-0x40],rax
  01649: 00 	mov    rdi,0x1
  01650:    	mov    rax,QWORD PTR [r14-0x58]
  01654:    	mov    QWORD PTR [rsp-0x48],rax
  01659: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01662: 08 	movabs rax,0x100080000005c
  0166c:    	mov    QWORD PTR [rsp-0x30],rax
  01671: 78 	movabs r13,0x557861f71470
  0167b:    	mov    rsi,QWORD PTR [rbx]
  0167e:    	mov    QWORD PTR [rsp-0x18],rsi
  01683:    	lea    rsi,[rsp-0x18]
  01688:    	mov    QWORD PTR [rbx],rsi
  0168b:    	lea    r14,[rsp-0x10]
  01690:    	mov    QWORD PTR [rsp-0x20],r14
  01695:    	call   0xffffa02f
  0169a:    	lea    r14,[rbp-0x8]
  0169e:    	mov    QWORD PTR [rbx],r14
  016a1:    	mov    r14,QWORD PTR [rbp-0x10]
  016a5:    	movq   xmm3,QWORD PTR [rsp]
  016aa:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016b0:    	add    rsp,0x10
  016b4: 78 	movabs r13,0x557861fbf980
  016be:    	test   rax,rax
  016c1:    	je     0xfffece2c
  016c7:    	mov    QWORD PTR [r14-0x50],rax
:00093 
:00094 %1:.[%3:] = %4
  016cb:    	sub    rsp,0x10
  016cf:    	movq   QWORD PTR [rsp],xmm3
  016d4:    	movq   QWORD PTR [rsp+0x8],xmm4
  016da:    	mov    rdx,QWORD PTR [r14-0x38]
  016de:    	mov    rcx,QWORD PTR [r14-0x48]
  016e2:    	mov    r8,QWORD PTR [r14-0x50]
  016e6:    	mov    rdi,rbx
  016e9:    	mov    rsi,r12
  016ec: 78 	movabs r9,0x557861fbf988
  016f6: 78 	movabs rax,0x557860b060f0
  01700:    	call   rax
  01702:    	movq   xmm3,QWORD PTR [rsp]
  01707:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0170d:    	add    rsp,0x10
  01711: 78 	movabs r13,0x557861fbf990
  0171b:    	test   rax,rax
  0171e:    	je     0xfffece2c
:00095 %3 = 1: i32
  01724: 00 	mov    QWORD PTR [r14-0x48],0x3
:00096 %4 = 1: i32
  0172c: 00 	mov    QWORD PTR [r14-0x50],0x3
:00097 %4 = %1.[%4]                         [Array][Integer]
  01734:    	mov    rdi,QWORD PTR [r14-0x38]
  01738:    	mov    rsi,QWORD PTR [r14-0x50]
  0173c: 00 	test   rdi,0x7
  01743:    	jne    0x351ca
  01749:    	cmp    DWORD PTR [rdi+0x4],0xb
  0174d:    	jne    0x351ca
  01753: 00 	test   rsi,0x1
  0175a:    	je     0x351ca
  01760:    	sar    rsi,1
  01763:    	sub    rsp,0x10
  01767:    	movq   QWORD PTR [rsp],xmm3
  0176c:    	movq   QWORD PTR [rsp+0x8],xmm4
  01772: 78 	movabs rax,0x557860b06070
  0177c:    	call   rax
  0177e:    	movq   xmm3,QWORD PTR [rsp]
  01783:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01789:    	add    rsp,0x10
  0178d: 78 	movabs r13,0x557861fbf9c0
  01797:    	test   rax,rax
  0179a:    	je     0xfffece2c
  017a0:    	mov    QWORD PTR [r14-0x50],rax
:00098 %4 = %4.call vnormalize()            [Vec]
  017a4:    	mov    rdi,QWORD PTR [r14-0x50]
  017a8: 00 	test   rdi,0x7
  017af:    	jne    0x351d9
  017b5:    	cmp    DWORD PTR [rdi+0x4],0x2b
  017b9:    	jne    0x351d9
  017bf: 26 	cmp    DWORD PTR [rip+0xfffffffffffeeafe],0x26        # 0xffff02c4
  017c6:    	jne    0x351d9
  017cc:    	sub    rsp,0x10
  017d0:    	movq   QWORD PTR [rsp],xmm3
  017d5:    	movq   QWORD PTR [rsp+0x8],xmm4
  017db: 00 	cmp    DWORD PTR [rip+0xfffffffffffeeae6],0x0        # 0xffff02c8
  017e2:    	je     0x17fa
  017e8:    	mov    rdi,r12
  017eb:    	mov    rsi,QWORD PTR [rbx]
  017ee: 78 	movabs rax,0x557860afd140
  017f8:    	call   rax
  017fa: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01803:    	mov    rax,QWORD PTR [r14-0x50]
  01807:    	mov    QWORD PTR [rsp-0x40],rax
  0180c: 00 	mov    rdi,0x0
  01813: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0181c: 07 	movabs rax,0x100070000005f
  01826:    	mov    QWORD PTR [rsp-0x30],rax
  0182b: 78 	movabs r13,0x557861f90e80
  01835:    	mov    rsi,QWORD PTR [rbx]
  01838:    	mov    QWORD PTR [rsp-0x18],rsi
  0183d:    	lea    rsi,[rsp-0x18]
  01842:    	mov    QWORD PTR [rbx],rsi
  01845:    	lea    r14,[rsp-0x10]
  0184a:    	mov    QWORD PTR [rsp-0x20],r14
  0184f:    	call   0xffff0b8b
  01854:    	lea    r14,[rbp-0x8]
  01858:    	mov    QWORD PTR [rbx],r14
  0185b:    	mov    r14,QWORD PTR [rbp-0x10]
  0185f:    	movq   xmm3,QWORD PTR [rsp]
  01864:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0186a:    	add    rsp,0x10
  0186e: 78 	movabs r13,0x557861fbf9e0
  01878:    	test   rax,rax
  0187b:    	je     0xfffece2c
  01881:    	mov    QWORD PTR [r14-0x50],rax
:00099 
:00100 %1:.[%3:] = %4
  01885:    	sub    rsp,0x10
  01889:    	movq   QWORD PTR [rsp],xmm3
  0188e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01894:    	mov    rdx,QWORD PTR [r14-0x38]
  01898:    	mov    rcx,QWORD PTR [r14-0x48]
  0189c:    	mov    r8,QWORD PTR [r14-0x50]
  018a0:    	mov    rdi,rbx
  018a3:    	mov    rsi,r12
  018a6: 78 	movabs r9,0x557861fbf9e8
  018b0: 78 	movabs rax,0x557860b060f0
  018ba:    	call   rax
  018bc:    	movq   xmm3,QWORD PTR [rsp]
  018c1:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018c7:    	add    rsp,0x10
  018cb: 78 	movabs r13,0x557861fbf9f0
  018d5:    	test   rax,rax
  018d8:    	je     0xfffece2c
:00101 %3 = %4
  018de:    	mov    rax,QWORD PTR [r14-0x50]
  018e2:    	mov    QWORD PTR [r14-0x48],rax
:00102 ret %3
  018e6:    	mov    rax,QWORD PTR [r14-0x48]
  018ea:    	leave  
  018eb:    	ret    
==> start whole compile: <unnamed> FuncId(110) self_class:Scene start:[00000] bytecode:0x557861fb8e50
<== finished compile. elapsed:142.4µs
offset:Pos(85020) code: 8986 bytes  data: 354 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xd0
  0000e:    	cmp    edx,0x1
  00011:    	jge    0x3d
  00017:    	mov    eax,0x1
  0001c:    	sub    eax,edx
  0001e:    	test   rax,rax
  00021:    	je     0x3d
  00027:    	lea    rdi,[r14-0x40]
  0002b: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  00033:    	sub    rax,0x1
  00037:    	jne    0x2b
  0003d: 00 	mov    rax,0x4
  00044:    	mov    QWORD PTR [r14-0x40],rax
  00048:    	mov    QWORD PTR [r14-0x48],rax
  0004c:    	mov    QWORD PTR [r14-0x50],rax
  00050:    	mov    QWORD PTR [r14-0x58],rax
  00054:    	mov    QWORD PTR [r14-0x60],rax
  00058:    	mov    QWORD PTR [r14-0x68],rax
  0005c:    	mov    QWORD PTR [r14-0x70],rax
  00060:    	mov    QWORD PTR [r14-0x78],rax
  00064:    	mov    QWORD PTR [r14-0x80],rax
  00068: ff 	mov    QWORD PTR [r14-0x88],rax
  0006f: ff 	mov    QWORD PTR [r14-0x90],rax
  00076: ff 	mov    QWORD PTR [r14-0x98],rax
  0007d: ff 	mov    QWORD PTR [r14-0xa0],rax
  00084: ff 	mov    QWORD PTR [r14-0xa8],rax
  0008b: ff 	mov    QWORD PTR [r14-0xb0],rax
  00092: ff 	mov    QWORD PTR [r14-0xb8],rax
  00099: ff 	mov    QWORD PTR [r14-0xc0],rax
  000a0:    	mov    rdi,QWORD PTR [r14-0x30]
  000a4: 00 	test   rdi,0x7
  000ab:    	jne    0x337d3
  000b1:    	cmp    DWORD PTR [rdi+0x4],0x35
  000b5:    	jne    0x337d3
:00000 init_block reg:19 arg:1 pos:1 req:1 block:0 stack_offset:13
:00001 %14 = dynvar(4, %1)
  000bb:    	mov    rax,QWORD PTR [r14-0x18]
  000bf:    	mov    rax,QWORD PTR [rax]
  000c2:    	mov    rax,QWORD PTR [rax]
  000c5:    	mov    rax,QWORD PTR [rax]
  000c8:    	mov    rax,QWORD PTR [rax-0x20]
  000cc: ff 	mov    QWORD PTR [r14-0xa0],rax
:00002 %2 = %14.call to_f()                 [Integer]
  000d3: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  000da: 00 	test   rdi,0x1
  000e1:    	je     0x337e2
  000e7: 26 	cmp    DWORD PTR [rip+0xfffffffffffee7b2],0x26        # 0xfffee8a0
  000ee:    	jne    0x337e2
  000f4:    	sar    rdi,1
  000f7:    	cvtsi2sd xmm2,rdi
:00003 
:00004 %14 = dynvar(4, %2)
  000fc:    	mov    rax,QWORD PTR [r14-0x18]
  00100:    	mov    rax,QWORD PTR [rax]
  00103:    	mov    rax,QWORD PTR [rax]
  00106:    	mov    rax,QWORD PTR [rax]
  00109:    	mov    rax,QWORD PTR [rax-0x28]
  0010d: ff 	mov    QWORD PTR [r14-0xa0],rax
:00005 %3 = %14.call to_f()                 [Integer]
  00114: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0011b: 00 	test   rdi,0x1
  00122:    	je     0x337f1
  00128: 26 	cmp    DWORD PTR [rip+0xfffffffffffee771],0x26        # 0xfffee8a0
  0012f:    	jne    0x337f1
  00135:    	sar    rdi,1
  00138:    	cvtsi2sd xmm3,rdi
:00006 
:00007 %14 = dynvar(2, %1)
  0013d:    	mov    rax,QWORD PTR [r14-0x18]
  00141:    	mov    rax,QWORD PTR [rax]
  00144:    	mov    rax,QWORD PTR [rax-0x20]
  00148: ff 	mov    QWORD PTR [r14-0xa0],rax
:00008 %4 = %14.call to_f()                 [Integer]
  0014f: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00156: 00 	test   rdi,0x1
  0015d:    	je     0x3380d
  00163: 26 	cmp    DWORD PTR [rip+0xfffffffffffee736],0x26        # 0xfffee8a0
  0016a:    	jne    0x3380d
  00170:    	sar    rdi,1
  00173:    	cvtsi2sd xmm4,rdi
:00009 
:00010 %14 = dynvar(3, %1)
  00178:    	mov    rax,QWORD PTR [r14-0x18]
  0017c:    	mov    rax,QWORD PTR [rax]
  0017f:    	mov    rax,QWORD PTR [rax]
  00182:    	mov    rax,QWORD PTR [rax-0x20]
  00186: ff 	mov    QWORD PTR [r14-0xa0],rax
:00011 %5 = %14.call to_f()                 [Integer]
  0018d: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00194: 00 	test   rdi,0x1
  0019b:    	je     0x33836
  001a1: 26 	cmp    DWORD PTR [rip+0xfffffffffffee6f8],0x26        # 0xfffee8a0
  001a8:    	jne    0x33836
  001ae:    	sar    rdi,1
  001b1:    	cvtsi2sd xmm5,rdi
:00012 
:00013 %6 = %1.call to_f()                  [Integer]
  001b6:    	mov    rdi,QWORD PTR [r14-0x38]
  001ba: 00 	test   rdi,0x1
  001c1:    	je     0x3386c
  001c7: 26 	cmp    DWORD PTR [rip+0xfffffffffffee6d2],0x26        # 0xfffee8a0
  001ce:    	jne    0x3386c
  001d4:    	sar    rdi,1
  001d7:    	cvtsi2sd xmm6,rdi
:00014 
:00015 %14 = dynvar(1, %1)
  001dc:    	mov    rax,QWORD PTR [r14-0x18]
  001e0:    	mov    rax,QWORD PTR [rax-0x20]
  001e4: ff 	mov    QWORD PTR [r14-0xa0],rax
:00016 %7 = %14.call to_f()                 [Integer]
  001eb: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  001f2: 00 	test   rdi,0x1
  001f9:    	je     0x338af
  001ff: 26 	cmp    DWORD PTR [rip+0xfffffffffffee69a],0x26        # 0xfffee8a0
  00206:    	jne    0x338af
  0020c:    	sar    rdi,1
  0020f:    	cvtsi2sd xmm7,rdi
:00017 
:00018 %14 = dynvar(4, %4)
  00214:    	mov    rax,QWORD PTR [r14-0x18]
  00218:    	mov    rax,QWORD PTR [rax]
  0021b:    	mov    rax,QWORD PTR [rax]
  0021e:    	mov    rax,QWORD PTR [rax]
  00221:    	mov    rax,QWORD PTR [rax-0x38]
  00225: ff 	mov    QWORD PTR [r14-0xa0],rax
:00019 %14 = %6 / %14                       [Float][Float]
  0022c: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00233: 00 	test   rdi,0x1
  0023a:    	jne    0x338ff
  00240: 00 	test   rdi,0x2
  00247:    	je     0x284
  0024d:    	xorps  xmm8,xmm8
  00251: 00 	movabs rax,0x8000000000000002
  0025b:    	cmp    rdi,rax
  0025e:    	je     0x297
  00264:    	mov    rax,rdi
  00267:    	sar    rax,0x3f
  0026b:    	add    rax,0x2
  0026f:    	and    rdi,0xfffffffffffffffc
  00273:    	or     rdi,rax
  00276:    	rol    rdi,0x3d
  0027a:    	movq   xmm8,rdi
  0027f:    	jmp    0x297
  00284:    	call   0xfffeb461
  00289:    	test   rax,rax
  0028c:    	je     0x338ff
  00292:    	movq   xmm8,xmm0
  00297:    	movq   rax,xmm8
  0029c:    	test   rax,rax
  0029f:    	je     0xfffeb42d
  002a5:    	movq   xmm0,xmm6
  002a9:    	divsd  xmm0,xmm8
  002ae:    	movq   xmm8,xmm0
:00020 %14 = %4 + %14                       [Float][Float]
  002b3:    	addsd  xmm8,xmm4
:00021 %15 = literal[2.0]
  002b8: 20 	movq   xmm9,QWORD PTR [rip+0x2063]        # 0x2324
  002c1: 00 	mov    rax,0x2
  002c8: ff 	mov    QWORD PTR [r14-0xa8],rax
:00022 %15 = %2 / %15                       [Float][Float]
  002cf:    	movq   rax,xmm9
  002d4:    	test   rax,rax
  002d7:    	je     0xfffeb42d
  002dd:    	movq   xmm0,xmm2
  002e1:    	divsd  xmm0,xmm9
  002e6:    	movq   xmm9,xmm0
:00023 %14 = %14 - %15                      [Float][Float]
  002eb:    	subsd  xmm8,xmm9
:00024 %15 = literal[2.0]
  002f0: 20 	movq   xmm9,QWORD PTR [rip+0x203b]        # 0x2334
  002f9: 00 	mov    rax,0x2
  00300: ff 	mov    QWORD PTR [r14-0xa8],rax
:00025 %15 = %2 / %15                       [Float][Float]
  00307:    	movq   rax,xmm9
  0030c:    	test   rax,rax
  0030f:    	je     0xfffeb42d
  00315:    	movq   xmm0,xmm2
  00319:    	divsd  xmm0,xmm9
  0031e:    	movq   xmm9,xmm0
:00026 %8 = %14 / %15                       [Float][Float]
  00323:    	movq   xmm10,xmm8
  00328:    	movq   rax,xmm9
  0032d:    	test   rax,rax
  00330:    	je     0xfffeb42d
  00336:    	divsd  xmm10,xmm9
:00027 %14 = dynvar(4, %4)
  0033b:    	mov    rax,QWORD PTR [r14-0x18]
  0033f:    	mov    rax,QWORD PTR [rax]
  00342:    	mov    rax,QWORD PTR [rax]
  00345:    	mov    rax,QWORD PTR [rax]
  00348:    	mov    rax,QWORD PTR [rax-0x38]
  0034c: ff 	mov    QWORD PTR [r14-0xa0],rax
:00028 %14 = %7 / %14                       [Float][Float]
  00353: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0035a: 00 	test   rdi,0x1
  00361:    	jne    0x3395c
  00367: 00 	test   rdi,0x2
  0036e:    	je     0x3ab
  00374:    	xorps  xmm8,xmm8
  00378: 00 	movabs rax,0x8000000000000002
  00382:    	cmp    rdi,rax
  00385:    	je     0x3be
  0038b:    	mov    rax,rdi
  0038e:    	sar    rax,0x3f
  00392:    	add    rax,0x2
  00396:    	and    rdi,0xfffffffffffffffc
  0039a:    	or     rdi,rax
  0039d:    	rol    rdi,0x3d
  003a1:    	movq   xmm8,rdi
  003a6:    	jmp    0x3be
  003ab:    	call   0xfffeb461
  003b0:    	test   rax,rax
  003b3:    	je     0x3395c
  003b9:    	movq   xmm8,xmm0
  003be:    	movq   rax,xmm8
  003c3:    	test   rax,rax
  003c6:    	je     0xfffeb42d
  003cc:    	movq   xmm0,xmm7
  003d0:    	divsd  xmm0,xmm8
  003d5:    	movq   xmm8,xmm0
:00029 %14 = %5 + %14                       [Float][Float]
  003da:    	addsd  xmm8,xmm5
:00030 %15 = literal[2.0]
  003df: 1f 	movq   xmm9,QWORD PTR [rip+0x1f5c]        # 0x2344
  003e8: 00 	mov    rax,0x2
  003ef: ff 	mov    QWORD PTR [r14-0xa8],rax
:00031 %15 = %3 / %15                       [Float][Float]
  003f6:    	movq   rax,xmm9
  003fb:    	test   rax,rax
  003fe:    	je     0xfffeb42d
  00404:    	movq   xmm0,xmm3
  00408:    	divsd  xmm0,xmm9
  0040d:    	movq   xmm9,xmm0
:00032 %14 = %14 - %15                      [Float][Float]
  00412:    	subsd  xmm8,xmm9
:00033 %14 = neg %14                        [Float]
  00417: 00 	xorps  xmm8,XMMWORD PTR [rip+0x1f35]        # 0x2354
:00034 %15 = literal[2.0]
  0041f: 1f 	movq   xmm9,QWORD PTR [rip+0x1f3c]        # 0x2364
  00428: 00 	mov    rax,0x2
  0042f: ff 	mov    QWORD PTR [r14-0xa8],rax
:00035 %15 = %3 / %15                       [Float][Float]
  00436:    	movq   rax,xmm9
  0043b:    	test   rax,rax
  0043e:    	je     0xfffeb42d
  00444:    	movq   xmm0,xmm3
  00448:    	divsd  xmm0,xmm9
  0044d:    	movq   xmm9,xmm0
:00036 %9 = %14 / %15                       [Float][Float]
  00452:    	movq   xmm11,xmm8
  00457:    	movq   rax,xmm9
  0045c:    	test   rax,rax
  0045f:    	je     0xfffeb42d
  00465:    	divsd  xmm11,xmm9
:00037 %14 = const[Vec]                     [Vec]
  0046a: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffee443]        # 0xfffee8b4
  00471: 00 	cmp    rax,QWORD PTR [rip+0x1f0c]        # 0x2384
  00478:    	jne    0x339d8
  0047e: 00 	mov    rax,QWORD PTR [rip+0x1eef]        # 0x2374
  00485: ff 	mov    QWORD PTR [r14-0xa0],rax
:00038 %15 = %8
:00039 %16 = %9
:00040 %17 = literal[-1.0]
  0048c: 1e 	movq   xmm8,QWORD PTR [rip+0x1eff]        # 0x2394
  00495: 00 	movabs rax,0xff80000000000006
  0049f: ff 	mov    QWORD PTR [r14-0xb8],rax
:00041 %14 = %14.call new(%15; 3)           [#<Class:Vec>]
  004a6:    	movq   xmm0,xmm10
  004ab:    	call   0xfffeb585
  004b0: ff 	mov    QWORD PTR [r14-0xa8],rax
  004b7:    	movq   xmm0,xmm11
  004bc:    	call   0xfffeb585
  004c1: ff 	mov    QWORD PTR [r14-0xb0],rax
  004c8: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  004cf: 00 	test   rdi,0x7
  004d6:    	jne    0x33a96
  004dc:    	cmp    DWORD PTR [rdi+0x4],0x2c
  004e0:    	jne    0x33a96
  004e6: 26 	cmp    DWORD PTR [rip+0xfffffffffffee3b3],0x26        # 0xfffee8a0
  004ed:    	jne    0x33a96
  004f3: 00 	mov    r9,0x0
  004fa:    	sub    rsp,0x50
  004fe:    	movq   QWORD PTR [rsp],xmm2
  00503:    	movq   QWORD PTR [rsp+0x8],xmm3
  00509:    	movq   QWORD PTR [rsp+0x10],xmm4
  0050f:    	movq   QWORD PTR [rsp+0x18],xmm5
  00515:    	movq   QWORD PTR [rsp+0x20],xmm6
  0051b:    	movq   QWORD PTR [rsp+0x28],xmm7
  00521: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00528: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0052f: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00536:    	mov    rdx,rdi
  00539:    	mov    QWORD PTR [rsp-0x40],rcx
  0053e: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00547: ff 	lea    rcx,[r14-0xa8]
  0054e: 00 	mov    r8,0x3
  00555:    	mov    rsi,QWORD PTR [rbx]
  00558:    	mov    QWORD PTR [rsp-0x18],rsi
  0055d:    	lea    rsi,[rsp-0x18]
  00562:    	mov    QWORD PTR [rbx],rsi
  00565:    	lea    r14,[rsp-0x10]
  0056a:    	mov    QWORD PTR [rsp-0x20],r14
  0056f:    	call   0x33b0f
  00574:    	lea    r14,[rbp-0x8]
  00578:    	mov    QWORD PTR [rbx],r14
  0057b:    	mov    r14,QWORD PTR [rbp-0x10]
  0057f:    	movq   xmm2,QWORD PTR [rsp]
  00584:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0058a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00590:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00596:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0059c:    	movq   xmm7,QWORD PTR [rsp+0x28]
  005a2: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  005a9: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  005b0: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  005b7:    	add    rsp,0x50
  005bb: 78 	movabs r13,0x557861fb9100
  005c5:    	test   rax,rax
  005c8:    	je     0xfffeb408
  005ce: ff 	mov    QWORD PTR [r14-0xa0],rax
:00042 
:00043 %10 = %14.call vnormalize()          [Vec]
  005d5: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  005dc: 00 	test   rdi,0x7
  005e3:    	jne    0x33b41
  005e9:    	cmp    DWORD PTR [rdi+0x4],0x2b
  005ed:    	jne    0x33b41
  005f3: 26 	cmp    DWORD PTR [rip+0xfffffffffffee2a6],0x26        # 0xfffee8a0
  005fa:    	jne    0x33b41
  00600:    	sub    rsp,0x50
  00604:    	movq   QWORD PTR [rsp],xmm2
  00609:    	movq   QWORD PTR [rsp+0x8],xmm3
  0060f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00615:    	movq   QWORD PTR [rsp+0x18],xmm5
  0061b:    	movq   QWORD PTR [rsp+0x20],xmm6
  00621:    	movq   QWORD PTR [rsp+0x28],xmm7
  00627: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0062e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00635: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0063c: 00 	cmp    DWORD PTR [rip+0xfffffffffffee261],0x0        # 0xfffee8a4
  00643:    	je     0x65b
  00649:    	mov    rdi,r12
  0064c:    	mov    rsi,QWORD PTR [rbx]
  0064f: 78 	movabs rax,0x557860afd140
  00659:    	call   rax
  0065b: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00664: ff 	mov    rax,QWORD PTR [r14-0xa0]
  0066b:    	mov    QWORD PTR [rsp-0x40],rax
  00670: 00 	mov    rdi,0x0
  00677: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00680: 07 	movabs rax,0x100070000005f
  0068a:    	mov    QWORD PTR [rsp-0x30],rax
  0068f: 78 	movabs r13,0x557861f90e80
  00699:    	mov    rsi,QWORD PTR [rbx]
  0069c:    	mov    QWORD PTR [rsp-0x18],rsi
  006a1:    	lea    rsi,[rsp-0x18]
  006a6:    	mov    QWORD PTR [rbx],rsi
  006a9:    	lea    r14,[rsp-0x10]
  006ae:    	mov    QWORD PTR [rsp-0x20],r14
  006b3:    	call   0xfffef167
  006b8:    	lea    r14,[rbp-0x8]
  006bc:    	mov    QWORD PTR [rbx],r14
  006bf:    	mov    r14,QWORD PTR [rbp-0x10]
  006c3:    	movq   xmm2,QWORD PTR [rsp]
  006c8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006ce:    	movq   xmm4,QWORD PTR [rsp+0x10]
  006d4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  006da:    	movq   xmm6,QWORD PTR [rsp+0x20]
  006e0:    	movq   xmm7,QWORD PTR [rsp+0x28]
  006e6: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  006ed: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  006f4: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  006fb:    	add    rsp,0x50
  006ff: 78 	movabs r13,0x557861fb9120
  00709:    	test   rax,rax
  0070c:    	je     0xfffeb408
  00712:    	mov    QWORD PTR [r14-0x80],rax
:00044 
:00045 %14 = const[Ray]                     [Ray]
  00716: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffee197]        # 0xfffee8b4
  0071d: 00 	cmp    rax,QWORD PTR [rip+0x1c90]        # 0x23b4
  00724:    	jne    0x33bba
  0072a: 00 	mov    rax,QWORD PTR [rip+0x1c73]        # 0x23a4
  00731: ff 	mov    QWORD PTR [r14-0xa0],rax
:00046 %15 = const[Vec]                     [Vec]
  00738: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffee175]        # 0xfffee8b4
  0073f: 00 	cmp    rax,QWORD PTR [rip+0x1c8e]        # 0x23d4
  00746:    	jne    0x33c78
  0074c: 00 	mov    rax,QWORD PTR [rip+0x1c71]        # 0x23c4
  00753: ff 	mov    QWORD PTR [r14-0xa8],rax
:00047 %16 = literal[0.0]
  0075a: 1c 	movq   xmm9,QWORD PTR [rip+0x1c81]        # 0x23e4
  00763: 00 	movabs rax,0x8000000000000002
  0076d: ff 	mov    QWORD PTR [r14-0xb0],rax
:00048 %17 = literal[0.0]
  00774: 1c 	movq   xmm8,QWORD PTR [rip+0x1c77]        # 0x23f4
  0077d: 00 	movabs rax,0x8000000000000002
  00787: ff 	mov    QWORD PTR [r14-0xb8],rax
:00049 %18 = literal[0.0]
  0078e: 1c 	movq   xmm12,QWORD PTR [rip+0x1c6d]        # 0x2404
  00797: 00 	movabs rax,0x8000000000000002
  007a1: ff 	mov    QWORD PTR [r14-0xc0],rax
:00050 %15 = %15.call new(%16; 3)           [#<Class:Vec>]
  007a8: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  007af: 00 	test   rdi,0x7
  007b6:    	jne    0x33d36
  007bc:    	cmp    DWORD PTR [rdi+0x4],0x2c
  007c0:    	jne    0x33d36
  007c6: 26 	cmp    DWORD PTR [rip+0xfffffffffffee0d3],0x26        # 0xfffee8a0
  007cd:    	jne    0x33d36
  007d3: 00 	mov    r9,0x0
  007da:    	sub    rsp,0x60
  007de:    	movq   QWORD PTR [rsp],xmm2
  007e3:    	movq   QWORD PTR [rsp+0x8],xmm3
  007e9:    	movq   QWORD PTR [rsp+0x10],xmm4
  007ef:    	movq   QWORD PTR [rsp+0x18],xmm5
  007f5:    	movq   QWORD PTR [rsp+0x20],xmm6
  007fb:    	movq   QWORD PTR [rsp+0x28],xmm7
  00801: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00808: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  0080f: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  00816: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  0081d: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  00824:    	mov    rdx,rdi
  00827:    	mov    QWORD PTR [rsp-0x40],rcx
  0082c: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00835: ff 	lea    rcx,[r14-0xb0]
  0083c: 00 	mov    r8,0x3
  00843:    	mov    rsi,QWORD PTR [rbx]
  00846:    	mov    QWORD PTR [rsp-0x18],rsi
  0084b:    	lea    rsi,[rsp-0x18]
  00850:    	mov    QWORD PTR [rbx],rsi
  00853:    	lea    r14,[rsp-0x10]
  00858:    	mov    QWORD PTR [rsp-0x20],r14
  0085d:    	call   0x33daf
  00862:    	lea    r14,[rbp-0x8]
  00866:    	mov    QWORD PTR [rbx],r14
  00869:    	mov    r14,QWORD PTR [rbp-0x10]
  0086d:    	movq   xmm2,QWORD PTR [rsp]
  00872:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00878:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0087e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00884:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0088a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00890: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00897: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0089e: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  008a5: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  008ac: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  008b3:    	add    rsp,0x60
  008b7: 78 	movabs r13,0x557861fb9190
  008c1:    	test   rax,rax
  008c4:    	je     0xfffeb408
  008ca: ff 	mov    QWORD PTR [r14-0xa8],rax
:00051 
:00052 %16 = %10
  008d1:    	mov    rax,QWORD PTR [r14-0x80]
  008d5: ff 	mov    QWORD PTR [r14-0xb0],rax
:00053 %11 = %14.call new(%15; 2)           [#<Class:Ray>]
  008dc: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  008e3: 00 	test   rdi,0x7
  008ea:    	jne    0x33de1
  008f0:    	cmp    DWORD PTR [rdi+0x4],0x32
  008f4:    	jne    0x33de1
  008fa: 26 	cmp    DWORD PTR [rip+0xfffffffffffedf9f],0x26        # 0xfffee8a0
  00901:    	jne    0x33de1
  00907: 00 	mov    r9,0x0
  0090e:    	sub    rsp,0x50
  00912:    	movq   QWORD PTR [rsp],xmm2
  00917:    	movq   QWORD PTR [rsp+0x8],xmm3
  0091d:    	movq   QWORD PTR [rsp+0x10],xmm4
  00923:    	movq   QWORD PTR [rsp+0x18],xmm5
  00929:    	movq   QWORD PTR [rsp+0x20],xmm6
  0092f:    	movq   QWORD PTR [rsp+0x28],xmm7
  00935: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0093c: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00943: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0094a: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00951:    	mov    rdx,rdi
  00954:    	mov    QWORD PTR [rsp-0x40],rcx
  00959: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00962: ff 	lea    rcx,[r14-0xa8]
  00969: 00 	mov    r8,0x2
  00970:    	mov    rsi,QWORD PTR [rbx]
  00973:    	mov    QWORD PTR [rsp-0x18],rsi
  00978:    	lea    rsi,[rsp-0x18]
  0097d:    	mov    QWORD PTR [rbx],rsi
  00980:    	lea    r14,[rsp-0x10]
  00985:    	mov    QWORD PTR [rsp-0x20],r14
  0098a:    	call   0x33e5a
  0098f:    	lea    r14,[rbp-0x8]
  00993:    	mov    QWORD PTR [rbx],r14
  00996:    	mov    r14,QWORD PTR [rbp-0x10]
  0099a:    	movq   xmm2,QWORD PTR [rsp]
  0099f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009a5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009ab:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009b1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  009b7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  009bd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  009c4: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  009cb: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  009d2: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  009d9:    	add    rsp,0x50
  009dd: 78 	movabs r13,0x557861fb91c0
  009e7:    	test   rax,rax
  009ea:    	je     0xfffeb408
  009f0: ff 	mov    QWORD PTR [r14-0x88],rax
:00054 
:00055 %14 = const[Isect]                   [Isect]
  009f7: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffedeb6]        # 0xfffee8b4
  009fe: 00 	cmp    rax,QWORD PTR [rip+0x1a1f]        # 0x2424
  00a05:    	jne    0x33e8c
  00a0b: 00 	mov    rax,QWORD PTR [rip+0x1a02]        # 0x2414
  00a12: ff 	mov    QWORD PTR [r14-0xa0],rax
:00056 %12 = %14.call new()                 [#<Class:Isect>]
  00a19: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00a20: 00 	test   rdi,0x7
  00a27:    	jne    0x33f58
  00a2d:    	cmp    DWORD PTR [rdi+0x4],0x34
  00a31:    	jne    0x33f58
  00a37: 26 	cmp    DWORD PTR [rip+0xfffffffffffede62],0x26        # 0xfffee8a0
  00a3e:    	jne    0x33f58
  00a44: 00 	mov    r9,0x0
  00a4b:    	sub    rsp,0x50
  00a4f:    	movq   QWORD PTR [rsp],xmm2
  00a54:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a5a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a60:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a66:    	movq   QWORD PTR [rsp+0x20],xmm6
  00a6c:    	movq   QWORD PTR [rsp+0x28],xmm7
  00a72: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00a79: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00a80: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00a87: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00a8e:    	mov    rdx,rdi
  00a91:    	mov    QWORD PTR [rsp-0x40],rcx
  00a96: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00a9f: ff 	lea    rcx,[r14-0xa8]
  00aa6: 00 	mov    r8,0x0
  00aad:    	mov    rsi,QWORD PTR [rbx]
  00ab0:    	mov    QWORD PTR [rsp-0x18],rsi
  00ab5:    	lea    rsi,[rsp-0x18]
  00aba:    	mov    QWORD PTR [rbx],rsi
  00abd:    	lea    r14,[rsp-0x10]
  00ac2:    	mov    QWORD PTR [rsp-0x20],r14
  00ac7:    	call   0x33fd1
  00acc:    	lea    r14,[rbp-0x8]
  00ad0:    	mov    QWORD PTR [rbx],r14
  00ad3:    	mov    r14,QWORD PTR [rbp-0x10]
  00ad7:    	movq   xmm2,QWORD PTR [rsp]
  00adc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ae2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ae8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00aee:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00af4:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00afa: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00b01: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00b08: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00b0f: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  00b16:    	add    rsp,0x50
  00b1a: 78 	movabs r13,0x557861fb91f0
  00b24:    	test   rax,rax
  00b27:    	je     0xfffeb408
  00b2d: ff 	mov    QWORD PTR [r14-0x90],rax
:00057 
:00058 %14 = @spheres: Scene[IvarId(0)]
  00b34:    	mov    rdi,QWORD PTR [r14-0x30]
  00b38:    	mov    rax,QWORD PTR [rdi+0x10]
  00b3c: ff 	mov    QWORD PTR [r14-0xa0],rax
:00059 %15 = 0: i32
  00b43: ff 	mov    QWORD PTR [r14-0xa8],0x1
:00060 %14 = %14.[%15]                      [Array][Integer]
  00b4e: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00b55: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00b5c: 00 	test   rdi,0x7
  00b63:    	jne    0x34003
  00b69:    	cmp    DWORD PTR [rdi+0x4],0xb
  00b6d:    	jne    0x34003
  00b73: 00 	test   rsi,0x1
  00b7a:    	je     0x34003
  00b80:    	sar    rsi,1
  00b83:    	sub    rsp,0x50
  00b87:    	movq   QWORD PTR [rsp],xmm2
  00b8c:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b92:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b98:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b9e:    	movq   QWORD PTR [rsp+0x20],xmm6
  00ba4:    	movq   QWORD PTR [rsp+0x28],xmm7
  00baa: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00bb1: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00bb8: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00bbf: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00bc6: 78 	movabs rax,0x557860b06070
  00bd0:    	call   rax
  00bd2:    	movq   xmm2,QWORD PTR [rsp]
  00bd7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00bdd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00be3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00be9:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00bef:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00bf5: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00bfc: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00c03: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00c0a: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  00c11:    	add    rsp,0x50
  00c15: 78 	movabs r13,0x557861fb9220
  00c1f:    	test   rax,rax
  00c22:    	je     0xfffeb408
  00c28: ff 	mov    QWORD PTR [r14-0xa0],rax
:00061 %15 = %11
  00c2f: ff 	mov    rax,QWORD PTR [r14-0x88]
  00c36: ff 	mov    QWORD PTR [r14-0xa8],rax
:00062 %16 = %12
  00c3d: ff 	mov    rax,QWORD PTR [r14-0x90]
  00c44: ff 	mov    QWORD PTR [r14-0xb0],rax
:00063 _ = %14.call intersect(%15; 2)       [Sphere]
  00c4b: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00c52: 00 	test   rdi,0x7
  00c59:    	jne    0x3407c
  00c5f:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00c63:    	jne    0x3407c
  00c69: 26 	cmp    DWORD PTR [rip+0xfffffffffffedc30],0x26        # 0xfffee8a0
  00c70:    	jne    0x3407c
  00c76:    	sub    rsp,0x50
  00c7a:    	movq   QWORD PTR [rsp],xmm2
  00c7f:    	movq   QWORD PTR [rsp+0x8],xmm3
  00c85:    	movq   QWORD PTR [rsp+0x10],xmm4
  00c8b:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c91:    	movq   QWORD PTR [rsp+0x20],xmm6
  00c97:    	movq   QWORD PTR [rsp+0x28],xmm7
  00c9d: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00ca4: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00cab: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00cb2: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00cb9: 00 	cmp    DWORD PTR [rip+0xfffffffffffedbe4],0x0        # 0xfffee8a4
  00cc0:    	je     0xcd8
  00cc6:    	mov    rdi,r12
  00cc9:    	mov    rsi,QWORD PTR [rbx]
  00ccc: 78 	movabs rax,0x557860afd140
  00cd6:    	call   rax
  00cd8: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00ce1: ff 	mov    rax,QWORD PTR [r14-0xa0]
  00ce8:    	mov    QWORD PTR [rsp-0x40],rax
  00ced: 00 	mov    rdi,0x2
  00cf4: ff 	mov    rax,QWORD PTR [r14-0xa8]
  00cfb:    	mov    QWORD PTR [rsp-0x48],rax
  00d00: ff 	mov    rax,QWORD PTR [r14-0xb0]
  00d07:    	mov    QWORD PTR [rsp-0x50],rax
  00d0c: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00d15: 0e 	movabs rax,0x1000e00000061
  00d1f:    	mov    QWORD PTR [rsp-0x30],rax
  00d24: 78 	movabs r13,0x557861f78680
  00d2e:    	mov    rsi,QWORD PTR [rbx]
  00d31:    	mov    QWORD PTR [rsp-0x18],rsi
  00d36:    	lea    rsi,[rsp-0x18]
  00d3b:    	mov    QWORD PTR [rbx],rsi
  00d3e:    	lea    r14,[rsp-0x10]
  00d43:    	mov    QWORD PTR [rsp-0x20],r14
  00d48:    	call   0xfffef460
  00d4d:    	lea    r14,[rbp-0x8]
  00d51:    	mov    QWORD PTR [rbx],r14
  00d54:    	mov    r14,QWORD PTR [rbp-0x10]
  00d58:    	movq   xmm2,QWORD PTR [rsp]
  00d5d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d63:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d69:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d6f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00d75:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00d7b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00d82: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00d89: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00d90: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  00d97:    	add    rsp,0x50
  00d9b: 78 	movabs r13,0x557861fb9260
  00da5:    	test   rax,rax
  00da8:    	je     0xfffeb408
:00064 
:00065 %14 = @spheres: Scene[IvarId(0)]
  00dae:    	mov    rdi,QWORD PTR [r14-0x30]
  00db2:    	mov    rax,QWORD PTR [rdi+0x10]
  00db6: ff 	mov    QWORD PTR [r14-0xa0],rax
:00066 %15 = 1: i32
  00dbd: ff 	mov    QWORD PTR [r14-0xa8],0x3
:00067 %14 = %14.[%15]                      [Array][Integer]
  00dc8: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00dcf: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00dd6: 00 	test   rdi,0x7
  00ddd:    	jne    0x340f5
  00de3:    	cmp    DWORD PTR [rdi+0x4],0xb
  00de7:    	jne    0x340f5
  00ded: 00 	test   rsi,0x1
  00df4:    	je     0x340f5
  00dfa:    	sar    rsi,1
  00dfd:    	sub    rsp,0x50
  00e01:    	movq   QWORD PTR [rsp],xmm2
  00e06:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e0c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e12:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e18:    	movq   QWORD PTR [rsp+0x20],xmm6
  00e1e:    	movq   QWORD PTR [rsp+0x28],xmm7
  00e24: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00e2b: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00e32: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00e39: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00e40: 78 	movabs rax,0x557860b06070
  00e4a:    	call   rax
  00e4c:    	movq   xmm2,QWORD PTR [rsp]
  00e51:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e57:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e5d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e63:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00e69:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00e6f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00e76: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  00e7d: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  00e84: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  00e8b:    	add    rsp,0x50
  00e8f: 78 	movabs r13,0x557861fb9290
  00e99:    	test   rax,rax
  00e9c:    	je     0xfffeb408
  00ea2: ff 	mov    QWORD PTR [r14-0xa0],rax
:00068 %15 = %11
  00ea9: ff 	mov    rax,QWORD PTR [r14-0x88]
  00eb0: ff 	mov    QWORD PTR [r14-0xa8],rax
:00069 %16 = %12
  00eb7: ff 	mov    rax,QWORD PTR [r14-0x90]
  00ebe: ff 	mov    QWORD PTR [r14-0xb0],rax
:00070 _ = %14.call intersect(%15; 2)       [Sphere]
  00ec5: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00ecc: 00 	test   rdi,0x7
  00ed3:    	jne    0x3416e
  00ed9:    	cmp    DWORD PTR [rdi+0x4],0x2d
  00edd:    	jne    0x3416e
  00ee3: 26 	cmp    DWORD PTR [rip+0xfffffffffffed9b6],0x26        # 0xfffee8a0
  00eea:    	jne    0x3416e
  00ef0:    	sub    rsp,0x50
  00ef4:    	movq   QWORD PTR [rsp],xmm2
  00ef9:    	movq   QWORD PTR [rsp+0x8],xmm3
  00eff:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f05:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f0b:    	movq   QWORD PTR [rsp+0x20],xmm6
  00f11:    	movq   QWORD PTR [rsp+0x28],xmm7
  00f17: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  00f1e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  00f25: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  00f2c: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  00f33: 00 	cmp    DWORD PTR [rip+0xfffffffffffed96a],0x0        # 0xfffee8a4
  00f3a:    	je     0xf52
  00f40:    	mov    rdi,r12
  00f43:    	mov    rsi,QWORD PTR [rbx]
  00f46: 78 	movabs rax,0x557860afd140
  00f50:    	call   rax
  00f52: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00f5b: ff 	mov    rax,QWORD PTR [r14-0xa0]
  00f62:    	mov    QWORD PTR [rsp-0x40],rax
  00f67: 00 	mov    rdi,0x2
  00f6e: ff 	mov    rax,QWORD PTR [r14-0xa8]
  00f75:    	mov    QWORD PTR [rsp-0x48],rax
  00f7a: ff 	mov    rax,QWORD PTR [r14-0xb0]
  00f81:    	mov    QWORD PTR [rsp-0x50],rax
  00f86: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00f8f: 0e 	movabs rax,0x1000e00000061
  00f99:    	mov    QWORD PTR [rsp-0x30],rax
  00f9e: 78 	movabs r13,0x557861f78680
  00fa8:    	mov    rsi,QWORD PTR [rbx]
  00fab:    	mov    QWORD PTR [rsp-0x18],rsi
  00fb0:    	lea    rsi,[rsp-0x18]
  00fb5:    	mov    QWORD PTR [rbx],rsi
  00fb8:    	lea    r14,[rsp-0x10]
  00fbd:    	mov    QWORD PTR [rsp-0x20],r14
  00fc2:    	call   0xfffef460
  00fc7:    	lea    r14,[rbp-0x8]
  00fcb:    	mov    QWORD PTR [rbx],r14
  00fce:    	mov    r14,QWORD PTR [rbp-0x10]
  00fd2:    	movq   xmm2,QWORD PTR [rsp]
  00fd7:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fdd:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fe3:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fe9:    	movq   xmm6,QWORD PTR [rsp+0x20]
  00fef:    	movq   xmm7,QWORD PTR [rsp+0x28]
  00ff5: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  00ffc: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01003: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  0100a: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01011:    	add    rsp,0x50
  01015: 78 	movabs r13,0x557861fb92d0
  0101f:    	test   rax,rax
  01022:    	je     0xfffeb408
:00071 
:00072 %14 = @spheres: Scene[IvarId(0)]
  01028:    	mov    rdi,QWORD PTR [r14-0x30]
  0102c:    	mov    rax,QWORD PTR [rdi+0x10]
  01030: ff 	mov    QWORD PTR [r14-0xa0],rax
:00073 %15 = 2: i32
  01037: ff 	mov    QWORD PTR [r14-0xa8],0x5
:00074 %14 = %14.[%15]                      [Array][Integer]
  01042: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01049: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  01050: 00 	test   rdi,0x7
  01057:    	jne    0x341e7
  0105d:    	cmp    DWORD PTR [rdi+0x4],0xb
  01061:    	jne    0x341e7
  01067: 00 	test   rsi,0x1
  0106e:    	je     0x341e7
  01074:    	sar    rsi,1
  01077:    	sub    rsp,0x50
  0107b:    	movq   QWORD PTR [rsp],xmm2
  01080:    	movq   QWORD PTR [rsp+0x8],xmm3
  01086:    	movq   QWORD PTR [rsp+0x10],xmm4
  0108c:    	movq   QWORD PTR [rsp+0x18],xmm5
  01092:    	movq   QWORD PTR [rsp+0x20],xmm6
  01098:    	movq   QWORD PTR [rsp+0x28],xmm7
  0109e: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  010a5: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  010ac: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  010b3: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  010ba: 78 	movabs rax,0x557860b06070
  010c4:    	call   rax
  010c6:    	movq   xmm2,QWORD PTR [rsp]
  010cb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010d1:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010d7:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010dd:    	movq   xmm6,QWORD PTR [rsp+0x20]
  010e3:    	movq   xmm7,QWORD PTR [rsp+0x28]
  010e9: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  010f0: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  010f7: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  010fe: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01105:    	add    rsp,0x50
  01109: 78 	movabs r13,0x557861fb9300
  01113:    	test   rax,rax
  01116:    	je     0xfffeb408
  0111c: ff 	mov    QWORD PTR [r14-0xa0],rax
:00075 %15 = %11
  01123: ff 	mov    rax,QWORD PTR [r14-0x88]
  0112a: ff 	mov    QWORD PTR [r14-0xa8],rax
:00076 %16 = %12
  01131: ff 	mov    rax,QWORD PTR [r14-0x90]
  01138: ff 	mov    QWORD PTR [r14-0xb0],rax
:00077 _ = %14.call intersect(%15; 2)       [Sphere]
  0113f: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01146: 00 	test   rdi,0x7
  0114d:    	jne    0x34260
  01153:    	cmp    DWORD PTR [rdi+0x4],0x2d
  01157:    	jne    0x34260
  0115d: 26 	cmp    DWORD PTR [rip+0xfffffffffffed73c],0x26        # 0xfffee8a0
  01164:    	jne    0x34260
  0116a:    	sub    rsp,0x50
  0116e:    	movq   QWORD PTR [rsp],xmm2
  01173:    	movq   QWORD PTR [rsp+0x8],xmm3
  01179:    	movq   QWORD PTR [rsp+0x10],xmm4
  0117f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01185:    	movq   QWORD PTR [rsp+0x20],xmm6
  0118b:    	movq   QWORD PTR [rsp+0x28],xmm7
  01191: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01198: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0119f: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  011a6: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  011ad: 00 	cmp    DWORD PTR [rip+0xfffffffffffed6f0],0x0        # 0xfffee8a4
  011b4:    	je     0x11cc
  011ba:    	mov    rdi,r12
  011bd:    	mov    rsi,QWORD PTR [rbx]
  011c0: 78 	movabs rax,0x557860afd140
  011ca:    	call   rax
  011cc: 00 	mov    QWORD PTR [rsp-0x28],0x0
  011d5: ff 	mov    rax,QWORD PTR [r14-0xa0]
  011dc:    	mov    QWORD PTR [rsp-0x40],rax
  011e1: 00 	mov    rdi,0x2
  011e8: ff 	mov    rax,QWORD PTR [r14-0xa8]
  011ef:    	mov    QWORD PTR [rsp-0x48],rax
  011f4: ff 	mov    rax,QWORD PTR [r14-0xb0]
  011fb:    	mov    QWORD PTR [rsp-0x50],rax
  01200: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01209: 0e 	movabs rax,0x1000e00000061
  01213:    	mov    QWORD PTR [rsp-0x30],rax
  01218: 78 	movabs r13,0x557861f78680
  01222:    	mov    rsi,QWORD PTR [rbx]
  01225:    	mov    QWORD PTR [rsp-0x18],rsi
  0122a:    	lea    rsi,[rsp-0x18]
  0122f:    	mov    QWORD PTR [rbx],rsi
  01232:    	lea    r14,[rsp-0x10]
  01237:    	mov    QWORD PTR [rsp-0x20],r14
  0123c:    	call   0xfffef460
  01241:    	lea    r14,[rbp-0x8]
  01245:    	mov    QWORD PTR [rbx],r14
  01248:    	mov    r14,QWORD PTR [rbp-0x10]
  0124c:    	movq   xmm2,QWORD PTR [rsp]
  01251:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01257:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0125d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01263:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01269:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0126f: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01276: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0127d: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01284: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  0128b:    	add    rsp,0x50
  0128f: 78 	movabs r13,0x557861fb9340
  01299:    	test   rax,rax
  0129c:    	je     0xfffeb408
:00078 
:00079 %14 = @plane: Scene[IvarId(1)]
  012a2:    	mov    rdi,QWORD PTR [r14-0x30]
  012a6:    	mov    rax,QWORD PTR [rdi+0x18]
  012aa: ff 	mov    QWORD PTR [r14-0xa0],rax
:00080 %15 = %11
  012b1: ff 	mov    rax,QWORD PTR [r14-0x88]
  012b8: ff 	mov    QWORD PTR [r14-0xa8],rax
:00081 %16 = %12
  012bf: ff 	mov    rax,QWORD PTR [r14-0x90]
  012c6: ff 	mov    QWORD PTR [r14-0xb0],rax
:00082 _ = %14.call intersect(%15; 2)       [Plane]
  012cd: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  012d4: 00 	test   rdi,0x7
  012db:    	jne    0x342d9
  012e1:    	cmp    DWORD PTR [rdi+0x4],0x2f
  012e5:    	jne    0x342d9
  012eb: 26 	cmp    DWORD PTR [rip+0xfffffffffffed5ae],0x26        # 0xfffee8a0
  012f2:    	jne    0x342d9
  012f8:    	sub    rsp,0x50
  012fc:    	movq   QWORD PTR [rsp],xmm2
  01301:    	movq   QWORD PTR [rsp+0x8],xmm3
  01307:    	movq   QWORD PTR [rsp+0x10],xmm4
  0130d:    	movq   QWORD PTR [rsp+0x18],xmm5
  01313:    	movq   QWORD PTR [rsp+0x20],xmm6
  01319:    	movq   QWORD PTR [rsp+0x28],xmm7
  0131f: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01326: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0132d: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01334: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  0133b: 00 	cmp    DWORD PTR [rip+0xfffffffffffed562],0x0        # 0xfffee8a4
  01342:    	je     0x135a
  01348:    	mov    rdi,r12
  0134b:    	mov    rsi,QWORD PTR [rbx]
  0134e: 78 	movabs rax,0x557860afd140
  01358:    	call   rax
  0135a: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01363: ff 	mov    rax,QWORD PTR [r14-0xa0]
  0136a:    	mov    QWORD PTR [rsp-0x40],rax
  0136f: 00 	mov    rdi,0x2
  01376: ff 	mov    rax,QWORD PTR [r14-0xa8]
  0137d:    	mov    QWORD PTR [rsp-0x48],rax
  01382: ff 	mov    rax,QWORD PTR [r14-0xb0]
  01389:    	mov    QWORD PTR [rsp-0x50],rax
  0138e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01397: 0c 	movabs rax,0x1000c00000063
  013a1:    	mov    QWORD PTR [rsp-0x30],rax
  013a6: 78 	movabs r13,0x557861fb0c30
  013b0:    	mov    rsi,QWORD PTR [rbx]
  013b3:    	mov    QWORD PTR [rsp-0x18],rsi
  013b8:    	lea    rsi,[rsp-0x18]
  013bd:    	mov    QWORD PTR [rbx],rsi
  013c0:    	lea    r14,[rsp-0x10]
  013c5:    	mov    QWORD PTR [rsp-0x20],r14
  013ca:    	call   0xfffefa2c
  013cf:    	lea    r14,[rbp-0x8]
  013d3:    	mov    QWORD PTR [rbx],r14
  013d6:    	mov    r14,QWORD PTR [rbp-0x10]
  013da:    	movq   xmm2,QWORD PTR [rsp]
  013df:    	movq   xmm3,QWORD PTR [rsp+0x8]
  013e5:    	movq   xmm4,QWORD PTR [rsp+0x10]
  013eb:    	movq   xmm5,QWORD PTR [rsp+0x18]
  013f1:    	movq   xmm6,QWORD PTR [rsp+0x20]
  013f7:    	movq   xmm7,QWORD PTR [rsp+0x28]
  013fd: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01404: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  0140b: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01412: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01419:    	add    rsp,0x50
  0141d: 78 	movabs r13,0x557861fb9390
  01427:    	test   rax,rax
  0142a:    	je     0xfffeb408
:00083 
:00084 %14 = %12.call hit()                 [Isect]
  01430: ff 	mov    rdi,QWORD PTR [r14-0x90]
  01437: 00 	test   rdi,0x7
  0143e:    	jne    0x34352
  01444:    	cmp    DWORD PTR [rdi+0x4],0x33
  01448:    	jne    0x34352
  0144e: 26 	cmp    DWORD PTR [rip+0xfffffffffffed44b],0x26        # 0xfffee8a0
  01455:    	jne    0x34352
  0145b:    	mov    esi,DWORD PTR [rip+0xfcf]        # 0x2430
  01461:    	cmp    esi,0xffffffff
  01464:    	je     0x343cb
  0146a:    	cmp    WORD PTR [rdi+0x2],0x3
  0146f:    	jne    0x1488
  01475:    	cmp    esi,0x6
  01478:    	jge    0x1488
  0147e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01483:    	jmp    0x151a
  01488:    	sub    rsp,0x50
  0148c:    	movq   QWORD PTR [rsp],xmm2
  01491:    	movq   QWORD PTR [rsp+0x8],xmm3
  01497:    	movq   QWORD PTR [rsp+0x10],xmm4
  0149d:    	movq   QWORD PTR [rsp+0x18],xmm5
  014a3:    	movq   QWORD PTR [rsp+0x20],xmm6
  014a9:    	movq   QWORD PTR [rsp+0x28],xmm7
  014af: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014b6: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  014bd: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  014c4: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  014cb: 78 	movabs rax,0x557860b3bf40
  014d5:    	call   rax
  014d7:    	movq   xmm2,QWORD PTR [rsp]
  014dc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  014e2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  014e8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  014ee:    	movq   xmm6,QWORD PTR [rsp+0x20]
  014f4:    	movq   xmm7,QWORD PTR [rsp+0x28]
  014fa: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01501: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01508: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  0150f: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01516:    	add    rsp,0x50
  0151a: ff 	mov    QWORD PTR [r14-0xa0],rax
:00085 
:00086 condnotbr %14 =>:00119
  01521: ff 	mov    rax,QWORD PTR [r14-0xa0]
  01528:    	or     rax,0x10
  0152c:    	cmp    rax,0x14
  01530:    	je     0x2306
:00087 %14 = %12
  01536: ff 	mov    rax,QWORD PTR [r14-0x90]
  0153d: ff 	mov    QWORD PTR [r14-0xa0],rax
:00088 %13 = %0.call ambient_occlusion(%14; 1) [Scene]
  01544:    	mov    rdi,QWORD PTR [r14-0x30]
  01548: 26 	cmp    DWORD PTR [rip+0xfffffffffffed351],0x26        # 0xfffee8a0
  0154f:    	jne    0x3447a
  01555:    	sub    rsp,0x50
  01559:    	movq   QWORD PTR [rsp],xmm2
  0155e:    	movq   QWORD PTR [rsp+0x8],xmm3
  01564:    	movq   QWORD PTR [rsp+0x10],xmm4
  0156a:    	movq   QWORD PTR [rsp+0x18],xmm5
  01570:    	movq   QWORD PTR [rsp+0x20],xmm6
  01576:    	movq   QWORD PTR [rsp+0x28],xmm7
  0157c: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01583: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  0158a: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01591: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01598: 00 	cmp    DWORD PTR [rip+0xfffffffffffed305],0x0        # 0xfffee8a4
  0159f:    	je     0x15b7
  015a5:    	mov    rdi,r12
  015a8:    	mov    rsi,QWORD PTR [rbx]
  015ab: 78 	movabs rax,0x557860afd140
  015b5:    	call   rax
  015b7: 00 	mov    QWORD PTR [rsp-0x28],0x0
  015c0:    	mov    rax,QWORD PTR [r14-0x30]
  015c4:    	mov    QWORD PTR [rsp-0x40],rax
  015c9: 00 	mov    rdi,0x1
  015d0: ff 	mov    rax,QWORD PTR [r14-0xa0]
  015d7:    	mov    QWORD PTR [rsp-0x48],rax
  015dc: 00 	mov    QWORD PTR [rsp-0x38],0x0
  015e5: 0d 	movabs rax,0x1000d00000067
  015ef:    	mov    QWORD PTR [rsp-0x30],rax
  015f4: 78 	movabs r13,0x557861fc96a0
  015fe:    	mov    rsi,QWORD PTR [rbx]
  01601:    	mov    QWORD PTR [rsp-0x18],rsi
  01606:    	lea    rsi,[rsp-0x18]
  0160b:    	mov    QWORD PTR [rbx],rsi
  0160e:    	lea    r14,[rsp-0x10]
  01613:    	mov    QWORD PTR [rsp-0x20],r14
  01618:    	call   0xffff8529
  0161d:    	lea    r14,[rbp-0x8]
  01621:    	mov    QWORD PTR [rbx],r14
  01624:    	mov    r14,QWORD PTR [rbp-0x10]
  01628:    	movq   xmm2,QWORD PTR [rsp]
  0162d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01633:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01639:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0163f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01645:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0164b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01652: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01659: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01660: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01667:    	add    rsp,0x50
  0166b: 78 	movabs r13,0x557861fb93f0
  01675:    	test   rax,rax
  01678:    	je     0xfffeb408
  0167e: ff 	mov    QWORD PTR [r14-0x98],rax
:00089 
:00090 %14 = dynvar(2, %2)
  01685:    	mov    rax,QWORD PTR [r14-0x18]
  01689:    	mov    rax,QWORD PTR [rax]
  0168c:    	mov    rax,QWORD PTR [rax-0x28]
  01690: ff 	mov    QWORD PTR [r14-0xa0],rax
:00091 %15 = dynvar(2, %2)
  01697:    	mov    rax,QWORD PTR [r14-0x18]
  0169b:    	mov    rax,QWORD PTR [rax]
  0169e:    	mov    rax,QWORD PTR [rax-0x28]
  016a2: ff 	mov    QWORD PTR [r14-0xa8],rax
:00092 %15 = %15.call x()                   [Vec]
  016a9: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  016b0: 00 	test   rdi,0x7
  016b7:    	jne    0x344f3
  016bd:    	cmp    DWORD PTR [rdi+0x4],0x2b
  016c1:    	jne    0x344f3
  016c7: 26 	cmp    DWORD PTR [rip+0xfffffffffffed1d2],0x26        # 0xfffee8a0
  016ce:    	jne    0x344f3
  016d4:    	mov    esi,DWORD PTR [rip+0xd5e]        # 0x2438
  016da:    	cmp    esi,0xffffffff
  016dd:    	je     0x3456c
  016e3:    	cmp    WORD PTR [rdi+0x2],0x3
  016e8:    	jne    0x1701
  016ee:    	cmp    esi,0x6
  016f1:    	jge    0x1701
  016f7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  016fc:    	jmp    0x1793
  01701:    	sub    rsp,0x50
  01705:    	movq   QWORD PTR [rsp],xmm2
  0170a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01710:    	movq   QWORD PTR [rsp+0x10],xmm4
  01716:    	movq   QWORD PTR [rsp+0x18],xmm5
  0171c:    	movq   QWORD PTR [rsp+0x20],xmm6
  01722:    	movq   QWORD PTR [rsp+0x28],xmm7
  01728: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0172f: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01736: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0173d: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01744: 78 	movabs rax,0x557860b3bf40
  0174e:    	call   rax
  01750:    	movq   xmm2,QWORD PTR [rsp]
  01755:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0175b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01761:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01767:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0176d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01773: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0177a: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01781: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01788: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  0178f:    	add    rsp,0x50
  01793: ff 	mov    QWORD PTR [r14-0xa8],rax
:00093 
:00094 %16 = %13.call x()                   [Vec]
  0179a: ff 	mov    rdi,QWORD PTR [r14-0x98]
  017a1: 00 	test   rdi,0x7
  017a8:    	jne    0x3461b
  017ae:    	cmp    DWORD PTR [rdi+0x4],0x2b
  017b2:    	jne    0x3461b
  017b8: 26 	cmp    DWORD PTR [rip+0xfffffffffffed0e1],0x26        # 0xfffee8a0
  017bf:    	jne    0x3461b
  017c5:    	mov    esi,DWORD PTR [rip+0xc75]        # 0x2440
  017cb:    	cmp    esi,0xffffffff
  017ce:    	je     0x34694
  017d4:    	cmp    WORD PTR [rdi+0x2],0x3
  017d9:    	jne    0x17f2
  017df:    	cmp    esi,0x6
  017e2:    	jge    0x17f2
  017e8:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  017ed:    	jmp    0x1884
  017f2:    	sub    rsp,0x50
  017f6:    	movq   QWORD PTR [rsp],xmm2
  017fb:    	movq   QWORD PTR [rsp+0x8],xmm3
  01801:    	movq   QWORD PTR [rsp+0x10],xmm4
  01807:    	movq   QWORD PTR [rsp+0x18],xmm5
  0180d:    	movq   QWORD PTR [rsp+0x20],xmm6
  01813:    	movq   QWORD PTR [rsp+0x28],xmm7
  01819: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01820: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01827: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0182e: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01835: 78 	movabs rax,0x557860b3bf40
  0183f:    	call   rax
  01841:    	movq   xmm2,QWORD PTR [rsp]
  01846:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0184c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01852:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01858:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0185e:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01864: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  0186b: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01872: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01879: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01880:    	add    rsp,0x50
  01884: ff 	mov    QWORD PTR [r14-0xb0],rax
:00095 
:00096 %15 = %15 + %16                      [Float][Float]
  0188b: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  01892: 00 	test   rdi,0x1
  01899:    	jne    0x34743
  0189f: 00 	test   rdi,0x2
  018a6:    	je     0x18e3
  018ac:    	xorps  xmm9,xmm9
  018b0: 00 	movabs rax,0x8000000000000002
  018ba:    	cmp    rdi,rax
  018bd:    	je     0x18f6
  018c3:    	mov    rax,rdi
  018c6:    	sar    rax,0x3f
  018ca:    	add    rax,0x2
  018ce:    	and    rdi,0xfffffffffffffffc
  018d2:    	or     rdi,rax
  018d5:    	rol    rdi,0x3d
  018d9:    	movq   xmm9,rdi
  018de:    	jmp    0x18f6
  018e3:    	call   0xfffeb461
  018e8:    	test   rax,rax
  018eb:    	je     0x34743
  018f1:    	movq   xmm9,xmm0
  018f6: ff 	mov    rdi,QWORD PTR [r14-0xb0]
  018fd: 00 	test   rdi,0x1
  01904:    	jne    0x347bc
  0190a: 00 	test   rdi,0x2
  01911:    	je     0x194e
  01917:    	xorps  xmm13,xmm13
  0191b: 00 	movabs rax,0x8000000000000002
  01925:    	cmp    rdi,rax
  01928:    	je     0x1961
  0192e:    	mov    rax,rdi
  01931:    	sar    rax,0x3f
  01935:    	add    rax,0x2
  01939:    	and    rdi,0xfffffffffffffffc
  0193d:    	or     rdi,rax
  01940:    	rol    rdi,0x3d
  01944:    	movq   xmm13,rdi
  01949:    	jmp    0x1961
  0194e:    	call   0xfffeb461
  01953:    	test   rax,rax
  01956:    	je     0x347bc
  0195c:    	movq   xmm13,xmm0
  01961:    	addsd  xmm9,xmm13
:00097 _ = %14.call x=(%15; 1)              [Vec]
  01966:    	movq   xmm0,xmm9
  0196b:    	call   0xfffeb585
  01970: ff 	mov    QWORD PTR [r14-0xa8],rax
  01977: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0197e: 00 	test   rdi,0x7
  01985:    	jne    0x34835
  0198b:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0198f:    	jne    0x34835
  01995: 26 	cmp    DWORD PTR [rip+0xfffffffffffecf04],0x26        # 0xfffee8a0
  0199c:    	jne    0x34835
  019a2:    	mov    esi,DWORD PTR [rip+0xaa0]        # 0x2448
  019a8:    	cmp    esi,0xffffffff
  019ab:    	je     0x348ae
  019b1:    	cmp    WORD PTR [rdi+0x2],0x3
  019b6:    	jne    0x19d6
  019bc:    	cmp    esi,0x6
  019bf:    	jge    0x19d6
  019c5: ff 	mov    rax,QWORD PTR [r14-0xa8]
  019cc:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  019d1:    	jmp    0x1a9e
  019d6:    	sub    rsp,0x60
  019da:    	movq   QWORD PTR [rsp],xmm2
  019df:    	movq   QWORD PTR [rsp+0x8],xmm3
  019e5:    	movq   QWORD PTR [rsp+0x10],xmm4
  019eb:    	movq   QWORD PTR [rsp+0x18],xmm5
  019f1:    	movq   QWORD PTR [rsp+0x20],xmm6
  019f7:    	movq   QWORD PTR [rsp+0x28],xmm7
  019fd: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01a04: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01a0b: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01a12: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01a19: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01a20: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  01a27: ff 	mov    rdx,QWORD PTR [r14-0xa8]
  01a2e: 78 	movabs rax,0x557860b3c1c0
  01a38:    	call   rax
  01a3a:    	movq   xmm2,QWORD PTR [rsp]
  01a3f:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01a45:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01a4b:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01a51:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01a57:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01a5d: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01a64: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01a6b: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01a72: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01a79: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01a80: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  01a87:    	add    rsp,0x60
  01a8b: 78 	movabs r13,0x557861fb9480
  01a95:    	test   rax,rax
  01a98:    	je     0xfffeb408
:00098 
:00099 %14 = dynvar(2, %2)
  01a9e:    	mov    rax,QWORD PTR [r14-0x18]
  01aa2:    	mov    rax,QWORD PTR [rax]
  01aa5:    	mov    rax,QWORD PTR [rax-0x28]
  01aa9: ff 	mov    QWORD PTR [r14-0xa0],rax
:00100 %15 = dynvar(2, %2)
  01ab0:    	mov    rax,QWORD PTR [r14-0x18]
  01ab4:    	mov    rax,QWORD PTR [rax]
  01ab7:    	mov    rax,QWORD PTR [rax-0x28]
  01abb: ff 	mov    QWORD PTR [r14-0xa8],rax
:00101 %15 = %15.call y()                   [Vec]
  01ac2: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  01ac9: 00 	test   rdi,0x7
  01ad0:    	jne    0x34983
  01ad6:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01ada:    	jne    0x34983
  01ae0: 26 	cmp    DWORD PTR [rip+0xfffffffffffecdb9],0x26        # 0xfffee8a0
  01ae7:    	jne    0x34983
  01aed:    	mov    esi,DWORD PTR [rip+0x95d]        # 0x2450
  01af3:    	cmp    esi,0xffffffff
  01af6:    	je     0x349fc
  01afc:    	cmp    WORD PTR [rdi+0x2],0x3
  01b01:    	jne    0x1b1a
  01b07:    	cmp    esi,0x6
  01b0a:    	jge    0x1b1a
  01b10:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01b15:    	jmp    0x1bba
  01b1a:    	sub    rsp,0x60
  01b1e:    	movq   QWORD PTR [rsp],xmm2
  01b23:    	movq   QWORD PTR [rsp+0x8],xmm3
  01b29:    	movq   QWORD PTR [rsp+0x10],xmm4
  01b2f:    	movq   QWORD PTR [rsp+0x18],xmm5
  01b35:    	movq   QWORD PTR [rsp+0x20],xmm6
  01b3b:    	movq   QWORD PTR [rsp+0x28],xmm7
  01b41: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01b48: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01b4f: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01b56: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01b5d: 50 	movq   QWORD PTR [rsp+0x50],xmm13
  01b64: 78 	movabs rax,0x557860b3bf40
  01b6e:    	call   rax
  01b70:    	movq   xmm2,QWORD PTR [rsp]
  01b75:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01b7b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01b81:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01b87:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01b8d:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01b93: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01b9a: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01ba1: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01ba8: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01baf: 50 	movq   xmm13,QWORD PTR [rsp+0x50]
  01bb6:    	add    rsp,0x60
  01bba: ff 	mov    QWORD PTR [r14-0xa8],rax
:00102 
:00103 %16 = %13.call y()                   [Vec]
  01bc1: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01bc8: 00 	test   rdi,0x7
  01bcf:    	jne    0x34ab9
  01bd5:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01bd9:    	jne    0x34ab9
  01bdf: 26 	cmp    DWORD PTR [rip+0xfffffffffffeccba],0x26        # 0xfffee8a0
  01be6:    	jne    0x34ab9
  01bec:    	mov    esi,DWORD PTR [rip+0x866]        # 0x2458
  01bf2:    	cmp    esi,0xffffffff
  01bf5:    	je     0x34b32
  01bfb:    	cmp    WORD PTR [rdi+0x2],0x3
  01c00:    	jne    0x1c19
  01c06:    	cmp    esi,0x6
  01c09:    	jge    0x1c19
  01c0f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01c14:    	jmp    0x1cab
  01c19:    	sub    rsp,0x50
  01c1d:    	movq   QWORD PTR [rsp],xmm2
  01c22:    	movq   QWORD PTR [rsp+0x8],xmm3
  01c28:    	movq   QWORD PTR [rsp+0x10],xmm4
  01c2e:    	movq   QWORD PTR [rsp+0x18],xmm5
  01c34:    	movq   QWORD PTR [rsp+0x20],xmm6
  01c3a:    	movq   QWORD PTR [rsp+0x28],xmm7
  01c40: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01c47: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01c4e: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01c55: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01c5c: 78 	movabs rax,0x557860b3bf40
  01c66:    	call   rax
  01c68:    	movq   xmm2,QWORD PTR [rsp]
  01c6d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01c73:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01c79:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01c7f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01c85:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01c8b: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01c92: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01c99: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01ca0: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01ca7:    	add    rsp,0x50
  01cab: ff 	mov    QWORD PTR [r14-0xb0],rax
:00104 
:00105 %15 = %15 + %16                      [Float][Float]
  01cb2: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  01cb9: 00 	test   rdi,0x1
  01cc0:    	jne    0x34be1
  01cc6: 00 	test   rdi,0x2
  01ccd:    	je     0x1d0a
  01cd3:    	xorps  xmm9,xmm9
  01cd7: 00 	movabs rax,0x8000000000000002
  01ce1:    	cmp    rdi,rax
  01ce4:    	je     0x1d1d
  01cea:    	mov    rax,rdi
  01ced:    	sar    rax,0x3f
  01cf1:    	add    rax,0x2
  01cf5:    	and    rdi,0xfffffffffffffffc
  01cf9:    	or     rdi,rax
  01cfc:    	rol    rdi,0x3d
  01d00:    	movq   xmm9,rdi
  01d05:    	jmp    0x1d1d
  01d0a:    	call   0xfffeb461
  01d0f:    	test   rax,rax
  01d12:    	je     0x34be1
  01d18:    	movq   xmm9,xmm0
  01d1d: ff 	mov    rdi,QWORD PTR [r14-0xb0]
  01d24: 00 	test   rdi,0x1
  01d2b:    	jne    0x34c5a
  01d31: 00 	test   rdi,0x2
  01d38:    	je     0x1d75
  01d3e:    	xorps  xmm13,xmm13
  01d42: 00 	movabs rax,0x8000000000000002
  01d4c:    	cmp    rdi,rax
  01d4f:    	je     0x1d88
  01d55:    	mov    rax,rdi
  01d58:    	sar    rax,0x3f
  01d5c:    	add    rax,0x2
  01d60:    	and    rdi,0xfffffffffffffffc
  01d64:    	or     rdi,rax
  01d67:    	rol    rdi,0x3d
  01d6b:    	movq   xmm13,rdi
  01d70:    	jmp    0x1d88
  01d75:    	call   0xfffeb461
  01d7a:    	test   rax,rax
  01d7d:    	je     0x34c5a
  01d83:    	movq   xmm13,xmm0
  01d88:    	addsd  xmm9,xmm13
:00106 _ = %14.call y=(%15; 1)              [Vec]
  01d8d:    	movq   xmm0,xmm9
  01d92:    	call   0xfffeb585
  01d97: ff 	mov    QWORD PTR [r14-0xa8],rax
  01d9e: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01da5: 00 	test   rdi,0x7
  01dac:    	jne    0x34cd3
  01db2:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01db6:    	jne    0x34cd3
  01dbc: 26 	cmp    DWORD PTR [rip+0xfffffffffffecadd],0x26        # 0xfffee8a0
  01dc3:    	jne    0x34cd3
  01dc9:    	mov    esi,DWORD PTR [rip+0x691]        # 0x2460
  01dcf:    	cmp    esi,0xffffffff
  01dd2:    	je     0x34d4c
  01dd8:    	cmp    WORD PTR [rdi+0x2],0x3
  01ddd:    	jne    0x1dfd
  01de3:    	cmp    esi,0x6
  01de6:    	jge    0x1dfd
  01dec: ff 	mov    rax,QWORD PTR [r14-0xa8]
  01df3:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  01df8:    	jmp    0x1ec5
  01dfd:    	sub    rsp,0x60
  01e01:    	movq   QWORD PTR [rsp],xmm2
  01e06:    	movq   QWORD PTR [rsp+0x8],xmm3
  01e0c:    	movq   QWORD PTR [rsp+0x10],xmm4
  01e12:    	movq   QWORD PTR [rsp+0x18],xmm5
  01e18:    	movq   QWORD PTR [rsp+0x20],xmm6
  01e1e:    	movq   QWORD PTR [rsp+0x28],xmm7
  01e24: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01e2b: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  01e32: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  01e39: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  01e40: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  01e47: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  01e4e: ff 	mov    rdx,QWORD PTR [r14-0xa8]
  01e55: 78 	movabs rax,0x557860b3c1c0
  01e5f:    	call   rax
  01e61:    	movq   xmm2,QWORD PTR [rsp]
  01e66:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01e6c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01e72:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01e78:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01e7e:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01e84: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01e8b: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01e92: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  01e99: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  01ea0: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  01ea7: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  01eae:    	add    rsp,0x60
  01eb2: 78 	movabs r13,0x557861fb9510
  01ebc:    	test   rax,rax
  01ebf:    	je     0xfffeb408
:00107 
:00108 %14 = dynvar(2, %2)
  01ec5:    	mov    rax,QWORD PTR [r14-0x18]
  01ec9:    	mov    rax,QWORD PTR [rax]
  01ecc:    	mov    rax,QWORD PTR [rax-0x28]
  01ed0: ff 	mov    QWORD PTR [r14-0xa0],rax
:00109 %15 = dynvar(2, %2)
  01ed7:    	mov    rax,QWORD PTR [r14-0x18]
  01edb:    	mov    rax,QWORD PTR [rax]
  01ede:    	mov    rax,QWORD PTR [rax-0x28]
  01ee2: ff 	mov    QWORD PTR [r14-0xa8],rax
:00110 %15 = %15.call z()                   [Vec]
  01ee9: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  01ef0: 00 	test   rdi,0x7
  01ef7:    	jne    0x34e21
  01efd:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01f01:    	jne    0x34e21
  01f07: 26 	cmp    DWORD PTR [rip+0xfffffffffffec992],0x26        # 0xfffee8a0
  01f0e:    	jne    0x34e21
  01f14:    	mov    esi,DWORD PTR [rip+0x54e]        # 0x2468
  01f1a:    	cmp    esi,0xffffffff
  01f1d:    	je     0x34e9a
  01f23:    	cmp    WORD PTR [rdi+0x2],0x3
  01f28:    	jne    0x1f41
  01f2e:    	cmp    esi,0x6
  01f31:    	jge    0x1f41
  01f37:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01f3c:    	jmp    0x1fe1
  01f41:    	sub    rsp,0x60
  01f45:    	movq   QWORD PTR [rsp],xmm2
  01f4a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01f50:    	movq   QWORD PTR [rsp+0x10],xmm4
  01f56:    	movq   QWORD PTR [rsp+0x18],xmm5
  01f5c:    	movq   QWORD PTR [rsp+0x20],xmm6
  01f62:    	movq   QWORD PTR [rsp+0x28],xmm7
  01f68: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  01f6f: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  01f76: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  01f7d: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  01f84: 50 	movq   QWORD PTR [rsp+0x50],xmm13
  01f8b: 78 	movabs rax,0x557860b3bf40
  01f95:    	call   rax
  01f97:    	movq   xmm2,QWORD PTR [rsp]
  01f9c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01fa2:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01fa8:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01fae:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01fb4:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01fba: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01fc1: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01fc8: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  01fcf: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  01fd6: 50 	movq   xmm13,QWORD PTR [rsp+0x50]
  01fdd:    	add    rsp,0x60
  01fe1: ff 	mov    QWORD PTR [r14-0xa8],rax
:00111 
:00112 %16 = %13.call z()                   [Vec]
  01fe8: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01fef: 00 	test   rdi,0x7
  01ff6:    	jne    0x34f57
  01ffc:    	cmp    DWORD PTR [rdi+0x4],0x2b
  02000:    	jne    0x34f57
  02006: 26 	cmp    DWORD PTR [rip+0xfffffffffffec893],0x26        # 0xfffee8a0
  0200d:    	jne    0x34f57
  02013:    	mov    esi,DWORD PTR [rip+0x457]        # 0x2470
  02019:    	cmp    esi,0xffffffff
  0201c:    	je     0x34fd0
  02022:    	cmp    WORD PTR [rdi+0x2],0x3
  02027:    	jne    0x2040
  0202d:    	cmp    esi,0x6
  02030:    	jge    0x2040
  02036:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0203b:    	jmp    0x20d2
  02040:    	sub    rsp,0x50
  02044:    	movq   QWORD PTR [rsp],xmm2
  02049:    	movq   QWORD PTR [rsp+0x8],xmm3
  0204f:    	movq   QWORD PTR [rsp+0x10],xmm4
  02055:    	movq   QWORD PTR [rsp+0x18],xmm5
  0205b:    	movq   QWORD PTR [rsp+0x20],xmm6
  02061:    	movq   QWORD PTR [rsp+0x28],xmm7
  02067: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  0206e: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  02075: 40 	movq   QWORD PTR [rsp+0x40],xmm11
  0207c: 48 	movq   QWORD PTR [rsp+0x48],xmm12
  02083: 78 	movabs rax,0x557860b3bf40
  0208d:    	call   rax
  0208f:    	movq   xmm2,QWORD PTR [rsp]
  02094:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0209a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  020a0:    	movq   xmm5,QWORD PTR [rsp+0x18]
  020a6:    	movq   xmm6,QWORD PTR [rsp+0x20]
  020ac:    	movq   xmm7,QWORD PTR [rsp+0x28]
  020b2: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  020b9: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  020c0: 40 	movq   xmm11,QWORD PTR [rsp+0x40]
  020c7: 48 	movq   xmm12,QWORD PTR [rsp+0x48]
  020ce:    	add    rsp,0x50
  020d2: ff 	mov    QWORD PTR [r14-0xb0],rax
:00113 
:00114 %15 = %15 + %16                      [Float][Float]
  020d9: ff 	mov    rdi,QWORD PTR [r14-0xa8]
  020e0: 00 	test   rdi,0x1
  020e7:    	jne    0x3507f
  020ed: 00 	test   rdi,0x2
  020f4:    	je     0x2131
  020fa:    	xorps  xmm9,xmm9
  020fe: 00 	movabs rax,0x8000000000000002
  02108:    	cmp    rdi,rax
  0210b:    	je     0x2144
  02111:    	mov    rax,rdi
  02114:    	sar    rax,0x3f
  02118:    	add    rax,0x2
  0211c:    	and    rdi,0xfffffffffffffffc
  02120:    	or     rdi,rax
  02123:    	rol    rdi,0x3d
  02127:    	movq   xmm9,rdi
  0212c:    	jmp    0x2144
  02131:    	call   0xfffeb461
  02136:    	test   rax,rax
  02139:    	je     0x3507f
  0213f:    	movq   xmm9,xmm0
  02144: ff 	mov    rdi,QWORD PTR [r14-0xb0]
  0214b: 00 	test   rdi,0x1
  02152:    	jne    0x350f8
  02158: 00 	test   rdi,0x2
  0215f:    	je     0x219c
  02165:    	xorps  xmm13,xmm13
  02169: 00 	movabs rax,0x8000000000000002
  02173:    	cmp    rdi,rax
  02176:    	je     0x21af
  0217c:    	mov    rax,rdi
  0217f:    	sar    rax,0x3f
  02183:    	add    rax,0x2
  02187:    	and    rdi,0xfffffffffffffffc
  0218b:    	or     rdi,rax
  0218e:    	rol    rdi,0x3d
  02192:    	movq   xmm13,rdi
  02197:    	jmp    0x21af
  0219c:    	call   0xfffeb461
  021a1:    	test   rax,rax
  021a4:    	je     0x350f8
  021aa:    	movq   xmm13,xmm0
  021af:    	addsd  xmm9,xmm13
:00115 _ = %14.call z=(%15; 1)              [Vec]
  021b4:    	movq   xmm0,xmm9
  021b9:    	call   0xfffeb585
  021be: ff 	mov    QWORD PTR [r14-0xa8],rax
  021c5: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  021cc: 00 	test   rdi,0x7
  021d3:    	jne    0x35171
  021d9:    	cmp    DWORD PTR [rdi+0x4],0x2b
  021dd:    	jne    0x35171
  021e3: 26 	cmp    DWORD PTR [rip+0xfffffffffffec6b6],0x26        # 0xfffee8a0
  021ea:    	jne    0x35171
  021f0:    	mov    esi,DWORD PTR [rip+0x282]        # 0x2478
  021f6:    	cmp    esi,0xffffffff
  021f9:    	je     0x351ea
  021ff:    	cmp    WORD PTR [rdi+0x2],0x3
  02204:    	jne    0x2224
  0220a:    	cmp    esi,0x6
  0220d:    	jge    0x2224
  02213: ff 	mov    rax,QWORD PTR [r14-0xa8]
  0221a:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0221f:    	jmp    0x22ec
  02224:    	sub    rsp,0x60
  02228:    	movq   QWORD PTR [rsp],xmm2
  0222d:    	movq   QWORD PTR [rsp+0x8],xmm3
  02233:    	movq   QWORD PTR [rsp+0x10],xmm4
  02239:    	movq   QWORD PTR [rsp+0x18],xmm5
  0223f:    	movq   QWORD PTR [rsp+0x20],xmm6
  02245:    	movq   QWORD PTR [rsp+0x28],xmm7
  0224b: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  02252: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  02259: 40 	movq   QWORD PTR [rsp+0x40],xmm10
  02260: 48 	movq   QWORD PTR [rsp+0x48],xmm11
  02267: 50 	movq   QWORD PTR [rsp+0x50],xmm12
  0226e: 58 	movq   QWORD PTR [rsp+0x58],xmm13
  02275: ff 	mov    rdx,QWORD PTR [r14-0xa8]
  0227c: 78 	movabs rax,0x557860b3c1c0
  02286:    	call   rax
  02288:    	movq   xmm2,QWORD PTR [rsp]
  0228d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  02293:    	movq   xmm4,QWORD PTR [rsp+0x10]
  02299:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0229f:    	movq   xmm6,QWORD PTR [rsp+0x20]
  022a5:    	movq   xmm7,QWORD PTR [rsp+0x28]
  022ab: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  022b2: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  022b9: 40 	movq   xmm10,QWORD PTR [rsp+0x40]
  022c0: 48 	movq   xmm11,QWORD PTR [rsp+0x48]
  022c7: 50 	movq   xmm12,QWORD PTR [rsp+0x50]
  022ce: 58 	movq   xmm13,QWORD PTR [rsp+0x58]
  022d5:    	add    rsp,0x60
  022d9: 78 	movabs r13,0x557861fb95a0
  022e3:    	test   rax,rax
  022e6:    	je     0xfffeb408
:00116 
:00117 %14 = %15
:00118 ret %14
  022ec:    	movq   xmm0,xmm9
  022f1:    	call   0xfffeb585
  022f6: ff 	mov    QWORD PTR [r14-0xa0],rax
  022fd: ff 	mov    rax,QWORD PTR [r14-0xa0]
  02304:    	leave  
  02305:    	ret    
:00119 %14 = nil
  02306: ff 	mov    QWORD PTR [r14-0xa0],0x4
:00120 ret %14
  02311: ff 	mov    rax,QWORD PTR [r14-0xa0]
  02318:    	leave  
  02319:    	ret    
==> start whole compile: intersect FuncId(99) self_class:Plane start:[00000] bytecode:0x557861fb0c30
<== finished compile. elapsed:112.3µs
offset:Pos(94360) code: 5730 bytes  data: 262 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0x90
  0000e:    	cmp    edx,0x2
  00011:    	jne    0x32e43
  00017: 00 	mov    rax,0x4
  0001e:    	mov    QWORD PTR [r14-0x48],rax
  00022:    	mov    QWORD PTR [r14-0x50],rax
  00026:    	mov    QWORD PTR [r14-0x58],rax
  0002a:    	mov    QWORD PTR [r14-0x60],rax
  0002e:    	mov    QWORD PTR [r14-0x68],rax
  00032:    	mov    QWORD PTR [r14-0x70],rax
  00036:    	mov    QWORD PTR [r14-0x78],rax
  0003a:    	mov    QWORD PTR [r14-0x80],rax
  0003e: ff 	mov    QWORD PTR [r14-0x88],rax
  00045:    	mov    rdi,QWORD PTR [r14-0x30]
  00049: 00 	test   rdi,0x7
  00050:    	jne    0x32e52
  00056:    	cmp    DWORD PTR [rdi+0x4],0x2f
  0005a:    	jne    0x32e52
:00000 init_method reg:12 arg:2 pos:2 req:2 block:0 stack_offset:9
:00001 %7 = @p: Plane[IvarId(0)]
  00060:    	mov    rdi,QWORD PTR [r14-0x30]
  00064:    	mov    rax,QWORD PTR [rdi+0x10]
  00068:    	mov    QWORD PTR [r14-0x68],rax
:00002 %8 = @n: Plane[IvarId(1)]
  0006c:    	mov    rdi,QWORD PTR [r14-0x30]
  00070:    	mov    rax,QWORD PTR [rdi+0x18]
  00074:    	mov    QWORD PTR [r14-0x70],rax
:00003 %3 = %7.call vdot(%8; 1)             [Vec]
  00078:    	mov    rdi,QWORD PTR [r14-0x68]
  0007c: 00 	test   rdi,0x7
  00083:    	jne    0x32e61
  00089:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0008d:    	jne    0x32e61
  00093: 26 	cmp    DWORD PTR [rip+0xfffffffffffec38a],0x26        # 0xfffec424
  0009a:    	jne    0x32e61
  000a0: 00 	cmp    DWORD PTR [rip+0xfffffffffffec381],0x0        # 0xfffec428
  000a7:    	je     0xbf
  000ad:    	mov    rdi,r12
  000b0:    	mov    rsi,QWORD PTR [rbx]
  000b3: 78 	movabs rax,0x557860afd140
  000bd:    	call   rax
  000bf: 00 	mov    QWORD PTR [rsp-0x28],0x0
  000c8:    	mov    rax,QWORD PTR [r14-0x68]
  000cc:    	mov    QWORD PTR [rsp-0x40],rax
  000d1: 00 	mov    rdi,0x1
  000d8:    	mov    rax,QWORD PTR [r14-0x70]
  000dc:    	mov    QWORD PTR [rsp-0x48],rax
  000e1: 00 	mov    QWORD PTR [rsp-0x38],0x0
  000ea: 05 	movabs rax,0x100050000005d
  000f4:    	mov    QWORD PTR [rsp-0x30],rax
  000f9: 78 	movabs r13,0x557861fb69b0
  00103:    	mov    rsi,QWORD PTR [rbx]
  00106:    	mov    QWORD PTR [rsp-0x18],rsi
  0010b:    	lea    rsi,[rsp-0x18]
  00110:    	mov    QWORD PTR [rbx],rsi
  00113:    	lea    r14,[rsp-0x10]
  00118:    	mov    QWORD PTR [rsp-0x20],r14
  0011d:    	call   0xfffed100
  00122:    	lea    r14,[rbp-0x8]
  00126:    	mov    QWORD PTR [rbx],r14
  00129:    	mov    r14,QWORD PTR [rbp-0x10]
  0012d: 78 	movabs r13,0x557861fb0c80
  00137:    	test   rax,rax
  0013a:    	je     0xfffe8f8c
  00140:    	mov    QWORD PTR [r14-0x48],rax
:00004 
:00005 %3 = neg %3                          [Float]
  00144:    	mov    rdi,QWORD PTR [r14-0x48]
  00148: 00 	test   rdi,0x1
  0014f:    	jne    0x32e70
  00155: 00 	test   rdi,0x2
  0015c:    	je     0x198
  00162:    	xorps  xmm2,xmm2
  00165: 00 	movabs rax,0x8000000000000002
  0016f:    	cmp    rdi,rax
  00172:    	je     0x1aa
  00178:    	mov    rax,rdi
  0017b:    	sar    rax,0x3f
  0017f:    	add    rax,0x2
  00183:    	and    rdi,0xfffffffffffffffc
  00187:    	or     rdi,rax
  0018a:    	rol    rdi,0x3d
  0018e:    	movq   xmm2,rdi
  00193:    	jmp    0x1aa
  00198:    	call   0xfffe8fe5
  0019d:    	test   rax,rax
  001a0:    	je     0x32e70
  001a6:    	movq   xmm2,xmm0
  001aa: 00 	xorps  xmm2,XMMWORD PTR [rip+0x14b7]        # 0x1668
:00006 %7 = %1.call dir()                   [Ray]
  001b1:    	mov    rdi,QWORD PTR [r14-0x38]
  001b5: 00 	test   rdi,0x7
  001bc:    	jne    0x32e7f
  001c2:    	cmp    DWORD PTR [rdi+0x4],0x31
  001c6:    	jne    0x32e7f
  001cc: 26 	cmp    DWORD PTR [rip+0xfffffffffffec251],0x26        # 0xfffec424
  001d3:    	jne    0x32e7f
  001d9:    	mov    esi,DWORD PTR [rip+0x1495]        # 0x1674
  001df:    	cmp    esi,0xffffffff
  001e2:    	je     0x32e9b
  001e8:    	cmp    WORD PTR [rdi+0x2],0x3
  001ed:    	jne    0x206
  001f3:    	cmp    esi,0x6
  001f6:    	jge    0x206
  001fc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00201:    	jmp    0x224
  00206:    	sub    rsp,0x10
  0020a:    	movq   QWORD PTR [rsp],xmm2
  0020f: 78 	movabs rax,0x557860b3bf40
  00219:    	call   rax
  0021b:    	movq   xmm2,QWORD PTR [rsp]
  00220:    	add    rsp,0x10
  00224:    	mov    QWORD PTR [r14-0x68],rax
:00007 
:00008 %8 = @n: Plane[IvarId(1)]
  00228:    	mov    rdi,QWORD PTR [r14-0x30]
  0022c:    	mov    rax,QWORD PTR [rdi+0x18]
  00230:    	mov    QWORD PTR [r14-0x70],rax
:00009 %4 = %7.call vdot(%8; 1)             [Vec]
  00234:    	mov    rdi,QWORD PTR [r14-0x68]
  00238: 00 	test   rdi,0x7
  0023f:    	jne    0x32ed6
  00245:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00249:    	jne    0x32ed6
  0024f: 26 	cmp    DWORD PTR [rip+0xfffffffffffec1ce],0x26        # 0xfffec424
  00256:    	jne    0x32ed6
  0025c:    	sub    rsp,0x10
  00260:    	movq   QWORD PTR [rsp],xmm2
  00265: 00 	cmp    DWORD PTR [rip+0xfffffffffffec1bc],0x0        # 0xfffec428
  0026c:    	je     0x284
  00272:    	mov    rdi,r12
  00275:    	mov    rsi,QWORD PTR [rbx]
  00278: 78 	movabs rax,0x557860afd140
  00282:    	call   rax
  00284: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0028d:    	mov    rax,QWORD PTR [r14-0x68]
  00291:    	mov    QWORD PTR [rsp-0x40],rax
  00296: 00 	mov    rdi,0x1
  0029d:    	mov    rax,QWORD PTR [r14-0x70]
  002a1:    	mov    QWORD PTR [rsp-0x48],rax
  002a6: 00 	mov    QWORD PTR [rsp-0x38],0x0
  002af: 05 	movabs rax,0x100050000005d
  002b9:    	mov    QWORD PTR [rsp-0x30],rax
  002be: 78 	movabs r13,0x557861fb69b0
  002c8:    	mov    rsi,QWORD PTR [rbx]
  002cb:    	mov    QWORD PTR [rsp-0x18],rsi
  002d0:    	lea    rsi,[rsp-0x18]
  002d5:    	mov    QWORD PTR [rbx],rsi
  002d8:    	lea    r14,[rsp-0x10]
  002dd:    	mov    QWORD PTR [rsp-0x20],r14
  002e2:    	call   0xfffed100
  002e7:    	lea    r14,[rbp-0x8]
  002eb:    	mov    QWORD PTR [rbx],r14
  002ee:    	mov    r14,QWORD PTR [rbp-0x10]
  002f2:    	movq   xmm2,QWORD PTR [rsp]
  002f7:    	add    rsp,0x10
  002fb: 78 	movabs r13,0x557861fb0ce0
  00305:    	test   rax,rax
  00308:    	je     0xfffe8f8c
  0030e:    	mov    QWORD PTR [r14-0x50],rax
:00010 
:00011 %5 = %4
  00312:    	mov    rax,QWORD PTR [r14-0x50]
  00316:    	mov    QWORD PTR [r14-0x58],rax
:00012 %7 = literal[0.0]
  0031a: 00 	movq   xmm3,QWORD PTR [rip+0x1356]        # 0x1678
  00322: 00 	movabs rax,0x8000000000000002
  0032c:    	mov    QWORD PTR [r14-0x68],rax
:00013 _%7 = %4 < %7                        [Float][Float]
:00014 condnotbr _%7 =>:00018
  00330:    	mov    rdi,QWORD PTR [r14-0x50]
  00334: 00 	test   rdi,0x1
  0033b:    	jne    0x32ef2
  00341: 00 	test   rdi,0x2
  00348:    	je     0x384
  0034e:    	xorps  xmm4,xmm4
  00351: 00 	movabs rax,0x8000000000000002
  0035b:    	cmp    rdi,rax
  0035e:    	je     0x396
  00364:    	mov    rax,rdi
  00367:    	sar    rax,0x3f
  0036b:    	add    rax,0x2
  0036f:    	and    rdi,0xfffffffffffffffc
  00373:    	or     rdi,rax
  00376:    	rol    rdi,0x3d
  0037a:    	movq   xmm4,rdi
  0037f:    	jmp    0x396
  00384:    	call   0xfffe8fe5
  00389:    	test   rax,rax
  0038c:    	je     0x32ef2
  00392:    	movq   xmm4,xmm0
  00396:    	ucomisd xmm4,xmm3
  0039a:    	jae    0x32f0e
:00015 %5 = %4
:00016 %5 = neg %5                          [Float]
  003a0:    	movq   xmm5,xmm4
  003a4: 00 	xorps  xmm5,XMMWORD PTR [rip+0x12dd]        # 0x1688
:00017 br =>:00018
  003ab:    	jmp    0x32f34
:00018 %7 = literal[1e-17]
  003b0: 00 	movq   xmm3,QWORD PTR [rip+0x12e0]        # 0x1698
  003b8: aa 	movabs rax,0xe33877aa3236a4ba
  003c2:    	mov    QWORD PTR [r14-0x68],rax
:00019 _%7 = %5 < %7                        [Float][Float]
:00020 condnotbr _%7 =>:00024
  003c6:    	mov    rdi,QWORD PTR [r14-0x58]
  003ca: 00 	test   rdi,0x1
  003d1:    	jne    0x32f67
  003d7: 00 	test   rdi,0x2
  003de:    	je     0x41a
  003e4:    	xorps  xmm5,xmm5
  003e7: 00 	movabs rax,0x8000000000000002
  003f1:    	cmp    rdi,rax
  003f4:    	je     0x42c
  003fa:    	mov    rax,rdi
  003fd:    	sar    rax,0x3f
  00401:    	add    rax,0x2
  00405:    	and    rdi,0xfffffffffffffffc
  00409:    	or     rdi,rax
  0040c:    	rol    rdi,0x3d
  00410:    	movq   xmm5,rdi
  00415:    	jmp    0x42c
  0041a:    	call   0xfffe8fe5
  0041f:    	test   rax,rax
  00422:    	je     0x32f67
  00428:    	movq   xmm5,xmm0
  0042c:    	ucomisd xmm5,xmm3
  00430:    	jae    0x444
:00021 %7 = nil
  00436: 00 	mov    QWORD PTR [r14-0x68],0x4
:00022 ret %7
  0043e:    	mov    rax,QWORD PTR [r14-0x68]
  00442:    	leave  
  00443:    	ret    
:00024 %7 = %1.call org()                   [Ray]
  00444:    	mov    rdi,QWORD PTR [r14-0x38]
  00448: 00 	test   rdi,0x7
  0044f:    	jne    0x32f83
  00455:    	cmp    DWORD PTR [rdi+0x4],0x31
  00459:    	jne    0x32f83
  0045f: 26 	cmp    DWORD PTR [rip+0xfffffffffffebfbe],0x26        # 0xfffec424
  00466:    	jne    0x32f83
  0046c:    	mov    esi,DWORD PTR [rip+0x1232]        # 0x16a4
  00472:    	cmp    esi,0xffffffff
  00475:    	je     0x32f9f
  0047b:    	cmp    WORD PTR [rdi+0x2],0x3
  00480:    	jne    0x499
  00486:    	cmp    esi,0x6
  00489:    	jge    0x499
  0048f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00494:    	jmp    0x4cf
  00499:    	sub    rsp,0x20
  0049d:    	movq   QWORD PTR [rsp],xmm2
  004a2:    	movq   QWORD PTR [rsp+0x8],xmm4
  004a8:    	movq   QWORD PTR [rsp+0x10],xmm5
  004ae: 78 	movabs rax,0x557860b3bf40
  004b8:    	call   rax
  004ba:    	movq   xmm2,QWORD PTR [rsp]
  004bf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  004c5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  004cb:    	add    rsp,0x20
  004cf:    	mov    QWORD PTR [r14-0x68],rax
:00025 
:00026 %8 = @n: Plane[IvarId(1)]
  004d3:    	mov    rdi,QWORD PTR [r14-0x30]
  004d7:    	mov    rax,QWORD PTR [rdi+0x18]
  004db:    	mov    QWORD PTR [r14-0x70],rax
:00027 %7 = %7.call vdot(%8; 1)             [Vec]
  004df:    	mov    rdi,QWORD PTR [r14-0x68]
  004e3: 00 	test   rdi,0x7
  004ea:    	jne    0x32ff2
  004f0:    	cmp    DWORD PTR [rdi+0x4],0x2b
  004f4:    	jne    0x32ff2
  004fa: 26 	cmp    DWORD PTR [rip+0xfffffffffffebf23],0x26        # 0xfffec424
  00501:    	jne    0x32ff2
  00507:    	sub    rsp,0x20
  0050b:    	movq   QWORD PTR [rsp],xmm2
  00510:    	movq   QWORD PTR [rsp+0x8],xmm4
  00516:    	movq   QWORD PTR [rsp+0x10],xmm5
  0051c: 00 	cmp    DWORD PTR [rip+0xfffffffffffebf05],0x0        # 0xfffec428
  00523:    	je     0x53b
  00529:    	mov    rdi,r12
  0052c:    	mov    rsi,QWORD PTR [rbx]
  0052f: 78 	movabs rax,0x557860afd140
  00539:    	call   rax
  0053b: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00544:    	mov    rax,QWORD PTR [r14-0x68]
  00548:    	mov    QWORD PTR [rsp-0x40],rax
  0054d: 00 	mov    rdi,0x1
  00554:    	mov    rax,QWORD PTR [r14-0x70]
  00558:    	mov    QWORD PTR [rsp-0x48],rax
  0055d: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00566: 05 	movabs rax,0x100050000005d
  00570:    	mov    QWORD PTR [rsp-0x30],rax
  00575: 78 	movabs r13,0x557861fb69b0
  0057f:    	mov    rsi,QWORD PTR [rbx]
  00582:    	mov    QWORD PTR [rsp-0x18],rsi
  00587:    	lea    rsi,[rsp-0x18]
  0058c:    	mov    QWORD PTR [rbx],rsi
  0058f:    	lea    r14,[rsp-0x10]
  00594:    	mov    QWORD PTR [rsp-0x20],r14
  00599:    	call   0xfffed100
  0059e:    	lea    r14,[rbp-0x8]
  005a2:    	mov    QWORD PTR [rbx],r14
  005a5:    	mov    r14,QWORD PTR [rbp-0x10]
  005a9:    	movq   xmm2,QWORD PTR [rsp]
  005ae:    	movq   xmm4,QWORD PTR [rsp+0x8]
  005b4:    	movq   xmm5,QWORD PTR [rsp+0x10]
  005ba:    	add    rsp,0x20
  005be: 78 	movabs r13,0x557861fb0e00
  005c8:    	test   rax,rax
  005cb:    	je     0xfffe8f8c
  005d1:    	mov    QWORD PTR [r14-0x68],rax
:00028 
:00029 %7 = %7 + %3                         [Float][Float]
  005d5:    	mov    rdi,QWORD PTR [r14-0x68]
  005d9: 00 	test   rdi,0x1
  005e0:    	jne    0x3300e
  005e6: 00 	test   rdi,0x2
  005ed:    	je     0x629
  005f3:    	xorps  xmm3,xmm3
  005f6: 00 	movabs rax,0x8000000000000002
  00600:    	cmp    rdi,rax
  00603:    	je     0x63b
  00609:    	mov    rax,rdi
  0060c:    	sar    rax,0x3f
  00610:    	add    rax,0x2
  00614:    	and    rdi,0xfffffffffffffffc
  00618:    	or     rdi,rax
  0061b:    	rol    rdi,0x3d
  0061f:    	movq   xmm3,rdi
  00624:    	jmp    0x63b
  00629:    	call   0xfffe8fe5
  0062e:    	test   rax,rax
  00631:    	je     0x3300e
  00637:    	movq   xmm3,xmm0
  0063b:    	addsd  xmm3,xmm2
:00030 %7 = neg %7                          [Float]
  0063f: 00 	xorps  xmm3,XMMWORD PTR [rip+0x1062]        # 0x16a8
:00031 %6 = %7 / %4                         [Float][Float]
  00646:    	movq   xmm6,xmm3
  0064a:    	movq   rax,xmm4
  0064f:    	test   rax,rax
  00652:    	je     0xfffe8fb1
  00658:    	divsd  xmm6,xmm4
:00032 %7 = literal[0.0]
  0065c: 00 	movq   xmm3,QWORD PTR [rip+0x1054]        # 0x16b8
  00664: 00 	movabs rax,0x8000000000000002
  0066e:    	mov    QWORD PTR [r14-0x68],rax
:00033 _%7 = %6 > %7                        [Float][Float]
:00034 condnotbr _%7 =>:00083
  00672:    	ucomisd xmm6,xmm3
  00676:    	jbe    0x33c2c
:00035 %7 = %2.call t()                     [Isect]
  0067c:    	mov    rdi,QWORD PTR [r14-0x40]
  00680: 00 	test   rdi,0x7
  00687:    	jne    0x3302a
  0068d:    	cmp    DWORD PTR [rdi+0x4],0x33
  00691:    	jne    0x3302a
  00697: 26 	cmp    DWORD PTR [rip+0xfffffffffffebd86],0x26        # 0xfffec424
  0069e:    	jne    0x3302a
  006a4:    	mov    esi,DWORD PTR [rip+0x101a]        # 0x16c4
  006aa:    	cmp    esi,0xffffffff
  006ad:    	je     0x33053
  006b3:    	cmp    WORD PTR [rdi+0x2],0x3
  006b8:    	jne    0x6d1
  006be:    	cmp    esi,0x6
  006c1:    	jge    0x6d1
  006c7:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  006cc:    	jmp    0x713
  006d1:    	sub    rsp,0x20
  006d5:    	movq   QWORD PTR [rsp],xmm2
  006da:    	movq   QWORD PTR [rsp+0x8],xmm4
  006e0:    	movq   QWORD PTR [rsp+0x10],xmm5
  006e6:    	movq   QWORD PTR [rsp+0x18],xmm6
  006ec: 78 	movabs rax,0x557860b3bf40
  006f6:    	call   rax
  006f8:    	movq   xmm2,QWORD PTR [rsp]
  006fd:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00703:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00709:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0070f:    	add    rsp,0x20
  00713:    	mov    QWORD PTR [r14-0x68],rax
:00036 
:00037 _%7 = %6 < %7                        [Float][Float]
:00038 condnotbr _%7 =>:00083
  00717:    	mov    rdi,QWORD PTR [r14-0x68]
  0071b: 00 	test   rdi,0x1
  00722:    	jne    0x330b2
  00728: 00 	test   rdi,0x2
  0072f:    	je     0x76b
  00735:    	xorps  xmm3,xmm3
  00738: 00 	movabs rax,0x8000000000000002
  00742:    	cmp    rdi,rax
  00745:    	je     0x77d
  0074b:    	mov    rax,rdi
  0074e:    	sar    rax,0x3f
  00752:    	add    rax,0x2
  00756:    	and    rdi,0xfffffffffffffffc
  0075a:    	or     rdi,rax
  0075d:    	rol    rdi,0x3d
  00761:    	movq   xmm3,rdi
  00766:    	jmp    0x77d
  0076b:    	call   0xfffe8fe5
  00770:    	test   rax,rax
  00773:    	je     0x330b2
  00779:    	movq   xmm3,xmm0
  0077d:    	ucomisd xmm6,xmm3
  00781:    	jae    0x33c5f
:00039 %7 = literal[true]
  00787: 00 	mov    rax,0x1c
  0078e:    	mov    QWORD PTR [r14-0x68],rax
:00040 _ = %2.call hit=(%7; 1)              [Isect]
  00792:    	mov    rdi,QWORD PTR [r14-0x40]
  00796: 00 	test   rdi,0x7
  0079d:    	jne    0x330db
  007a3:    	cmp    DWORD PTR [rdi+0x4],0x33
  007a7:    	jne    0x330db
  007ad: 26 	cmp    DWORD PTR [rip+0xfffffffffffebc70],0x26        # 0xfffec424
  007b4:    	jne    0x330db
  007ba:    	mov    esi,DWORD PTR [rip+0xf0c]        # 0x16cc
  007c0:    	cmp    esi,0xffffffff
  007c3:    	je     0x33104
  007c9:    	cmp    WORD PTR [rdi+0x2],0x3
  007ce:    	jne    0x7eb
  007d4:    	cmp    esi,0x6
  007d7:    	jge    0x7eb
  007dd:    	mov    rax,QWORD PTR [r14-0x68]
  007e1:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  007e6:    	jmp    0x844
  007eb:    	sub    rsp,0x20
  007ef:    	movq   QWORD PTR [rsp],xmm2
  007f4:    	movq   QWORD PTR [rsp+0x8],xmm4
  007fa:    	movq   QWORD PTR [rsp+0x10],xmm5
  00800:    	movq   QWORD PTR [rsp+0x18],xmm6
  00806:    	mov    rdx,QWORD PTR [r14-0x68]
  0080a: 78 	movabs rax,0x557860b3c1c0
  00814:    	call   rax
  00816:    	movq   xmm2,QWORD PTR [rsp]
  0081b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00821:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00827:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0082d:    	add    rsp,0x20
  00831: 78 	movabs r13,0x557861fb0ed0
  0083b:    	test   rax,rax
  0083e:    	je     0xfffe8f8c
:00041 
:00042 _ = %2.call t=(%6; 1)                [Isect]
  00844:    	movq   xmm0,xmm6
  00848:    	call   0xfffe9109
  0084d:    	mov    QWORD PTR [r14-0x60],rax
  00851:    	mov    rdi,QWORD PTR [r14-0x40]
  00855: 00 	test   rdi,0x7
  0085c:    	jne    0x3316a
  00862:    	cmp    DWORD PTR [rdi+0x4],0x33
  00866:    	jne    0x3316a
  0086c: 26 	cmp    DWORD PTR [rip+0xfffffffffffebbb1],0x26        # 0xfffec424
  00873:    	jne    0x3316a
  00879:    	mov    esi,DWORD PTR [rip+0xe55]        # 0x16d4
  0087f:    	cmp    esi,0xffffffff
  00882:    	je     0x33186
  00888:    	cmp    WORD PTR [rdi+0x2],0x3
  0088d:    	jne    0x8aa
  00893:    	cmp    esi,0x6
  00896:    	jge    0x8aa
  0089c:    	mov    rax,QWORD PTR [r14-0x60]
  008a0:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  008a5:    	jmp    0x903
  008aa:    	sub    rsp,0x20
  008ae:    	movq   QWORD PTR [rsp],xmm2
  008b3:    	movq   QWORD PTR [rsp+0x8],xmm4
  008b9:    	movq   QWORD PTR [rsp+0x10],xmm5
  008bf:    	movq   QWORD PTR [rsp+0x18],xmm6
  008c5:    	mov    rdx,QWORD PTR [r14-0x60]
  008c9: 78 	movabs rax,0x557860b3c1c0
  008d3:    	call   rax
  008d5:    	movq   xmm2,QWORD PTR [rsp]
  008da:    	movq   xmm4,QWORD PTR [rsp+0x8]
  008e0:    	movq   xmm5,QWORD PTR [rsp+0x10]
  008e6:    	movq   xmm6,QWORD PTR [rsp+0x18]
  008ec:    	add    rsp,0x20
  008f0: 78 	movabs r13,0x557861fb0ef0
  008fa:    	test   rax,rax
  008fd:    	je     0xfffe8f8c
:00043 
:00044 %7 = @n: Plane[IvarId(1)]
  00903:    	mov    rdi,QWORD PTR [r14-0x30]
  00907:    	mov    rax,QWORD PTR [rdi+0x18]
  0090b:    	mov    QWORD PTR [r14-0x68],rax
:00045 _ = %2.call n=(%7; 1)                [Isect]
  0090f:    	mov    rdi,QWORD PTR [r14-0x40]
  00913: 00 	test   rdi,0x7
  0091a:    	jne    0x331ec
  00920:    	cmp    DWORD PTR [rdi+0x4],0x33
  00924:    	jne    0x331ec
  0092a: 26 	cmp    DWORD PTR [rip+0xfffffffffffebaf3],0x26        # 0xfffec424
  00931:    	jne    0x331ec
  00937:    	mov    esi,DWORD PTR [rip+0xd9f]        # 0x16dc
  0093d:    	cmp    esi,0xffffffff
  00940:    	je     0x33208
  00946:    	cmp    WORD PTR [rdi+0x2],0x3
  0094b:    	jne    0x968
  00951:    	cmp    esi,0x6
  00954:    	jge    0x968
  0095a:    	mov    rax,QWORD PTR [r14-0x68]
  0095e:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00963:    	jmp    0x9c1
  00968:    	sub    rsp,0x20
  0096c:    	movq   QWORD PTR [rsp],xmm2
  00971:    	movq   QWORD PTR [rsp+0x8],xmm4
  00977:    	movq   QWORD PTR [rsp+0x10],xmm5
  0097d:    	movq   QWORD PTR [rsp+0x18],xmm6
  00983:    	mov    rdx,QWORD PTR [r14-0x68]
  00987: 78 	movabs rax,0x557860b3c1c0
  00991:    	call   rax
  00993:    	movq   xmm2,QWORD PTR [rsp]
  00998:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0099e:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009a4:    	movq   xmm6,QWORD PTR [rsp+0x18]
  009aa:    	add    rsp,0x20
  009ae: 78 	movabs r13,0x557861fb0f20
  009b8:    	test   rax,rax
  009bb:    	je     0xfffe8f8c
:00046 
:00047 %7 = const[Vec]                      [Vec]
  009c1: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeba70]        # 0xfffec438
  009c8: 00 	cmp    rax,QWORD PTR [rip+0xd29]        # 0x16f8
  009cf:    	jne    0x3326e
  009d5: 00 	mov    rax,QWORD PTR [rip+0xd0c]        # 0x16e8
  009dc:    	mov    QWORD PTR [r14-0x68],rax
:00048 %8 = %1.call org()                   [Ray]
  009e0:    	mov    rdi,QWORD PTR [r14-0x38]
  009e4: 00 	test   rdi,0x7
  009eb:    	jne    0x332ea
  009f1:    	cmp    DWORD PTR [rdi+0x4],0x31
  009f5:    	jne    0x332ea
  009fb: 26 	cmp    DWORD PTR [rip+0xfffffffffffeba22],0x26        # 0xfffec424
  00a02:    	jne    0x332ea
  00a08:    	mov    esi,DWORD PTR [rip+0xcf6]        # 0x1704
  00a0e:    	cmp    esi,0xffffffff
  00a11:    	je     0x33306
  00a17:    	cmp    WORD PTR [rdi+0x2],0x3
  00a1c:    	jne    0xa35
  00a22:    	cmp    esi,0x6
  00a25:    	jge    0xa35
  00a2b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a30:    	jmp    0xa77
  00a35:    	sub    rsp,0x20
  00a39:    	movq   QWORD PTR [rsp],xmm2
  00a3e:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a44:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a4a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a50: 78 	movabs rax,0x557860b3bf40
  00a5a:    	call   rax
  00a5c:    	movq   xmm2,QWORD PTR [rsp]
  00a61:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a67:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a6d:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a73:    	add    rsp,0x20
  00a77:    	mov    QWORD PTR [r14-0x70],rax
:00049 
:00050 %8 = %8.call x()                     [Vec]
  00a7b:    	mov    rdi,QWORD PTR [r14-0x70]
  00a7f: 00 	test   rdi,0x7
  00a86:    	jne    0x33365
  00a8c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00a90:    	jne    0x33365
  00a96: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb987],0x26        # 0xfffec424
  00a9d:    	jne    0x33365
  00aa3:    	mov    esi,DWORD PTR [rip+0xc63]        # 0x170c
  00aa9:    	cmp    esi,0xffffffff
  00aac:    	je     0x33381
  00ab2:    	cmp    WORD PTR [rdi+0x2],0x3
  00ab7:    	jne    0xad0
  00abd:    	cmp    esi,0x6
  00ac0:    	jge    0xad0
  00ac6:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00acb:    	jmp    0xb12
  00ad0:    	sub    rsp,0x20
  00ad4:    	movq   QWORD PTR [rsp],xmm2
  00ad9:    	movq   QWORD PTR [rsp+0x8],xmm4
  00adf:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ae5:    	movq   QWORD PTR [rsp+0x18],xmm6
  00aeb: 78 	movabs rax,0x557860b3bf40
  00af5:    	call   rax
  00af7:    	movq   xmm2,QWORD PTR [rsp]
  00afc:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b02:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00b08:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00b0e:    	add    rsp,0x20
  00b12:    	mov    QWORD PTR [r14-0x70],rax
:00051 
:00052 %9 = %1.call dir()                   [Ray]
  00b16:    	mov    rdi,QWORD PTR [r14-0x38]
  00b1a: 00 	test   rdi,0x7
  00b21:    	jne    0x333e0
  00b27:    	cmp    DWORD PTR [rdi+0x4],0x31
  00b2b:    	jne    0x333e0
  00b31: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb8ec],0x26        # 0xfffec424
  00b38:    	jne    0x333e0
  00b3e:    	mov    esi,DWORD PTR [rip+0xbd0]        # 0x1714
  00b44:    	cmp    esi,0xffffffff
  00b47:    	je     0x333fc
  00b4d:    	cmp    WORD PTR [rdi+0x2],0x3
  00b52:    	jne    0xb6b
  00b58:    	cmp    esi,0x6
  00b5b:    	jge    0xb6b
  00b61:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00b66:    	jmp    0xbad
  00b6b:    	sub    rsp,0x20
  00b6f:    	movq   QWORD PTR [rsp],xmm2
  00b74:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b7a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b80:    	movq   QWORD PTR [rsp+0x18],xmm6
  00b86: 78 	movabs rax,0x557860b3bf40
  00b90:    	call   rax
  00b92:    	movq   xmm2,QWORD PTR [rsp]
  00b97:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b9d:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ba3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00ba9:    	add    rsp,0x20
  00bad:    	mov    QWORD PTR [r14-0x78],rax
:00053 
:00054 %9 = %9.call x()                     [Vec]
  00bb1:    	mov    rdi,QWORD PTR [r14-0x78]
  00bb5: 00 	test   rdi,0x7
  00bbc:    	jne    0x3345b
  00bc2:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00bc6:    	jne    0x3345b
  00bcc: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb851],0x26        # 0xfffec424
  00bd3:    	jne    0x3345b
  00bd9:    	mov    esi,DWORD PTR [rip+0xb3d]        # 0x171c
  00bdf:    	cmp    esi,0xffffffff
  00be2:    	je     0x33477
  00be8:    	cmp    WORD PTR [rdi+0x2],0x3
  00bed:    	jne    0xc06
  00bf3:    	cmp    esi,0x6
  00bf6:    	jge    0xc06
  00bfc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c01:    	jmp    0xc48
  00c06:    	sub    rsp,0x20
  00c0a:    	movq   QWORD PTR [rsp],xmm2
  00c0f:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c15:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c1b:    	movq   QWORD PTR [rsp+0x18],xmm6
  00c21: 78 	movabs rax,0x557860b3bf40
  00c2b:    	call   rax
  00c2d:    	movq   xmm2,QWORD PTR [rsp]
  00c32:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c38:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c3e:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00c44:    	add    rsp,0x20
  00c48:    	mov    QWORD PTR [r14-0x78],rax
:00055 
:00056 %9 = %6 * %9                         [Float][Float]
  00c4c:    	mov    rdi,QWORD PTR [r14-0x78]
  00c50: 00 	test   rdi,0x1
  00c57:    	jne    0x334d6
  00c5d: 00 	test   rdi,0x2
  00c64:    	je     0xca0
  00c6a:    	xorps  xmm3,xmm3
  00c6d: 00 	movabs rax,0x8000000000000002
  00c77:    	cmp    rdi,rax
  00c7a:    	je     0xcb2
  00c80:    	mov    rax,rdi
  00c83:    	sar    rax,0x3f
  00c87:    	add    rax,0x2
  00c8b:    	and    rdi,0xfffffffffffffffc
  00c8f:    	or     rdi,rax
  00c92:    	rol    rdi,0x3d
  00c96:    	movq   xmm3,rdi
  00c9b:    	jmp    0xcb2
  00ca0:    	call   0xfffe8fe5
  00ca5:    	test   rax,rax
  00ca8:    	je     0x334d6
  00cae:    	movq   xmm3,xmm0
  00cb2:    	mulsd  xmm3,xmm6
:00057 %8 = %8 + %9                         [Float][Float]
  00cb6:    	mov    rdi,QWORD PTR [r14-0x70]
  00cba: 00 	test   rdi,0x1
  00cc1:    	jne    0x334f2
  00cc7: 00 	test   rdi,0x2
  00cce:    	je     0xd0a
  00cd4:    	xorps  xmm7,xmm7
  00cd7: 00 	movabs rax,0x8000000000000002
  00ce1:    	cmp    rdi,rax
  00ce4:    	je     0xd1c
  00cea:    	mov    rax,rdi
  00ced:    	sar    rax,0x3f
  00cf1:    	add    rax,0x2
  00cf5:    	and    rdi,0xfffffffffffffffc
  00cf9:    	or     rdi,rax
  00cfc:    	rol    rdi,0x3d
  00d00:    	movq   xmm7,rdi
  00d05:    	jmp    0xd1c
  00d0a:    	call   0xfffe8fe5
  00d0f:    	test   rax,rax
  00d12:    	je     0x334f2
  00d18:    	movq   xmm7,xmm0
  00d1c:    	addsd  xmm7,xmm3
:00058 %9 = %1.call org()                   [Ray]
  00d20:    	mov    rdi,QWORD PTR [r14-0x38]
  00d24: 00 	test   rdi,0x7
  00d2b:    	jne    0x3351b
  00d31:    	cmp    DWORD PTR [rdi+0x4],0x31
  00d35:    	jne    0x3351b
  00d3b: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb6e2],0x26        # 0xfffec424
  00d42:    	jne    0x3351b
  00d48:    	mov    esi,DWORD PTR [rip+0x9d6]        # 0x1724
  00d4e:    	cmp    esi,0xffffffff
  00d51:    	je     0x33544
  00d57:    	cmp    WORD PTR [rdi+0x2],0x3
  00d5c:    	jne    0xd75
  00d62:    	cmp    esi,0x6
  00d65:    	jge    0xd75
  00d6b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d70:    	jmp    0xdc3
  00d75:    	sub    rsp,0x30
  00d79:    	movq   QWORD PTR [rsp],xmm2
  00d7e:    	movq   QWORD PTR [rsp+0x8],xmm4
  00d84:    	movq   QWORD PTR [rsp+0x10],xmm5
  00d8a:    	movq   QWORD PTR [rsp+0x18],xmm6
  00d90:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d96: 78 	movabs rax,0x557860b3bf40
  00da0:    	call   rax
  00da2:    	movq   xmm2,QWORD PTR [rsp]
  00da7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00dad:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00db3:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00db9:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00dbf:    	add    rsp,0x30
  00dc3:    	mov    QWORD PTR [r14-0x78],rax
:00059 
:00060 %9 = %9.call y()                     [Vec]
  00dc7:    	mov    rdi,QWORD PTR [r14-0x78]
  00dcb: 00 	test   rdi,0x7
  00dd2:    	jne    0x335af
  00dd8:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00ddc:    	jne    0x335af
  00de2: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb63b],0x26        # 0xfffec424
  00de9:    	jne    0x335af
  00def:    	mov    esi,DWORD PTR [rip+0x937]        # 0x172c
  00df5:    	cmp    esi,0xffffffff
  00df8:    	je     0x335d8
  00dfe:    	cmp    WORD PTR [rdi+0x2],0x3
  00e03:    	jne    0xe1c
  00e09:    	cmp    esi,0x6
  00e0c:    	jge    0xe1c
  00e12:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e17:    	jmp    0xe6a
  00e1c:    	sub    rsp,0x30
  00e20:    	movq   QWORD PTR [rsp],xmm2
  00e25:    	movq   QWORD PTR [rsp+0x8],xmm4
  00e2b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00e31:    	movq   QWORD PTR [rsp+0x18],xmm6
  00e37:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e3d: 78 	movabs rax,0x557860b3bf40
  00e47:    	call   rax
  00e49:    	movq   xmm2,QWORD PTR [rsp]
  00e4e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00e54:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00e5a:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00e60:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e66:    	add    rsp,0x30
  00e6a:    	mov    QWORD PTR [r14-0x78],rax
:00061 
:00062 %10 = %1.call dir()                  [Ray]
  00e6e:    	mov    rdi,QWORD PTR [r14-0x38]
  00e72: 00 	test   rdi,0x7
  00e79:    	jne    0x33643
  00e7f:    	cmp    DWORD PTR [rdi+0x4],0x31
  00e83:    	jne    0x33643
  00e89: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb594],0x26        # 0xfffec424
  00e90:    	jne    0x33643
  00e96:    	mov    esi,DWORD PTR [rip+0x898]        # 0x1734
  00e9c:    	cmp    esi,0xffffffff
  00e9f:    	je     0x3366c
  00ea5:    	cmp    WORD PTR [rdi+0x2],0x3
  00eaa:    	jne    0xec3
  00eb0:    	cmp    esi,0x6
  00eb3:    	jge    0xec3
  00eb9:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ebe:    	jmp    0xf11
  00ec3:    	sub    rsp,0x30
  00ec7:    	movq   QWORD PTR [rsp],xmm2
  00ecc:    	movq   QWORD PTR [rsp+0x8],xmm4
  00ed2:    	movq   QWORD PTR [rsp+0x10],xmm5
  00ed8:    	movq   QWORD PTR [rsp+0x18],xmm6
  00ede:    	movq   QWORD PTR [rsp+0x20],xmm7
  00ee4: 78 	movabs rax,0x557860b3bf40
  00eee:    	call   rax
  00ef0:    	movq   xmm2,QWORD PTR [rsp]
  00ef5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00efb:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00f01:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00f07:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00f0d:    	add    rsp,0x30
  00f11:    	mov    QWORD PTR [r14-0x80],rax
:00063 
:00064 %10 = %10.call y()                   [Vec]
  00f15:    	mov    rdi,QWORD PTR [r14-0x80]
  00f19: 00 	test   rdi,0x7
  00f20:    	jne    0x336d7
  00f26:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00f2a:    	jne    0x336d7
  00f30: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb4ed],0x26        # 0xfffec424
  00f37:    	jne    0x336d7
  00f3d:    	mov    esi,DWORD PTR [rip+0x7f9]        # 0x173c
  00f43:    	cmp    esi,0xffffffff
  00f46:    	je     0x33700
  00f4c:    	cmp    WORD PTR [rdi+0x2],0x3
  00f51:    	jne    0xf6a
  00f57:    	cmp    esi,0x6
  00f5a:    	jge    0xf6a
  00f60:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00f65:    	jmp    0xfb8
  00f6a:    	sub    rsp,0x30
  00f6e:    	movq   QWORD PTR [rsp],xmm2
  00f73:    	movq   QWORD PTR [rsp+0x8],xmm4
  00f79:    	movq   QWORD PTR [rsp+0x10],xmm5
  00f7f:    	movq   QWORD PTR [rsp+0x18],xmm6
  00f85:    	movq   QWORD PTR [rsp+0x20],xmm7
  00f8b: 78 	movabs rax,0x557860b3bf40
  00f95:    	call   rax
  00f97:    	movq   xmm2,QWORD PTR [rsp]
  00f9c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00fa2:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00fa8:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00fae:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00fb4:    	add    rsp,0x30
  00fb8:    	mov    QWORD PTR [r14-0x80],rax
:00065 
:00066 %10 = %6 * %10                       [Float][Float]
  00fbc:    	mov    rdi,QWORD PTR [r14-0x80]
  00fc0: 00 	test   rdi,0x1
  00fc7:    	jne    0x3376b
  00fcd: 00 	test   rdi,0x2
  00fd4:    	je     0x1010
  00fda:    	xorps  xmm3,xmm3
  00fdd: 00 	movabs rax,0x8000000000000002
  00fe7:    	cmp    rdi,rax
  00fea:    	je     0x1022
  00ff0:    	mov    rax,rdi
  00ff3:    	sar    rax,0x3f
  00ff7:    	add    rax,0x2
  00ffb:    	and    rdi,0xfffffffffffffffc
  00fff:    	or     rdi,rax
  01002:    	rol    rdi,0x3d
  01006:    	movq   xmm3,rdi
  0100b:    	jmp    0x1022
  01010:    	call   0xfffe8fe5
  01015:    	test   rax,rax
  01018:    	je     0x3376b
  0101e:    	movq   xmm3,xmm0
  01022:    	mulsd  xmm3,xmm6
:00067 %9 = %9 + %10                        [Float][Float]
  01026:    	mov    rdi,QWORD PTR [r14-0x78]
  0102a: 00 	test   rdi,0x1
  01031:    	jne    0x33794
  01037: 00 	test   rdi,0x2
  0103e:    	je     0x107b
  01044:    	xorps  xmm8,xmm8
  01048: 00 	movabs rax,0x8000000000000002
  01052:    	cmp    rdi,rax
  01055:    	je     0x108e
  0105b:    	mov    rax,rdi
  0105e:    	sar    rax,0x3f
  01062:    	add    rax,0x2
  01066:    	and    rdi,0xfffffffffffffffc
  0106a:    	or     rdi,rax
  0106d:    	rol    rdi,0x3d
  01071:    	movq   xmm8,rdi
  01076:    	jmp    0x108e
  0107b:    	call   0xfffe8fe5
  01080:    	test   rax,rax
  01083:    	je     0x33794
  01089:    	movq   xmm8,xmm0
  0108e:    	addsd  xmm8,xmm3
:00068 %10 = %1.call org()                  [Ray]
  01093:    	mov    rdi,QWORD PTR [r14-0x38]
  01097: 00 	test   rdi,0x7
  0109e:    	jne    0x337ca
  010a4:    	cmp    DWORD PTR [rdi+0x4],0x31
  010a8:    	jne    0x337ca
  010ae: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb36f],0x26        # 0xfffec424
  010b5:    	jne    0x337ca
  010bb:    	mov    esi,DWORD PTR [rip+0x683]        # 0x1744
  010c1:    	cmp    esi,0xffffffff
  010c4:    	je     0x33801
  010ca:    	cmp    WORD PTR [rdi+0x2],0x3
  010cf:    	jne    0x10e8
  010d5:    	cmp    esi,0x6
  010d8:    	jge    0x10e8
  010de:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  010e3:    	jmp    0x1144
  010e8:    	sub    rsp,0x30
  010ec:    	movq   QWORD PTR [rsp],xmm2
  010f1:    	movq   QWORD PTR [rsp+0x8],xmm4
  010f7:    	movq   QWORD PTR [rsp+0x10],xmm5
  010fd:    	movq   QWORD PTR [rsp+0x18],xmm6
  01103:    	movq   QWORD PTR [rsp+0x20],xmm7
  01109: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01110: 78 	movabs rax,0x557860b3bf40
  0111a:    	call   rax
  0111c:    	movq   xmm2,QWORD PTR [rsp]
  01121:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01127:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0112d:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01133:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01139: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01140:    	add    rsp,0x30
  01144:    	mov    QWORD PTR [r14-0x80],rax
:00069 
:00070 %10 = %10.call z()                   [Vec]
  01148:    	mov    rdi,QWORD PTR [r14-0x80]
  0114c: 00 	test   rdi,0x7
  01153:    	jne    0x3387a
  01159:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0115d:    	jne    0x3387a
  01163: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb2ba],0x26        # 0xfffec424
  0116a:    	jne    0x3387a
  01170:    	mov    esi,DWORD PTR [rip+0x5d6]        # 0x174c
  01176:    	cmp    esi,0xffffffff
  01179:    	je     0x338b1
  0117f:    	cmp    WORD PTR [rdi+0x2],0x3
  01184:    	jne    0x119d
  0118a:    	cmp    esi,0x6
  0118d:    	jge    0x119d
  01193:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01198:    	jmp    0x11f9
  0119d:    	sub    rsp,0x30
  011a1:    	movq   QWORD PTR [rsp],xmm2
  011a6:    	movq   QWORD PTR [rsp+0x8],xmm4
  011ac:    	movq   QWORD PTR [rsp+0x10],xmm5
  011b2:    	movq   QWORD PTR [rsp+0x18],xmm6
  011b8:    	movq   QWORD PTR [rsp+0x20],xmm7
  011be: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  011c5: 78 	movabs rax,0x557860b3bf40
  011cf:    	call   rax
  011d1:    	movq   xmm2,QWORD PTR [rsp]
  011d6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011dc:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011e2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  011e8:    	movq   xmm7,QWORD PTR [rsp+0x20]
  011ee: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  011f5:    	add    rsp,0x30
  011f9:    	mov    QWORD PTR [r14-0x80],rax
:00071 
:00072 %11 = %1.call dir()                  [Ray]
  011fd:    	mov    rdi,QWORD PTR [r14-0x38]
  01201: 00 	test   rdi,0x7
  01208:    	jne    0x3392a
  0120e:    	cmp    DWORD PTR [rdi+0x4],0x31
  01212:    	jne    0x3392a
  01218: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb205],0x26        # 0xfffec424
  0121f:    	jne    0x3392a
  01225:    	mov    esi,DWORD PTR [rip+0x529]        # 0x1754
  0122b:    	cmp    esi,0xffffffff
  0122e:    	je     0x33961
  01234:    	cmp    WORD PTR [rdi+0x2],0x3
  01239:    	jne    0x1252
  0123f:    	cmp    esi,0x6
  01242:    	jge    0x1252
  01248:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0124d:    	jmp    0x12ae
  01252:    	sub    rsp,0x30
  01256:    	movq   QWORD PTR [rsp],xmm2
  0125b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01261:    	movq   QWORD PTR [rsp+0x10],xmm5
  01267:    	movq   QWORD PTR [rsp+0x18],xmm6
  0126d:    	movq   QWORD PTR [rsp+0x20],xmm7
  01273: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0127a: 78 	movabs rax,0x557860b3bf40
  01284:    	call   rax
  01286:    	movq   xmm2,QWORD PTR [rsp]
  0128b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01291:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01297:    	movq   xmm6,QWORD PTR [rsp+0x18]
  0129d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  012a3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  012aa:    	add    rsp,0x30
  012ae: ff 	mov    QWORD PTR [r14-0x88],rax
:00073 
:00074 %11 = %11.call z()                   [Vec]
  012b5: ff 	mov    rdi,QWORD PTR [r14-0x88]
  012bc: 00 	test   rdi,0x7
  012c3:    	jne    0x339da
  012c9:    	cmp    DWORD PTR [rdi+0x4],0x2b
  012cd:    	jne    0x339da
  012d3: 26 	cmp    DWORD PTR [rip+0xfffffffffffeb14a],0x26        # 0xfffec424
  012da:    	jne    0x339da
  012e0:    	mov    esi,DWORD PTR [rip+0x476]        # 0x175c
  012e6:    	cmp    esi,0xffffffff
  012e9:    	je     0x33a11
  012ef:    	cmp    WORD PTR [rdi+0x2],0x3
  012f4:    	jne    0x130d
  012fa:    	cmp    esi,0x6
  012fd:    	jge    0x130d
  01303:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01308:    	jmp    0x1369
  0130d:    	sub    rsp,0x30
  01311:    	movq   QWORD PTR [rsp],xmm2
  01316:    	movq   QWORD PTR [rsp+0x8],xmm4
  0131c:    	movq   QWORD PTR [rsp+0x10],xmm5
  01322:    	movq   QWORD PTR [rsp+0x18],xmm6
  01328:    	movq   QWORD PTR [rsp+0x20],xmm7
  0132e: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01335: 78 	movabs rax,0x557860b3bf40
  0133f:    	call   rax
  01341:    	movq   xmm2,QWORD PTR [rsp]
  01346:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0134c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01352:    	movq   xmm6,QWORD PTR [rsp+0x18]
  01358:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0135e: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01365:    	add    rsp,0x30
  01369: ff 	mov    QWORD PTR [r14-0x88],rax
:00075 
:00076 %11 = %6 * %11                       [Float][Float]
  01370: ff 	mov    rdi,QWORD PTR [r14-0x88]
  01377: 00 	test   rdi,0x1
  0137e:    	jne    0x33a8a
  01384: 00 	test   rdi,0x2
  0138b:    	je     0x13c7
  01391:    	xorps  xmm3,xmm3
  01394: 00 	movabs rax,0x8000000000000002
  0139e:    	cmp    rdi,rax
  013a1:    	je     0x13d9
  013a7:    	mov    rax,rdi
  013aa:    	sar    rax,0x3f
  013ae:    	add    rax,0x2
  013b2:    	and    rdi,0xfffffffffffffffc
  013b6:    	or     rdi,rax
  013b9:    	rol    rdi,0x3d
  013bd:    	movq   xmm3,rdi
  013c2:    	jmp    0x13d9
  013c7:    	call   0xfffe8fe5
  013cc:    	test   rax,rax
  013cf:    	je     0x33a8a
  013d5:    	movq   xmm3,xmm0
  013d9:    	mulsd  xmm3,xmm6
:00077 %10 = %10 + %11                      [Float][Float]
  013dd:    	mov    rdi,QWORD PTR [r14-0x80]
  013e1: 00 	test   rdi,0x1
  013e8:    	jne    0x33ac1
  013ee: 00 	test   rdi,0x2
  013f5:    	je     0x1432
  013fb:    	xorps  xmm9,xmm9
  013ff: 00 	movabs rax,0x8000000000000002
  01409:    	cmp    rdi,rax
  0140c:    	je     0x1445
  01412:    	mov    rax,rdi
  01415:    	sar    rax,0x3f
  01419:    	add    rax,0x2
  0141d:    	and    rdi,0xfffffffffffffffc
  01421:    	or     rdi,rax
  01424:    	rol    rdi,0x3d
  01428:    	movq   xmm9,rdi
  0142d:    	jmp    0x1445
  01432:    	call   0xfffe8fe5
  01437:    	test   rax,rax
  0143a:    	je     0x33ac1
  01440:    	movq   xmm9,xmm0
  01445:    	addsd  xmm9,xmm3
:00078 %7 = %7.call new(%8; 3)              [#<Class:Vec>]
  0144a:    	movq   xmm0,xmm7
  0144e:    	call   0xfffe9109
  01453:    	mov    QWORD PTR [r14-0x70],rax
  01457:    	movq   xmm0,xmm8
  0145c:    	call   0xfffe9109
  01461:    	mov    QWORD PTR [r14-0x78],rax
  01465:    	movq   xmm0,xmm9
  0146a:    	call   0xfffe9109
  0146f:    	mov    QWORD PTR [r14-0x80],rax
  01473:    	mov    rdi,QWORD PTR [r14-0x68]
  01477: 00 	test   rdi,0x7
  0147e:    	jne    0x33b08
  01484:    	cmp    DWORD PTR [rdi+0x4],0x2c
  01488:    	jne    0x33b08
  0148e: 26 	cmp    DWORD PTR [rip+0xfffffffffffeaf8f],0x26        # 0xfffec424
  01495:    	jne    0x33b08
  0149b: 00 	mov    r9,0x0
  014a2:    	sub    rsp,0x40
  014a6:    	movq   QWORD PTR [rsp],xmm2
  014ab:    	movq   QWORD PTR [rsp+0x8],xmm3
  014b1:    	movq   QWORD PTR [rsp+0x10],xmm4
  014b7:    	movq   QWORD PTR [rsp+0x18],xmm5
  014bd:    	movq   QWORD PTR [rsp+0x20],xmm6
  014c3:    	movq   QWORD PTR [rsp+0x28],xmm7
  014c9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  014d0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  014d7:    	mov    rdx,rdi
  014da:    	mov    QWORD PTR [rsp-0x40],rcx
  014df: 00 	mov    QWORD PTR [rsp-0x28],0x0
  014e8:    	lea    rcx,[r14-0x70]
  014ec: 00 	mov    r8,0x3
  014f3:    	mov    rsi,QWORD PTR [rbx]
  014f6:    	mov    QWORD PTR [rsp-0x18],rsi
  014fb:    	lea    rsi,[rsp-0x18]
  01500:    	mov    QWORD PTR [rbx],rsi
  01503:    	lea    r14,[rsp-0x10]
  01508:    	mov    QWORD PTR [rsp-0x20],r14
  0150d:    	call   0x33b34
  01512:    	lea    r14,[rbp-0x8]
  01516:    	mov    QWORD PTR [rbx],r14
  01519:    	mov    r14,QWORD PTR [rbp-0x10]
  0151d:    	movq   xmm2,QWORD PTR [rsp]
  01522:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01528:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0152e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  01534:    	movq   xmm6,QWORD PTR [rsp+0x20]
  0153a:    	movq   xmm7,QWORD PTR [rsp+0x28]
  01540: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01547: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  0154e:    	add    rsp,0x40
  01552: 78 	movabs r13,0x557861fb1130
  0155c:    	test   rax,rax
  0155f:    	je     0xfffe8f8c
  01565:    	mov    QWORD PTR [r14-0x68],rax
:00079 
:00080 _ = %2.call pl=(%7; 1)               [Isect]
  01569:    	mov    rdi,QWORD PTR [r14-0x40]
  0156d: 00 	test   rdi,0x7
  01574:    	jne    0x33b66
  0157a:    	cmp    DWORD PTR [rdi+0x4],0x33
  0157e:    	jne    0x33b66
  01584: 26 	cmp    DWORD PTR [rip+0xfffffffffffeae99],0x26        # 0xfffec424
  0158b:    	jne    0x33b66
  01591:    	mov    esi,DWORD PTR [rip+0x1cd]        # 0x1764
  01597:    	cmp    esi,0xffffffff
  0159a:    	je     0x33b92
  015a0:    	cmp    WORD PTR [rdi+0x2],0x3
  015a5:    	jne    0x15c2
  015ab:    	cmp    esi,0x6
  015ae:    	jge    0x15c2
  015b4:    	mov    rax,QWORD PTR [r14-0x68]
  015b8:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  015bd:    	jmp    0x164f
  015c2:    	sub    rsp,0x40
  015c6:    	movq   QWORD PTR [rsp],xmm2
  015cb:    	movq   QWORD PTR [rsp+0x8],xmm3
  015d1:    	movq   QWORD PTR [rsp+0x10],xmm4
  015d7:    	movq   QWORD PTR [rsp+0x18],xmm5
  015dd:    	movq   QWORD PTR [rsp+0x20],xmm6
  015e3:    	movq   QWORD PTR [rsp+0x28],xmm7
  015e9: 30 	movq   QWORD PTR [rsp+0x30],xmm8
  015f0: 38 	movq   QWORD PTR [rsp+0x38],xmm9
  015f7:    	mov    rdx,QWORD PTR [r14-0x68]
  015fb: 78 	movabs rax,0x557860b3c1c0
  01605:    	call   rax
  01607:    	movq   xmm2,QWORD PTR [rsp]
  0160c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01612:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01618:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0161e:    	movq   xmm6,QWORD PTR [rsp+0x20]
  01624:    	movq   xmm7,QWORD PTR [rsp+0x28]
  0162a: 30 	movq   xmm8,QWORD PTR [rsp+0x30]
  01631: 38 	movq   xmm9,QWORD PTR [rsp+0x38]
  01638:    	add    rsp,0x40
  0163c: 78 	movabs r13,0x557861fb1150
  01646:    	test   rax,rax
  01649:    	je     0xfffe8f8c
:00081 
:00082 br =>:00083
  0164f:    	jmp    0x33c92
:00083 %7 = nil
  01654: 00 	mov    QWORD PTR [r14-0x68],0x4
:00084 ret %7
  0165c:    	mov    rax,QWORD PTR [r14-0x68]
  01660:    	leave  
  01661:    	ret    
==> start whole compile: <unnamed> FuncId(107) self_class:Scene start:[00000] bytecode:0x557861f86050
<== finished compile. elapsed:158.8µs
offset:Pos(100352) code: 9591 bytes  data: 417 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007: 00 	sub    rsp,0xc0
  0000e:    	cmp    edx,0x1
  00011:    	jge    0x3d
  00017:    	mov    eax,0x1
  0001c:    	sub    eax,edx
  0001e:    	test   rax,rax
  00021:    	je     0x3d
  00027:    	lea    rdi,[r14-0x40]
  0002b: 00 	mov    QWORD PTR [rdi+rax*8],0x4
  00033:    	sub    rax,0x1
  00037:    	jne    0x2b
  0003d: 00 	mov    rax,0x4
  00044:    	mov    QWORD PTR [r14-0x40],rax
  00048:    	mov    QWORD PTR [r14-0x48],rax
  0004c:    	mov    QWORD PTR [r14-0x50],rax
  00050:    	mov    QWORD PTR [r14-0x58],rax
  00054:    	mov    QWORD PTR [r14-0x60],rax
  00058:    	mov    QWORD PTR [r14-0x68],rax
  0005c:    	mov    QWORD PTR [r14-0x70],rax
  00060:    	mov    QWORD PTR [r14-0x78],rax
  00064:    	mov    QWORD PTR [r14-0x80],rax
  00068: ff 	mov    QWORD PTR [r14-0x88],rax
  0006f: ff 	mov    QWORD PTR [r14-0x90],rax
  00076: ff 	mov    QWORD PTR [r14-0x98],rax
  0007d: ff 	mov    QWORD PTR [r14-0xa0],rax
  00084: ff 	mov    QWORD PTR [r14-0xa8],rax
  0008b: ff 	mov    QWORD PTR [r14-0xb0],rax
  00092:    	mov    rdi,QWORD PTR [r14-0x30]
  00096: 00 	test   rdi,0x7
  0009d:    	jne    0x3256f
  000a3:    	cmp    DWORD PTR [rdi+0x4],0x35
  000a7:    	jne    0x3256f
:00000 init_block reg:17 arg:1 pos:1 req:1 block:0 stack_offset:12
:00001 %13 = %0.call rand()                 [Scene]
  000ad:    	mov    rdi,QWORD PTR [r14-0x30]
  000b1: 26 	cmp    DWORD PTR [rip+0xfffffffffffeac04],0x26        # 0xfffeacbc
  000b8:    	jne    0x3257e
  000be: 00 	mov    r9,0x0
  000c5:    	mov    rdx,rdi
  000c8:    	mov    QWORD PTR [rsp-0x40],rcx
  000cd: 00 	mov    QWORD PTR [rsp-0x28],0x0
  000d6: ff 	lea    rcx,[r14-0x98]
  000dd: 00 	mov    r8,0x0
  000e4:    	mov    rsi,QWORD PTR [rbx]
  000e7:    	mov    QWORD PTR [rsp-0x18],rsi
  000ec:    	lea    rsi,[rsp-0x18]
  000f1:    	mov    QWORD PTR [rbx],rsi
  000f4:    	lea    r14,[rsp-0x10]
  000f9:    	mov    QWORD PTR [rsp-0x20],r14
  000fe:    	call   0x3258d
  00103:    	lea    r14,[rbp-0x8]
  00107:    	mov    QWORD PTR [rbx],r14
  0010a:    	mov    r14,QWORD PTR [rbp-0x10]
  0010e: 78 	movabs r13,0x557861f86080
  00118:    	test   rax,rax
  0011b:    	je     0xfffe7824
  00121: ff 	mov    QWORD PTR [r14-0x98],rax
:00002 
:00003 %2 = %13
  00128: ff 	mov    rax,QWORD PTR [r14-0x98]
  0012f:    	mov    QWORD PTR [r14-0x40],rax
:00004 %13 = literal[2.0]
  00133: 00 	movq   xmm2,QWORD PTR [rip+0x2445]        # 0x2580
  0013b: 00 	mov    rax,0x2
  00142: ff 	mov    QWORD PTR [r14-0x98],rax
:00005 %14 = literal[3.14159265]
  00149: 00 	movq   xmm3,QWORD PTR [rip+0x243f]        # 0x2590
  00151: da 	movabs rax,0x490fda9e46a78a
  0015b: ff 	mov    QWORD PTR [r14-0xa0],rax
:00006 %13 = %13 * %14                      [Float][Float]
  00162:    	mulsd  xmm2,xmm3
:00007 %14 = %0.call rand()                 [Scene]
  00166:    	mov    rdi,QWORD PTR [r14-0x30]
  0016a: 26 	cmp    DWORD PTR [rip+0xfffffffffffeab4b],0x26        # 0xfffeacbc
  00171:    	jne    0x325bf
  00177: 00 	mov    r9,0x0
  0017e:    	sub    rsp,0x10
  00182:    	movq   QWORD PTR [rsp],xmm2
  00187:    	mov    rdx,rdi
  0018a:    	mov    QWORD PTR [rsp-0x40],rcx
  0018f: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00198: ff 	lea    rcx,[r14-0xa0]
  0019f: 00 	mov    r8,0x0
  001a6:    	mov    rsi,QWORD PTR [rbx]
  001a9:    	mov    QWORD PTR [rsp-0x18],rsi
  001ae:    	lea    rsi,[rsp-0x18]
  001b3:    	mov    QWORD PTR [rbx],rsi
  001b6:    	lea    r14,[rsp-0x10]
  001bb:    	mov    QWORD PTR [rsp-0x20],r14
  001c0:    	call   0x325de
  001c5:    	lea    r14,[rbp-0x8]
  001c9:    	mov    QWORD PTR [rbx],r14
  001cc:    	mov    r14,QWORD PTR [rbp-0x10]
  001d0:    	movq   xmm2,QWORD PTR [rsp]
  001d5:    	add    rsp,0x10
  001d9: 78 	movabs r13,0x557861f860e0
  001e3:    	test   rax,rax
  001e6:    	je     0xfffe7824
  001ec: ff 	mov    QWORD PTR [r14-0xa0],rax
:00008 
:00009 %3 = %13 * %14                       [Float][Float]
  001f3: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  001fa: 00 	test   rdi,0x1
  00201:    	jne    0x32610
  00207: 00 	test   rdi,0x2
  0020e:    	je     0x24a
  00214:    	xorps  xmm3,xmm3
  00217: 00 	movabs rax,0x8000000000000002
  00221:    	cmp    rdi,rax
  00224:    	je     0x25c
  0022a:    	mov    rax,rdi
  0022d:    	sar    rax,0x3f
  00231:    	add    rax,0x2
  00235:    	and    rdi,0xfffffffffffffffc
  00239:    	or     rdi,rax
  0023c:    	rol    rdi,0x3d
  00240:    	movq   xmm3,rdi
  00245:    	jmp    0x25c
  0024a:    	call   0xfffe787d
  0024f:    	test   rax,rax
  00252:    	je     0x32610
  00258:    	movq   xmm3,xmm0
  0025c:    	movq   xmm4,xmm2
  00260:    	mulsd  xmm4,xmm3
:00010 %13 = const[Math]                    [Math]
  00264: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffeaa65]        # 0xfffeacd0
  0026b: 00 	cmp    rax,QWORD PTR [rip+0x233e]        # 0x25b0
  00272:    	jne    0x3262f
  00278: 00 	mov    rax,QWORD PTR [rip+0x2321]        # 0x25a0
  0027f: ff 	mov    QWORD PTR [r14-0x98],rax
:00011 %14 = %3
:00012 %13 = %13.call cos(%14; 1)           [#<Class:Math>]
  00286: ff 	mov    rdi,QWORD PTR [r14-0x98]
  0028d: 00 	test   rdi,0x7
  00294:    	jne    0x32693
  0029a:    	cmp    DWORD PTR [rdi+0x4],0x24
  0029e:    	jne    0x32693
  002a4: 26 	cmp    DWORD PTR [rip+0xfffffffffffeaa11],0x26        # 0xfffeacbc
  002ab:    	jne    0x32693
  002b1:    	sub    rsp,0x10
  002b5:    	movq   QWORD PTR [rsp],xmm2
  002ba:    	movq   QWORD PTR [rsp+0x8],xmm4
  002c0:    	movq   xmm0,xmm4
  002c4: 78 	movabs rax,0x557860b0dd80
  002ce:    	call   rax
  002d0:    	movq   xmm2,QWORD PTR [rsp]
  002d5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  002db:    	add    rsp,0x10
  002df:    	movq   xmm2,xmm0
:00013 
:00014 %14 = const[Math]                    [Math]
  002e3: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffea9e6]        # 0xfffeacd0
  002ea: 00 	cmp    rax,QWORD PTR [rip+0x22df]        # 0x25d0
  002f1:    	jne    0x326b6
  002f7: 00 	mov    rax,QWORD PTR [rip+0x22c2]        # 0x25c0
  002fe: ff 	mov    QWORD PTR [r14-0xa0],rax
:00015 %15 = literal[1.0]
  00305: 00 	movq   xmm3,QWORD PTR [rip+0x22d3]        # 0x25e0
  0030d: 00 	movabs rax,0xff80000000000002
  00317: ff 	mov    QWORD PTR [r14-0xa8],rax
:00016 %15 = %15 - %2                       [Float][Float]
  0031e:    	mov    rdi,QWORD PTR [r14-0x40]
  00322: 00 	test   rdi,0x1
  00329:    	jne    0x3271a
  0032f: 00 	test   rdi,0x2
  00336:    	je     0x372
  0033c:    	xorps  xmm5,xmm5
  0033f: 00 	movabs rax,0x8000000000000002
  00349:    	cmp    rdi,rax
  0034c:    	je     0x384
  00352:    	mov    rax,rdi
  00355:    	sar    rax,0x3f
  00359:    	add    rax,0x2
  0035d:    	and    rdi,0xfffffffffffffffc
  00361:    	or     rdi,rax
  00364:    	rol    rdi,0x3d
  00368:    	movq   xmm5,rdi
  0036d:    	jmp    0x384
  00372:    	call   0xfffe787d
  00377:    	test   rax,rax
  0037a:    	je     0x3271a
  00380:    	movq   xmm5,xmm0
  00384:    	subsd  xmm3,xmm5
:00017 %14 = %14.call sqrt(%15; 1)          [#<Class:Math>]
  00388: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0038f: 00 	test   rdi,0x7
  00396:    	jne    0x32746
  0039c:    	cmp    DWORD PTR [rdi+0x4],0x24
  003a0:    	jne    0x32746
  003a6: 26 	cmp    DWORD PTR [rip+0xfffffffffffea90f],0x26        # 0xfffeacbc
  003ad:    	jne    0x32746
  003b3:    	sqrtsd xmm6,xmm3
:00018 
:00019 %4 = %13 * %14                       [Float][Float]
  003b7:    	movq   xmm7,xmm2
  003bb:    	mulsd  xmm7,xmm6
:00020 %13 = const[Math]                    [Math]
  003bf: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffea90a]        # 0xfffeacd0
  003c6: 00 	cmp    rax,QWORD PTR [rip+0x2233]        # 0x2600
  003cd:    	jne    0x32782
  003d3: 00 	mov    rax,QWORD PTR [rip+0x2216]        # 0x25f0
  003da: ff 	mov    QWORD PTR [r14-0x98],rax
:00021 %14 = %3
:00022 %13 = %13.call sin(%14; 1)           [#<Class:Math>]
  003e1: ff 	mov    rdi,QWORD PTR [r14-0x98]
  003e8: 00 	test   rdi,0x7
  003ef:    	jne    0x3280a
  003f5:    	cmp    DWORD PTR [rdi+0x4],0x24
  003f9:    	jne    0x3280a
  003ff: 26 	cmp    DWORD PTR [rip+0xfffffffffffea8b6],0x26        # 0xfffeacbc
  00406:    	jne    0x3280a
  0040c:    	sub    rsp,0x30
  00410:    	movq   QWORD PTR [rsp],xmm2
  00415:    	movq   QWORD PTR [rsp+0x8],xmm3
  0041b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00421:    	movq   QWORD PTR [rsp+0x18],xmm5
  00427:    	movq   QWORD PTR [rsp+0x20],xmm7
  0042d:    	movq   xmm0,xmm4
  00431: 78 	movabs rax,0x557860b0dd90
  0043b:    	call   rax
  0043d:    	movq   xmm2,QWORD PTR [rsp]
  00442:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00448:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0044e:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00454:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0045a:    	add    rsp,0x30
  0045e:    	movq   xmm2,xmm0
:00023 
:00024 %14 = const[Math]                    [Math]
  00462: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffea867]        # 0xfffeacd0
  00469: 00 	cmp    rax,QWORD PTR [rip+0x21b0]        # 0x2620
  00470:    	jne    0x3284a
  00476: 00 	mov    rax,QWORD PTR [rip+0x2193]        # 0x2610
  0047d: ff 	mov    QWORD PTR [r14-0xa0],rax
:00025 %15 = literal[1.0]
  00484: 00 	movq   xmm3,QWORD PTR [rip+0x21a4]        # 0x2630
  0048c: 00 	movabs rax,0xff80000000000002
  00496: ff 	mov    QWORD PTR [r14-0xa8],rax
:00026 %15 = %15 - %2                       [Float][Float]
  0049d:    	subsd  xmm3,xmm5
:00027 %14 = %14.call sqrt(%15; 1)          [#<Class:Math>]
  004a1: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  004a8: 00 	test   rdi,0x7
  004af:    	jne    0x328d2
  004b5:    	cmp    DWORD PTR [rdi+0x4],0x24
  004b9:    	jne    0x328d2
  004bf: 26 	cmp    DWORD PTR [rip+0xfffffffffffea7f6],0x26        # 0xfffeacbc
  004c6:    	jne    0x328d2
  004cc:    	sqrtsd xmm6,xmm3
:00028 
:00029 %5 = %13 * %14                       [Float][Float]
  004d0:    	movq   xmm8,xmm2
  004d5:    	mulsd  xmm8,xmm6
:00030 %13 = const[Math]                    [Math]
  004da: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffea7ef]        # 0xfffeacd0
  004e1: 00 	cmp    rax,QWORD PTR [rip+0x2168]        # 0x2650
  004e8:    	jne    0x3291b
  004ee: 00 	mov    rax,QWORD PTR [rip+0x214b]        # 0x2640
  004f5: ff 	mov    QWORD PTR [r14-0x98],rax
:00031 %14 = %2
:00032 %6 = %13.call sqrt(%14; 1)           [#<Class:Math>]
  004fc: ff 	mov    rdi,QWORD PTR [r14-0x98]
  00503: 00 	test   rdi,0x7
  0050a:    	jne    0x329b1
  00510:    	cmp    DWORD PTR [rdi+0x4],0x24
  00514:    	jne    0x329b1
  0051a: 26 	cmp    DWORD PTR [rip+0xfffffffffffea79b],0x26        # 0xfffeacbc
  00521:    	jne    0x329b1
  00527:    	sqrtsd xmm2,xmm5
:00033 
:00034 %13 = dynvar(2, %2)
  0052b:    	mov    rax,QWORD PTR [r14-0x18]
  0052f:    	mov    rax,QWORD PTR [rax]
  00532:    	mov    rax,QWORD PTR [rax-0x28]
  00536: ff 	mov    QWORD PTR [r14-0x98],rax
:00035 %14 = 0: i32
  0053d: ff 	mov    QWORD PTR [r14-0xa0],0x1
:00036 %13 = %13.[%14]                      [Array][Integer]
  00548: ff 	mov    rdi,QWORD PTR [r14-0x98]
  0054f: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  00556: 00 	test   rdi,0x7
  0055d:    	jne    0x32a08
  00563:    	cmp    DWORD PTR [rdi+0x4],0xb
  00567:    	jne    0x32a08
  0056d: 00 	test   rsi,0x1
  00574:    	je     0x32a08
  0057a:    	sar    rsi,1
  0057d:    	sub    rsp,0x30
  00581:    	movq   QWORD PTR [rsp],xmm2
  00586:    	movq   QWORD PTR [rsp+0x8],xmm3
  0058c:    	movq   QWORD PTR [rsp+0x10],xmm4
  00592:    	movq   QWORD PTR [rsp+0x18],xmm5
  00598:    	movq   QWORD PTR [rsp+0x20],xmm7
  0059e: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  005a5: 78 	movabs rax,0x557860b06070
  005af:    	call   rax
  005b1:    	movq   xmm2,QWORD PTR [rsp]
  005b6:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005bc:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005c2:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005c8:    	movq   xmm7,QWORD PTR [rsp+0x20]
  005ce: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  005d5:    	add    rsp,0x30
  005d9: 78 	movabs r13,0x557861f862a0
  005e3:    	test   rax,rax
  005e6:    	je     0xfffe7824
  005ec: ff 	mov    QWORD PTR [r14-0x98],rax
:00037 %13 = %13.call x()                   [Vec]
  005f3: ff 	mov    rdi,QWORD PTR [r14-0x98]
  005fa: 00 	test   rdi,0x7
  00601:    	jne    0x32a5c
  00607:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0060b:    	jne    0x32a5c
  00611: 26 	cmp    DWORD PTR [rip+0xfffffffffffea6a4],0x26        # 0xfffeacbc
  00618:    	jne    0x32a5c
  0061e:    	mov    esi,DWORD PTR [rip+0x2038]        # 0x265c
  00624:    	cmp    esi,0xffffffff
  00627:    	je     0x32ab0
  0062d:    	cmp    WORD PTR [rdi+0x2],0x3
  00632:    	jne    0x64b
  00638:    	cmp    esi,0x6
  0063b:    	jge    0x64b
  00641:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00646:    	jmp    0x6a7
  0064b:    	sub    rsp,0x30
  0064f:    	movq   QWORD PTR [rsp],xmm2
  00654:    	movq   QWORD PTR [rsp+0x8],xmm3
  0065a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00660:    	movq   QWORD PTR [rsp+0x18],xmm5
  00666:    	movq   QWORD PTR [rsp+0x20],xmm7
  0066c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00673: 78 	movabs rax,0x557860b3bf40
  0067d:    	call   rax
  0067f:    	movq   xmm2,QWORD PTR [rsp]
  00684:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0068a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00690:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00696:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0069c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  006a3:    	add    rsp,0x30
  006a7: ff 	mov    QWORD PTR [r14-0x98],rax
:00038 
:00039 %13 = %4 * %13                       [Float][Float]
  006ae: ff 	mov    rdi,QWORD PTR [r14-0x98]
  006b5: 00 	test   rdi,0x1
  006bc:    	jne    0x32b29
  006c2: 00 	test   rdi,0x2
  006c9:    	je     0x705
  006cf:    	xorps  xmm6,xmm6
  006d2: 00 	movabs rax,0x8000000000000002
  006dc:    	cmp    rdi,rax
  006df:    	je     0x717
  006e5:    	mov    rax,rdi
  006e8:    	sar    rax,0x3f
  006ec:    	add    rax,0x2
  006f0:    	and    rdi,0xfffffffffffffffc
  006f4:    	or     rdi,rax
  006f7:    	rol    rdi,0x3d
  006fb:    	movq   xmm6,rdi
  00700:    	jmp    0x717
  00705:    	call   0xfffe787d
  0070a:    	test   rax,rax
  0070d:    	je     0x32b29
  00713:    	movq   xmm6,xmm0
  00717:    	mulsd  xmm6,xmm7
:00040 %14 = dynvar(2, %2)
  0071b:    	mov    rax,QWORD PTR [r14-0x18]
  0071f:    	mov    rax,QWORD PTR [rax]
  00722:    	mov    rax,QWORD PTR [rax-0x28]
  00726: ff 	mov    QWORD PTR [r14-0xa0],rax
:00041 %15 = 1: i32
  0072d: ff 	mov    QWORD PTR [r14-0xa8],0x3
:00042 %14 = %14.[%15]                      [Array][Integer]
  00738: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0073f: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00746: 00 	test   rdi,0x7
  0074d:    	jne    0x32b7d
  00753:    	cmp    DWORD PTR [rdi+0x4],0xb
  00757:    	jne    0x32b7d
  0075d: 00 	test   rsi,0x1
  00764:    	je     0x32b7d
  0076a:    	sar    rsi,1
  0076d:    	sub    rsp,0x30
  00771:    	movq   QWORD PTR [rsp],xmm2
  00776:    	movq   QWORD PTR [rsp+0x8],xmm4
  0077c:    	movq   QWORD PTR [rsp+0x10],xmm5
  00782:    	movq   QWORD PTR [rsp+0x18],xmm6
  00788:    	movq   QWORD PTR [rsp+0x20],xmm7
  0078e: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00795: 78 	movabs rax,0x557860b06070
  0079f:    	call   rax
  007a1:    	movq   xmm2,QWORD PTR [rsp]
  007a6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  007ac:    	movq   xmm5,QWORD PTR [rsp+0x10]
  007b2:    	movq   xmm6,QWORD PTR [rsp+0x18]
  007b8:    	movq   xmm7,QWORD PTR [rsp+0x20]
  007be: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  007c5:    	add    rsp,0x30
  007c9: 78 	movabs r13,0x557861f86300
  007d3:    	test   rax,rax
  007d6:    	je     0xfffe7824
  007dc: ff 	mov    QWORD PTR [r14-0xa0],rax
:00043 %14 = %14.call x()                   [Vec]
  007e3: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  007ea: 00 	test   rdi,0x7
  007f1:    	jne    0x32bd1
  007f7:    	cmp    DWORD PTR [rdi+0x4],0x2b
  007fb:    	jne    0x32bd1
  00801: 26 	cmp    DWORD PTR [rip+0xfffffffffffea4b4],0x26        # 0xfffeacbc
  00808:    	jne    0x32bd1
  0080e:    	mov    esi,DWORD PTR [rip+0x1e50]        # 0x2664
  00814:    	cmp    esi,0xffffffff
  00817:    	je     0x32c25
  0081d:    	cmp    WORD PTR [rdi+0x2],0x3
  00822:    	jne    0x83b
  00828:    	cmp    esi,0x6
  0082b:    	jge    0x83b
  00831:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00836:    	jmp    0x897
  0083b:    	sub    rsp,0x30
  0083f:    	movq   QWORD PTR [rsp],xmm2
  00844:    	movq   QWORD PTR [rsp+0x8],xmm4
  0084a:    	movq   QWORD PTR [rsp+0x10],xmm5
  00850:    	movq   QWORD PTR [rsp+0x18],xmm6
  00856:    	movq   QWORD PTR [rsp+0x20],xmm7
  0085c: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00863: 78 	movabs rax,0x557860b3bf40
  0086d:    	call   rax
  0086f:    	movq   xmm2,QWORD PTR [rsp]
  00874:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0087a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00880:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00886:    	movq   xmm7,QWORD PTR [rsp+0x20]
  0088c: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00893:    	add    rsp,0x30
  00897: ff 	mov    QWORD PTR [r14-0xa0],rax
:00044 
:00045 %14 = %5 * %14                       [Float][Float]
  0089e: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  008a5: 00 	test   rdi,0x1
  008ac:    	jne    0x32c9e
  008b2: 00 	test   rdi,0x2
  008b9:    	je     0x8f5
  008bf:    	xorps  xmm3,xmm3
  008c2: 00 	movabs rax,0x8000000000000002
  008cc:    	cmp    rdi,rax
  008cf:    	je     0x907
  008d5:    	mov    rax,rdi
  008d8:    	sar    rax,0x3f
  008dc:    	add    rax,0x2
  008e0:    	and    rdi,0xfffffffffffffffc
  008e4:    	or     rdi,rax
  008e7:    	rol    rdi,0x3d
  008eb:    	movq   xmm3,rdi
  008f0:    	jmp    0x907
  008f5:    	call   0xfffe787d
  008fa:    	test   rax,rax
  008fd:    	je     0x32c9e
  00903:    	movq   xmm3,xmm0
  00907:    	mulsd  xmm3,xmm8
:00046 %13 = %13 + %14                      [Float][Float]
  0090c:    	addsd  xmm6,xmm3
:00047 %14 = dynvar(2, %2)
  00910:    	mov    rax,QWORD PTR [r14-0x18]
  00914:    	mov    rax,QWORD PTR [rax]
  00917:    	mov    rax,QWORD PTR [rax-0x28]
  0091b: ff 	mov    QWORD PTR [r14-0xa0],rax
:00048 %15 = 2: i32
  00922: ff 	mov    QWORD PTR [r14-0xa8],0x5
:00049 %14 = %14.[%15]                      [Array][Integer]
  0092d: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00934: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  0093b: 00 	test   rdi,0x7
  00942:    	jne    0x32cf2
  00948:    	cmp    DWORD PTR [rdi+0x4],0xb
  0094c:    	jne    0x32cf2
  00952: 00 	test   rsi,0x1
  00959:    	je     0x32cf2
  0095f:    	sar    rsi,1
  00962:    	sub    rsp,0x30
  00966:    	movq   QWORD PTR [rsp],xmm2
  0096b:    	movq   QWORD PTR [rsp+0x8],xmm4
  00971:    	movq   QWORD PTR [rsp+0x10],xmm5
  00977:    	movq   QWORD PTR [rsp+0x18],xmm6
  0097d:    	movq   QWORD PTR [rsp+0x20],xmm7
  00983: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  0098a: 78 	movabs rax,0x557860b06070
  00994:    	call   rax
  00996:    	movq   xmm2,QWORD PTR [rsp]
  0099b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  009a1:    	movq   xmm5,QWORD PTR [rsp+0x10]
  009a7:    	movq   xmm6,QWORD PTR [rsp+0x18]
  009ad:    	movq   xmm7,QWORD PTR [rsp+0x20]
  009b3: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  009ba:    	add    rsp,0x30
  009be: 78 	movabs r13,0x557861f86370
  009c8:    	test   rax,rax
  009cb:    	je     0xfffe7824
  009d1: ff 	mov    QWORD PTR [r14-0xa0],rax
:00050 %14 = %14.call x()                   [Vec]
  009d8: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  009df: 00 	test   rdi,0x7
  009e6:    	jne    0x32d46
  009ec:    	cmp    DWORD PTR [rdi+0x4],0x2b
  009f0:    	jne    0x32d46
  009f6: 26 	cmp    DWORD PTR [rip+0xfffffffffffea2bf],0x26        # 0xfffeacbc
  009fd:    	jne    0x32d46
  00a03:    	mov    esi,DWORD PTR [rip+0x1c63]        # 0x266c
  00a09:    	cmp    esi,0xffffffff
  00a0c:    	je     0x32d9a
  00a12:    	cmp    WORD PTR [rdi+0x2],0x3
  00a17:    	jne    0xa30
  00a1d:    	cmp    esi,0x6
  00a20:    	jge    0xa30
  00a26:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00a2b:    	jmp    0xa8c
  00a30:    	sub    rsp,0x30
  00a34:    	movq   QWORD PTR [rsp],xmm2
  00a39:    	movq   QWORD PTR [rsp+0x8],xmm4
  00a3f:    	movq   QWORD PTR [rsp+0x10],xmm5
  00a45:    	movq   QWORD PTR [rsp+0x18],xmm6
  00a4b:    	movq   QWORD PTR [rsp+0x20],xmm7
  00a51: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00a58: 78 	movabs rax,0x557860b3bf40
  00a62:    	call   rax
  00a64:    	movq   xmm2,QWORD PTR [rsp]
  00a69:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00a6f:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00a75:    	movq   xmm6,QWORD PTR [rsp+0x18]
  00a7b:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00a81: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00a88:    	add    rsp,0x30
  00a8c: ff 	mov    QWORD PTR [r14-0xa0],rax
:00051 
:00052 %14 = %6 * %14                       [Float][Float]
  00a93: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00a9a: 00 	test   rdi,0x1
  00aa1:    	jne    0x32e13
  00aa7: 00 	test   rdi,0x2
  00aae:    	je     0xaea
  00ab4:    	xorps  xmm3,xmm3
  00ab7: 00 	movabs rax,0x8000000000000002
  00ac1:    	cmp    rdi,rax
  00ac4:    	je     0xafc
  00aca:    	mov    rax,rdi
  00acd:    	sar    rax,0x3f
  00ad1:    	add    rax,0x2
  00ad5:    	and    rdi,0xfffffffffffffffc
  00ad9:    	or     rdi,rax
  00adc:    	rol    rdi,0x3d
  00ae0:    	movq   xmm3,rdi
  00ae5:    	jmp    0xafc
  00aea:    	call   0xfffe787d
  00aef:    	test   rax,rax
  00af2:    	je     0x32e13
  00af8:    	movq   xmm3,xmm0
  00afc:    	mulsd  xmm3,xmm2
:00053 %7 = %13 + %14                       [Float][Float]
  00b00:    	movq   xmm9,xmm6
  00b05:    	addsd  xmm9,xmm3
:00054 %13 = dynvar(2, %2)
  00b0a:    	mov    rax,QWORD PTR [r14-0x18]
  00b0e:    	mov    rax,QWORD PTR [rax]
  00b11:    	mov    rax,QWORD PTR [rax-0x28]
  00b15: ff 	mov    QWORD PTR [r14-0x98],rax
:00055 %14 = 0: i32
  00b1c: ff 	mov    QWORD PTR [r14-0xa0],0x1
:00056 %13 = %13.[%14]                      [Array][Integer]
  00b27: ff 	mov    rdi,QWORD PTR [r14-0x98]
  00b2e: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  00b35: 00 	test   rdi,0x7
  00b3c:    	jne    0x32e67
  00b42:    	cmp    DWORD PTR [rdi+0x4],0xb
  00b46:    	jne    0x32e67
  00b4c: 00 	test   rsi,0x1
  00b53:    	je     0x32e67
  00b59:    	sar    rsi,1
  00b5c:    	sub    rsp,0x30
  00b60:    	movq   QWORD PTR [rsp],xmm2
  00b65:    	movq   QWORD PTR [rsp+0x8],xmm4
  00b6b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00b71:    	movq   QWORD PTR [rsp+0x18],xmm7
  00b77: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00b7e: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00b85: 78 	movabs rax,0x557860b06070
  00b8f:    	call   rax
  00b91:    	movq   xmm2,QWORD PTR [rsp]
  00b96:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00b9c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00ba2:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00ba8: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00baf: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00bb6:    	add    rsp,0x30
  00bba: 78 	movabs r13,0x557861f863e0
  00bc4:    	test   rax,rax
  00bc7:    	je     0xfffe7824
  00bcd: ff 	mov    QWORD PTR [r14-0x98],rax
:00057 %13 = %13.call y()                   [Vec]
  00bd4: ff 	mov    rdi,QWORD PTR [r14-0x98]
  00bdb: 00 	test   rdi,0x7
  00be2:    	jne    0x32eb9
  00be8:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00bec:    	jne    0x32eb9
  00bf2: 26 	cmp    DWORD PTR [rip+0xfffffffffffea0c3],0x26        # 0xfffeacbc
  00bf9:    	jne    0x32eb9
  00bff:    	mov    esi,DWORD PTR [rip+0x1a6f]        # 0x2674
  00c05:    	cmp    esi,0xffffffff
  00c08:    	je     0x32f0b
  00c0e:    	cmp    WORD PTR [rdi+0x2],0x3
  00c13:    	jne    0xc2c
  00c19:    	cmp    esi,0x6
  00c1c:    	jge    0xc2c
  00c22:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00c27:    	jmp    0xc8a
  00c2c:    	sub    rsp,0x30
  00c30:    	movq   QWORD PTR [rsp],xmm2
  00c35:    	movq   QWORD PTR [rsp+0x8],xmm4
  00c3b:    	movq   QWORD PTR [rsp+0x10],xmm5
  00c41:    	movq   QWORD PTR [rsp+0x18],xmm7
  00c47: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  00c4e: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  00c55: 78 	movabs rax,0x557860b3bf40
  00c5f:    	call   rax
  00c61:    	movq   xmm2,QWORD PTR [rsp]
  00c66:    	movq   xmm4,QWORD PTR [rsp+0x8]
  00c6c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  00c72:    	movq   xmm7,QWORD PTR [rsp+0x18]
  00c78: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  00c7f: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  00c86:    	add    rsp,0x30
  00c8a: ff 	mov    QWORD PTR [r14-0x98],rax
:00058 
:00059 %13 = %4 * %13                       [Float][Float]
  00c91: ff 	mov    rdi,QWORD PTR [r14-0x98]
  00c98: 00 	test   rdi,0x1
  00c9f:    	jne    0x32f86
  00ca5: 00 	test   rdi,0x2
  00cac:    	je     0xce8
  00cb2:    	xorps  xmm3,xmm3
  00cb5: 00 	movabs rax,0x8000000000000002
  00cbf:    	cmp    rdi,rax
  00cc2:    	je     0xcfa
  00cc8:    	mov    rax,rdi
  00ccb:    	sar    rax,0x3f
  00ccf:    	add    rax,0x2
  00cd3:    	and    rdi,0xfffffffffffffffc
  00cd7:    	or     rdi,rax
  00cda:    	rol    rdi,0x3d
  00cde:    	movq   xmm3,rdi
  00ce3:    	jmp    0xcfa
  00ce8:    	call   0xfffe787d
  00ced:    	test   rax,rax
  00cf0:    	je     0x32f86
  00cf6:    	movq   xmm3,xmm0
  00cfa:    	mulsd  xmm3,xmm7
:00060 %14 = dynvar(2, %2)
  00cfe:    	mov    rax,QWORD PTR [r14-0x18]
  00d02:    	mov    rax,QWORD PTR [rax]
  00d05:    	mov    rax,QWORD PTR [rax-0x28]
  00d09: ff 	mov    QWORD PTR [r14-0xa0],rax
:00061 %15 = 1: i32
  00d10: ff 	mov    QWORD PTR [r14-0xa8],0x3
:00062 %14 = %14.[%15]                      [Array][Integer]
  00d1b: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00d22: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00d29: 00 	test   rdi,0x7
  00d30:    	jne    0x32fd8
  00d36:    	cmp    DWORD PTR [rdi+0x4],0xb
  00d3a:    	jne    0x32fd8
  00d40: 00 	test   rsi,0x1
  00d47:    	je     0x32fd8
  00d4d:    	sar    rsi,1
  00d50:    	sub    rsp,0x40
  00d54:    	movq   QWORD PTR [rsp],xmm2
  00d59:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d5f:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d65:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d6b:    	movq   QWORD PTR [rsp+0x20],xmm7
  00d71: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00d78: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00d7f: 78 	movabs rax,0x557860b06070
  00d89:    	call   rax
  00d8b:    	movq   xmm2,QWORD PTR [rsp]
  00d90:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d96:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d9c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00da2:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00da8: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00daf: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00db6:    	add    rsp,0x40
  00dba: 78 	movabs r13,0x557861f86440
  00dc4:    	test   rax,rax
  00dc7:    	je     0xfffe7824
  00dcd: ff 	mov    QWORD PTR [r14-0xa0],rax
:00063 %14 = %14.call y()                   [Vec]
  00dd4: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00ddb: 00 	test   rdi,0x7
  00de2:    	jne    0x3303a
  00de8:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00dec:    	jne    0x3303a
  00df2: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9ec3],0x26        # 0xfffeacbc
  00df9:    	jne    0x3303a
  00dff:    	mov    esi,DWORD PTR [rip+0x1877]        # 0x267c
  00e05:    	cmp    esi,0xffffffff
  00e08:    	je     0x3309c
  00e0e:    	cmp    WORD PTR [rdi+0x2],0x3
  00e13:    	jne    0xe2c
  00e19:    	cmp    esi,0x6
  00e1c:    	jge    0xe2c
  00e22:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00e27:    	jmp    0xe96
  00e2c:    	sub    rsp,0x40
  00e30:    	movq   QWORD PTR [rsp],xmm2
  00e35:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e3b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e41:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e47:    	movq   QWORD PTR [rsp+0x20],xmm7
  00e4d: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00e54: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00e5b: 78 	movabs rax,0x557860b3bf40
  00e65:    	call   rax
  00e67:    	movq   xmm2,QWORD PTR [rsp]
  00e6c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e72:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e78:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e7e:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00e84: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00e8b: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00e92:    	add    rsp,0x40
  00e96: ff 	mov    QWORD PTR [r14-0xa0],rax
:00064 
:00065 %14 = %5 * %14                       [Float][Float]
  00e9d: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00ea4: 00 	test   rdi,0x1
  00eab:    	jne    0x33123
  00eb1: 00 	test   rdi,0x2
  00eb8:    	je     0xef4
  00ebe:    	xorps  xmm6,xmm6
  00ec1: 00 	movabs rax,0x8000000000000002
  00ecb:    	cmp    rdi,rax
  00ece:    	je     0xf06
  00ed4:    	mov    rax,rdi
  00ed7:    	sar    rax,0x3f
  00edb:    	add    rax,0x2
  00edf:    	and    rdi,0xfffffffffffffffc
  00ee3:    	or     rdi,rax
  00ee6:    	rol    rdi,0x3d
  00eea:    	movq   xmm6,rdi
  00eef:    	jmp    0xf06
  00ef4:    	call   0xfffe787d
  00ef9:    	test   rax,rax
  00efc:    	je     0x33123
  00f02:    	movq   xmm6,xmm0
  00f06:    	mulsd  xmm6,xmm8
:00066 %13 = %13 + %14                      [Float][Float]
  00f0b:    	addsd  xmm3,xmm6
:00067 %14 = dynvar(2, %2)
  00f0f:    	mov    rax,QWORD PTR [r14-0x18]
  00f13:    	mov    rax,QWORD PTR [rax]
  00f16:    	mov    rax,QWORD PTR [rax-0x28]
  00f1a: ff 	mov    QWORD PTR [r14-0xa0],rax
:00068 %15 = 2: i32
  00f21: ff 	mov    QWORD PTR [r14-0xa8],0x5
:00069 %14 = %14.[%15]                      [Array][Integer]
  00f2c: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00f33: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  00f3a: 00 	test   rdi,0x7
  00f41:    	jne    0x33185
  00f47:    	cmp    DWORD PTR [rdi+0x4],0xb
  00f4b:    	jne    0x33185
  00f51: 00 	test   rsi,0x1
  00f58:    	je     0x33185
  00f5e:    	sar    rsi,1
  00f61:    	sub    rsp,0x40
  00f65:    	movq   QWORD PTR [rsp],xmm2
  00f6a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f70:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f76:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f7c:    	movq   QWORD PTR [rsp+0x20],xmm7
  00f82: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  00f89: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  00f90: 78 	movabs rax,0x557860b06070
  00f9a:    	call   rax
  00f9c:    	movq   xmm2,QWORD PTR [rsp]
  00fa1:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00fa7:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00fad:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00fb3:    	movq   xmm7,QWORD PTR [rsp+0x20]
  00fb9: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  00fc0: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  00fc7:    	add    rsp,0x40
  00fcb: 78 	movabs r13,0x557861f864b0
  00fd5:    	test   rax,rax
  00fd8:    	je     0xfffe7824
  00fde: ff 	mov    QWORD PTR [r14-0xa0],rax
:00070 %14 = %14.call y()                   [Vec]
  00fe5: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  00fec: 00 	test   rdi,0x7
  00ff3:    	jne    0x331e7
  00ff9:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00ffd:    	jne    0x331e7
  01003: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9cb2],0x26        # 0xfffeacbc
  0100a:    	jne    0x331e7
  01010:    	mov    esi,DWORD PTR [rip+0x166e]        # 0x2684
  01016:    	cmp    esi,0xffffffff
  01019:    	je     0x33249
  0101f:    	cmp    WORD PTR [rdi+0x2],0x3
  01024:    	jne    0x103d
  0102a:    	cmp    esi,0x6
  0102d:    	jge    0x103d
  01033:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01038:    	jmp    0x10a7
  0103d:    	sub    rsp,0x40
  01041:    	movq   QWORD PTR [rsp],xmm2
  01046:    	movq   QWORD PTR [rsp+0x8],xmm3
  0104c:    	movq   QWORD PTR [rsp+0x10],xmm4
  01052:    	movq   QWORD PTR [rsp+0x18],xmm5
  01058:    	movq   QWORD PTR [rsp+0x20],xmm7
  0105e: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01065: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  0106c: 78 	movabs rax,0x557860b3bf40
  01076:    	call   rax
  01078:    	movq   xmm2,QWORD PTR [rsp]
  0107d:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01083:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01089:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0108f:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01095: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0109c: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  010a3:    	add    rsp,0x40
  010a7: ff 	mov    QWORD PTR [r14-0xa0],rax
:00071 
:00072 %14 = %6 * %14                       [Float][Float]
  010ae: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  010b5: 00 	test   rdi,0x1
  010bc:    	jne    0x332d0
  010c2: 00 	test   rdi,0x2
  010c9:    	je     0x1105
  010cf:    	xorps  xmm6,xmm6
  010d2: 00 	movabs rax,0x8000000000000002
  010dc:    	cmp    rdi,rax
  010df:    	je     0x1117
  010e5:    	mov    rax,rdi
  010e8:    	sar    rax,0x3f
  010ec:    	add    rax,0x2
  010f0:    	and    rdi,0xfffffffffffffffc
  010f4:    	or     rdi,rax
  010f7:    	rol    rdi,0x3d
  010fb:    	movq   xmm6,rdi
  01100:    	jmp    0x1117
  01105:    	call   0xfffe787d
  0110a:    	test   rax,rax
  0110d:    	je     0x332d0
  01113:    	movq   xmm6,xmm0
  01117:    	mulsd  xmm6,xmm2
:00073 %8 = %13 + %14                       [Float][Float]
  0111b:    	movq   xmm10,xmm3
  01120:    	addsd  xmm10,xmm6
:00074 %13 = dynvar(2, %2)
  01125:    	mov    rax,QWORD PTR [r14-0x18]
  01129:    	mov    rax,QWORD PTR [rax]
  0112c:    	mov    rax,QWORD PTR [rax-0x28]
  01130: ff 	mov    QWORD PTR [r14-0x98],rax
:00075 %14 = 0: i32
  01137: ff 	mov    QWORD PTR [r14-0xa0],0x1
:00076 %13 = %13.[%14]                      [Array][Integer]
  01142: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01149: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  01150: 00 	test   rdi,0x7
  01157:    	jne    0x33332
  0115d:    	cmp    DWORD PTR [rdi+0x4],0xb
  01161:    	jne    0x33332
  01167: 00 	test   rsi,0x1
  0116e:    	je     0x33332
  01174:    	sar    rsi,1
  01177:    	sub    rsp,0x40
  0117b:    	movq   QWORD PTR [rsp],xmm2
  01180:    	movq   QWORD PTR [rsp+0x8],xmm4
  01186:    	movq   QWORD PTR [rsp+0x10],xmm5
  0118c:    	movq   QWORD PTR [rsp+0x18],xmm7
  01192: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01199: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  011a0: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  011a7: 78 	movabs rax,0x557860b06070
  011b1:    	call   rax
  011b3:    	movq   xmm2,QWORD PTR [rsp]
  011b8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011be:    	movq   xmm5,QWORD PTR [rsp+0x10]
  011c4:    	movq   xmm7,QWORD PTR [rsp+0x18]
  011ca: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  011d1: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  011d8: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  011df:    	add    rsp,0x40
  011e3: 78 	movabs r13,0x557861f86520
  011ed:    	test   rax,rax
  011f0:    	je     0xfffe7824
  011f6: ff 	mov    QWORD PTR [r14-0x98],rax
:00077 %13 = %13.call z()                   [Vec]
  011fd: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01204: 00 	test   rdi,0x7
  0120b:    	jne    0x33392
  01211:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01215:    	jne    0x33392
  0121b: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9a9a],0x26        # 0xfffeacbc
  01222:    	jne    0x33392
  01228:    	mov    esi,DWORD PTR [rip+0x145e]        # 0x268c
  0122e:    	cmp    esi,0xffffffff
  01231:    	je     0x333f2
  01237:    	cmp    WORD PTR [rdi+0x2],0x3
  0123c:    	jne    0x1255
  01242:    	cmp    esi,0x6
  01245:    	jge    0x1255
  0124b:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01250:    	jmp    0x12c1
  01255:    	sub    rsp,0x40
  01259:    	movq   QWORD PTR [rsp],xmm2
  0125e:    	movq   QWORD PTR [rsp+0x8],xmm4
  01264:    	movq   QWORD PTR [rsp+0x10],xmm5
  0126a:    	movq   QWORD PTR [rsp+0x18],xmm7
  01270: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01277: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0127e: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01285: 78 	movabs rax,0x557860b3bf40
  0128f:    	call   rax
  01291:    	movq   xmm2,QWORD PTR [rsp]
  01296:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0129c:    	movq   xmm5,QWORD PTR [rsp+0x10]
  012a2:    	movq   xmm7,QWORD PTR [rsp+0x18]
  012a8: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  012af: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  012b6: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  012bd:    	add    rsp,0x40
  012c1: ff 	mov    QWORD PTR [r14-0x98],rax
:00078 
:00079 %13 = %4 * %13                       [Float][Float]
  012c8: ff 	mov    rdi,QWORD PTR [r14-0x98]
  012cf: 00 	test   rdi,0x1
  012d6:    	jne    0x3347b
  012dc: 00 	test   rdi,0x2
  012e3:    	je     0x131f
  012e9:    	xorps  xmm3,xmm3
  012ec: 00 	movabs rax,0x8000000000000002
  012f6:    	cmp    rdi,rax
  012f9:    	je     0x1331
  012ff:    	mov    rax,rdi
  01302:    	sar    rax,0x3f
  01306:    	add    rax,0x2
  0130a:    	and    rdi,0xfffffffffffffffc
  0130e:    	or     rdi,rax
  01311:    	rol    rdi,0x3d
  01315:    	movq   xmm3,rdi
  0131a:    	jmp    0x1331
  0131f:    	call   0xfffe787d
  01324:    	test   rax,rax
  01327:    	je     0x3347b
  0132d:    	movq   xmm3,xmm0
  01331:    	mulsd  xmm3,xmm7
:00080 %14 = dynvar(2, %2)
  01335:    	mov    rax,QWORD PTR [r14-0x18]
  01339:    	mov    rax,QWORD PTR [rax]
  0133c:    	mov    rax,QWORD PTR [rax-0x28]
  01340: ff 	mov    QWORD PTR [r14-0xa0],rax
:00081 %15 = 1: i32
  01347: ff 	mov    QWORD PTR [r14-0xa8],0x3
:00082 %14 = %14.[%15]                      [Array][Integer]
  01352: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01359: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  01360: 00 	test   rdi,0x7
  01367:    	jne    0x334db
  0136d:    	cmp    DWORD PTR [rdi+0x4],0xb
  01371:    	jne    0x334db
  01377: 00 	test   rsi,0x1
  0137e:    	je     0x334db
  01384:    	sar    rsi,1
  01387:    	sub    rsp,0x40
  0138b:    	movq   QWORD PTR [rsp],xmm2
  01390:    	movq   QWORD PTR [rsp+0x8],xmm3
  01396:    	movq   QWORD PTR [rsp+0x10],xmm4
  0139c:    	movq   QWORD PTR [rsp+0x18],xmm5
  013a2:    	movq   QWORD PTR [rsp+0x20],xmm7
  013a8: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  013af: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  013b6: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  013bd: 78 	movabs rax,0x557860b06070
  013c7:    	call   rax
  013c9:    	movq   xmm2,QWORD PTR [rsp]
  013ce:    	movq   xmm3,QWORD PTR [rsp+0x8]
  013d4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  013da:    	movq   xmm5,QWORD PTR [rsp+0x18]
  013e0:    	movq   xmm7,QWORD PTR [rsp+0x20]
  013e6: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  013ed: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  013f4: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  013fb:    	add    rsp,0x40
  013ff: 78 	movabs r13,0x557861f86580
  01409:    	test   rax,rax
  0140c:    	je     0xfffe7824
  01412: ff 	mov    QWORD PTR [r14-0xa0],rax
:00083 %14 = %14.call z()                   [Vec]
  01419: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01420: 00 	test   rdi,0x7
  01427:    	jne    0x3354b
  0142d:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01431:    	jne    0x3354b
  01437: 26 	cmp    DWORD PTR [rip+0xfffffffffffe987e],0x26        # 0xfffeacbc
  0143e:    	jne    0x3354b
  01444:    	mov    esi,DWORD PTR [rip+0x124a]        # 0x2694
  0144a:    	cmp    esi,0xffffffff
  0144d:    	je     0x335bb
  01453:    	cmp    WORD PTR [rdi+0x2],0x3
  01458:    	jne    0x1471
  0145e:    	cmp    esi,0x6
  01461:    	jge    0x1471
  01467:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0146c:    	jmp    0x14e9
  01471:    	sub    rsp,0x40
  01475:    	movq   QWORD PTR [rsp],xmm2
  0147a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01480:    	movq   QWORD PTR [rsp+0x10],xmm4
  01486:    	movq   QWORD PTR [rsp+0x18],xmm5
  0148c:    	movq   QWORD PTR [rsp+0x20],xmm7
  01492: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  01499: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  014a0: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  014a7: 78 	movabs rax,0x557860b3bf40
  014b1:    	call   rax
  014b3:    	movq   xmm2,QWORD PTR [rsp]
  014b8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  014be:    	movq   xmm4,QWORD PTR [rsp+0x10]
  014c4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  014ca:    	movq   xmm7,QWORD PTR [rsp+0x20]
  014d0: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  014d7: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  014de: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  014e5:    	add    rsp,0x40
  014e9: ff 	mov    QWORD PTR [r14-0xa0],rax
:00084 
:00085 %14 = %5 * %14                       [Float][Float]
  014f0: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  014f7: 00 	test   rdi,0x1
  014fe:    	jne    0x33650
  01504: 00 	test   rdi,0x2
  0150b:    	je     0x1547
  01511:    	xorps  xmm6,xmm6
  01514: 00 	movabs rax,0x8000000000000002
  0151e:    	cmp    rdi,rax
  01521:    	je     0x1559
  01527:    	mov    rax,rdi
  0152a:    	sar    rax,0x3f
  0152e:    	add    rax,0x2
  01532:    	and    rdi,0xfffffffffffffffc
  01536:    	or     rdi,rax
  01539:    	rol    rdi,0x3d
  0153d:    	movq   xmm6,rdi
  01542:    	jmp    0x1559
  01547:    	call   0xfffe787d
  0154c:    	test   rax,rax
  0154f:    	je     0x33650
  01555:    	movq   xmm6,xmm0
  01559:    	mulsd  xmm6,xmm8
:00086 %13 = %13 + %14                      [Float][Float]
  0155e:    	addsd  xmm3,xmm6
:00087 %14 = dynvar(2, %2)
  01562:    	mov    rax,QWORD PTR [r14-0x18]
  01566:    	mov    rax,QWORD PTR [rax]
  01569:    	mov    rax,QWORD PTR [rax-0x28]
  0156d: ff 	mov    QWORD PTR [r14-0xa0],rax
:00088 %15 = 2: i32
  01574: ff 	mov    QWORD PTR [r14-0xa8],0x5
:00089 %14 = %14.[%15]                      [Array][Integer]
  0157f: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01586: ff 	mov    rsi,QWORD PTR [r14-0xa8]
  0158d: 00 	test   rdi,0x7
  01594:    	jne    0x336c0
  0159a:    	cmp    DWORD PTR [rdi+0x4],0xb
  0159e:    	jne    0x336c0
  015a4: 00 	test   rsi,0x1
  015ab:    	je     0x336c0
  015b1:    	sar    rsi,1
  015b4:    	sub    rsp,0x40
  015b8:    	movq   QWORD PTR [rsp],xmm2
  015bd:    	movq   QWORD PTR [rsp+0x8],xmm3
  015c3:    	movq   QWORD PTR [rsp+0x10],xmm4
  015c9:    	movq   QWORD PTR [rsp+0x18],xmm5
  015cf:    	movq   QWORD PTR [rsp+0x20],xmm7
  015d5: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  015dc: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  015e3: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  015ea: 78 	movabs rax,0x557860b06070
  015f4:    	call   rax
  015f6:    	movq   xmm2,QWORD PTR [rsp]
  015fb:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01601:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01607:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0160d:    	movq   xmm7,QWORD PTR [rsp+0x20]
  01613: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  0161a: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  01621: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01628:    	add    rsp,0x40
  0162c: 78 	movabs r13,0x557861f865f0
  01636:    	test   rax,rax
  01639:    	je     0xfffe7824
  0163f: ff 	mov    QWORD PTR [r14-0xa0],rax
:00090 %14 = %14.call z()                   [Vec]
  01646: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  0164d: 00 	test   rdi,0x7
  01654:    	jne    0x33730
  0165a:    	cmp    DWORD PTR [rdi+0x4],0x2b
  0165e:    	jne    0x33730
  01664: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9651],0x26        # 0xfffeacbc
  0166b:    	jne    0x33730
  01671:    	mov    esi,DWORD PTR [rip+0x1025]        # 0x269c
  01677:    	cmp    esi,0xffffffff
  0167a:    	je     0x337a0
  01680:    	cmp    WORD PTR [rdi+0x2],0x3
  01685:    	jne    0x169e
  0168b:    	cmp    esi,0x6
  0168e:    	jge    0x169e
  01694:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  01699:    	jmp    0x1716
  0169e:    	sub    rsp,0x40
  016a2:    	movq   QWORD PTR [rsp],xmm2
  016a7:    	movq   QWORD PTR [rsp+0x8],xmm3
  016ad:    	movq   QWORD PTR [rsp+0x10],xmm4
  016b3:    	movq   QWORD PTR [rsp+0x18],xmm5
  016b9:    	movq   QWORD PTR [rsp+0x20],xmm7
  016bf: 28 	movq   QWORD PTR [rsp+0x28],xmm8
  016c6: 30 	movq   QWORD PTR [rsp+0x30],xmm9
  016cd: 38 	movq   QWORD PTR [rsp+0x38],xmm10
  016d4: 78 	movabs rax,0x557860b3bf40
  016de:    	call   rax
  016e0:    	movq   xmm2,QWORD PTR [rsp]
  016e5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  016eb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  016f1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  016f7:    	movq   xmm7,QWORD PTR [rsp+0x20]
  016fd: 28 	movq   xmm8,QWORD PTR [rsp+0x28]
  01704: 30 	movq   xmm9,QWORD PTR [rsp+0x30]
  0170b: 38 	movq   xmm10,QWORD PTR [rsp+0x38]
  01712:    	add    rsp,0x40
  01716: ff 	mov    QWORD PTR [r14-0xa0],rax
:00091 
:00092 %14 = %6 * %14                       [Float][Float]
  0171d: ff 	mov    rdi,QWORD PTR [r14-0xa0]
  01724: 00 	test   rdi,0x1
  0172b:    	jne    0x33835
  01731: 00 	test   rdi,0x2
  01738:    	je     0x1774
  0173e:    	xorps  xmm6,xmm6
  01741: 00 	movabs rax,0x8000000000000002
  0174b:    	cmp    rdi,rax
  0174e:    	je     0x1786
  01754:    	mov    rax,rdi
  01757:    	sar    rax,0x3f
  0175b:    	add    rax,0x2
  0175f:    	and    rdi,0xfffffffffffffffc
  01763:    	or     rdi,rax
  01766:    	rol    rdi,0x3d
  0176a:    	movq   xmm6,rdi
  0176f:    	jmp    0x1786
  01774:    	call   0xfffe787d
  01779:    	test   rax,rax
  0177c:    	je     0x33835
  01782:    	movq   xmm6,xmm0
  01786:    	mulsd  xmm6,xmm2
:00093 %9 = %13 + %14                       [Float][Float]
  0178a:    	movq   xmm11,xmm3
  0178f:    	addsd  xmm11,xmm6
:00094 %13 = const[Vec]                     [Vec]
  01794: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe9535]        # 0xfffeacd0
  0179b: 00 	cmp    rax,QWORD PTR [rip+0xf0e]        # 0x26b0
  017a2:    	jne    0x338a5
  017a8: 00 	mov    rax,QWORD PTR [rip+0xef1]        # 0x26a0
  017af: ff 	mov    QWORD PTR [r14-0x98],rax
:00095 %14 = %7
:00096 %15 = %8
:00097 %16 = %9
:00098 %10 = %13.call new(%14; 3)           [#<Class:Vec>]
  017b6:    	movq   xmm0,xmm9
  017bb:    	call   0xfffe79a1
  017c0: ff 	mov    QWORD PTR [r14-0xa0],rax
  017c7:    	movq   xmm0,xmm10
  017cc:    	call   0xfffe79a1
  017d1: ff 	mov    QWORD PTR [r14-0xa8],rax
  017d8:    	movq   xmm0,xmm11
  017dd:    	call   0xfffe79a1
  017e2: ff 	mov    QWORD PTR [r14-0xb0],rax
  017e9: ff 	mov    rdi,QWORD PTR [r14-0x98]
  017f0: 00 	test   rdi,0x7
  017f7:    	jne    0x33965
  017fd:    	cmp    DWORD PTR [rdi+0x4],0x2c
  01801:    	jne    0x33965
  01807: 26 	cmp    DWORD PTR [rip+0xfffffffffffe94ae],0x26        # 0xfffeacbc
  0180e:    	jne    0x33965
  01814: 00 	mov    r9,0x0
  0181b:    	sub    rsp,0x40
  0181f:    	movq   QWORD PTR [rsp],xmm2
  01824:    	movq   QWORD PTR [rsp+0x8],xmm4
  0182a:    	movq   QWORD PTR [rsp+0x10],xmm5
  01830:    	movq   QWORD PTR [rsp+0x18],xmm7
  01836: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0183d: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01844: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0184b: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01852:    	mov    rdx,rdi
  01855:    	mov    QWORD PTR [rsp-0x40],rcx
  0185a: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01863: ff 	lea    rcx,[r14-0xa0]
  0186a: 00 	mov    r8,0x3
  01871:    	mov    rsi,QWORD PTR [rbx]
  01874:    	mov    QWORD PTR [rsp-0x18],rsi
  01879:    	lea    rsi,[rsp-0x18]
  0187e:    	mov    QWORD PTR [rbx],rsi
  01881:    	lea    r14,[rsp-0x10]
  01886:    	mov    QWORD PTR [rsp-0x20],r14
  0188b:    	call   0x339d3
  01890:    	lea    r14,[rbp-0x8]
  01894:    	mov    QWORD PTR [rbx],r14
  01897:    	mov    r14,QWORD PTR [rbp-0x10]
  0189b:    	movq   xmm2,QWORD PTR [rsp]
  018a0:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018a6:    	movq   xmm5,QWORD PTR [rsp+0x10]
  018ac:    	movq   xmm7,QWORD PTR [rsp+0x18]
  018b2: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  018b9: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  018c0: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  018c7: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  018ce:    	add    rsp,0x40
  018d2: 78 	movabs r13,0x557861f86690
  018dc:    	test   rax,rax
  018df:    	je     0xfffe7824
  018e5:    	mov    QWORD PTR [r14-0x80],rax
:00099 
:00100 %13 = const[Ray]                     [Ray]
  018e9: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe93e0]        # 0xfffeacd0
  018f0: 00 	cmp    rax,QWORD PTR [rip+0xdd9]        # 0x26d0
  018f7:    	jne    0x33a05
  018fd: 00 	mov    rax,QWORD PTR [rip+0xdbc]        # 0x26c0
  01904: ff 	mov    QWORD PTR [r14-0x98],rax
:00101 %14 = dynvar(2, %7)
  0190b:    	mov    rax,QWORD PTR [r14-0x18]
  0190f:    	mov    rax,QWORD PTR [rax]
  01912:    	mov    rax,QWORD PTR [rax-0x50]
  01916: ff 	mov    QWORD PTR [r14-0xa0],rax
:00102 %15 = %10
  0191d:    	mov    rax,QWORD PTR [r14-0x80]
  01921: ff 	mov    QWORD PTR [r14-0xa8],rax
:00103 %11 = %13.call new(%14; 2)           [#<Class:Ray>]
  01928: ff 	mov    rdi,QWORD PTR [r14-0x98]
  0192f: 00 	test   rdi,0x7
  01936:    	jne    0x33ab9
  0193c:    	cmp    DWORD PTR [rdi+0x4],0x32
  01940:    	jne    0x33ab9
  01946: 26 	cmp    DWORD PTR [rip+0xfffffffffffe936f],0x26        # 0xfffeacbc
  0194d:    	jne    0x33ab9
  01953: 00 	mov    r9,0x0
  0195a:    	sub    rsp,0x40
  0195e:    	movq   QWORD PTR [rsp],xmm2
  01963:    	movq   QWORD PTR [rsp+0x8],xmm4
  01969:    	movq   QWORD PTR [rsp+0x10],xmm5
  0196f:    	movq   QWORD PTR [rsp+0x18],xmm7
  01975: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0197c: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01983: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0198a: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01991:    	mov    rdx,rdi
  01994:    	mov    QWORD PTR [rsp-0x40],rcx
  01999: 00 	mov    QWORD PTR [rsp-0x28],0x0
  019a2: ff 	lea    rcx,[r14-0xa0]
  019a9: 00 	mov    r8,0x2
  019b0:    	mov    rsi,QWORD PTR [rbx]
  019b3:    	mov    QWORD PTR [rsp-0x18],rsi
  019b8:    	lea    rsi,[rsp-0x18]
  019bd:    	mov    QWORD PTR [rbx],rsi
  019c0:    	lea    r14,[rsp-0x10]
  019c5:    	mov    QWORD PTR [rsp-0x20],r14
  019ca:    	call   0x33b27
  019cf:    	lea    r14,[rbp-0x8]
  019d3:    	mov    QWORD PTR [rbx],r14
  019d6:    	mov    r14,QWORD PTR [rbp-0x10]
  019da:    	movq   xmm2,QWORD PTR [rsp]
  019df:    	movq   xmm4,QWORD PTR [rsp+0x8]
  019e5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  019eb:    	movq   xmm7,QWORD PTR [rsp+0x18]
  019f1: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  019f8: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  019ff: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01a06: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01a0d:    	add    rsp,0x40
  01a11: 78 	movabs r13,0x557861f866e0
  01a1b:    	test   rax,rax
  01a1e:    	je     0xfffe7824
  01a24: ff 	mov    QWORD PTR [r14-0x88],rax
:00104 
:00105 %13 = const[Isect]                   [Isect]
  01a2b: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe929e]        # 0xfffeacd0
  01a32: 00 	cmp    rax,QWORD PTR [rip+0xcb7]        # 0x26f0
  01a39:    	jne    0x33b59
  01a3f: 00 	mov    rax,QWORD PTR [rip+0xc9a]        # 0x26e0
  01a46: ff 	mov    QWORD PTR [r14-0x98],rax
:00106 %12 = %13.call new()                 [#<Class:Isect>]
  01a4d: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01a54: 00 	test   rdi,0x7
  01a5b:    	jne    0x33c0d
  01a61:    	cmp    DWORD PTR [rdi+0x4],0x34
  01a65:    	jne    0x33c0d
  01a6b: 26 	cmp    DWORD PTR [rip+0xfffffffffffe924a],0x26        # 0xfffeacbc
  01a72:    	jne    0x33c0d
  01a78: 00 	mov    r9,0x0
  01a7f:    	sub    rsp,0x40
  01a83:    	movq   QWORD PTR [rsp],xmm2
  01a88:    	movq   QWORD PTR [rsp+0x8],xmm4
  01a8e:    	movq   QWORD PTR [rsp+0x10],xmm5
  01a94:    	movq   QWORD PTR [rsp+0x18],xmm7
  01a9a: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01aa1: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01aa8: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01aaf: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01ab6:    	mov    rdx,rdi
  01ab9:    	mov    QWORD PTR [rsp-0x40],rcx
  01abe: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01ac7: ff 	lea    rcx,[r14-0xa0]
  01ace: 00 	mov    r8,0x0
  01ad5:    	mov    rsi,QWORD PTR [rbx]
  01ad8:    	mov    QWORD PTR [rsp-0x18],rsi
  01add:    	lea    rsi,[rsp-0x18]
  01ae2:    	mov    QWORD PTR [rbx],rsi
  01ae5:    	lea    r14,[rsp-0x10]
  01aea:    	mov    QWORD PTR [rsp-0x20],r14
  01aef:    	call   0x33c7b
  01af4:    	lea    r14,[rbp-0x8]
  01af8:    	mov    QWORD PTR [rbx],r14
  01afb:    	mov    r14,QWORD PTR [rbp-0x10]
  01aff:    	movq   xmm2,QWORD PTR [rsp]
  01b04:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01b0a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01b10:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01b16: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01b1d: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01b24: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01b2b: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01b32:    	add    rsp,0x40
  01b36: 78 	movabs r13,0x557861f86710
  01b40:    	test   rax,rax
  01b43:    	je     0xfffe7824
  01b49: ff 	mov    QWORD PTR [r14-0x90],rax
:00107 
:00108 %13 = @spheres: Scene[IvarId(0)]
  01b50:    	mov    rdi,QWORD PTR [r14-0x30]
  01b54:    	mov    rax,QWORD PTR [rdi+0x10]
  01b58: ff 	mov    QWORD PTR [r14-0x98],rax
:00109 %14 = 0: i32
  01b5f: ff 	mov    QWORD PTR [r14-0xa0],0x1
:00110 %13 = %13.[%14]                      [Array][Integer]
  01b6a: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01b71: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  01b78: 00 	test   rdi,0x7
  01b7f:    	jne    0x33cad
  01b85:    	cmp    DWORD PTR [rdi+0x4],0xb
  01b89:    	jne    0x33cad
  01b8f: 00 	test   rsi,0x1
  01b96:    	je     0x33cad
  01b9c:    	sar    rsi,1
  01b9f:    	sub    rsp,0x40
  01ba3:    	movq   QWORD PTR [rsp],xmm2
  01ba8:    	movq   QWORD PTR [rsp+0x8],xmm4
  01bae:    	movq   QWORD PTR [rsp+0x10],xmm5
  01bb4:    	movq   QWORD PTR [rsp+0x18],xmm7
  01bba: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01bc1: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01bc8: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01bcf: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01bd6: 78 	movabs rax,0x557860b06070
  01be0:    	call   rax
  01be2:    	movq   xmm2,QWORD PTR [rsp]
  01be7:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01bed:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01bf3:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01bf9: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01c00: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01c07: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01c0e: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01c15:    	add    rsp,0x40
  01c19: 78 	movabs r13,0x557861f86740
  01c23:    	test   rax,rax
  01c26:    	je     0xfffe7824
  01c2c: ff 	mov    QWORD PTR [r14-0x98],rax
:00111 %14 = %11
  01c33: ff 	mov    rax,QWORD PTR [r14-0x88]
  01c3a: ff 	mov    QWORD PTR [r14-0xa0],rax
:00112 %15 = %12
  01c41: ff 	mov    rax,QWORD PTR [r14-0x90]
  01c48: ff 	mov    QWORD PTR [r14-0xa8],rax
:00113 _ = %13.call intersect(%14; 2)       [Sphere]
  01c4f: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01c56: 00 	test   rdi,0x7
  01c5d:    	jne    0x33d1b
  01c63:    	cmp    DWORD PTR [rdi+0x4],0x2d
  01c67:    	jne    0x33d1b
  01c6d: 26 	cmp    DWORD PTR [rip+0xfffffffffffe9048],0x26        # 0xfffeacbc
  01c74:    	jne    0x33d1b
  01c7a:    	sub    rsp,0x40
  01c7e:    	movq   QWORD PTR [rsp],xmm2
  01c83:    	movq   QWORD PTR [rsp+0x8],xmm4
  01c89:    	movq   QWORD PTR [rsp+0x10],xmm5
  01c8f:    	movq   QWORD PTR [rsp+0x18],xmm7
  01c95: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01c9c: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01ca3: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01caa: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01cb1: 00 	cmp    DWORD PTR [rip+0xfffffffffffe9008],0x0        # 0xfffeacc0
  01cb8:    	je     0x1cd0
  01cbe:    	mov    rdi,r12
  01cc1:    	mov    rsi,QWORD PTR [rbx]
  01cc4: 78 	movabs rax,0x557860afd140
  01cce:    	call   rax
  01cd0: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01cd9: ff 	mov    rax,QWORD PTR [r14-0x98]
  01ce0:    	mov    QWORD PTR [rsp-0x40],rax
  01ce5: 00 	mov    rdi,0x2
  01cec: ff 	mov    rax,QWORD PTR [r14-0xa0]
  01cf3:    	mov    QWORD PTR [rsp-0x48],rax
  01cf8: ff 	mov    rax,QWORD PTR [r14-0xa8]
  01cff:    	mov    QWORD PTR [rsp-0x50],rax
  01d04: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01d0d: 0e 	movabs rax,0x1000e00000061
  01d17:    	mov    QWORD PTR [rsp-0x30],rax
  01d1c: 78 	movabs r13,0x557861f78680
  01d26:    	mov    rsi,QWORD PTR [rbx]
  01d29:    	mov    QWORD PTR [rsp-0x18],rsi
  01d2e:    	lea    rsi,[rsp-0x18]
  01d33:    	mov    QWORD PTR [rbx],rsi
  01d36:    	lea    r14,[rsp-0x10]
  01d3b:    	mov    QWORD PTR [rsp-0x20],r14
  01d40:    	call   0xfffeb87c
  01d45:    	lea    r14,[rbp-0x8]
  01d49:    	mov    QWORD PTR [rbx],r14
  01d4c:    	mov    r14,QWORD PTR [rbp-0x10]
  01d50:    	movq   xmm2,QWORD PTR [rsp]
  01d55:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01d5b:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01d61:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01d67: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01d6e: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01d75: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01d7c: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01d83:    	add    rsp,0x40
  01d87: 78 	movabs r13,0x557861f86780
  01d91:    	test   rax,rax
  01d94:    	je     0xfffe7824
:00114 
:00115 %13 = @spheres: Scene[IvarId(0)]
  01d9a:    	mov    rdi,QWORD PTR [r14-0x30]
  01d9e:    	mov    rax,QWORD PTR [rdi+0x10]
  01da2: ff 	mov    QWORD PTR [r14-0x98],rax
:00116 %14 = 1: i32
  01da9: ff 	mov    QWORD PTR [r14-0xa0],0x3
:00117 %13 = %13.[%14]                      [Array][Integer]
  01db4: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01dbb: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  01dc2: 00 	test   rdi,0x7
  01dc9:    	jne    0x33d89
  01dcf:    	cmp    DWORD PTR [rdi+0x4],0xb
  01dd3:    	jne    0x33d89
  01dd9: 00 	test   rsi,0x1
  01de0:    	je     0x33d89
  01de6:    	sar    rsi,1
  01de9:    	sub    rsp,0x40
  01ded:    	movq   QWORD PTR [rsp],xmm2
  01df2:    	movq   QWORD PTR [rsp+0x8],xmm4
  01df8:    	movq   QWORD PTR [rsp+0x10],xmm5
  01dfe:    	movq   QWORD PTR [rsp+0x18],xmm7
  01e04: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01e0b: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01e12: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01e19: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01e20: 78 	movabs rax,0x557860b06070
  01e2a:    	call   rax
  01e2c:    	movq   xmm2,QWORD PTR [rsp]
  01e31:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01e37:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01e3d:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01e43: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01e4a: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01e51: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01e58: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01e5f:    	add    rsp,0x40
  01e63: 78 	movabs r13,0x557861f867b0
  01e6d:    	test   rax,rax
  01e70:    	je     0xfffe7824
  01e76: ff 	mov    QWORD PTR [r14-0x98],rax
:00118 %14 = %11
  01e7d: ff 	mov    rax,QWORD PTR [r14-0x88]
  01e84: ff 	mov    QWORD PTR [r14-0xa0],rax
:00119 %15 = %12
  01e8b: ff 	mov    rax,QWORD PTR [r14-0x90]
  01e92: ff 	mov    QWORD PTR [r14-0xa8],rax
:00120 _ = %13.call intersect(%14; 2)       [Sphere]
  01e99: ff 	mov    rdi,QWORD PTR [r14-0x98]
  01ea0: 00 	test   rdi,0x7
  01ea7:    	jne    0x33df7
  01ead:    	cmp    DWORD PTR [rdi+0x4],0x2d
  01eb1:    	jne    0x33df7
  01eb7: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8dfe],0x26        # 0xfffeacbc
  01ebe:    	jne    0x33df7
  01ec4:    	sub    rsp,0x40
  01ec8:    	movq   QWORD PTR [rsp],xmm2
  01ecd:    	movq   QWORD PTR [rsp+0x8],xmm4
  01ed3:    	movq   QWORD PTR [rsp+0x10],xmm5
  01ed9:    	movq   QWORD PTR [rsp+0x18],xmm7
  01edf: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  01ee6: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  01eed: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  01ef4: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  01efb: 00 	cmp    DWORD PTR [rip+0xfffffffffffe8dbe],0x0        # 0xfffeacc0
  01f02:    	je     0x1f1a
  01f08:    	mov    rdi,r12
  01f0b:    	mov    rsi,QWORD PTR [rbx]
  01f0e: 78 	movabs rax,0x557860afd140
  01f18:    	call   rax
  01f1a: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01f23: ff 	mov    rax,QWORD PTR [r14-0x98]
  01f2a:    	mov    QWORD PTR [rsp-0x40],rax
  01f2f: 00 	mov    rdi,0x2
  01f36: ff 	mov    rax,QWORD PTR [r14-0xa0]
  01f3d:    	mov    QWORD PTR [rsp-0x48],rax
  01f42: ff 	mov    rax,QWORD PTR [r14-0xa8]
  01f49:    	mov    QWORD PTR [rsp-0x50],rax
  01f4e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01f57: 0e 	movabs rax,0x1000e00000061
  01f61:    	mov    QWORD PTR [rsp-0x30],rax
  01f66: 78 	movabs r13,0x557861f78680
  01f70:    	mov    rsi,QWORD PTR [rbx]
  01f73:    	mov    QWORD PTR [rsp-0x18],rsi
  01f78:    	lea    rsi,[rsp-0x18]
  01f7d:    	mov    QWORD PTR [rbx],rsi
  01f80:    	lea    r14,[rsp-0x10]
  01f85:    	mov    QWORD PTR [rsp-0x20],r14
  01f8a:    	call   0xfffeb87c
  01f8f:    	lea    r14,[rbp-0x8]
  01f93:    	mov    QWORD PTR [rbx],r14
  01f96:    	mov    r14,QWORD PTR [rbp-0x10]
  01f9a:    	movq   xmm2,QWORD PTR [rsp]
  01f9f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01fa5:    	movq   xmm5,QWORD PTR [rsp+0x10]
  01fab:    	movq   xmm7,QWORD PTR [rsp+0x18]
  01fb1: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  01fb8: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  01fbf: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  01fc6: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  01fcd:    	add    rsp,0x40
  01fd1: 78 	movabs r13,0x557861f867f0
  01fdb:    	test   rax,rax
  01fde:    	je     0xfffe7824
:00121 
:00122 %13 = @spheres: Scene[IvarId(0)]
  01fe4:    	mov    rdi,QWORD PTR [r14-0x30]
  01fe8:    	mov    rax,QWORD PTR [rdi+0x10]
  01fec: ff 	mov    QWORD PTR [r14-0x98],rax
:00123 %14 = 2: i32
  01ff3: ff 	mov    QWORD PTR [r14-0xa0],0x5
:00124 %13 = %13.[%14]                      [Array][Integer]
  01ffe: ff 	mov    rdi,QWORD PTR [r14-0x98]
  02005: ff 	mov    rsi,QWORD PTR [r14-0xa0]
  0200c: 00 	test   rdi,0x7
  02013:    	jne    0x33e65
  02019:    	cmp    DWORD PTR [rdi+0x4],0xb
  0201d:    	jne    0x33e65
  02023: 00 	test   rsi,0x1
  0202a:    	je     0x33e65
  02030:    	sar    rsi,1
  02033:    	sub    rsp,0x40
  02037:    	movq   QWORD PTR [rsp],xmm2
  0203c:    	movq   QWORD PTR [rsp+0x8],xmm4
  02042:    	movq   QWORD PTR [rsp+0x10],xmm5
  02048:    	movq   QWORD PTR [rsp+0x18],xmm7
  0204e: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02055: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  0205c: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  02063: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  0206a: 78 	movabs rax,0x557860b06070
  02074:    	call   rax
  02076:    	movq   xmm2,QWORD PTR [rsp]
  0207b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02081:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02087:    	movq   xmm7,QWORD PTR [rsp+0x18]
  0208d: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02094: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0209b: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  020a2: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  020a9:    	add    rsp,0x40
  020ad: 78 	movabs r13,0x557861f86820
  020b7:    	test   rax,rax
  020ba:    	je     0xfffe7824
  020c0: ff 	mov    QWORD PTR [r14-0x98],rax
:00125 %14 = %11
  020c7: ff 	mov    rax,QWORD PTR [r14-0x88]
  020ce: ff 	mov    QWORD PTR [r14-0xa0],rax
:00126 %15 = %12
  020d5: ff 	mov    rax,QWORD PTR [r14-0x90]
  020dc: ff 	mov    QWORD PTR [r14-0xa8],rax
:00127 _ = %13.call intersect(%14; 2)       [Sphere]
  020e3: ff 	mov    rdi,QWORD PTR [r14-0x98]
  020ea: 00 	test   rdi,0x7
  020f1:    	jne    0x33ed3
  020f7:    	cmp    DWORD PTR [rdi+0x4],0x2d
  020fb:    	jne    0x33ed3
  02101: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8bb4],0x26        # 0xfffeacbc
  02108:    	jne    0x33ed3
  0210e:    	sub    rsp,0x40
  02112:    	movq   QWORD PTR [rsp],xmm2
  02117:    	movq   QWORD PTR [rsp+0x8],xmm4
  0211d:    	movq   QWORD PTR [rsp+0x10],xmm5
  02123:    	movq   QWORD PTR [rsp+0x18],xmm7
  02129: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  02130: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02137: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0213e: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02145: 00 	cmp    DWORD PTR [rip+0xfffffffffffe8b74],0x0        # 0xfffeacc0
  0214c:    	je     0x2164
  02152:    	mov    rdi,r12
  02155:    	mov    rsi,QWORD PTR [rbx]
  02158: 78 	movabs rax,0x557860afd140
  02162:    	call   rax
  02164: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0216d: ff 	mov    rax,QWORD PTR [r14-0x98]
  02174:    	mov    QWORD PTR [rsp-0x40],rax
  02179: 00 	mov    rdi,0x2
  02180: ff 	mov    rax,QWORD PTR [r14-0xa0]
  02187:    	mov    QWORD PTR [rsp-0x48],rax
  0218c: ff 	mov    rax,QWORD PTR [r14-0xa8]
  02193:    	mov    QWORD PTR [rsp-0x50],rax
  02198: 00 	mov    QWORD PTR [rsp-0x38],0x0
  021a1: 0e 	movabs rax,0x1000e00000061
  021ab:    	mov    QWORD PTR [rsp-0x30],rax
  021b0: 78 	movabs r13,0x557861f78680
  021ba:    	mov    rsi,QWORD PTR [rbx]
  021bd:    	mov    QWORD PTR [rsp-0x18],rsi
  021c2:    	lea    rsi,[rsp-0x18]
  021c7:    	mov    QWORD PTR [rbx],rsi
  021ca:    	lea    r14,[rsp-0x10]
  021cf:    	mov    QWORD PTR [rsp-0x20],r14
  021d4:    	call   0xfffeb87c
  021d9:    	lea    r14,[rbp-0x8]
  021dd:    	mov    QWORD PTR [rbx],r14
  021e0:    	mov    r14,QWORD PTR [rbp-0x10]
  021e4:    	movq   xmm2,QWORD PTR [rsp]
  021e9:    	movq   xmm4,QWORD PTR [rsp+0x8]
  021ef:    	movq   xmm5,QWORD PTR [rsp+0x10]
  021f5:    	movq   xmm7,QWORD PTR [rsp+0x18]
  021fb: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02202: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02209: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02210: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02217:    	add    rsp,0x40
  0221b: 78 	movabs r13,0x557861f86860
  02225:    	test   rax,rax
  02228:    	je     0xfffe7824
:00128 
:00129 %13 = @plane: Scene[IvarId(1)]
  0222e:    	mov    rdi,QWORD PTR [r14-0x30]
  02232:    	mov    rax,QWORD PTR [rdi+0x18]
  02236: ff 	mov    QWORD PTR [r14-0x98],rax
:00130 %14 = %11
  0223d: ff 	mov    rax,QWORD PTR [r14-0x88]
  02244: ff 	mov    QWORD PTR [r14-0xa0],rax
:00131 %15 = %12
  0224b: ff 	mov    rax,QWORD PTR [r14-0x90]
  02252: ff 	mov    QWORD PTR [r14-0xa8],rax
:00132 _ = %13.call intersect(%14; 2)       [Plane]
  02259: ff 	mov    rdi,QWORD PTR [r14-0x98]
  02260: 00 	test   rdi,0x7
  02267:    	jne    0x33f41
  0226d:    	cmp    DWORD PTR [rdi+0x4],0x2f
  02271:    	jne    0x33f41
  02277: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8a3e],0x26        # 0xfffeacbc
  0227e:    	jne    0x33f41
  02284:    	sub    rsp,0x40
  02288:    	movq   QWORD PTR [rsp],xmm2
  0228d:    	movq   QWORD PTR [rsp+0x8],xmm4
  02293:    	movq   QWORD PTR [rsp+0x10],xmm5
  02299:    	movq   QWORD PTR [rsp+0x18],xmm7
  0229f: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  022a6: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  022ad: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  022b4: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  022bb: 00 	cmp    DWORD PTR [rip+0xfffffffffffe89fe],0x0        # 0xfffeacc0
  022c2:    	je     0x22da
  022c8:    	mov    rdi,r12
  022cb:    	mov    rsi,QWORD PTR [rbx]
  022ce: 78 	movabs rax,0x557860afd140
  022d8:    	call   rax
  022da: 00 	mov    QWORD PTR [rsp-0x28],0x0
  022e3: ff 	mov    rax,QWORD PTR [r14-0x98]
  022ea:    	mov    QWORD PTR [rsp-0x40],rax
  022ef: 00 	mov    rdi,0x2
  022f6: ff 	mov    rax,QWORD PTR [r14-0xa0]
  022fd:    	mov    QWORD PTR [rsp-0x48],rax
  02302: ff 	mov    rax,QWORD PTR [r14-0xa8]
  02309:    	mov    QWORD PTR [rsp-0x50],rax
  0230e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  02317: 0c 	movabs rax,0x1000c00000063
  02321:    	mov    QWORD PTR [rsp-0x30],rax
  02326: 78 	movabs r13,0x557861fb0c30
  02330:    	mov    rsi,QWORD PTR [rbx]
  02333:    	mov    QWORD PTR [rsp-0x18],rsi
  02338:    	lea    rsi,[rsp-0x18]
  0233d:    	mov    QWORD PTR [rbx],rsi
  02340:    	lea    r14,[rsp-0x10]
  02345:    	mov    QWORD PTR [rsp-0x20],r14
  0234a:    	call   0xfffebe48
  0234f:    	lea    r14,[rbp-0x8]
  02353:    	mov    QWORD PTR [rbx],r14
  02356:    	mov    r14,QWORD PTR [rbp-0x10]
  0235a:    	movq   xmm2,QWORD PTR [rsp]
  0235f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  02365:    	movq   xmm5,QWORD PTR [rsp+0x10]
  0236b:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02371: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  02378: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  0237f: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  02386: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  0238d:    	add    rsp,0x40
  02391: 78 	movabs r13,0x557861f868b0
  0239b:    	test   rax,rax
  0239e:    	je     0xfffe7824
:00133 
:00134 %13 = %12.call hit()                 [Isect]
  023a4: ff 	mov    rdi,QWORD PTR [r14-0x90]
  023ab: 00 	test   rdi,0x7
  023b2:    	jne    0x33faf
  023b8:    	cmp    DWORD PTR [rdi+0x4],0x33
  023bc:    	jne    0x33faf
  023c2: 26 	cmp    DWORD PTR [rip+0xfffffffffffe88f3],0x26        # 0xfffeacbc
  023c9:    	jne    0x33faf
  023cf:    	mov    esi,DWORD PTR [rip+0x327]        # 0x26fc
  023d5:    	cmp    esi,0xffffffff
  023d8:    	je     0x3401d
  023de:    	cmp    WORD PTR [rdi+0x2],0x3
  023e3:    	jne    0x23fc
  023e9:    	cmp    esi,0x6
  023ec:    	jge    0x23fc
  023f2:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  023f7:    	jmp    0x2476
  023fc:    	sub    rsp,0x40
  02400:    	movq   QWORD PTR [rsp],xmm2
  02405:    	movq   QWORD PTR [rsp+0x8],xmm4
  0240b:    	movq   QWORD PTR [rsp+0x10],xmm5
  02411:    	movq   QWORD PTR [rsp+0x18],xmm7
  02417: 20 	movq   QWORD PTR [rsp+0x20],xmm8
  0241e: 28 	movq   QWORD PTR [rsp+0x28],xmm9
  02425: 30 	movq   QWORD PTR [rsp+0x30],xmm10
  0242c: 38 	movq   QWORD PTR [rsp+0x38],xmm11
  02433: 78 	movabs rax,0x557860b3bf40
  0243d:    	call   rax
  0243f:    	movq   xmm2,QWORD PTR [rsp]
  02444:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0244a:    	movq   xmm5,QWORD PTR [rsp+0x10]
  02450:    	movq   xmm7,QWORD PTR [rsp+0x18]
  02456: 20 	movq   xmm8,QWORD PTR [rsp+0x20]
  0245d: 28 	movq   xmm9,QWORD PTR [rsp+0x28]
  02464: 30 	movq   xmm10,QWORD PTR [rsp+0x30]
  0246b: 38 	movq   xmm11,QWORD PTR [rsp+0x38]
  02472:    	add    rsp,0x40
  02476: ff 	mov    QWORD PTR [r14-0x98],rax
:00135 
:00136 condnotbr %13 =>:00142
  0247d: ff 	mov    rax,QWORD PTR [r14-0x98]
  02484:    	or     rax,0x10
  02488:    	cmp    rax,0x14
  0248c:    	je     0x2555
:00137 %13 = dynvar(2, %6)
  02492:    	mov    rax,QWORD PTR [r14-0x18]
  02496:    	mov    rax,QWORD PTR [rax]
  02499:    	mov    rax,QWORD PTR [rax-0x48]
  0249d: ff 	mov    QWORD PTR [r14-0x98],rax
:00138 %14 = literal[1.0]
  024a4: 00 	movq   xmm3,QWORD PTR [rip+0x254]        # 0x2700
  024ac: 00 	movabs rax,0xff80000000000002
  024b6: ff 	mov    QWORD PTR [r14-0xa0],rax
:00139 %13 = %13 + %14                      [Float][Float]
  024bd: ff 	mov    rdi,QWORD PTR [r14-0x98]
  024c4: 00 	test   rdi,0x1
  024cb:    	jne    0x340b4
  024d1: 00 	test   rdi,0x2
  024d8:    	je     0x2514
  024de:    	xorps  xmm6,xmm6
  024e1: 00 	movabs rax,0x8000000000000002
  024eb:    	cmp    rdi,rax
  024ee:    	je     0x2526
  024f4:    	mov    rax,rdi
  024f7:    	sar    rax,0x3f
  024fb:    	add    rax,0x2
  024ff:    	and    rdi,0xfffffffffffffffc
  02503:    	or     rdi,rax
  02506:    	rol    rdi,0x3d
  0250a:    	movq   xmm6,rdi
  0250f:    	jmp    0x2526
  02514:    	call   0xfffe787d
  02519:    	test   rax,rax
  0251c:    	je     0x340b4
  02522:    	movq   xmm6,xmm0
  02526:    	addsd  xmm6,xmm3
:00140 dynvar(2, %6) = %13
  0252a:    	movq   xmm0,xmm6
  0252e:    	call   0xfffe79a1
  02533: ff 	mov    QWORD PTR [r14-0x98],rax
  0253a:    	mov    rax,QWORD PTR [r14-0x18]
  0253e:    	mov    rax,QWORD PTR [rax]
  02541: ff 	mov    rdi,QWORD PTR [r14-0x98]
  02548:    	mov    QWORD PTR [rax-0x48],rdi
:00141 ret %13
  0254c: ff 	mov    rax,QWORD PTR [r14-0x98]
  02553:    	leave  
  02554:    	ret    
:00142 %13 = literal[0.0]
  02555: 00 	movq   xmm3,QWORD PTR [rip+0x1b3]        # 0x2710
  0255d: 00 	movabs rax,0x8000000000000002
  02567: ff 	mov    QWORD PTR [r14-0x98],rax
:00143 ret %13
  0256e: ff 	mov    rax,QWORD PTR [r14-0x98]
  02575:    	leave  
  02576:    	ret    
==> start whole compile: otherBasis FuncId(87) self_class:Scene start:[00000] bytecode:0x557861fbf3a0
<== finished compile. elapsed:148.6µs
offset:Pos(110360) code: 6462 bytes  data: 310 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007:    	sub    rsp,0x70
  0000b:    	cmp    edx,0x2
  0000e:    	jne    0x31a0a
  00014: 00 	mov    rax,0x4
  0001b:    	mov    QWORD PTR [r14-0x48],rax
  0001f:    	mov    QWORD PTR [r14-0x50],rax
  00023:    	mov    QWORD PTR [r14-0x58],rax
  00027:    	mov    QWORD PTR [r14-0x60],rax
  0002b:    	mov    QWORD PTR [r14-0x68],rax
  0002f:    	mov    rdi,QWORD PTR [r14-0x30]
  00033: 00 	test   rdi,0x7
  0003a:    	jne    0x31a19
  00040:    	cmp    DWORD PTR [rdi+0x4],0x35
  00044:    	jne    0x31a19
:00000 init_method reg:8 arg:2 pos:2 req:2 block:0 stack_offset:7
:00001 %3 = 2: i32
  0004a: 00 	mov    QWORD PTR [r14-0x48],0x5
:00002 %4 = const[Vec]                      [Vec]
  00052: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe855f]        # 0xfffe85b8
  00059: 00 	cmp    rax,QWORD PTR [rip+0x18f8]        # 0x1958
  00060:    	jne    0x31a28
  00066: 00 	mov    rax,QWORD PTR [rip+0x18db]        # 0x1948
  0006d:    	mov    QWORD PTR [r14-0x50],rax
:00003 %5 = %2.call x()                     [Vec]
  00071:    	mov    rdi,QWORD PTR [r14-0x40]
  00075: 00 	test   rdi,0x7
  0007c:    	jne    0x31a6e
  00082:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00086:    	jne    0x31a6e
  0008c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8511],0x26        # 0xfffe85a4
  00093:    	jne    0x31a6e
  00099:    	mov    esi,DWORD PTR [rip+0x18c5]        # 0x1964
  0009f:    	cmp    esi,0xffffffff
  000a2:    	je     0x31a7d
  000a8:    	cmp    WORD PTR [rdi+0x2],0x3
  000ad:    	jne    0xc6
  000b3:    	cmp    esi,0x6
  000b6:    	jge    0xc6
  000bc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000c1:    	jmp    0xd2
  000c6: 78 	movabs rax,0x557860b3bf40
  000d0:    	call   rax
  000d2:    	mov    QWORD PTR [r14-0x58],rax
:00004 
:00005 %6 = %2.call y()                     [Vec]
  000d6:    	mov    rdi,QWORD PTR [r14-0x40]
  000da: 00 	test   rdi,0x7
  000e1:    	jne    0x31aa6
  000e7:    	cmp    DWORD PTR [rdi+0x4],0x2b
  000eb:    	jne    0x31aa6
  000f1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe84ac],0x26        # 0xfffe85a4
  000f8:    	jne    0x31aa6
  000fe:    	mov    esi,DWORD PTR [rip+0x1868]        # 0x196c
  00104:    	cmp    esi,0xffffffff
  00107:    	je     0x31ab5
  0010d:    	cmp    WORD PTR [rdi+0x2],0x3
  00112:    	jne    0x12b
  00118:    	cmp    esi,0x6
  0011b:    	jge    0x12b
  00121:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00126:    	jmp    0x137
  0012b: 78 	movabs rax,0x557860b3bf40
  00135:    	call   rax
  00137:    	mov    QWORD PTR [r14-0x60],rax
:00006 
:00007 %7 = %2.call z()                     [Vec]
  0013b:    	mov    rdi,QWORD PTR [r14-0x40]
  0013f: 00 	test   rdi,0x7
  00146:    	jne    0x31ade
  0014c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00150:    	jne    0x31ade
  00156: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8447],0x26        # 0xfffe85a4
  0015d:    	jne    0x31ade
  00163:    	mov    esi,DWORD PTR [rip+0x180b]        # 0x1974
  00169:    	cmp    esi,0xffffffff
  0016c:    	je     0x31aed
  00172:    	cmp    WORD PTR [rdi+0x2],0x3
  00177:    	jne    0x190
  0017d:    	cmp    esi,0x6
  00180:    	jge    0x190
  00186:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0018b:    	jmp    0x19c
  00190: 78 	movabs rax,0x557860b3bf40
  0019a:    	call   rax
  0019c:    	mov    QWORD PTR [r14-0x68],rax
:00008 
:00009 %4 = %4.call new(%5; 3)              [#<Class:Vec>]
  001a0:    	mov    rdi,QWORD PTR [r14-0x50]
  001a4: 00 	test   rdi,0x7
  001ab:    	jne    0x31b16
  001b1:    	cmp    DWORD PTR [rdi+0x4],0x2c
  001b5:    	jne    0x31b16
  001bb: 26 	cmp    DWORD PTR [rip+0xfffffffffffe83e2],0x26        # 0xfffe85a4
  001c2:    	jne    0x31b16
  001c8: 00 	mov    r9,0x0
  001cf:    	mov    rdx,rdi
  001d2:    	mov    QWORD PTR [rsp-0x40],rcx
  001d7: 00 	mov    QWORD PTR [rsp-0x28],0x0
  001e0:    	lea    rcx,[r14-0x58]
  001e4: 00 	mov    r8,0x3
  001eb:    	mov    rsi,QWORD PTR [rbx]
  001ee:    	mov    QWORD PTR [rsp-0x18],rsi
  001f3:    	lea    rsi,[rsp-0x18]
  001f8:    	mov    QWORD PTR [rbx],rsi
  001fb:    	lea    r14,[rsp-0x10]
  00200:    	mov    QWORD PTR [rsp-0x20],r14
  00205:    	call   0x31b25
  0020a:    	lea    r14,[rbp-0x8]
  0020e:    	mov    QWORD PTR [rbx],r14
  00211:    	mov    r14,QWORD PTR [rbp-0x10]
  00215: 78 	movabs r13,0x557861fbf450
  0021f:    	test   rax,rax
  00222:    	je     0xfffe510c
  00228:    	mov    QWORD PTR [r14-0x50],rax
:00010 
:00011 %1:.[%3:] = %4
  0022c:    	mov    rdi,QWORD PTR [r14-0x38]
  00230:    	mov    rsi,QWORD PTR [r14-0x48]
  00234: 00 	test   rdi,0x7
  0023b:    	jne    0x31b57
  00241:    	cmp    DWORD PTR [rdi+0x4],0xb
  00245:    	jne    0x31b57
  0024b: 00 	test   rsi,0x1
  00252:    	je     0x31b57
  00258:    	sar    rsi,1
  0025b:    	mov    rdx,r12
  0025e:    	mov    rcx,QWORD PTR [r14-0x50]
  00262: 78 	movabs rax,0x557860b06200
  0026c:    	call   rax
  0026e: 78 	movabs r13,0x557861fbf460
  00278:    	test   rax,rax
  0027b:    	je     0xfffe510c
:00012 %3 = 1: i32
  00281: 00 	mov    QWORD PTR [r14-0x48],0x3
:00013 %4 = const[Vec]                      [Vec]
  00289: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe8328]        # 0xfffe85b8
  00290: 00 	cmp    rax,QWORD PTR [rip+0x16f1]        # 0x1988
  00297:    	jne    0x31b66
  0029d: 00 	mov    rax,QWORD PTR [rip+0x16d4]        # 0x1978
  002a4:    	mov    QWORD PTR [r14-0x50],rax
:00014 %5 = literal[0.0]
  002a8: 00 	movq   xmm2,QWORD PTR [rip+0x16e8]        # 0x1998
  002b0: 00 	movabs rax,0x8000000000000002
  002ba:    	mov    QWORD PTR [r14-0x58],rax
:00015 %6 = literal[0.0]
  002be: 00 	movq   xmm3,QWORD PTR [rip+0x16e2]        # 0x19a8
  002c6: 00 	movabs rax,0x8000000000000002
  002d0:    	mov    QWORD PTR [r14-0x60],rax
:00016 %7 = literal[0.0]
  002d4: 00 	movq   xmm4,QWORD PTR [rip+0x16dc]        # 0x19b8
  002dc: 00 	movabs rax,0x8000000000000002
  002e6:    	mov    QWORD PTR [r14-0x68],rax
:00017 %4 = %4.call new(%5; 3)              [#<Class:Vec>]
  002ea:    	mov    rdi,QWORD PTR [r14-0x50]
  002ee: 00 	test   rdi,0x7
  002f5:    	jne    0x31bac
  002fb:    	cmp    DWORD PTR [rdi+0x4],0x2c
  002ff:    	jne    0x31bac
  00305: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8298],0x26        # 0xfffe85a4
  0030c:    	jne    0x31bac
  00312: 00 	mov    r9,0x0
  00319:    	sub    rsp,0x20
  0031d:    	movq   QWORD PTR [rsp],xmm2
  00322:    	movq   QWORD PTR [rsp+0x8],xmm3
  00328:    	movq   QWORD PTR [rsp+0x10],xmm4
  0032e:    	mov    rdx,rdi
  00331:    	mov    QWORD PTR [rsp-0x40],rcx
  00336: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0033f:    	lea    rcx,[r14-0x58]
  00343: 00 	mov    r8,0x3
  0034a:    	mov    rsi,QWORD PTR [rbx]
  0034d:    	mov    QWORD PTR [rsp-0x18],rsi
  00352:    	lea    rsi,[rsp-0x18]
  00357:    	mov    QWORD PTR [rbx],rsi
  0035a:    	lea    r14,[rsp-0x10]
  0035f:    	mov    QWORD PTR [rsp-0x20],r14
  00364:    	call   0x31bbb
  00369:    	lea    r14,[rbp-0x8]
  0036d:    	mov    QWORD PTR [rbx],r14
  00370:    	mov    r14,QWORD PTR [rbp-0x10]
  00374:    	movq   xmm2,QWORD PTR [rsp]
  00379:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0037f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00385:    	add    rsp,0x20
  00389: 78 	movabs r13,0x557861fbf4d0
  00393:    	test   rax,rax
  00396:    	je     0xfffe510c
  0039c:    	mov    QWORD PTR [r14-0x50],rax
:00018 
:00019 %1:.[%3:] = %4
  003a0:    	mov    rdi,QWORD PTR [r14-0x38]
  003a4:    	mov    rsi,QWORD PTR [r14-0x48]
  003a8: 00 	test   rdi,0x7
  003af:    	jne    0x31bed
  003b5:    	cmp    DWORD PTR [rdi+0x4],0xb
  003b9:    	jne    0x31bed
  003bf: 00 	test   rsi,0x1
  003c6:    	je     0x31bed
  003cc:    	sar    rsi,1
  003cf:    	sub    rsp,0x20
  003d3:    	movq   QWORD PTR [rsp],xmm2
  003d8:    	movq   QWORD PTR [rsp+0x8],xmm3
  003de:    	movq   QWORD PTR [rsp+0x10],xmm4
  003e4:    	mov    rdx,r12
  003e7:    	mov    rcx,QWORD PTR [r14-0x50]
  003eb: 78 	movabs rax,0x557860b06200
  003f5:    	call   rax
  003f7:    	movq   xmm2,QWORD PTR [rsp]
  003fc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00402:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00408:    	add    rsp,0x20
  0040c: 78 	movabs r13,0x557861fbf4e0
  00416:    	test   rax,rax
  00419:    	je     0xfffe510c
:00020 %3 = %2.call x()                     [Vec]
  0041f:    	mov    rdi,QWORD PTR [r14-0x40]
  00423: 00 	test   rdi,0x7
  0042a:    	jne    0x31bfc
  00430:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00434:    	jne    0x31bfc
  0043a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe8163],0x26        # 0xfffe85a4
  00441:    	jne    0x31bfc
  00447:    	mov    esi,DWORD PTR [rip+0x1577]        # 0x19c4
  0044d:    	cmp    esi,0xffffffff
  00450:    	je     0x31c0b
  00456:    	cmp    WORD PTR [rdi+0x2],0x3
  0045b:    	jne    0x474
  00461:    	cmp    esi,0x6
  00464:    	jge    0x474
  0046a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0046f:    	jmp    0x4aa
  00474:    	sub    rsp,0x20
  00478:    	movq   QWORD PTR [rsp],xmm2
  0047d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00483:    	movq   QWORD PTR [rsp+0x10],xmm4
  00489: 78 	movabs rax,0x557860b3bf40
  00493:    	call   rax
  00495:    	movq   xmm2,QWORD PTR [rsp]
  0049a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  004a0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  004a6:    	add    rsp,0x20
  004aa:    	mov    QWORD PTR [r14-0x48],rax
:00021 
:00022 %4 = literal[0.6]
  004ae: 00 	movq   xmm5,QWORD PTR [rip+0x1512]        # 0x19c8
  004b6: 99 	movabs rax,0xff1999999999999a
  004c0:    	mov    QWORD PTR [r14-0x50],rax
:00023 _%3 = %3 < %4                        [Float][Float]
:00024 condnotbr _%3 =>:00036
  004c4:    	mov    rdi,QWORD PTR [r14-0x48]
  004c8: 00 	test   rdi,0x1
  004cf:    	jne    0x31c5e
  004d5: 00 	test   rdi,0x2
  004dc:    	je     0x518
  004e2:    	xorps  xmm6,xmm6
  004e5: 00 	movabs rax,0x8000000000000002
  004ef:    	cmp    rdi,rax
  004f2:    	je     0x52a
  004f8:    	mov    rax,rdi
  004fb:    	sar    rax,0x3f
  004ff:    	add    rax,0x2
  00503:    	and    rdi,0xfffffffffffffffc
  00507:    	or     rdi,rax
  0050a:    	rol    rdi,0x3d
  0050e:    	movq   xmm6,rdi
  00513:    	jmp    0x52a
  00518:    	call   0xfffe5165
  0051d:    	test   rax,rax
  00520:    	je     0x31c5e
  00526:    	movq   xmm6,xmm0
  0052a:    	ucomisd xmm6,xmm5
  0052e:    	jae    0x31d6e
:00025 %3 = %2.call x()                     [Vec]
  00534:    	mov    rdi,QWORD PTR [r14-0x40]
  00538: 00 	test   rdi,0x7
  0053f:    	jne    0x31c6d
  00545:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00549:    	jne    0x31c6d
  0054f: 26 	cmp    DWORD PTR [rip+0xfffffffffffe804e],0x26        # 0xfffe85a4
  00556:    	jne    0x31c6d
  0055c:    	mov    esi,DWORD PTR [rip+0x1472]        # 0x19d4
  00562:    	cmp    esi,0xffffffff
  00565:    	je     0x31c7c
  0056b:    	cmp    WORD PTR [rdi+0x2],0x3
  00570:    	jne    0x589
  00576:    	cmp    esi,0x6
  00579:    	jge    0x589
  0057f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00584:    	jmp    0x5cb
  00589:    	sub    rsp,0x20
  0058d:    	movq   QWORD PTR [rsp],xmm2
  00592:    	movq   QWORD PTR [rsp+0x8],xmm3
  00598:    	movq   QWORD PTR [rsp+0x10],xmm4
  0059e:    	movq   QWORD PTR [rsp+0x18],xmm5
  005a4: 78 	movabs rax,0x557860b3bf40
  005ae:    	call   rax
  005b0:    	movq   xmm2,QWORD PTR [rsp]
  005b5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005bb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005c1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005c7:    	add    rsp,0x20
  005cb:    	mov    QWORD PTR [r14-0x48],rax
:00026 
:00027 %4 = literal[-0.6]
  005cf: 00 	movq   xmm5,QWORD PTR [rip+0x1401]        # 0x19d8
  005d7: 99 	movabs rax,0xff1999999999999e
  005e1:    	mov    QWORD PTR [r14-0x50],rax
:00028 _%3 = %3 > %4                        [Float][Float]
:00029 condnotbr _%3 =>:00036
  005e5:    	mov    rdi,QWORD PTR [r14-0x48]
  005e9: 00 	test   rdi,0x1
  005f0:    	jne    0x31cdb
  005f6: 00 	test   rdi,0x2
  005fd:    	je     0x639
  00603:    	xorps  xmm6,xmm6
  00606: 00 	movabs rax,0x8000000000000002
  00610:    	cmp    rdi,rax
  00613:    	je     0x64b
  00619:    	mov    rax,rdi
  0061c:    	sar    rax,0x3f
  00620:    	add    rax,0x2
  00624:    	and    rdi,0xfffffffffffffffc
  00628:    	or     rdi,rax
  0062b:    	rol    rdi,0x3d
  0062f:    	movq   xmm6,rdi
  00634:    	jmp    0x64b
  00639:    	call   0xfffe5165
  0063e:    	test   rax,rax
  00641:    	je     0x31cdb
  00647:    	movq   xmm6,xmm0
  0064b:    	ucomisd xmm6,xmm5
  0064f:    	jbe    0x31d87
:00030 %3 = 1: i32
  00655: 00 	mov    QWORD PTR [r14-0x48],0x3
:00031 %3 = %1.[%3]                         [Array][Integer]
  0065d:    	mov    rdi,QWORD PTR [r14-0x38]
  00661:    	mov    rsi,QWORD PTR [r14-0x48]
  00665: 00 	test   rdi,0x7
  0066c:    	jne    0x31cea
  00672:    	cmp    DWORD PTR [rdi+0x4],0xb
  00676:    	jne    0x31cea
  0067c: 00 	test   rsi,0x1
  00683:    	je     0x31cea
  00689:    	sar    rsi,1
  0068c:    	sub    rsp,0x20
  00690:    	movq   QWORD PTR [rsp],xmm2
  00695:    	movq   QWORD PTR [rsp+0x8],xmm3
  0069b:    	movq   QWORD PTR [rsp+0x10],xmm4
  006a1:    	movq   QWORD PTR [rsp+0x18],xmm5
  006a7: 78 	movabs rax,0x557860b06070
  006b1:    	call   rax
  006b3:    	movq   xmm2,QWORD PTR [rsp]
  006b8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006be:    	movq   xmm4,QWORD PTR [rsp+0x10]
  006c4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  006ca:    	add    rsp,0x20
  006ce: 78 	movabs r13,0x557861fbf5a0
  006d8:    	test   rax,rax
  006db:    	je     0xfffe510c
  006e1:    	mov    QWORD PTR [r14-0x48],rax
:00032 %4 = literal[1.0]
  006e5: 00 	movq   xmm5,QWORD PTR [rip+0x12fb]        # 0x19e8
  006ed: 00 	movabs rax,0xff80000000000002
  006f7:    	mov    QWORD PTR [r14-0x50],rax
:00033 _ = %3.call x=(%4; 1)                [Vec]
  006fb:    	mov    rdi,QWORD PTR [r14-0x48]
  006ff: 00 	test   rdi,0x7
  00706:    	jne    0x31cf9
  0070c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00710:    	jne    0x31cf9
  00716: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7e87],0x26        # 0xfffe85a4
  0071d:    	jne    0x31cf9
  00723:    	mov    esi,DWORD PTR [rip+0x12cb]        # 0x19f4
  00729:    	cmp    esi,0xffffffff
  0072c:    	je     0x31d08
  00732:    	cmp    WORD PTR [rdi+0x2],0x3
  00737:    	jne    0x754
  0073d:    	cmp    esi,0x6
  00740:    	jge    0x754
  00746:    	mov    rax,QWORD PTR [r14-0x50]
  0074a:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0074f:    	jmp    0x7ad
  00754:    	sub    rsp,0x20
  00758:    	movq   QWORD PTR [rsp],xmm2
  0075d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00763:    	movq   QWORD PTR [rsp+0x10],xmm4
  00769:    	movq   QWORD PTR [rsp+0x18],xmm5
  0076f:    	mov    rdx,QWORD PTR [r14-0x50]
  00773: 78 	movabs rax,0x557860b3c1c0
  0077d:    	call   rax
  0077f:    	movq   xmm2,QWORD PTR [rsp]
  00784:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0078a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00790:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00796:    	add    rsp,0x20
  0079a: 78 	movabs r13,0x557861fbf5d0
  007a4:    	test   rax,rax
  007a7:    	je     0xfffe510c
:00034 
:00035 br =>:00073
  007ad:    	jmp    0x3219a
:00036 %3 = %2.call y()                     [Vec]
  007b2:    	mov    rdi,QWORD PTR [r14-0x40]
  007b6: 00 	test   rdi,0x7
  007bd:    	jne    0x31da0
  007c3:    	cmp    DWORD PTR [rdi+0x4],0x2b
  007c7:    	jne    0x31da0
  007cd: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7dd0],0x26        # 0xfffe85a4
  007d4:    	jne    0x31da0
  007da:    	mov    esi,DWORD PTR [rip+0x121c]        # 0x19fc
  007e0:    	cmp    esi,0xffffffff
  007e3:    	je     0x31daf
  007e9:    	cmp    WORD PTR [rdi+0x2],0x3
  007ee:    	jne    0x807
  007f4:    	cmp    esi,0x6
  007f7:    	jge    0x807
  007fd:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00802:    	jmp    0x849
  00807:    	sub    rsp,0x20
  0080b:    	movq   QWORD PTR [rsp],xmm2
  00810:    	movq   QWORD PTR [rsp+0x8],xmm3
  00816:    	movq   QWORD PTR [rsp+0x10],xmm4
  0081c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00822: 78 	movabs rax,0x557860b3bf40
  0082c:    	call   rax
  0082e:    	movq   xmm2,QWORD PTR [rsp]
  00833:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00839:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0083f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00845:    	add    rsp,0x20
  00849:    	mov    QWORD PTR [r14-0x48],rax
:00037 
:00038 %4 = literal[0.6]
  0084d: 00 	movq   xmm5,QWORD PTR [rip+0x11b3]        # 0x1a08
  00855: 99 	movabs rax,0xff1999999999999a
  0085f:    	mov    QWORD PTR [r14-0x50],rax
:00039 _%3 = %3 < %4                        [Float][Float]
:00040 condnotbr _%3 =>:00052
  00863:    	mov    rdi,QWORD PTR [r14-0x48]
  00867: 00 	test   rdi,0x1
  0086e:    	jne    0x31e0e
  00874: 00 	test   rdi,0x2
  0087b:    	je     0x8b7
  00881:    	xorps  xmm6,xmm6
  00884: 00 	movabs rax,0x8000000000000002
  0088e:    	cmp    rdi,rax
  00891:    	je     0x8c9
  00897:    	mov    rax,rdi
  0089a:    	sar    rax,0x3f
  0089e:    	add    rax,0x2
  008a2:    	and    rdi,0xfffffffffffffffc
  008a6:    	or     rdi,rax
  008a9:    	rol    rdi,0x3d
  008ad:    	movq   xmm6,rdi
  008b2:    	jmp    0x8c9
  008b7:    	call   0xfffe5165
  008bc:    	test   rax,rax
  008bf:    	je     0x31e0e
  008c5:    	movq   xmm6,xmm0
  008c9:    	ucomisd xmm6,xmm5
  008cd:    	jae    0x31f3d
:00041 %3 = %2.call y()                     [<INVALID>]
  008d3: 00 	cmp    DWORD PTR [rip+0x1136],0x0        # 0x1a10
  008da:    	jl     0x31e1d
  008e0:    	je     0x31e2c
  008e6: 01 	sub    DWORD PTR [rip+0x1123],0x1        # 0x1a10
  008ed:    	xor    rdi,rdi
  008f0:    	jmp    0x31e1d
  008f5:    	sub    rsp,0x20
  008f9:    	movq   QWORD PTR [rsp],xmm2
  008fe:    	movq   QWORD PTR [rsp+0x8],xmm3
  00904:    	movq   QWORD PTR [rsp+0x10],xmm4
  0090a:    	movq   QWORD PTR [rsp+0x18],xmm5
  00910:    	mov    rdi,QWORD PTR [r14-0x40]
  00914: 78 	movabs rax,0x557860aa2e20
  0091e:    	call   rax
  00920:    	mov    r15d,eax
  00923: 78 	movabs r13,0x557861fbf640
  0092d:    	cmp    QWORD PTR [r13+0x8],0x0
  00932:    	je     0x31e48
  00938:    	cmp    r15d,DWORD PTR [r13-0x8]
  0093c:    	jne    0x31e48
  00942:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7c5c]        # 0xfffe85a4
  00948:    	cmp    DWORD PTR [r13-0x4],eax
  0094c:    	jne    0x31e48
  00952: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0095b:    	mov    rax,QWORD PTR [r14-0x40]
  0095f:    	mov    QWORD PTR [rsp-0x40],rax
  00964: 00 	mov    rdi,0x0
  0096b: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00974:    	mov    r13,QWORD PTR [r13+0x8]
  00978:    	mov    rax,QWORD PTR [r13+0x8]
  0097c:    	mov    QWORD PTR [rsp-0x30],rax
  00981:    	mov    rax,QWORD PTR [r13+0x0]
  00985:    	mov    r13,QWORD PTR [r13+0x10]
  00989:    	mov    rsi,QWORD PTR [rbx]
  0098c:    	mov    QWORD PTR [rsp-0x18],rsi
  00991:    	lea    rsi,[rsp-0x18]
  00996:    	mov    QWORD PTR [rbx],rsi
  00999:    	lea    r14,[rsp-0x10]
  0099e:    	mov    QWORD PTR [rsp-0x20],r14
  009a3:    	call   rax
  009a5:    	lea    r14,[rbp-0x8]
  009a9:    	mov    QWORD PTR [rbx],r14
  009ac:    	mov    r14,QWORD PTR [rbp-0x10]
  009b0:    	movq   xmm2,QWORD PTR [rsp]
  009b5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  009bb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  009c1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  009c7:    	add    rsp,0x20
  009cb:    	test   rax,rax
  009ce:    	je     0x31e89
  009d4:    	mov    QWORD PTR [r14-0x48],rax
:00042 
:00043 %4 = literal[-0.6]
  009d8: 00 	movq   xmm5,QWORD PTR [rip+0x1038]        # 0x1a18
  009e0: 99 	movabs rax,0xff1999999999999e
  009ea:    	mov    QWORD PTR [r14-0x50],rax
:00044 _%3 = %3 > %4                        [<INVALID>][<INVALID>]
:00045 condnotbr _%3 =>:00052
  009ee:    	mov    rdi,QWORD PTR [r14-0x48]
  009f2:    	mov    rsi,QWORD PTR [r14-0x50]
  009f6: 00 	test   rdi,0x1
  009fd:    	je     0x31e98
  00a03: 00 	test   rsi,0x1
  00a0a:    	je     0x31e98
  00a10:    	cmp    rdi,rsi
  00a13:    	jle    0x31f56
:00046 %3 = 1: i32
  00a19: 00 	mov    QWORD PTR [r14-0x48],0x3
:00047 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00a21:    	sub    rsp,0x20
  00a25:    	movq   QWORD PTR [rsp],xmm2
  00a2a:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a30:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a36:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a3c:    	mov    rdi,rbx
  00a3f:    	mov    rsi,r12
  00a42:    	mov    rdx,QWORD PTR [r14-0x38]
  00a46:    	mov    rcx,QWORD PTR [r14-0x48]
  00a4a: 78 	movabs r8,0x557861fbf698
  00a54: 78 	movabs rax,0x557860b05f40
  00a5e:    	call   rax
  00a60:    	movq   xmm2,QWORD PTR [rsp]
  00a65:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00a6b:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a71:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a77:    	add    rsp,0x20
  00a7b: 78 	movabs r13,0x557861fbf6a0
  00a85:    	test   rax,rax
  00a88:    	je     0xfffe510c
  00a8e:    	mov    QWORD PTR [r14-0x48],rax
:00048 %4 = literal[1.0]
  00a92: 00 	movq   xmm5,QWORD PTR [rip+0xf8e]        # 0x1a28
  00a9a: 00 	movabs rax,0xff80000000000002
  00aa4:    	mov    QWORD PTR [r14-0x50],rax
:00049 _ = %3.call y=(%4; 1)                [<INVALID>]
  00aa8:    	sub    rsp,0x20
  00aac:    	movq   QWORD PTR [rsp],xmm2
  00ab1:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ab7:    	movq   QWORD PTR [rsp+0x10],xmm4
  00abd:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ac3:    	mov    rdi,QWORD PTR [r14-0x48]
  00ac7: 78 	movabs rax,0x557860aa2e20
  00ad1:    	call   rax
  00ad3:    	mov    r15d,eax
  00ad6: 78 	movabs r13,0x557861fbf6c0
  00ae0:    	cmp    QWORD PTR [r13+0x8],0x0
  00ae5:    	je     0x31eed
  00aeb:    	cmp    r15d,DWORD PTR [r13-0x8]
  00aef:    	jne    0x31eed
  00af5:    	mov    eax,DWORD PTR [rip+0xfffffffffffe7aa9]        # 0xfffe85a4
  00afb:    	cmp    DWORD PTR [r13-0x4],eax
  00aff:    	jne    0x31eed
  00b05: 00 	mov    QWORD PTR [rsp-0x28],0x0
  00b0e:    	mov    rax,QWORD PTR [r14-0x48]
  00b12:    	mov    QWORD PTR [rsp-0x40],rax
  00b17: 00 	mov    rdi,0x1
  00b1e:    	mov    rax,QWORD PTR [r14-0x50]
  00b22:    	mov    QWORD PTR [rsp-0x48],rax
  00b27: 00 	mov    QWORD PTR [rsp-0x38],0x0
  00b30:    	mov    r13,QWORD PTR [r13+0x8]
  00b34:    	mov    rax,QWORD PTR [r13+0x8]
  00b38:    	mov    QWORD PTR [rsp-0x30],rax
  00b3d:    	mov    rax,QWORD PTR [r13+0x0]
  00b41:    	mov    r13,QWORD PTR [r13+0x10]
  00b45:    	mov    rsi,QWORD PTR [rbx]
  00b48:    	mov    QWORD PTR [rsp-0x18],rsi
  00b4d:    	lea    rsi,[rsp-0x18]
  00b52:    	mov    QWORD PTR [rbx],rsi
  00b55:    	lea    r14,[rsp-0x10]
  00b5a:    	mov    QWORD PTR [rsp-0x20],r14
  00b5f:    	call   rax
  00b61:    	lea    r14,[rbp-0x8]
  00b65:    	mov    QWORD PTR [rbx],r14
  00b68:    	mov    r14,QWORD PTR [rbp-0x10]
  00b6c:    	movq   xmm2,QWORD PTR [rsp]
  00b71:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b77:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b7d:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b83:    	add    rsp,0x20
  00b87:    	test   rax,rax
  00b8a:    	je     0x31f2e
:00050 
:00051 br =>:00073
  00b90:    	jmp    0x321b3
:00052 %3 = %2.call z()                     [Vec]
  00b95:    	mov    rdi,QWORD PTR [r14-0x40]
  00b99: 00 	test   rdi,0x7
  00ba0:    	jne    0x31f6f
  00ba6:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00baa:    	jne    0x31f6f
  00bb0: 26 	cmp    DWORD PTR [rip+0xfffffffffffe79ed],0x26        # 0xfffe85a4
  00bb7:    	jne    0x31f6f
  00bbd:    	mov    esi,DWORD PTR [rip+0xe71]        # 0x1a34
  00bc3:    	cmp    esi,0xffffffff
  00bc6:    	je     0x31f7e
  00bcc:    	cmp    WORD PTR [rdi+0x2],0x3
  00bd1:    	jne    0xbea
  00bd7:    	cmp    esi,0x6
  00bda:    	jge    0xbea
  00be0:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00be5:    	jmp    0xc2c
  00bea:    	sub    rsp,0x20
  00bee:    	movq   QWORD PTR [rsp],xmm2
  00bf3:    	movq   QWORD PTR [rsp+0x8],xmm3
  00bf9:    	movq   QWORD PTR [rsp+0x10],xmm4
  00bff:    	movq   QWORD PTR [rsp+0x18],xmm5
  00c05: 78 	movabs rax,0x557860b3bf40
  00c0f:    	call   rax
  00c11:    	movq   xmm2,QWORD PTR [rsp]
  00c16:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00c1c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00c22:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00c28:    	add    rsp,0x20
  00c2c:    	mov    QWORD PTR [r14-0x48],rax
:00053 
:00054 %4 = literal[0.6]
  00c30: 00 	movq   xmm5,QWORD PTR [rip+0xe00]        # 0x1a38
  00c38: 99 	movabs rax,0xff1999999999999a
  00c42:    	mov    QWORD PTR [r14-0x50],rax
:00055 _%3 = %3 < %4                        [Float][Float]
:00056 condnotbr _%3 =>:00068
  00c46:    	mov    rdi,QWORD PTR [r14-0x48]
  00c4a: 00 	test   rdi,0x1
  00c51:    	jne    0x31fdd
  00c57: 00 	test   rdi,0x2
  00c5e:    	je     0xc9a
  00c64:    	xorps  xmm6,xmm6
  00c67: 00 	movabs rax,0x8000000000000002
  00c71:    	cmp    rdi,rax
  00c74:    	je     0xcac
  00c7a:    	mov    rax,rdi
  00c7d:    	sar    rax,0x3f
  00c81:    	add    rax,0x2
  00c85:    	and    rdi,0xfffffffffffffffc
  00c89:    	or     rdi,rax
  00c8c:    	rol    rdi,0x3d
  00c90:    	movq   xmm6,rdi
  00c95:    	jmp    0xcac
  00c9a:    	call   0xfffe5165
  00c9f:    	test   rax,rax
  00ca2:    	je     0x31fdd
  00ca8:    	movq   xmm6,xmm0
  00cac:    	ucomisd xmm6,xmm5
  00cb0:    	jae    0x320ed
:00057 %3 = %2.call z()                     [Vec]
  00cb6:    	mov    rdi,QWORD PTR [r14-0x40]
  00cba: 00 	test   rdi,0x7
  00cc1:    	jne    0x31fec
  00cc7:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00ccb:    	jne    0x31fec
  00cd1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe78cc],0x26        # 0xfffe85a4
  00cd8:    	jne    0x31fec
  00cde:    	mov    esi,DWORD PTR [rip+0xd60]        # 0x1a44
  00ce4:    	cmp    esi,0xffffffff
  00ce7:    	je     0x31ffb
  00ced:    	cmp    WORD PTR [rdi+0x2],0x3
  00cf2:    	jne    0xd0b
  00cf8:    	cmp    esi,0x6
  00cfb:    	jge    0xd0b
  00d01:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00d06:    	jmp    0xd4d
  00d0b:    	sub    rsp,0x20
  00d0f:    	movq   QWORD PTR [rsp],xmm2
  00d14:    	movq   QWORD PTR [rsp+0x8],xmm3
  00d1a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00d20:    	movq   QWORD PTR [rsp+0x18],xmm5
  00d26: 78 	movabs rax,0x557860b3bf40
  00d30:    	call   rax
  00d32:    	movq   xmm2,QWORD PTR [rsp]
  00d37:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00d3d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00d43:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d49:    	add    rsp,0x20
  00d4d:    	mov    QWORD PTR [r14-0x48],rax
:00058 
:00059 %4 = literal[-0.6]
  00d51: 00 	movq   xmm5,QWORD PTR [rip+0xcef]        # 0x1a48
  00d59: 99 	movabs rax,0xff1999999999999e
  00d63:    	mov    QWORD PTR [r14-0x50],rax
:00060 _%3 = %3 > %4                        [Float][Float]
:00061 condnotbr _%3 =>:00068
  00d67:    	mov    rdi,QWORD PTR [r14-0x48]
  00d6b: 00 	test   rdi,0x1
  00d72:    	jne    0x3205a
  00d78: 00 	test   rdi,0x2
  00d7f:    	je     0xdbb
  00d85:    	xorps  xmm6,xmm6
  00d88: 00 	movabs rax,0x8000000000000002
  00d92:    	cmp    rdi,rax
  00d95:    	je     0xdcd
  00d9b:    	mov    rax,rdi
  00d9e:    	sar    rax,0x3f
  00da2:    	add    rax,0x2
  00da6:    	and    rdi,0xfffffffffffffffc
  00daa:    	or     rdi,rax
  00dad:    	rol    rdi,0x3d
  00db1:    	movq   xmm6,rdi
  00db6:    	jmp    0xdcd
  00dbb:    	call   0xfffe5165
  00dc0:    	test   rax,rax
  00dc3:    	je     0x3205a
  00dc9:    	movq   xmm6,xmm0
  00dcd:    	ucomisd xmm6,xmm5
  00dd1:    	jbe    0x32106
:00062 %3 = 1: i32
  00dd7: 00 	mov    QWORD PTR [r14-0x48],0x3
:00063 %3 = %1.[%3]                         [Array][Integer]
  00ddf:    	mov    rdi,QWORD PTR [r14-0x38]
  00de3:    	mov    rsi,QWORD PTR [r14-0x48]
  00de7: 00 	test   rdi,0x7
  00dee:    	jne    0x32069
  00df4:    	cmp    DWORD PTR [rdi+0x4],0xb
  00df8:    	jne    0x32069
  00dfe: 00 	test   rsi,0x1
  00e05:    	je     0x32069
  00e0b:    	sar    rsi,1
  00e0e:    	sub    rsp,0x20
  00e12:    	movq   QWORD PTR [rsp],xmm2
  00e17:    	movq   QWORD PTR [rsp+0x8],xmm3
  00e1d:    	movq   QWORD PTR [rsp+0x10],xmm4
  00e23:    	movq   QWORD PTR [rsp+0x18],xmm5
  00e29: 78 	movabs rax,0x557860b06070
  00e33:    	call   rax
  00e35:    	movq   xmm2,QWORD PTR [rsp]
  00e3a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00e40:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e46:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e4c:    	add    rsp,0x20
  00e50: 78 	movabs r13,0x557861fbf7a0
  00e5a:    	test   rax,rax
  00e5d:    	je     0xfffe510c
  00e63:    	mov    QWORD PTR [r14-0x48],rax
:00064 %4 = literal[1.0]
  00e67: 00 	movq   xmm5,QWORD PTR [rip+0xbe9]        # 0x1a58
  00e6f: 00 	movabs rax,0xff80000000000002
  00e79:    	mov    QWORD PTR [r14-0x50],rax
:00065 _ = %3.call z=(%4; 1)                [Vec]
  00e7d:    	mov    rdi,QWORD PTR [r14-0x48]
  00e81: 00 	test   rdi,0x7
  00e88:    	jne    0x32078
  00e8e:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00e92:    	jne    0x32078
  00e98: 26 	cmp    DWORD PTR [rip+0xfffffffffffe7705],0x26        # 0xfffe85a4
  00e9f:    	jne    0x32078
  00ea5:    	mov    esi,DWORD PTR [rip+0xbb9]        # 0x1a64
  00eab:    	cmp    esi,0xffffffff
  00eae:    	je     0x32087
  00eb4:    	cmp    WORD PTR [rdi+0x2],0x3
  00eb9:    	jne    0xed6
  00ebf:    	cmp    esi,0x6
  00ec2:    	jge    0xed6
  00ec8:    	mov    rax,QWORD PTR [r14-0x50]
  00ecc:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00ed1:    	jmp    0xf2f
  00ed6:    	sub    rsp,0x20
  00eda:    	movq   QWORD PTR [rsp],xmm2
  00edf:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ee5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00eeb:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ef1:    	mov    rdx,QWORD PTR [r14-0x50]
  00ef5: 78 	movabs rax,0x557860b3c1c0
  00eff:    	call   rax
  00f01:    	movq   xmm2,QWORD PTR [rsp]
  00f06:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f0c:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f12:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f18:    	add    rsp,0x20
  00f1c: 78 	movabs r13,0x557861fbf7d0
  00f26:    	test   rax,rax
  00f29:    	je     0xfffe510c
:00066 
:00067 br =>:00073
  00f2f:    	jmp    0x321cc
:00068 %3 = 1: i32
  00f34: 00 	mov    QWORD PTR [r14-0x48],0x3
:00069 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00f3c:    	sub    rsp,0x20
  00f40:    	movq   QWORD PTR [rsp],xmm2
  00f45:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f4b:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f51:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f57:    	mov    rdi,rbx
  00f5a:    	mov    rsi,r12
  00f5d:    	mov    rdx,QWORD PTR [r14-0x38]
  00f61:    	mov    rcx,QWORD PTR [r14-0x48]
  00f65: 78 	movabs r8,0x557861fbf7f8
  00f6f: 78 	movabs rax,0x557860b05f40
  00f79:    	call   rax
  00f7b:    	movq   xmm2,QWORD PTR [rsp]
  00f80:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f86:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f8c:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f92:    	add    rsp,0x20
  00f96: 78 	movabs r13,0x557861fbf800
  00fa0:    	test   rax,rax
  00fa3:    	je     0xfffe510c
  00fa9:    	mov    QWORD PTR [r14-0x48],rax
:00070 %4 = literal[1.0]
  00fad: 00 	movq   xmm5,QWORD PTR [rip+0xab3]        # 0x1a68
  00fb5: 00 	movabs rax,0xff80000000000002
  00fbf:    	mov    QWORD PTR [r14-0x50],rax
:00071 _ = %3.call x=(%4; 1)                [<INVALID>]
  00fc3: 00 	cmp    DWORD PTR [rip+0xaa6],0x0        # 0x1a70
  00fca:    	jl     0x3211f
  00fd0:    	je     0x3212e
  00fd6: 01 	sub    DWORD PTR [rip+0xa93],0x1        # 0x1a70
  00fdd:    	xor    rdi,rdi
  00fe0:    	jmp    0x3211f
  00fe5:    	sub    rsp,0x20
  00fe9:    	movq   QWORD PTR [rsp],xmm2
  00fee:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ff4:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ffa:    	movq   QWORD PTR [rsp+0x18],xmm5
  01000:    	mov    rdi,QWORD PTR [r14-0x48]
  01004: 78 	movabs rax,0x557860aa2e20
  0100e:    	call   rax
  01010:    	mov    r15d,eax
  01013: 78 	movabs r13,0x557861fbf820
  0101d:    	cmp    QWORD PTR [r13+0x8],0x0
  01022:    	je     0x3214a
  01028:    	cmp    r15d,DWORD PTR [r13-0x8]
  0102c:    	jne    0x3214a
  01032:    	mov    eax,DWORD PTR [rip+0xfffffffffffe756c]        # 0xfffe85a4
  01038:    	cmp    DWORD PTR [r13-0x4],eax
  0103c:    	jne    0x3214a
  01042: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0104b:    	mov    rax,QWORD PTR [r14-0x48]
  0104f:    	mov    QWORD PTR [rsp-0x40],rax
  01054: 00 	mov    rdi,0x1
  0105b:    	mov    rax,QWORD PTR [r14-0x50]
  0105f:    	mov    QWORD PTR [rsp-0x48],rax
  01064: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0106d:    	mov    r13,QWORD PTR [r13+0x8]
  01071:    	mov    rax,QWORD PTR [r13+0x8]
  01075:    	mov    QWORD PTR [rsp-0x30],rax
  0107a:    	mov    rax,QWORD PTR [r13+0x0]
  0107e:    	mov    r13,QWORD PTR [r13+0x10]
  01082:    	mov    rsi,QWORD PTR [rbx]
  01085:    	mov    QWORD PTR [rsp-0x18],rsi
  0108a:    	lea    rsi,[rsp-0x18]
  0108f:    	mov    QWORD PTR [rbx],rsi
  01092:    	lea    r14,[rsp-0x10]
  01097:    	mov    QWORD PTR [rsp-0x20],r14
  0109c:    	call   rax
  0109e:    	lea    r14,[rbp-0x8]
  010a2:    	mov    QWORD PTR [rbx],r14
  010a5:    	mov    r14,QWORD PTR [rbp-0x10]
  010a9:    	movq   xmm2,QWORD PTR [rsp]
  010ae:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010b4:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010ba:    	movq   xmm5,QWORD PTR [rsp+0x18]
  010c0:    	add    rsp,0x20
  010c4:    	test   rax,rax
  010c7:    	je     0x3218b
:00072 
  010cd:    	jmp    0x321e5
:00073 %3 = 0: i32
  010d2: 00 	mov    QWORD PTR [r14-0x48],0x1
:00074 %4 = 1: i32
  010da: 00 	mov    QWORD PTR [r14-0x50],0x3
:00075 %4 = %1.[%4]                         [Array][Integer]
  010e2:    	mov    rdi,QWORD PTR [r14-0x38]
  010e6:    	mov    rsi,QWORD PTR [r14-0x50]
  010ea: 00 	test   rdi,0x7
  010f1:    	jne    0x321fe
  010f7:    	cmp    DWORD PTR [rdi+0x4],0xb
  010fb:    	jne    0x321fe
  01101: 00 	test   rsi,0x1
  01108:    	je     0x321fe
  0110e:    	sar    rsi,1
  01111:    	sub    rsp,0x20
  01115:    	movq   QWORD PTR [rsp],xmm2
  0111a:    	movq   QWORD PTR [rsp+0x8],xmm3
  01120:    	movq   QWORD PTR [rsp+0x10],xmm4
  01126: 78 	movabs rax,0x557860b06070
  01130:    	call   rax
  01132:    	movq   xmm2,QWORD PTR [rsp]
  01137:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0113d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01143:    	add    rsp,0x20
  01147: 78 	movabs r13,0x557861fbf860
  01151:    	test   rax,rax
  01154:    	je     0xfffe510c
  0115a:    	mov    QWORD PTR [r14-0x50],rax
:00076 %5 = 2: i32
  0115e: 00 	mov    QWORD PTR [r14-0x58],0x5
:00077 %5 = %1.[%5]                         [Array][Integer]
  01166:    	mov    rdi,QWORD PTR [r14-0x38]
  0116a:    	mov    rsi,QWORD PTR [r14-0x58]
  0116e: 00 	test   rdi,0x7
  01175:    	jne    0x3220d
  0117b:    	cmp    DWORD PTR [rdi+0x4],0xb
  0117f:    	jne    0x3220d
  01185: 00 	test   rsi,0x1
  0118c:    	je     0x3220d
  01192:    	sar    rsi,1
  01195:    	sub    rsp,0x10
  01199:    	movq   QWORD PTR [rsp],xmm3
  0119e:    	movq   QWORD PTR [rsp+0x8],xmm4
  011a4: 78 	movabs rax,0x557860b06070
  011ae:    	call   rax
  011b0:    	movq   xmm3,QWORD PTR [rsp]
  011b5:    	movq   xmm4,QWORD PTR [rsp+0x8]
  011bb:    	add    rsp,0x10
  011bf: 78 	movabs r13,0x557861fbf880
  011c9:    	test   rax,rax
  011cc:    	je     0xfffe510c
  011d2:    	mov    QWORD PTR [r14-0x58],rax
:00078 %4 = %4.call vcross(%5; 1)           [Vec]
  011d6:    	mov    rdi,QWORD PTR [r14-0x50]
  011da: 00 	test   rdi,0x7
  011e1:    	jne    0x3221c
  011e7:    	cmp    DWORD PTR [rdi+0x4],0x2b
  011eb:    	jne    0x3221c
  011f1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe73ac],0x26        # 0xfffe85a4
  011f8:    	jne    0x3221c
  011fe:    	sub    rsp,0x10
  01202:    	movq   QWORD PTR [rsp],xmm3
  01207:    	movq   QWORD PTR [rsp+0x8],xmm4
  0120d: 00 	cmp    DWORD PTR [rip+0xfffffffffffe7394],0x0        # 0xfffe85a8
  01214:    	je     0x122c
  0121a:    	mov    rdi,r12
  0121d:    	mov    rsi,QWORD PTR [rbx]
  01220: 78 	movabs rax,0x557860afd140
  0122a:    	call   rax
  0122c: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01235:    	mov    rax,QWORD PTR [r14-0x50]
  01239:    	mov    QWORD PTR [rsp-0x40],rax
  0123e: 00 	mov    rdi,0x1
  01245:    	mov    rax,QWORD PTR [r14-0x58]
  01249:    	mov    QWORD PTR [rsp-0x48],rax
  0124e: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01257: 08 	movabs rax,0x100080000005c
  01261:    	mov    QWORD PTR [rsp-0x30],rax
  01266: 78 	movabs r13,0x557861f71470
  01270:    	mov    rsi,QWORD PTR [rbx]
  01273:    	mov    QWORD PTR [rsp-0x18],rsi
  01278:    	lea    rsi,[rsp-0x18]
  0127d:    	mov    QWORD PTR [rbx],rsi
  01280:    	lea    r14,[rsp-0x10]
  01285:    	mov    QWORD PTR [rsp-0x20],r14
  0128a:    	call   0xffff230f
  0128f:    	lea    r14,[rbp-0x8]
  01293:    	mov    QWORD PTR [rbx],r14
  01296:    	mov    r14,QWORD PTR [rbp-0x10]
  0129a:    	movq   xmm3,QWORD PTR [rsp]
  0129f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012a5:    	add    rsp,0x10
  012a9: 78 	movabs r13,0x557861fbf8a0
  012b3:    	test   rax,rax
  012b6:    	je     0xfffe510c
  012bc:    	mov    QWORD PTR [r14-0x50],rax
:00079 
:00080 %1:.[%3:] = %4
  012c0:    	mov    rdi,QWORD PTR [r14-0x38]
  012c4:    	mov    rsi,QWORD PTR [r14-0x48]
  012c8: 00 	test   rdi,0x7
  012cf:    	jne    0x3222b
  012d5:    	cmp    DWORD PTR [rdi+0x4],0xb
  012d9:    	jne    0x3222b
  012df: 00 	test   rsi,0x1
  012e6:    	je     0x3222b
  012ec:    	sar    rsi,1
  012ef:    	sub    rsp,0x10
  012f3:    	movq   QWORD PTR [rsp],xmm3
  012f8:    	movq   QWORD PTR [rsp+0x8],xmm4
  012fe:    	mov    rdx,r12
  01301:    	mov    rcx,QWORD PTR [r14-0x50]
  01305: 78 	movabs rax,0x557860b06200
  0130f:    	call   rax
  01311:    	movq   xmm3,QWORD PTR [rsp]
  01316:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0131c:    	add    rsp,0x10
  01320: 78 	movabs r13,0x557861fbf8b0
  0132a:    	test   rax,rax
  0132d:    	je     0xfffe510c
:00081 %3 = 0: i32
  01333: 00 	mov    QWORD PTR [r14-0x48],0x1
:00082 %4 = 0: i32
  0133b: 00 	mov    QWORD PTR [r14-0x50],0x1
:00083 %4 = %1.[%4]                         [Array][Integer]
  01343:    	mov    rdi,QWORD PTR [r14-0x38]
  01347:    	mov    rsi,QWORD PTR [r14-0x50]
  0134b: 00 	test   rdi,0x7
  01352:    	jne    0x3223a
  01358:    	cmp    DWORD PTR [rdi+0x4],0xb
  0135c:    	jne    0x3223a
  01362: 00 	test   rsi,0x1
  01369:    	je     0x3223a
  0136f:    	sar    rsi,1
  01372:    	sub    rsp,0x10
  01376:    	movq   QWORD PTR [rsp],xmm3
  0137b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01381: 78 	movabs rax,0x557860b06070
  0138b:    	call   rax
  0138d:    	movq   xmm3,QWORD PTR [rsp]
  01392:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01398:    	add    rsp,0x10
  0139c: 78 	movabs r13,0x557861fbf8e0
  013a6:    	test   rax,rax
  013a9:    	je     0xfffe510c
  013af:    	mov    QWORD PTR [r14-0x50],rax
:00084 %4 = %4.call vnormalize()            [Vec]
  013b3:    	mov    rdi,QWORD PTR [r14-0x50]
  013b7: 00 	test   rdi,0x7
  013be:    	jne    0x32249
  013c4:    	cmp    DWORD PTR [rdi+0x4],0x2b
  013c8:    	jne    0x32249
  013ce: 26 	cmp    DWORD PTR [rip+0xfffffffffffe71cf],0x26        # 0xfffe85a4
  013d5:    	jne    0x32249
  013db:    	sub    rsp,0x10
  013df:    	movq   QWORD PTR [rsp],xmm3
  013e4:    	movq   QWORD PTR [rsp+0x8],xmm4
  013ea: 00 	cmp    DWORD PTR [rip+0xfffffffffffe71b7],0x0        # 0xfffe85a8
  013f1:    	je     0x1409
  013f7:    	mov    rdi,r12
  013fa:    	mov    rsi,QWORD PTR [rbx]
  013fd: 78 	movabs rax,0x557860afd140
  01407:    	call   rax
  01409: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01412:    	mov    rax,QWORD PTR [r14-0x50]
  01416:    	mov    QWORD PTR [rsp-0x40],rax
  0141b: 00 	mov    rdi,0x0
  01422: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0142b: 07 	movabs rax,0x100070000005f
  01435:    	mov    QWORD PTR [rsp-0x30],rax
  0143a: 78 	movabs r13,0x557861f90e80
  01444:    	mov    rsi,QWORD PTR [rbx]
  01447:    	mov    QWORD PTR [rsp-0x18],rsi
  0144c:    	lea    rsi,[rsp-0x18]
  01451:    	mov    QWORD PTR [rbx],rsi
  01454:    	lea    r14,[rsp-0x10]
  01459:    	mov    QWORD PTR [rsp-0x20],r14
  0145e:    	call   0xfffe8e6b
  01463:    	lea    r14,[rbp-0x8]
  01467:    	mov    QWORD PTR [rbx],r14
  0146a:    	mov    r14,QWORD PTR [rbp-0x10]
  0146e:    	movq   xmm3,QWORD PTR [rsp]
  01473:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01479:    	add    rsp,0x10
  0147d: 78 	movabs r13,0x557861fbf900
  01487:    	test   rax,rax
  0148a:    	je     0xfffe510c
  01490:    	mov    QWORD PTR [r14-0x50],rax
:00085 
:00086 %1:.[%3:] = %4
  01494:    	mov    rdi,QWORD PTR [r14-0x38]
  01498:    	mov    rsi,QWORD PTR [r14-0x48]
  0149c: 00 	test   rdi,0x7
  014a3:    	jne    0x32258
  014a9:    	cmp    DWORD PTR [rdi+0x4],0xb
  014ad:    	jne    0x32258
  014b3: 00 	test   rsi,0x1
  014ba:    	je     0x32258
  014c0:    	sar    rsi,1
  014c3:    	sub    rsp,0x10
  014c7:    	movq   QWORD PTR [rsp],xmm3
  014cc:    	movq   QWORD PTR [rsp+0x8],xmm4
  014d2:    	mov    rdx,r12
  014d5:    	mov    rcx,QWORD PTR [r14-0x50]
  014d9: 78 	movabs rax,0x557860b06200
  014e3:    	call   rax
  014e5:    	movq   xmm3,QWORD PTR [rsp]
  014ea:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014f0:    	add    rsp,0x10
  014f4: 78 	movabs r13,0x557861fbf910
  014fe:    	test   rax,rax
  01501:    	je     0xfffe510c
:00087 %3 = 1: i32
  01507: 00 	mov    QWORD PTR [r14-0x48],0x3
:00088 %4 = 2: i32
  0150f: 00 	mov    QWORD PTR [r14-0x50],0x5
:00089 %4 = %1.[%4]                         [Array][Integer]
  01517:    	mov    rdi,QWORD PTR [r14-0x38]
  0151b:    	mov    rsi,QWORD PTR [r14-0x50]
  0151f: 00 	test   rdi,0x7
  01526:    	jne    0x32267
  0152c:    	cmp    DWORD PTR [rdi+0x4],0xb
  01530:    	jne    0x32267
  01536: 00 	test   rsi,0x1
  0153d:    	je     0x32267
  01543:    	sar    rsi,1
  01546:    	sub    rsp,0x10
  0154a:    	movq   QWORD PTR [rsp],xmm3
  0154f:    	movq   QWORD PTR [rsp+0x8],xmm4
  01555: 78 	movabs rax,0x557860b06070
  0155f:    	call   rax
  01561:    	movq   xmm3,QWORD PTR [rsp]
  01566:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0156c:    	add    rsp,0x10
  01570: 78 	movabs r13,0x557861fbf940
  0157a:    	test   rax,rax
  0157d:    	je     0xfffe510c
  01583:    	mov    QWORD PTR [r14-0x50],rax
:00090 %5 = 0: i32
  01587: 00 	mov    QWORD PTR [r14-0x58],0x1
:00091 %5 = %1.[%5]                         [Array][Integer]
  0158f:    	mov    rdi,QWORD PTR [r14-0x38]
  01593:    	mov    rsi,QWORD PTR [r14-0x58]
  01597: 00 	test   rdi,0x7
  0159e:    	jne    0x32276
  015a4:    	cmp    DWORD PTR [rdi+0x4],0xb
  015a8:    	jne    0x32276
  015ae: 00 	test   rsi,0x1
  015b5:    	je     0x32276
  015bb:    	sar    rsi,1
  015be:    	sub    rsp,0x10
  015c2:    	movq   QWORD PTR [rsp],xmm3
  015c7:    	movq   QWORD PTR [rsp+0x8],xmm4
  015cd: 78 	movabs rax,0x557860b06070
  015d7:    	call   rax
  015d9:    	movq   xmm3,QWORD PTR [rsp]
  015de:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015e4:    	add    rsp,0x10
  015e8: 78 	movabs r13,0x557861fbf960
  015f2:    	test   rax,rax
  015f5:    	je     0xfffe510c
  015fb:    	mov    QWORD PTR [r14-0x58],rax
:00092 %4 = %4.call vcross(%5; 1)           [Vec]
  015ff:    	mov    rdi,QWORD PTR [r14-0x50]
  01603: 00 	test   rdi,0x7
  0160a:    	jne    0x32285
  01610:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01614:    	jne    0x32285
  0161a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6f83],0x26        # 0xfffe85a4
  01621:    	jne    0x32285
  01627:    	sub    rsp,0x10
  0162b:    	movq   QWORD PTR [rsp],xmm3
  01630:    	movq   QWORD PTR [rsp+0x8],xmm4
  01636: 00 	cmp    DWORD PTR [rip+0xfffffffffffe6f6b],0x0        # 0xfffe85a8
  0163d:    	je     0x1655
  01643:    	mov    rdi,r12
  01646:    	mov    rsi,QWORD PTR [rbx]
  01649: 78 	movabs rax,0x557860afd140
  01653:    	call   rax
  01655: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0165e:    	mov    rax,QWORD PTR [r14-0x50]
  01662:    	mov    QWORD PTR [rsp-0x40],rax
  01667: 00 	mov    rdi,0x1
  0166e:    	mov    rax,QWORD PTR [r14-0x58]
  01672:    	mov    QWORD PTR [rsp-0x48],rax
  01677: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01680: 08 	movabs rax,0x100080000005c
  0168a:    	mov    QWORD PTR [rsp-0x30],rax
  0168f: 78 	movabs r13,0x557861f71470
  01699:    	mov    rsi,QWORD PTR [rbx]
  0169c:    	mov    QWORD PTR [rsp-0x18],rsi
  016a1:    	lea    rsi,[rsp-0x18]
  016a6:    	mov    QWORD PTR [rbx],rsi
  016a9:    	lea    r14,[rsp-0x10]
  016ae:    	mov    QWORD PTR [rsp-0x20],r14
  016b3:    	call   0xffff230f
  016b8:    	lea    r14,[rbp-0x8]
  016bc:    	mov    QWORD PTR [rbx],r14
  016bf:    	mov    r14,QWORD PTR [rbp-0x10]
  016c3:    	movq   xmm3,QWORD PTR [rsp]
  016c8:    	movq   xmm4,QWORD PTR [rsp+0x8]
  016ce:    	add    rsp,0x10
  016d2: 78 	movabs r13,0x557861fbf980
  016dc:    	test   rax,rax
  016df:    	je     0xfffe510c
  016e5:    	mov    QWORD PTR [r14-0x50],rax
:00093 
:00094 %1:.[%3:] = %4
  016e9:    	mov    rdi,QWORD PTR [r14-0x38]
  016ed:    	mov    rsi,QWORD PTR [r14-0x48]
  016f1: 00 	test   rdi,0x7
  016f8:    	jne    0x32294
  016fe:    	cmp    DWORD PTR [rdi+0x4],0xb
  01702:    	jne    0x32294
  01708: 00 	test   rsi,0x1
  0170f:    	je     0x32294
  01715:    	sar    rsi,1
  01718:    	sub    rsp,0x10
  0171c:    	movq   QWORD PTR [rsp],xmm3
  01721:    	movq   QWORD PTR [rsp+0x8],xmm4
  01727:    	mov    rdx,r12
  0172a:    	mov    rcx,QWORD PTR [r14-0x50]
  0172e: 78 	movabs rax,0x557860b06200
  01738:    	call   rax
  0173a:    	movq   xmm3,QWORD PTR [rsp]
  0173f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01745:    	add    rsp,0x10
  01749: 78 	movabs r13,0x557861fbf990
  01753:    	test   rax,rax
  01756:    	je     0xfffe510c
:00095 %3 = 1: i32
  0175c: 00 	mov    QWORD PTR [r14-0x48],0x3
:00096 %4 = 1: i32
  01764: 00 	mov    QWORD PTR [r14-0x50],0x3
:00097 %4 = %1.[%4]                         [Array][Integer]
  0176c:    	mov    rdi,QWORD PTR [r14-0x38]
  01770:    	mov    rsi,QWORD PTR [r14-0x50]
  01774: 00 	test   rdi,0x7
  0177b:    	jne    0x322a3
  01781:    	cmp    DWORD PTR [rdi+0x4],0xb
  01785:    	jne    0x322a3
  0178b: 00 	test   rsi,0x1
  01792:    	je     0x322a3
  01798:    	sar    rsi,1
  0179b:    	sub    rsp,0x10
  0179f:    	movq   QWORD PTR [rsp],xmm3
  017a4:    	movq   QWORD PTR [rsp+0x8],xmm4
  017aa: 78 	movabs rax,0x557860b06070
  017b4:    	call   rax
  017b6:    	movq   xmm3,QWORD PTR [rsp]
  017bb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  017c1:    	add    rsp,0x10
  017c5: 78 	movabs r13,0x557861fbf9c0
  017cf:    	test   rax,rax
  017d2:    	je     0xfffe510c
  017d8:    	mov    QWORD PTR [r14-0x50],rax
:00098 %4 = %4.call vnormalize()            [Vec]
  017dc:    	mov    rdi,QWORD PTR [r14-0x50]
  017e0: 00 	test   rdi,0x7
  017e7:    	jne    0x322b2
  017ed:    	cmp    DWORD PTR [rdi+0x4],0x2b
  017f1:    	jne    0x322b2
  017f7: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6da6],0x26        # 0xfffe85a4
  017fe:    	jne    0x322b2
  01804:    	sub    rsp,0x10
  01808:    	movq   QWORD PTR [rsp],xmm3
  0180d:    	movq   QWORD PTR [rsp+0x8],xmm4
  01813: 00 	cmp    DWORD PTR [rip+0xfffffffffffe6d8e],0x0        # 0xfffe85a8
  0181a:    	je     0x1832
  01820:    	mov    rdi,r12
  01823:    	mov    rsi,QWORD PTR [rbx]
  01826: 78 	movabs rax,0x557860afd140
  01830:    	call   rax
  01832: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0183b:    	mov    rax,QWORD PTR [r14-0x50]
  0183f:    	mov    QWORD PTR [rsp-0x40],rax
  01844: 00 	mov    rdi,0x0
  0184b: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01854: 07 	movabs rax,0x100070000005f
  0185e:    	mov    QWORD PTR [rsp-0x30],rax
  01863: 78 	movabs r13,0x557861f90e80
  0186d:    	mov    rsi,QWORD PTR [rbx]
  01870:    	mov    QWORD PTR [rsp-0x18],rsi
  01875:    	lea    rsi,[rsp-0x18]
  0187a:    	mov    QWORD PTR [rbx],rsi
  0187d:    	lea    r14,[rsp-0x10]
  01882:    	mov    QWORD PTR [rsp-0x20],r14
  01887:    	call   0xfffe8e6b
  0188c:    	lea    r14,[rbp-0x8]
  01890:    	mov    QWORD PTR [rbx],r14
  01893:    	mov    r14,QWORD PTR [rbp-0x10]
  01897:    	movq   xmm3,QWORD PTR [rsp]
  0189c:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018a2:    	add    rsp,0x10
  018a6: 78 	movabs r13,0x557861fbf9e0
  018b0:    	test   rax,rax
  018b3:    	je     0xfffe510c
  018b9:    	mov    QWORD PTR [r14-0x50],rax
:00099 
:00100 %1:.[%3:] = %4
  018bd:    	mov    rdi,QWORD PTR [r14-0x38]
  018c1:    	mov    rsi,QWORD PTR [r14-0x48]
  018c5: 00 	test   rdi,0x7
  018cc:    	jne    0x322c1
  018d2:    	cmp    DWORD PTR [rdi+0x4],0xb
  018d6:    	jne    0x322c1
  018dc: 00 	test   rsi,0x1
  018e3:    	je     0x322c1
  018e9:    	sar    rsi,1
  018ec:    	sub    rsp,0x10
  018f0:    	movq   QWORD PTR [rsp],xmm3
  018f5:    	movq   QWORD PTR [rsp+0x8],xmm4
  018fb:    	mov    rdx,r12
  018fe:    	mov    rcx,QWORD PTR [r14-0x50]
  01902: 78 	movabs rax,0x557860b06200
  0190c:    	call   rax
  0190e:    	movq   xmm3,QWORD PTR [rsp]
  01913:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01919:    	add    rsp,0x10
  0191d: 78 	movabs r13,0x557861fbf9f0
  01927:    	test   rax,rax
  0192a:    	je     0xfffe510c
:00101 %3 = %4
  01930:    	mov    rax,QWORD PTR [r14-0x50]
  01934:    	mov    QWORD PTR [r14-0x48],rax
:00102 ret %3
  01938:    	mov    rax,QWORD PTR [r14-0x48]
  0193c:    	leave  
  0193d:    	ret    
==> start whole compile: otherBasis FuncId(87) self_class:Scene start:[00000] bytecode:0x557861fbf3a0
<== finished compile. elapsed:211.8µs
offset:Pos(117132) code: 6394 bytes  data: 326 bytes
  00000:    	push   rbp
  00001:    	mov    rbp,rsp
  00004:    	mov    rdx,rdi
  00007:    	sub    rsp,0x70
  0000b:    	cmp    edx,0x2
  0000e:    	jne    0x3085c
  00014: 00 	mov    rax,0x4
  0001b:    	mov    QWORD PTR [r14-0x48],rax
  0001f:    	mov    QWORD PTR [r14-0x50],rax
  00023:    	mov    QWORD PTR [r14-0x58],rax
  00027:    	mov    QWORD PTR [r14-0x60],rax
  0002b:    	mov    QWORD PTR [r14-0x68],rax
  0002f:    	mov    rdi,QWORD PTR [r14-0x30]
  00033: 00 	test   rdi,0x7
  0003a:    	jne    0x3086b
  00040:    	cmp    DWORD PTR [rdi+0x4],0x35
  00044:    	jne    0x3086b
:00000 init_method reg:8 arg:2 pos:2 req:2 block:0 stack_offset:7
:00001 %3 = 2: i32
  0004a: 00 	mov    QWORD PTR [r14-0x48],0x5
:00002 %4 = const[Vec]                      [Vec]
  00052: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe6aeb]        # 0xfffe6b44
  00059: 00 	cmp    rax,QWORD PTR [rip+0x18b4]        # 0x1914
  00060:    	jne    0x3087a
  00066: 00 	mov    rax,QWORD PTR [rip+0x1897]        # 0x1904
  0006d:    	mov    QWORD PTR [r14-0x50],rax
:00003 %5 = %2.call x()                     [Vec]
  00071:    	mov    rdi,QWORD PTR [r14-0x40]
  00075: 00 	test   rdi,0x7
  0007c:    	jne    0x308c0
  00082:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00086:    	jne    0x308c0
  0008c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6a9d],0x26        # 0xfffe6b30
  00093:    	jne    0x308c0
  00099:    	mov    esi,DWORD PTR [rip+0x1881]        # 0x1920
  0009f:    	cmp    esi,0xffffffff
  000a2:    	je     0x308cf
  000a8:    	cmp    WORD PTR [rdi+0x2],0x3
  000ad:    	jne    0xc6
  000b3:    	cmp    esi,0x6
  000b6:    	jge    0xc6
  000bc:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  000c1:    	jmp    0xd2
  000c6: 78 	movabs rax,0x557860b3bf40
  000d0:    	call   rax
  000d2:    	mov    QWORD PTR [r14-0x58],rax
:00004 
:00005 %6 = %2.call y()                     [Vec]
  000d6:    	mov    rdi,QWORD PTR [r14-0x40]
  000da: 00 	test   rdi,0x7
  000e1:    	jne    0x308f8
  000e7:    	cmp    DWORD PTR [rdi+0x4],0x2b
  000eb:    	jne    0x308f8
  000f1: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6a38],0x26        # 0xfffe6b30
  000f8:    	jne    0x308f8
  000fe:    	mov    esi,DWORD PTR [rip+0x1824]        # 0x1928
  00104:    	cmp    esi,0xffffffff
  00107:    	je     0x30907
  0010d:    	cmp    WORD PTR [rdi+0x2],0x3
  00112:    	jne    0x12b
  00118:    	cmp    esi,0x6
  0011b:    	jge    0x12b
  00121:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00126:    	jmp    0x137
  0012b: 78 	movabs rax,0x557860b3bf40
  00135:    	call   rax
  00137:    	mov    QWORD PTR [r14-0x60],rax
:00006 
:00007 %7 = %2.call z()                     [Vec]
  0013b:    	mov    rdi,QWORD PTR [r14-0x40]
  0013f: 00 	test   rdi,0x7
  00146:    	jne    0x30930
  0014c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00150:    	jne    0x30930
  00156: 26 	cmp    DWORD PTR [rip+0xfffffffffffe69d3],0x26        # 0xfffe6b30
  0015d:    	jne    0x30930
  00163:    	mov    esi,DWORD PTR [rip+0x17c7]        # 0x1930
  00169:    	cmp    esi,0xffffffff
  0016c:    	je     0x3093f
  00172:    	cmp    WORD PTR [rdi+0x2],0x3
  00177:    	jne    0x190
  0017d:    	cmp    esi,0x6
  00180:    	jge    0x190
  00186:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0018b:    	jmp    0x19c
  00190: 78 	movabs rax,0x557860b3bf40
  0019a:    	call   rax
  0019c:    	mov    QWORD PTR [r14-0x68],rax
:00008 
:00009 %4 = %4.call new(%5; 3)              [#<Class:Vec>]
  001a0:    	mov    rdi,QWORD PTR [r14-0x50]
  001a4: 00 	test   rdi,0x7
  001ab:    	jne    0x30968
  001b1:    	cmp    DWORD PTR [rdi+0x4],0x2c
  001b5:    	jne    0x30968
  001bb: 26 	cmp    DWORD PTR [rip+0xfffffffffffe696e],0x26        # 0xfffe6b30
  001c2:    	jne    0x30968
  001c8: 00 	mov    r9,0x0
  001cf:    	mov    rdx,rdi
  001d2:    	mov    QWORD PTR [rsp-0x40],rcx
  001d7: 00 	mov    QWORD PTR [rsp-0x28],0x0
  001e0:    	lea    rcx,[r14-0x58]
  001e4: 00 	mov    r8,0x3
  001eb:    	mov    rsi,QWORD PTR [rbx]
  001ee:    	mov    QWORD PTR [rsp-0x18],rsi
  001f3:    	lea    rsi,[rsp-0x18]
  001f8:    	mov    QWORD PTR [rbx],rsi
  001fb:    	lea    r14,[rsp-0x10]
  00200:    	mov    QWORD PTR [rsp-0x20],r14
  00205:    	call   0x30977
  0020a:    	lea    r14,[rbp-0x8]
  0020e:    	mov    QWORD PTR [rbx],r14
  00211:    	mov    r14,QWORD PTR [rbp-0x10]
  00215: 78 	movabs r13,0x557861fbf450
  0021f:    	test   rax,rax
  00222:    	je     0xfffe3698
  00228:    	mov    QWORD PTR [r14-0x50],rax
:00010 
:00011 %1:.[%3:] = %4
  0022c:    	mov    rdi,QWORD PTR [r14-0x38]
  00230:    	mov    rsi,QWORD PTR [r14-0x48]
  00234: 00 	test   rdi,0x7
  0023b:    	jne    0x309a9
  00241:    	cmp    DWORD PTR [rdi+0x4],0xb
  00245:    	jne    0x309a9
  0024b: 00 	test   rsi,0x1
  00252:    	je     0x309a9
  00258:    	sar    rsi,1
  0025b:    	mov    rdx,r12
  0025e:    	mov    rcx,QWORD PTR [r14-0x50]
  00262: 78 	movabs rax,0x557860b06200
  0026c:    	call   rax
  0026e: 78 	movabs r13,0x557861fbf460
  00278:    	test   rax,rax
  0027b:    	je     0xfffe3698
:00012 %3 = 1: i32
  00281: 00 	mov    QWORD PTR [r14-0x48],0x3
:00013 %4 = const[Vec]                      [Vec]
  00289: ff 	mov    rax,QWORD PTR [rip+0xfffffffffffe68b4]        # 0xfffe6b44
  00290: 00 	cmp    rax,QWORD PTR [rip+0x16ad]        # 0x1944
  00297:    	jne    0x309b8
  0029d: 00 	mov    rax,QWORD PTR [rip+0x1690]        # 0x1934
  002a4:    	mov    QWORD PTR [r14-0x50],rax
:00014 %5 = literal[0.0]
  002a8: 00 	movq   xmm2,QWORD PTR [rip+0x16a4]        # 0x1954
  002b0: 00 	movabs rax,0x8000000000000002
  002ba:    	mov    QWORD PTR [r14-0x58],rax
:00015 %6 = literal[0.0]
  002be: 00 	movq   xmm3,QWORD PTR [rip+0x169e]        # 0x1964
  002c6: 00 	movabs rax,0x8000000000000002
  002d0:    	mov    QWORD PTR [r14-0x60],rax
:00016 %7 = literal[0.0]
  002d4: 00 	movq   xmm4,QWORD PTR [rip+0x1698]        # 0x1974
  002dc: 00 	movabs rax,0x8000000000000002
  002e6:    	mov    QWORD PTR [r14-0x68],rax
:00017 %4 = %4.call new(%5; 3)              [#<Class:Vec>]
  002ea:    	mov    rdi,QWORD PTR [r14-0x50]
  002ee: 00 	test   rdi,0x7
  002f5:    	jne    0x309fe
  002fb:    	cmp    DWORD PTR [rdi+0x4],0x2c
  002ff:    	jne    0x309fe
  00305: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6824],0x26        # 0xfffe6b30
  0030c:    	jne    0x309fe
  00312: 00 	mov    r9,0x0
  00319:    	sub    rsp,0x20
  0031d:    	movq   QWORD PTR [rsp],xmm2
  00322:    	movq   QWORD PTR [rsp+0x8],xmm3
  00328:    	movq   QWORD PTR [rsp+0x10],xmm4
  0032e:    	mov    rdx,rdi
  00331:    	mov    QWORD PTR [rsp-0x40],rcx
  00336: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0033f:    	lea    rcx,[r14-0x58]
  00343: 00 	mov    r8,0x3
  0034a:    	mov    rsi,QWORD PTR [rbx]
  0034d:    	mov    QWORD PTR [rsp-0x18],rsi
  00352:    	lea    rsi,[rsp-0x18]
  00357:    	mov    QWORD PTR [rbx],rsi
  0035a:    	lea    r14,[rsp-0x10]
  0035f:    	mov    QWORD PTR [rsp-0x20],r14
  00364:    	call   0x30a0d
  00369:    	lea    r14,[rbp-0x8]
  0036d:    	mov    QWORD PTR [rbx],r14
  00370:    	mov    r14,QWORD PTR [rbp-0x10]
  00374:    	movq   xmm2,QWORD PTR [rsp]
  00379:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0037f:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00385:    	add    rsp,0x20
  00389: 78 	movabs r13,0x557861fbf4d0
  00393:    	test   rax,rax
  00396:    	je     0xfffe3698
  0039c:    	mov    QWORD PTR [r14-0x50],rax
:00018 
:00019 %1:.[%3:] = %4
  003a0:    	mov    rdi,QWORD PTR [r14-0x38]
  003a4:    	mov    rsi,QWORD PTR [r14-0x48]
  003a8: 00 	test   rdi,0x7
  003af:    	jne    0x30a3f
  003b5:    	cmp    DWORD PTR [rdi+0x4],0xb
  003b9:    	jne    0x30a3f
  003bf: 00 	test   rsi,0x1
  003c6:    	je     0x30a3f
  003cc:    	sar    rsi,1
  003cf:    	sub    rsp,0x20
  003d3:    	movq   QWORD PTR [rsp],xmm2
  003d8:    	movq   QWORD PTR [rsp+0x8],xmm3
  003de:    	movq   QWORD PTR [rsp+0x10],xmm4
  003e4:    	mov    rdx,r12
  003e7:    	mov    rcx,QWORD PTR [r14-0x50]
  003eb: 78 	movabs rax,0x557860b06200
  003f5:    	call   rax
  003f7:    	movq   xmm2,QWORD PTR [rsp]
  003fc:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00402:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00408:    	add    rsp,0x20
  0040c: 78 	movabs r13,0x557861fbf4e0
  00416:    	test   rax,rax
  00419:    	je     0xfffe3698
:00020 %3 = %2.call x()                     [Vec]
  0041f:    	mov    rdi,QWORD PTR [r14-0x40]
  00423: 00 	test   rdi,0x7
  0042a:    	jne    0x30a4e
  00430:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00434:    	jne    0x30a4e
  0043a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe66ef],0x26        # 0xfffe6b30
  00441:    	jne    0x30a4e
  00447:    	mov    esi,DWORD PTR [rip+0x1533]        # 0x1980
  0044d:    	cmp    esi,0xffffffff
  00450:    	je     0x30a5d
  00456:    	cmp    WORD PTR [rdi+0x2],0x3
  0045b:    	jne    0x474
  00461:    	cmp    esi,0x6
  00464:    	jge    0x474
  0046a:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  0046f:    	jmp    0x4aa
  00474:    	sub    rsp,0x20
  00478:    	movq   QWORD PTR [rsp],xmm2
  0047d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00483:    	movq   QWORD PTR [rsp+0x10],xmm4
  00489: 78 	movabs rax,0x557860b3bf40
  00493:    	call   rax
  00495:    	movq   xmm2,QWORD PTR [rsp]
  0049a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  004a0:    	movq   xmm4,QWORD PTR [rsp+0x10]
  004a6:    	add    rsp,0x20
  004aa:    	mov    QWORD PTR [r14-0x48],rax
:00021 
:00022 %4 = literal[0.6]
  004ae: 00 	movq   xmm5,QWORD PTR [rip+0x14ce]        # 0x1984
  004b6: 99 	movabs rax,0xff1999999999999a
  004c0:    	mov    QWORD PTR [r14-0x50],rax
:00023 _%3 = %3 < %4                        [Float][Float]
:00024 condnotbr _%3 =>:00036
  004c4:    	mov    rdi,QWORD PTR [r14-0x48]
  004c8: 00 	test   rdi,0x1
  004cf:    	jne    0x30ab0
  004d5: 00 	test   rdi,0x2
  004dc:    	je     0x518
  004e2:    	xorps  xmm6,xmm6
  004e5: 00 	movabs rax,0x8000000000000002
  004ef:    	cmp    rdi,rax
  004f2:    	je     0x52a
  004f8:    	mov    rax,rdi
  004fb:    	sar    rax,0x3f
  004ff:    	add    rax,0x2
  00503:    	and    rdi,0xfffffffffffffffc
  00507:    	or     rdi,rax
  0050a:    	rol    rdi,0x3d
  0050e:    	movq   xmm6,rdi
  00513:    	jmp    0x52a
  00518:    	call   0xfffe36f1
  0051d:    	test   rax,rax
  00520:    	je     0x30ab0
  00526:    	movq   xmm6,xmm0
  0052a:    	ucomisd xmm6,xmm5
  0052e:    	jae    0x30bc0
:00025 %3 = %2.call x()                     [Vec]
  00534:    	mov    rdi,QWORD PTR [r14-0x40]
  00538: 00 	test   rdi,0x7
  0053f:    	jne    0x30abf
  00545:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00549:    	jne    0x30abf
  0054f: 26 	cmp    DWORD PTR [rip+0xfffffffffffe65da],0x26        # 0xfffe6b30
  00556:    	jne    0x30abf
  0055c:    	mov    esi,DWORD PTR [rip+0x142e]        # 0x1990
  00562:    	cmp    esi,0xffffffff
  00565:    	je     0x30ace
  0056b:    	cmp    WORD PTR [rdi+0x2],0x3
  00570:    	jne    0x589
  00576:    	cmp    esi,0x6
  00579:    	jge    0x589
  0057f:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00584:    	jmp    0x5cb
  00589:    	sub    rsp,0x20
  0058d:    	movq   QWORD PTR [rsp],xmm2
  00592:    	movq   QWORD PTR [rsp+0x8],xmm3
  00598:    	movq   QWORD PTR [rsp+0x10],xmm4
  0059e:    	movq   QWORD PTR [rsp+0x18],xmm5
  005a4: 78 	movabs rax,0x557860b3bf40
  005ae:    	call   rax
  005b0:    	movq   xmm2,QWORD PTR [rsp]
  005b5:    	movq   xmm3,QWORD PTR [rsp+0x8]
  005bb:    	movq   xmm4,QWORD PTR [rsp+0x10]
  005c1:    	movq   xmm5,QWORD PTR [rsp+0x18]
  005c7:    	add    rsp,0x20
  005cb:    	mov    QWORD PTR [r14-0x48],rax
:00026 
:00027 %4 = literal[-0.6]
  005cf: 00 	movq   xmm5,QWORD PTR [rip+0x13bd]        # 0x1994
  005d7: 99 	movabs rax,0xff1999999999999e
  005e1:    	mov    QWORD PTR [r14-0x50],rax
:00028 _%3 = %3 > %4                        [Float][Float]
:00029 condnotbr _%3 =>:00036
  005e5:    	mov    rdi,QWORD PTR [r14-0x48]
  005e9: 00 	test   rdi,0x1
  005f0:    	jne    0x30b2d
  005f6: 00 	test   rdi,0x2
  005fd:    	je     0x639
  00603:    	xorps  xmm6,xmm6
  00606: 00 	movabs rax,0x8000000000000002
  00610:    	cmp    rdi,rax
  00613:    	je     0x64b
  00619:    	mov    rax,rdi
  0061c:    	sar    rax,0x3f
  00620:    	add    rax,0x2
  00624:    	and    rdi,0xfffffffffffffffc
  00628:    	or     rdi,rax
  0062b:    	rol    rdi,0x3d
  0062f:    	movq   xmm6,rdi
  00634:    	jmp    0x64b
  00639:    	call   0xfffe36f1
  0063e:    	test   rax,rax
  00641:    	je     0x30b2d
  00647:    	movq   xmm6,xmm0
  0064b:    	ucomisd xmm6,xmm5
  0064f:    	jbe    0x30bd9
:00030 %3 = 1: i32
  00655: 00 	mov    QWORD PTR [r14-0x48],0x3
:00031 %3 = %1.[%3]                         [Array][Integer]
  0065d:    	mov    rdi,QWORD PTR [r14-0x38]
  00661:    	mov    rsi,QWORD PTR [r14-0x48]
  00665: 00 	test   rdi,0x7
  0066c:    	jne    0x30b3c
  00672:    	cmp    DWORD PTR [rdi+0x4],0xb
  00676:    	jne    0x30b3c
  0067c: 00 	test   rsi,0x1
  00683:    	je     0x30b3c
  00689:    	sar    rsi,1
  0068c:    	sub    rsp,0x20
  00690:    	movq   QWORD PTR [rsp],xmm2
  00695:    	movq   QWORD PTR [rsp+0x8],xmm3
  0069b:    	movq   QWORD PTR [rsp+0x10],xmm4
  006a1:    	movq   QWORD PTR [rsp+0x18],xmm5
  006a7: 78 	movabs rax,0x557860b06070
  006b1:    	call   rax
  006b3:    	movq   xmm2,QWORD PTR [rsp]
  006b8:    	movq   xmm3,QWORD PTR [rsp+0x8]
  006be:    	movq   xmm4,QWORD PTR [rsp+0x10]
  006c4:    	movq   xmm5,QWORD PTR [rsp+0x18]
  006ca:    	add    rsp,0x20
  006ce: 78 	movabs r13,0x557861fbf5a0
  006d8:    	test   rax,rax
  006db:    	je     0xfffe3698
  006e1:    	mov    QWORD PTR [r14-0x48],rax
:00032 %4 = literal[1.0]
  006e5: 00 	movq   xmm5,QWORD PTR [rip+0x12b7]        # 0x19a4
  006ed: 00 	movabs rax,0xff80000000000002
  006f7:    	mov    QWORD PTR [r14-0x50],rax
:00033 _ = %3.call x=(%4; 1)                [Vec]
  006fb:    	mov    rdi,QWORD PTR [r14-0x48]
  006ff: 00 	test   rdi,0x7
  00706:    	jne    0x30b4b
  0070c:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00710:    	jne    0x30b4b
  00716: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6413],0x26        # 0xfffe6b30
  0071d:    	jne    0x30b4b
  00723:    	mov    esi,DWORD PTR [rip+0x1287]        # 0x19b0
  00729:    	cmp    esi,0xffffffff
  0072c:    	je     0x30b5a
  00732:    	cmp    WORD PTR [rdi+0x2],0x3
  00737:    	jne    0x754
  0073d:    	cmp    esi,0x6
  00740:    	jge    0x754
  00746:    	mov    rax,QWORD PTR [r14-0x50]
  0074a:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  0074f:    	jmp    0x7ad
  00754:    	sub    rsp,0x20
  00758:    	movq   QWORD PTR [rsp],xmm2
  0075d:    	movq   QWORD PTR [rsp+0x8],xmm3
  00763:    	movq   QWORD PTR [rsp+0x10],xmm4
  00769:    	movq   QWORD PTR [rsp+0x18],xmm5
  0076f:    	mov    rdx,QWORD PTR [r14-0x50]
  00773: 78 	movabs rax,0x557860b3c1c0
  0077d:    	call   rax
  0077f:    	movq   xmm2,QWORD PTR [rsp]
  00784:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0078a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00790:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00796:    	add    rsp,0x20
  0079a: 78 	movabs r13,0x557861fbf5d0
  007a4:    	test   rax,rax
  007a7:    	je     0xfffe3698
:00034 
:00035 br =>:00073
  007ad:    	jmp    0x30fcd
:00036 %3 = %2.call y()                     [Vec]
  007b2:    	mov    rdi,QWORD PTR [r14-0x40]
  007b6: 00 	test   rdi,0x7
  007bd:    	jne    0x30bf2
  007c3:    	cmp    DWORD PTR [rdi+0x4],0x2b
  007c7:    	jne    0x30bf2
  007cd: 26 	cmp    DWORD PTR [rip+0xfffffffffffe635c],0x26        # 0xfffe6b30
  007d4:    	jne    0x30bf2
  007da:    	mov    esi,DWORD PTR [rip+0x11d8]        # 0x19b8
  007e0:    	cmp    esi,0xffffffff
  007e3:    	je     0x30c01
  007e9:    	cmp    WORD PTR [rdi+0x2],0x3
  007ee:    	jne    0x807
  007f4:    	cmp    esi,0x6
  007f7:    	jge    0x807
  007fd:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00802:    	jmp    0x849
  00807:    	sub    rsp,0x20
  0080b:    	movq   QWORD PTR [rsp],xmm2
  00810:    	movq   QWORD PTR [rsp+0x8],xmm3
  00816:    	movq   QWORD PTR [rsp+0x10],xmm4
  0081c:    	movq   QWORD PTR [rsp+0x18],xmm5
  00822: 78 	movabs rax,0x557860b3bf40
  0082c:    	call   rax
  0082e:    	movq   xmm2,QWORD PTR [rsp]
  00833:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00839:    	movq   xmm4,QWORD PTR [rsp+0x10]
  0083f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00845:    	add    rsp,0x20
  00849:    	mov    QWORD PTR [r14-0x48],rax
:00037 
:00038 %4 = literal[0.6]
  0084d: 00 	movq   xmm5,QWORD PTR [rip+0x116f]        # 0x19c4
  00855: 99 	movabs rax,0xff1999999999999a
  0085f:    	mov    QWORD PTR [r14-0x50],rax
:00039 _%3 = %3 < %4                        [Float][Float]
:00040 condnotbr _%3 =>:00052
  00863:    	mov    rdi,QWORD PTR [r14-0x48]
  00867: 00 	test   rdi,0x1
  0086e:    	jne    0x30c60
  00874: 00 	test   rdi,0x2
  0087b:    	je     0x8b7
  00881:    	xorps  xmm6,xmm6
  00884: 00 	movabs rax,0x8000000000000002
  0088e:    	cmp    rdi,rax
  00891:    	je     0x8c9
  00897:    	mov    rax,rdi
  0089a:    	sar    rax,0x3f
  0089e:    	add    rax,0x2
  008a2:    	and    rdi,0xfffffffffffffffc
  008a6:    	or     rdi,rax
  008a9:    	rol    rdi,0x3d
  008ad:    	movq   xmm6,rdi
  008b2:    	jmp    0x8c9
  008b7:    	call   0xfffe36f1
  008bc:    	test   rax,rax
  008bf:    	je     0x30c60
  008c5:    	movq   xmm6,xmm0
  008c9:    	ucomisd xmm6,xmm5
  008cd:    	jae    0x30d70
:00041 %3 = %2.call y()                     [Vec]
  008d3:    	mov    rdi,QWORD PTR [r14-0x40]
  008d7: 00 	test   rdi,0x7
  008de:    	jne    0x30c6f
  008e4:    	cmp    DWORD PTR [rdi+0x4],0x2b
  008e8:    	jne    0x30c6f
  008ee: 26 	cmp    DWORD PTR [rip+0xfffffffffffe623b],0x26        # 0xfffe6b30
  008f5:    	jne    0x30c6f
  008fb:    	mov    esi,DWORD PTR [rip+0x10cf]        # 0x19d0
  00901:    	cmp    esi,0xffffffff
  00904:    	je     0x30c7e
  0090a:    	cmp    WORD PTR [rdi+0x2],0x3
  0090f:    	jne    0x928
  00915:    	cmp    esi,0x6
  00918:    	jge    0x928
  0091e:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00923:    	jmp    0x96a
  00928:    	sub    rsp,0x20
  0092c:    	movq   QWORD PTR [rsp],xmm2
  00931:    	movq   QWORD PTR [rsp+0x8],xmm3
  00937:    	movq   QWORD PTR [rsp+0x10],xmm4
  0093d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00943: 78 	movabs rax,0x557860b3bf40
  0094d:    	call   rax
  0094f:    	movq   xmm2,QWORD PTR [rsp]
  00954:    	movq   xmm3,QWORD PTR [rsp+0x8]
  0095a:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00960:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00966:    	add    rsp,0x20
  0096a:    	mov    QWORD PTR [r14-0x48],rax
:00042 
:00043 %4 = literal[-0.6]
  0096e: 00 	movq   xmm5,QWORD PTR [rip+0x105e]        # 0x19d4
  00976: 99 	movabs rax,0xff1999999999999e
  00980:    	mov    QWORD PTR [r14-0x50],rax
:00044 _%3 = %3 > %4                        [Float][Float]
:00045 condnotbr _%3 =>:00052
  00984:    	mov    rdi,QWORD PTR [r14-0x48]
  00988: 00 	test   rdi,0x1
  0098f:    	jne    0x30cdd
  00995: 00 	test   rdi,0x2
  0099c:    	je     0x9d8
  009a2:    	xorps  xmm6,xmm6
  009a5: 00 	movabs rax,0x8000000000000002
  009af:    	cmp    rdi,rax
  009b2:    	je     0x9ea
  009b8:    	mov    rax,rdi
  009bb:    	sar    rax,0x3f
  009bf:    	add    rax,0x2
  009c3:    	and    rdi,0xfffffffffffffffc
  009c7:    	or     rdi,rax
  009ca:    	rol    rdi,0x3d
  009ce:    	movq   xmm6,rdi
  009d3:    	jmp    0x9ea
  009d8:    	call   0xfffe36f1
  009dd:    	test   rax,rax
  009e0:    	je     0x30cdd
  009e6:    	movq   xmm6,xmm0
  009ea:    	ucomisd xmm6,xmm5
  009ee:    	jbe    0x30d89
:00046 %3 = 1: i32
  009f4: 00 	mov    QWORD PTR [r14-0x48],0x3
:00047 %3 = %1.[%3]                         [Array][Integer]
  009fc:    	mov    rdi,QWORD PTR [r14-0x38]
  00a00:    	mov    rsi,QWORD PTR [r14-0x48]
  00a04: 00 	test   rdi,0x7
  00a0b:    	jne    0x30cec
  00a11:    	cmp    DWORD PTR [rdi+0x4],0xb
  00a15:    	jne    0x30cec
  00a1b: 00 	test   rsi,0x1
  00a22:    	je     0x30cec
  00a28:    	sar    rsi,1
  00a2b:    	sub    rsp,0x20
  00a2f:    	movq   QWORD PTR [rsp],xmm2
  00a34:    	movq   QWORD PTR [rsp+0x8],xmm3
  00a3a:    	movq   QWORD PTR [rsp+0x10],xmm4
  00a40:    	movq   QWORD PTR [rsp+0x18],xmm5
  00a46: 78 	movabs rax,0x557860b06070
  00a50:    	call   rax
  00a52:    	movq   xmm2,QWORD PTR [rsp]
  00a57:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00a5d:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00a63:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00a69:    	add    rsp,0x20
  00a6d: 78 	movabs r13,0x557861fbf6a0
  00a77:    	test   rax,rax
  00a7a:    	je     0xfffe3698
  00a80:    	mov    QWORD PTR [r14-0x48],rax
:00048 %4 = literal[1.0]
  00a84: 00 	movq   xmm5,QWORD PTR [rip+0xf58]        # 0x19e4
  00a8c: 00 	movabs rax,0xff80000000000002
  00a96:    	mov    QWORD PTR [r14-0x50],rax
:00049 _ = %3.call y=(%4; 1)                [Vec]
  00a9a:    	mov    rdi,QWORD PTR [r14-0x48]
  00a9e: 00 	test   rdi,0x7
  00aa5:    	jne    0x30cfb
  00aab:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00aaf:    	jne    0x30cfb
  00ab5: 26 	cmp    DWORD PTR [rip+0xfffffffffffe6074],0x26        # 0xfffe6b30
  00abc:    	jne    0x30cfb
  00ac2:    	mov    esi,DWORD PTR [rip+0xf28]        # 0x19f0
  00ac8:    	cmp    esi,0xffffffff
  00acb:    	je     0x30d0a
  00ad1:    	cmp    WORD PTR [rdi+0x2],0x3
  00ad6:    	jne    0xaf3
  00adc:    	cmp    esi,0x6
  00adf:    	jge    0xaf3
  00ae5:    	mov    rax,QWORD PTR [r14-0x50]
  00ae9:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00aee:    	jmp    0xb4c
  00af3:    	sub    rsp,0x20
  00af7:    	movq   QWORD PTR [rsp],xmm2
  00afc:    	movq   QWORD PTR [rsp+0x8],xmm3
  00b02:    	movq   QWORD PTR [rsp+0x10],xmm4
  00b08:    	movq   QWORD PTR [rsp+0x18],xmm5
  00b0e:    	mov    rdx,QWORD PTR [r14-0x50]
  00b12: 78 	movabs rax,0x557860b3c1c0
  00b1c:    	call   rax
  00b1e:    	movq   xmm2,QWORD PTR [rsp]
  00b23:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00b29:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00b2f:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00b35:    	add    rsp,0x20
  00b39: 78 	movabs r13,0x557861fbf6d0
  00b43:    	test   rax,rax
  00b46:    	je     0xfffe3698
:00050 
:00051 br =>:00073
  00b4c:    	jmp    0x30fe6
:00052 %3 = %2.call z()                     [Vec]
  00b51:    	mov    rdi,QWORD PTR [r14-0x40]
  00b55: 00 	test   rdi,0x7
  00b5c:    	jne    0x30da2
  00b62:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00b66:    	jne    0x30da2
  00b6c: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5fbd],0x26        # 0xfffe6b30
  00b73:    	jne    0x30da2
  00b79:    	mov    esi,DWORD PTR [rip+0xe79]        # 0x19f8
  00b7f:    	cmp    esi,0xffffffff
  00b82:    	je     0x30db1
  00b88:    	cmp    WORD PTR [rdi+0x2],0x3
  00b8d:    	jne    0xba6
  00b93:    	cmp    esi,0x6
  00b96:    	jge    0xba6
  00b9c:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00ba1:    	jmp    0xbe8
  00ba6:    	sub    rsp,0x20
  00baa:    	movq   QWORD PTR [rsp],xmm2
  00baf:    	movq   QWORD PTR [rsp+0x8],xmm3
  00bb5:    	movq   QWORD PTR [rsp+0x10],xmm4
  00bbb:    	movq   QWORD PTR [rsp+0x18],xmm5
  00bc1: 78 	movabs rax,0x557860b3bf40
  00bcb:    	call   rax
  00bcd:    	movq   xmm2,QWORD PTR [rsp]
  00bd2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00bd8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00bde:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00be4:    	add    rsp,0x20
  00be8:    	mov    QWORD PTR [r14-0x48],rax
:00053 
:00054 %4 = literal[0.6]
  00bec: 00 	movq   xmm5,QWORD PTR [rip+0xe10]        # 0x1a04
  00bf4: 99 	movabs rax,0xff1999999999999a
  00bfe:    	mov    QWORD PTR [r14-0x50],rax
:00055 _%3 = %3 < %4                        [Float][Float]
:00056 condnotbr _%3 =>:00068
  00c02:    	mov    rdi,QWORD PTR [r14-0x48]
  00c06: 00 	test   rdi,0x1
  00c0d:    	jne    0x30e10
  00c13: 00 	test   rdi,0x2
  00c1a:    	je     0xc56
  00c20:    	xorps  xmm6,xmm6
  00c23: 00 	movabs rax,0x8000000000000002
  00c2d:    	cmp    rdi,rax
  00c30:    	je     0xc68
  00c36:    	mov    rax,rdi
  00c39:    	sar    rax,0x3f
  00c3d:    	add    rax,0x2
  00c41:    	and    rdi,0xfffffffffffffffc
  00c45:    	or     rdi,rax
  00c48:    	rol    rdi,0x3d
  00c4c:    	movq   xmm6,rdi
  00c51:    	jmp    0xc68
  00c56:    	call   0xfffe36f1
  00c5b:    	test   rax,rax
  00c5e:    	je     0x30e10
  00c64:    	movq   xmm6,xmm0
  00c68:    	ucomisd xmm6,xmm5
  00c6c:    	jae    0x30f20
:00057 %3 = %2.call z()                     [Vec]
  00c72:    	mov    rdi,QWORD PTR [r14-0x40]
  00c76: 00 	test   rdi,0x7
  00c7d:    	jne    0x30e1f
  00c83:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00c87:    	jne    0x30e1f
  00c8d: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5e9c],0x26        # 0xfffe6b30
  00c94:    	jne    0x30e1f
  00c9a:    	mov    esi,DWORD PTR [rip+0xd70]        # 0x1a10
  00ca0:    	cmp    esi,0xffffffff
  00ca3:    	je     0x30e2e
  00ca9:    	cmp    WORD PTR [rdi+0x2],0x3
  00cae:    	jne    0xcc7
  00cb4:    	cmp    esi,0x6
  00cb7:    	jge    0xcc7
  00cbd:    	mov    rax,QWORD PTR [rdi+rsi*8+0x10]
  00cc2:    	jmp    0xd09
  00cc7:    	sub    rsp,0x20
  00ccb:    	movq   QWORD PTR [rsp],xmm2
  00cd0:    	movq   QWORD PTR [rsp+0x8],xmm3
  00cd6:    	movq   QWORD PTR [rsp+0x10],xmm4
  00cdc:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ce2: 78 	movabs rax,0x557860b3bf40
  00cec:    	call   rax
  00cee:    	movq   xmm2,QWORD PTR [rsp]
  00cf3:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00cf9:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00cff:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00d05:    	add    rsp,0x20
  00d09:    	mov    QWORD PTR [r14-0x48],rax
:00058 
:00059 %4 = literal[-0.6]
  00d0d: 00 	movq   xmm5,QWORD PTR [rip+0xcff]        # 0x1a14
  00d15: 99 	movabs rax,0xff1999999999999e
  00d1f:    	mov    QWORD PTR [r14-0x50],rax
:00060 _%3 = %3 > %4                        [Float][Float]
:00061 condnotbr _%3 =>:00068
  00d23:    	mov    rdi,QWORD PTR [r14-0x48]
  00d27: 00 	test   rdi,0x1
  00d2e:    	jne    0x30e8d
  00d34: 00 	test   rdi,0x2
  00d3b:    	je     0xd77
  00d41:    	xorps  xmm6,xmm6
  00d44: 00 	movabs rax,0x8000000000000002
  00d4e:    	cmp    rdi,rax
  00d51:    	je     0xd89
  00d57:    	mov    rax,rdi
  00d5a:    	sar    rax,0x3f
  00d5e:    	add    rax,0x2
  00d62:    	and    rdi,0xfffffffffffffffc
  00d66:    	or     rdi,rax
  00d69:    	rol    rdi,0x3d
  00d6d:    	movq   xmm6,rdi
  00d72:    	jmp    0xd89
  00d77:    	call   0xfffe36f1
  00d7c:    	test   rax,rax
  00d7f:    	je     0x30e8d
  00d85:    	movq   xmm6,xmm0
  00d89:    	ucomisd xmm6,xmm5
  00d8d:    	jbe    0x30f39
:00062 %3 = 1: i32
  00d93: 00 	mov    QWORD PTR [r14-0x48],0x3
:00063 %3 = %1.[%3]                         [Array][Integer]
  00d9b:    	mov    rdi,QWORD PTR [r14-0x38]
  00d9f:    	mov    rsi,QWORD PTR [r14-0x48]
  00da3: 00 	test   rdi,0x7
  00daa:    	jne    0x30e9c
  00db0:    	cmp    DWORD PTR [rdi+0x4],0xb
  00db4:    	jne    0x30e9c
  00dba: 00 	test   rsi,0x1
  00dc1:    	je     0x30e9c
  00dc7:    	sar    rsi,1
  00dca:    	sub    rsp,0x20
  00dce:    	movq   QWORD PTR [rsp],xmm2
  00dd3:    	movq   QWORD PTR [rsp+0x8],xmm3
  00dd9:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ddf:    	movq   QWORD PTR [rsp+0x18],xmm5
  00de5: 78 	movabs rax,0x557860b06070
  00def:    	call   rax
  00df1:    	movq   xmm2,QWORD PTR [rsp]
  00df6:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00dfc:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00e02:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00e08:    	add    rsp,0x20
  00e0c: 78 	movabs r13,0x557861fbf7a0
  00e16:    	test   rax,rax
  00e19:    	je     0xfffe3698
  00e1f:    	mov    QWORD PTR [r14-0x48],rax
:00064 %4 = literal[1.0]
  00e23: 00 	movq   xmm5,QWORD PTR [rip+0xbf9]        # 0x1a24
  00e2b: 00 	movabs rax,0xff80000000000002
  00e35:    	mov    QWORD PTR [r14-0x50],rax
:00065 _ = %3.call z=(%4; 1)                [Vec]
  00e39:    	mov    rdi,QWORD PTR [r14-0x48]
  00e3d: 00 	test   rdi,0x7
  00e44:    	jne    0x30eab
  00e4a:    	cmp    DWORD PTR [rdi+0x4],0x2b
  00e4e:    	jne    0x30eab
  00e54: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5cd5],0x26        # 0xfffe6b30
  00e5b:    	jne    0x30eab
  00e61:    	mov    esi,DWORD PTR [rip+0xbc9]        # 0x1a30
  00e67:    	cmp    esi,0xffffffff
  00e6a:    	je     0x30eba
  00e70:    	cmp    WORD PTR [rdi+0x2],0x3
  00e75:    	jne    0xe92
  00e7b:    	cmp    esi,0x6
  00e7e:    	jge    0xe92
  00e84:    	mov    rax,QWORD PTR [r14-0x50]
  00e88:    	mov    QWORD PTR [rdi+rsi*8+0x10],rax
  00e8d:    	jmp    0xeeb
  00e92:    	sub    rsp,0x20
  00e96:    	movq   QWORD PTR [rsp],xmm2
  00e9b:    	movq   QWORD PTR [rsp+0x8],xmm3
  00ea1:    	movq   QWORD PTR [rsp+0x10],xmm4
  00ea7:    	movq   QWORD PTR [rsp+0x18],xmm5
  00ead:    	mov    rdx,QWORD PTR [r14-0x50]
  00eb1: 78 	movabs rax,0x557860b3c1c0
  00ebb:    	call   rax
  00ebd:    	movq   xmm2,QWORD PTR [rsp]
  00ec2:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00ec8:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00ece:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00ed4:    	add    rsp,0x20
  00ed8: 78 	movabs r13,0x557861fbf7d0
  00ee2:    	test   rax,rax
  00ee5:    	je     0xfffe3698
:00066 
:00067 br =>:00073
  00eeb:    	jmp    0x30fff
:00068 %3 = 1: i32
  00ef0: 00 	mov    QWORD PTR [r14-0x48],0x3
:00069 %3 = %1.[%3]                         [<INVALID>][<INVALID>]
  00ef8:    	sub    rsp,0x20
  00efc:    	movq   QWORD PTR [rsp],xmm2
  00f01:    	movq   QWORD PTR [rsp+0x8],xmm3
  00f07:    	movq   QWORD PTR [rsp+0x10],xmm4
  00f0d:    	movq   QWORD PTR [rsp+0x18],xmm5
  00f13:    	mov    rdi,rbx
  00f16:    	mov    rsi,r12
  00f19:    	mov    rdx,QWORD PTR [r14-0x38]
  00f1d:    	mov    rcx,QWORD PTR [r14-0x48]
  00f21: 78 	movabs r8,0x557861fbf7f8
  00f2b: 78 	movabs rax,0x557860b05f40
  00f35:    	call   rax
  00f37:    	movq   xmm2,QWORD PTR [rsp]
  00f3c:    	movq   xmm3,QWORD PTR [rsp+0x8]
  00f42:    	movq   xmm4,QWORD PTR [rsp+0x10]
  00f48:    	movq   xmm5,QWORD PTR [rsp+0x18]
  00f4e:    	add    rsp,0x20
  00f52: 78 	movabs r13,0x557861fbf800
  00f5c:    	test   rax,rax
  00f5f:    	je     0xfffe3698
  00f65:    	mov    QWORD PTR [r14-0x48],rax
:00070 %4 = literal[1.0]
  00f69: 00 	movq   xmm5,QWORD PTR [rip+0xac3]        # 0x1a34
  00f71: 00 	movabs rax,0xff80000000000002
  00f7b:    	mov    QWORD PTR [r14-0x50],rax
:00071 _ = %3.call x=(%4; 1)                [<INVALID>]
  00f7f: 00 	cmp    DWORD PTR [rip+0xab6],0x0        # 0x1a3c
  00f86:    	jl     0x30f52
  00f8c:    	je     0x30f61
  00f92: 01 	sub    DWORD PTR [rip+0xaa3],0x1        # 0x1a3c
  00f99:    	xor    rdi,rdi
  00f9c:    	jmp    0x30f52
  00fa1:    	sub    rsp,0x20
  00fa5:    	movq   QWORD PTR [rsp],xmm2
  00faa:    	movq   QWORD PTR [rsp+0x8],xmm3
  00fb0:    	movq   QWORD PTR [rsp+0x10],xmm4
  00fb6:    	movq   QWORD PTR [rsp+0x18],xmm5
  00fbc:    	mov    rdi,QWORD PTR [r14-0x48]
  00fc0: 78 	movabs rax,0x557860aa2e20
  00fca:    	call   rax
  00fcc:    	mov    r15d,eax
  00fcf: 78 	movabs r13,0x557861fbf820
  00fd9:    	cmp    QWORD PTR [r13+0x8],0x0
  00fde:    	je     0x30f7d
  00fe4:    	cmp    r15d,DWORD PTR [r13-0x8]
  00fe8:    	jne    0x30f7d
  00fee:    	mov    eax,DWORD PTR [rip+0xfffffffffffe5b3c]        # 0xfffe6b30
  00ff4:    	cmp    DWORD PTR [r13-0x4],eax
  00ff8:    	jne    0x30f7d
  00ffe: 00 	mov    QWORD PTR [rsp-0x28],0x0
  01007:    	mov    rax,QWORD PTR [r14-0x48]
  0100b:    	mov    QWORD PTR [rsp-0x40],rax
  01010: 00 	mov    rdi,0x1
  01017:    	mov    rax,QWORD PTR [r14-0x50]
  0101b:    	mov    QWORD PTR [rsp-0x48],rax
  01020: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01029:    	mov    r13,QWORD PTR [r13+0x8]
  0102d:    	mov    rax,QWORD PTR [r13+0x8]
  01031:    	mov    QWORD PTR [rsp-0x30],rax
  01036:    	mov    rax,QWORD PTR [r13+0x0]
  0103a:    	mov    r13,QWORD PTR [r13+0x10]
  0103e:    	mov    rsi,QWORD PTR [rbx]
  01041:    	mov    QWORD PTR [rsp-0x18],rsi
  01046:    	lea    rsi,[rsp-0x18]
  0104b:    	mov    QWORD PTR [rbx],rsi
  0104e:    	lea    r14,[rsp-0x10]
  01053:    	mov    QWORD PTR [rsp-0x20],r14
  01058:    	call   rax
  0105a:    	lea    r14,[rbp-0x8]
  0105e:    	mov    QWORD PTR [rbx],r14
  01061:    	mov    r14,QWORD PTR [rbp-0x10]
  01065:    	movq   xmm2,QWORD PTR [rsp]
  0106a:    	movq   xmm3,QWORD PTR [rsp+0x8]
  01070:    	movq   xmm4,QWORD PTR [rsp+0x10]
  01076:    	movq   xmm5,QWORD PTR [rsp+0x18]
  0107c:    	add    rsp,0x20
  01080:    	test   rax,rax
  01083:    	je     0x30fbe
:00072 
  01089:    	jmp    0x31018
:00073 %3 = 0: i32
  0108e: 00 	mov    QWORD PTR [r14-0x48],0x1
:00074 %4 = 1: i32
  01096: 00 	mov    QWORD PTR [r14-0x50],0x3
:00075 %4 = %1.[%4]                         [Array][Integer]
  0109e:    	mov    rdi,QWORD PTR [r14-0x38]
  010a2:    	mov    rsi,QWORD PTR [r14-0x50]
  010a6: 00 	test   rdi,0x7
  010ad:    	jne    0x31031
  010b3:    	cmp    DWORD PTR [rdi+0x4],0xb
  010b7:    	jne    0x31031
  010bd: 00 	test   rsi,0x1
  010c4:    	je     0x31031
  010ca:    	sar    rsi,1
  010cd:    	sub    rsp,0x20
  010d1:    	movq   QWORD PTR [rsp],xmm2
  010d6:    	movq   QWORD PTR [rsp+0x8],xmm3
  010dc:    	movq   QWORD PTR [rsp+0x10],xmm4
  010e2: 78 	movabs rax,0x557860b06070
  010ec:    	call   rax
  010ee:    	movq   xmm2,QWORD PTR [rsp]
  010f3:    	movq   xmm3,QWORD PTR [rsp+0x8]
  010f9:    	movq   xmm4,QWORD PTR [rsp+0x10]
  010ff:    	add    rsp,0x20
  01103: 78 	movabs r13,0x557861fbf860
  0110d:    	test   rax,rax
  01110:    	je     0xfffe3698
  01116:    	mov    QWORD PTR [r14-0x50],rax
:00076 %5 = 2: i32
  0111a: 00 	mov    QWORD PTR [r14-0x58],0x5
:00077 %5 = %1.[%5]                         [Array][Integer]
  01122:    	mov    rdi,QWORD PTR [r14-0x38]
  01126:    	mov    rsi,QWORD PTR [r14-0x58]
  0112a: 00 	test   rdi,0x7
  01131:    	jne    0x31040
  01137:    	cmp    DWORD PTR [rdi+0x4],0xb
  0113b:    	jne    0x31040
  01141: 00 	test   rsi,0x1
  01148:    	je     0x31040
  0114e:    	sar    rsi,1
  01151:    	sub    rsp,0x10
  01155:    	movq   QWORD PTR [rsp],xmm3
  0115a:    	movq   QWORD PTR [rsp+0x8],xmm4
  01160: 78 	movabs rax,0x557860b06070
  0116a:    	call   rax
  0116c:    	movq   xmm3,QWORD PTR [rsp]
  01171:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01177:    	add    rsp,0x10
  0117b: 78 	movabs r13,0x557861fbf880
  01185:    	test   rax,rax
  01188:    	je     0xfffe3698
  0118e:    	mov    QWORD PTR [r14-0x58],rax
:00078 %4 = %4.call vcross(%5; 1)           [Vec]
  01192:    	mov    rdi,QWORD PTR [r14-0x50]
  01196: 00 	test   rdi,0x7
  0119d:    	jne    0x3104f
  011a3:    	cmp    DWORD PTR [rdi+0x4],0x2b
  011a7:    	jne    0x3104f
  011ad: 26 	cmp    DWORD PTR [rip+0xfffffffffffe597c],0x26        # 0xfffe6b30
  011b4:    	jne    0x3104f
  011ba:    	sub    rsp,0x10
  011be:    	movq   QWORD PTR [rsp],xmm3
  011c3:    	movq   QWORD PTR [rsp+0x8],xmm4
  011c9: 00 	cmp    DWORD PTR [rip+0xfffffffffffe5964],0x0        # 0xfffe6b34
  011d0:    	je     0x11e8
  011d6:    	mov    rdi,r12
  011d9:    	mov    rsi,QWORD PTR [rbx]
  011dc: 78 	movabs rax,0x557860afd140
  011e6:    	call   rax
  011e8: 00 	mov    QWORD PTR [rsp-0x28],0x0
  011f1:    	mov    rax,QWORD PTR [r14-0x50]
  011f5:    	mov    QWORD PTR [rsp-0x40],rax
  011fa: 00 	mov    rdi,0x1
  01201:    	mov    rax,QWORD PTR [r14-0x58]
  01205:    	mov    QWORD PTR [rsp-0x48],rax
  0120a: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01213: 08 	movabs rax,0x100080000005c
  0121d:    	mov    QWORD PTR [rsp-0x30],rax
  01222: 78 	movabs r13,0x557861f71470
  0122c:    	mov    rsi,QWORD PTR [rbx]
  0122f:    	mov    QWORD PTR [rsp-0x18],rsi
  01234:    	lea    rsi,[rsp-0x18]
  01239:    	mov    QWORD PTR [rbx],rsi
  0123c:    	lea    r14,[rsp-0x10]
  01241:    	mov    QWORD PTR [rsp-0x20],r14
  01246:    	call   0xffff089b
  0124b:    	lea    r14,[rbp-0x8]
  0124f:    	mov    QWORD PTR [rbx],r14
  01252:    	mov    r14,QWORD PTR [rbp-0x10]
  01256:    	movq   xmm3,QWORD PTR [rsp]
  0125b:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01261:    	add    rsp,0x10
  01265: 78 	movabs r13,0x557861fbf8a0
  0126f:    	test   rax,rax
  01272:    	je     0xfffe3698
  01278:    	mov    QWORD PTR [r14-0x50],rax
:00079 
:00080 %1:.[%3:] = %4
  0127c:    	mov    rdi,QWORD PTR [r14-0x38]
  01280:    	mov    rsi,QWORD PTR [r14-0x48]
  01284: 00 	test   rdi,0x7
  0128b:    	jne    0x3105e
  01291:    	cmp    DWORD PTR [rdi+0x4],0xb
  01295:    	jne    0x3105e
  0129b: 00 	test   rsi,0x1
  012a2:    	je     0x3105e
  012a8:    	sar    rsi,1
  012ab:    	sub    rsp,0x10
  012af:    	movq   QWORD PTR [rsp],xmm3
  012b4:    	movq   QWORD PTR [rsp+0x8],xmm4
  012ba:    	mov    rdx,r12
  012bd:    	mov    rcx,QWORD PTR [r14-0x50]
  012c1: 78 	movabs rax,0x557860b06200
  012cb:    	call   rax
  012cd:    	movq   xmm3,QWORD PTR [rsp]
  012d2:    	movq   xmm4,QWORD PTR [rsp+0x8]
  012d8:    	add    rsp,0x10
  012dc: 78 	movabs r13,0x557861fbf8b0
  012e6:    	test   rax,rax
  012e9:    	je     0xfffe3698
:00081 %3 = 0: i32
  012ef: 00 	mov    QWORD PTR [r14-0x48],0x1
:00082 %4 = 0: i32
  012f7: 00 	mov    QWORD PTR [r14-0x50],0x1
:00083 %4 = %1.[%4]                         [Array][Integer]
  012ff:    	mov    rdi,QWORD PTR [r14-0x38]
  01303:    	mov    rsi,QWORD PTR [r14-0x50]
  01307: 00 	test   rdi,0x7
  0130e:    	jne    0x3106d
  01314:    	cmp    DWORD PTR [rdi+0x4],0xb
  01318:    	jne    0x3106d
  0131e: 00 	test   rsi,0x1
  01325:    	je     0x3106d
  0132b:    	sar    rsi,1
  0132e:    	sub    rsp,0x10
  01332:    	movq   QWORD PTR [rsp],xmm3
  01337:    	movq   QWORD PTR [rsp+0x8],xmm4
  0133d: 78 	movabs rax,0x557860b06070
  01347:    	call   rax
  01349:    	movq   xmm3,QWORD PTR [rsp]
  0134e:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01354:    	add    rsp,0x10
  01358: 78 	movabs r13,0x557861fbf8e0
  01362:    	test   rax,rax
  01365:    	je     0xfffe3698
  0136b:    	mov    QWORD PTR [r14-0x50],rax
:00084 %4 = %4.call vnormalize()            [Vec]
  0136f:    	mov    rdi,QWORD PTR [r14-0x50]
  01373: 00 	test   rdi,0x7
  0137a:    	jne    0x3107c
  01380:    	cmp    DWORD PTR [rdi+0x4],0x2b
  01384:    	jne    0x3107c
  0138a: 26 	cmp    DWORD PTR [rip+0xfffffffffffe579f],0x26        # 0xfffe6b30
  01391:    	jne    0x3107c
  01397:    	sub    rsp,0x10
  0139b:    	movq   QWORD PTR [rsp],xmm3
  013a0:    	movq   QWORD PTR [rsp+0x8],xmm4
  013a6: 00 	cmp    DWORD PTR [rip+0xfffffffffffe5787],0x0        # 0xfffe6b34
  013ad:    	je     0x13c5
  013b3:    	mov    rdi,r12
  013b6:    	mov    rsi,QWORD PTR [rbx]
  013b9: 78 	movabs rax,0x557860afd140
  013c3:    	call   rax
  013c5: 00 	mov    QWORD PTR [rsp-0x28],0x0
  013ce:    	mov    rax,QWORD PTR [r14-0x50]
  013d2:    	mov    QWORD PTR [rsp-0x40],rax
  013d7: 00 	mov    rdi,0x0
  013de: 00 	mov    QWORD PTR [rsp-0x38],0x0
  013e7: 07 	movabs rax,0x100070000005f
  013f1:    	mov    QWORD PTR [rsp-0x30],rax
  013f6: 78 	movabs r13,0x557861f90e80
  01400:    	mov    rsi,QWORD PTR [rbx]
  01403:    	mov    QWORD PTR [rsp-0x18],rsi
  01408:    	lea    rsi,[rsp-0x18]
  0140d:    	mov    QWORD PTR [rbx],rsi
  01410:    	lea    r14,[rsp-0x10]
  01415:    	mov    QWORD PTR [rsp-0x20],r14
  0141a:    	call   0xfffe73f7
  0141f:    	lea    r14,[rbp-0x8]
  01423:    	mov    QWORD PTR [rbx],r14
  01426:    	mov    r14,QWORD PTR [rbp-0x10]
  0142a:    	movq   xmm3,QWORD PTR [rsp]
  0142f:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01435:    	add    rsp,0x10
  01439: 78 	movabs r13,0x557861fbf900
  01443:    	test   rax,rax
  01446:    	je     0xfffe3698
  0144c:    	mov    QWORD PTR [r14-0x50],rax
:00085 
:00086 %1:.[%3:] = %4
  01450:    	mov    rdi,QWORD PTR [r14-0x38]
  01454:    	mov    rsi,QWORD PTR [r14-0x48]
  01458: 00 	test   rdi,0x7
  0145f:    	jne    0x3108b
  01465:    	cmp    DWORD PTR [rdi+0x4],0xb
  01469:    	jne    0x3108b
  0146f: 00 	test   rsi,0x1
  01476:    	je     0x3108b
  0147c:    	sar    rsi,1
  0147f:    	sub    rsp,0x10
  01483:    	movq   QWORD PTR [rsp],xmm3
  01488:    	movq   QWORD PTR [rsp+0x8],xmm4
  0148e:    	mov    rdx,r12
  01491:    	mov    rcx,QWORD PTR [r14-0x50]
  01495: 78 	movabs rax,0x557860b06200
  0149f:    	call   rax
  014a1:    	movq   xmm3,QWORD PTR [rsp]
  014a6:    	movq   xmm4,QWORD PTR [rsp+0x8]
  014ac:    	add    rsp,0x10
  014b0: 78 	movabs r13,0x557861fbf910
  014ba:    	test   rax,rax
  014bd:    	je     0xfffe3698
:00087 %3 = 1: i32
  014c3: 00 	mov    QWORD PTR [r14-0x48],0x3
:00088 %4 = 2: i32
  014cb: 00 	mov    QWORD PTR [r14-0x50],0x5
:00089 %4 = %1.[%4]                         [Array][Integer]
  014d3:    	mov    rdi,QWORD PTR [r14-0x38]
  014d7:    	mov    rsi,QWORD PTR [r14-0x50]
  014db: 00 	test   rdi,0x7
  014e2:    	jne    0x3109a
  014e8:    	cmp    DWORD PTR [rdi+0x4],0xb
  014ec:    	jne    0x3109a
  014f2: 00 	test   rsi,0x1
  014f9:    	je     0x3109a
  014ff:    	sar    rsi,1
  01502:    	sub    rsp,0x10
  01506:    	movq   QWORD PTR [rsp],xmm3
  0150b:    	movq   QWORD PTR [rsp+0x8],xmm4
  01511: 78 	movabs rax,0x557860b06070
  0151b:    	call   rax
  0151d:    	movq   xmm3,QWORD PTR [rsp]
  01522:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01528:    	add    rsp,0x10
  0152c: 78 	movabs r13,0x557861fbf940
  01536:    	test   rax,rax
  01539:    	je     0xfffe3698
  0153f:    	mov    QWORD PTR [r14-0x50],rax
:00090 %5 = 0: i32
  01543: 00 	mov    QWORD PTR [r14-0x58],0x1
:00091 %5 = %1.[%5]                         [Array][Integer]
  0154b:    	mov    rdi,QWORD PTR [r14-0x38]
  0154f:    	mov    rsi,QWORD PTR [r14-0x58]
  01553: 00 	test   rdi,0x7
  0155a:    	jne    0x310a9
  01560:    	cmp    DWORD PTR [rdi+0x4],0xb
  01564:    	jne    0x310a9
  0156a: 00 	test   rsi,0x1
  01571:    	je     0x310a9
  01577:    	sar    rsi,1
  0157a:    	sub    rsp,0x10
  0157e:    	movq   QWORD PTR [rsp],xmm3
  01583:    	movq   QWORD PTR [rsp+0x8],xmm4
  01589: 78 	movabs rax,0x557860b06070
  01593:    	call   rax
  01595:    	movq   xmm3,QWORD PTR [rsp]
  0159a:    	movq   xmm4,QWORD PTR [rsp+0x8]
  015a0:    	add    rsp,0x10
  015a4: 78 	movabs r13,0x557861fbf960
  015ae:    	test   rax,rax
  015b1:    	je     0xfffe3698
  015b7:    	mov    QWORD PTR [r14-0x58],rax
:00092 %4 = %4.call vcross(%5; 1)           [Vec]
  015bb:    	mov    rdi,QWORD PTR [r14-0x50]
  015bf: 00 	test   rdi,0x7
  015c6:    	jne    0x310b8
  015cc:    	cmp    DWORD PTR [rdi+0x4],0x2b
  015d0:    	jne    0x310b8
  015d6: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5553],0x26        # 0xfffe6b30
  015dd:    	jne    0x310b8
  015e3:    	sub    rsp,0x10
  015e7:    	movq   QWORD PTR [rsp],xmm3
  015ec:    	movq   QWORD PTR [rsp+0x8],xmm4
  015f2: 00 	cmp    DWORD PTR [rip+0xfffffffffffe553b],0x0        # 0xfffe6b34
  015f9:    	je     0x1611
  015ff:    	mov    rdi,r12
  01602:    	mov    rsi,QWORD PTR [rbx]
  01605: 78 	movabs rax,0x557860afd140
  0160f:    	call   rax
  01611: 00 	mov    QWORD PTR [rsp-0x28],0x0
  0161a:    	mov    rax,QWORD PTR [r14-0x50]
  0161e:    	mov    QWORD PTR [rsp-0x40],rax
  01623: 00 	mov    rdi,0x1
  0162a:    	mov    rax,QWORD PTR [r14-0x58]
  0162e:    	mov    QWORD PTR [rsp-0x48],rax
  01633: 00 	mov    QWORD PTR [rsp-0x38],0x0
  0163c: 08 	movabs rax,0x100080000005c
  01646:    	mov    QWORD PTR [rsp-0x30],rax
  0164b: 78 	movabs r13,0x557861f71470
  01655:    	mov    rsi,QWORD PTR [rbx]
  01658:    	mov    QWORD PTR [rsp-0x18],rsi
  0165d:    	lea    rsi,[rsp-0x18]
  01662:    	mov    QWORD PTR [rbx],rsi
  01665:    	lea    r14,[rsp-0x10]
  0166a:    	mov    QWORD PTR [rsp-0x20],r14
  0166f:    	call   0xffff089b
  01674:    	lea    r14,[rbp-0x8]
  01678:    	mov    QWORD PTR [rbx],r14
  0167b:    	mov    r14,QWORD PTR [rbp-0x10]
  0167f:    	movq   xmm3,QWORD PTR [rsp]
  01684:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0168a:    	add    rsp,0x10
  0168e: 78 	movabs r13,0x557861fbf980
  01698:    	test   rax,rax
  0169b:    	je     0xfffe3698
  016a1:    	mov    QWORD PTR [r14-0x50],rax
:00093 
:00094 %1:.[%3:] = %4
  016a5:    	mov    rdi,QWORD PTR [r14-0x38]
  016a9:    	mov    rsi,QWORD PTR [r14-0x48]
  016ad: 00 	test   rdi,0x7
  016b4:    	jne    0x310c7
  016ba:    	cmp    DWORD PTR [rdi+0x4],0xb
  016be:    	jne    0x310c7
  016c4: 00 	test   rsi,0x1
  016cb:    	je     0x310c7
  016d1:    	sar    rsi,1
  016d4:    	sub    rsp,0x10
  016d8:    	movq   QWORD PTR [rsp],xmm3
  016dd:    	movq   QWORD PTR [rsp+0x8],xmm4
  016e3:    	mov    rdx,r12
  016e6:    	mov    rcx,QWORD PTR [r14-0x50]
  016ea: 78 	movabs rax,0x557860b06200
  016f4:    	call   rax
  016f6:    	movq   xmm3,QWORD PTR [rsp]
  016fb:    	movq   xmm4,QWORD PTR [rsp+0x8]
  01701:    	add    rsp,0x10
  01705: 78 	movabs r13,0x557861fbf990
  0170f:    	test   rax,rax
  01712:    	je     0xfffe3698
:00095 %3 = 1: i32
  01718: 00 	mov    QWORD PTR [r14-0x48],0x3
:00096 %4 = 1: i32
  01720: 00 	mov    QWORD PTR [r14-0x50],0x3
:00097 %4 = %1.[%4]                         [Array][Integer]
  01728:    	mov    rdi,QWORD PTR [r14-0x38]
  0172c:    	mov    rsi,QWORD PTR [r14-0x50]
  01730: 00 	test   rdi,0x7
  01737:    	jne    0x310d6
  0173d:    	cmp    DWORD PTR [rdi+0x4],0xb
  01741:    	jne    0x310d6
  01747: 00 	test   rsi,0x1
  0174e:    	je     0x310d6
  01754:    	sar    rsi,1
  01757:    	sub    rsp,0x10
  0175b:    	movq   QWORD PTR [rsp],xmm3
  01760:    	movq   QWORD PTR [rsp+0x8],xmm4
  01766: 78 	movabs rax,0x557860b06070
  01770:    	call   rax
  01772:    	movq   xmm3,QWORD PTR [rsp]
  01777:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0177d:    	add    rsp,0x10
  01781: 78 	movabs r13,0x557861fbf9c0
  0178b:    	test   rax,rax
  0178e:    	je     0xfffe3698
  01794:    	mov    QWORD PTR [r14-0x50],rax
:00098 %4 = %4.call vnormalize()            [Vec]
  01798:    	mov    rdi,QWORD PTR [r14-0x50]
  0179c: 00 	test   rdi,0x7
  017a3:    	jne    0x310e5
  017a9:    	cmp    DWORD PTR [rdi+0x4],0x2b
  017ad:    	jne    0x310e5
  017b3: 26 	cmp    DWORD PTR [rip+0xfffffffffffe5376],0x26        # 0xfffe6b30
  017ba:    	jne    0x310e5
  017c0:    	sub    rsp,0x10
  017c4:    	movq   QWORD PTR [rsp],xmm3
  017c9:    	movq   QWORD PTR [rsp+0x8],xmm4
  017cf: 00 	cmp    DWORD PTR [rip+0xfffffffffffe535e],0x0        # 0xfffe6b34
  017d6:    	je     0x17ee
  017dc:    	mov    rdi,r12
  017df:    	mov    rsi,QWORD PTR [rbx]
  017e2: 78 	movabs rax,0x557860afd140
  017ec:    	call   rax
  017ee: 00 	mov    QWORD PTR [rsp-0x28],0x0
  017f7:    	mov    rax,QWORD PTR [r14-0x50]
  017fb:    	mov    QWORD PTR [rsp-0x40],rax
  01800: 00 	mov    rdi,0x0
  01807: 00 	mov    QWORD PTR [rsp-0x38],0x0
  01810: 07 	movabs rax,0x100070000005f
  0181a:    	mov    QWORD PTR [rsp-0x30],rax
  0181f: 78 	movabs r13,0x557861f90e80
  01829:    	mov    rsi,QWORD PTR [rbx]
  0182c:    	mov    QWORD PTR [rsp-0x18],rsi
  01831:    	lea    rsi,[rsp-0x18]
  01836:    	mov    QWORD PTR [rbx],rsi
  01839:    	lea    r14,[rsp-0x10]
  0183e:    	mov    QWORD PTR [rsp-0x20],r14
  01843:    	call   0xfffe73f7
  01848:    	lea    r14,[rbp-0x8]
  0184c:    	mov    QWORD PTR [rbx],r14
  0184f:    	mov    r14,QWORD PTR [rbp-0x10]
  01853:    	movq   xmm3,QWORD PTR [rsp]
  01858:    	movq   xmm4,QWORD PTR [rsp+0x8]
  0185e:    	add    rsp,0x10
  01862: 78 	movabs r13,0x557861fbf9e0
  0186c:    	test   rax,rax
  0186f:    	je     0xfffe3698
  01875:    	mov    QWORD PTR [r14-0x50],rax
:00099 
:00100 %1:.[%3:] = %4
  01879:    	mov    rdi,QWORD PTR [r14-0x38]
  0187d:    	mov    rsi,QWORD PTR [r14-0x48]
  01881: 00 	test   rdi,0x7
  01888:    	jne    0x310f4
  0188e:    	cmp    DWORD PTR [rdi+0x4],0xb
  01892:    	jne    0x310f4
  01898: 00 	test   rsi,0x1
  0189f:    	je     0x310f4
  018a5:    	sar    rsi,1
  018a8:    	sub    rsp,0x10
  018ac:    	movq   QWORD PTR [rsp],xmm3
  018b1:    	movq   QWORD PTR [rsp+0x8],xmm4
  018b7:    	mov    rdx,r12
  018ba:    	mov    rcx,QWORD PTR [r14-0x50]
  018be: 78 	movabs rax,0x557860b06200
  018c8:    	call   rax
  018ca:    	movq   xmm3,QWORD PTR [rsp]
  018cf:    	movq   xmm4,QWORD PTR [rsp+0x8]
  018d5:    	add    rsp,0x10
  018d9: 78 	movabs r13,0x557861fbf9f0
  018e3:    	test   rax,rax
  018e6:    	je     0xfffe3698
:00101 %3 = %4
  018ec:    	mov    rax,QWORD PTR [r14-0x50]
  018f0:    	mov    QWORD PTR [r14-0x48],rax
:00102 ret %3
  018f4:    	mov    rax,QWORD PTR [r14-0x48]
  018f8:    	leave  
  018f9:    	ret    
